//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var спФайлыПротоколов Export;
Var ПутьДрайвераПодписиСтар Export, ПутьДрайвераЭДОСтар Export;
Var ФлИзменилсяДрайверПодписи Export;
Var ТНастройки Export;

Function ПолучитьСвойствоПротокола(aEl,Имя)
  If IsEmpty(aEl.ПутьДрайвераОбмена) Then
    Exit "";
  EndIf;
  Try
    Стр:=FileToString(AddBackslash(aEl.ПутьДрайвераОбмена)+"Протокол.ini");
    Ини:=Ini.Create();
    Ини.AddFromString(Стр);
    If IsEmpty(Ини) Then
      Exit "";
    EndIf;
    Exit Ини.GetData(Имя,"");
  Except
    Exit "";
  EndTry;
EndFunction

Function ОбновитьСвойстваСертификата()
  aEl:=Form.Object;
  Form.тСвойства.Value:="";
  If aEl.СертификатПодписи="" Then
    Exit;
  EndIf;
  СтрОтвет:="";
  спДрайвер:=глЗагрузитьДрайверПодписи(aEl,1);
  Try
    If IsEmpty(спДрайвер["МодульДрайвера"]) Then
      СтрОтвет:="<Невозможно загрузить драйвер>";
      Exit;
    EndIf;
    спДрайвер["Идентификатор"]:=aEl.СертификатПодписи;
    Стр:=Trim(ExecuteFunction("CheckCertificate",спДрайвер["МодульДрайвера"],спДрайвер));
    If Стр<>"" Then
      СтрОтвет:="<Ошибка: "+Стр+">";
      Exit;
    EndIf;
    If спДрайвер["Найден"]<>1 Then
      СтрОтвет:="<Сертификат отсутствует на текущей машине!>";
      Exit;
    EndIf;
    СтрОтвет:=спДрайвер["ИмяСертификата"];
  Finally
    Form.тСвойства.Value:=СтрОтвет;
    глУдалитьДрайверПодписи(спДрайвер);
  EndTry
EndFunction

Function ПриПодбореНоменклатуры(Эл,Фл)
  aEl:=Form.Object;
  aTab:=aEl.LineParts("Номенклатура");

  Стр:=0;
  If aTab.Find(Эл,Стр,"Номенклатура")>0 Then
    Box("Такая группа номенклатуры уже существует!",Q_STOP);
    Exit;
  EndIf;
  aTab.NewLine();
  aTab.Номенклатура=Эл;
  Form.оТМЦ.InvokeEvent("OnInitLine","IndexFrom,IndexTo",aTab.Size(),aTab.Size());
EndFunction

Function OnAfterElementSave()
  aEl:=Form.Object;
  If aEl.isFolder() Then
    Exit;
  EndIf;
  Form.оРМ.Parent:=aEl;
  Form.оОбмен.Parent:=aEl;
  Form.оУсловияПродаж.Parent:=aEl;
  If _And(ФлИзменилсяДрайверПодписи,aEl=глМагазинДрайверов) Then
    глДрайверПодписи:=глЗагрузитьДрайверПодписи(aEl);
    ФлИзменилсяДрайверПодписи:=0;
  EndIf;
EndFunction


Function OnBeforeElementSave()
  aEl:=Form.Object;
  
  If aEl.isFolder() Then
    Exit 1;
  EndIf;
  
  If aEl.Склад.Selected()=0 Then
    Message("Для корректной работы программы необходимо выбрать склад, закрепленный за магазином!","!");
    Exit 0;
  EndIf;
  If aEl.ТипЦенПоступления.Selected()=0 Then
    Message("Для корректной работы программы необходимо выбрать тип цен закупок, закрепленный за магазином!","!");
    Exit 0;
  EndIf;
  If aEl.ТипЦенРеализации.Selected()=0 Then
    Message("Для корректной работы программы необходимо выбрать тип цен продажи, закрепленный за магазином!","!");
    Exit 0;
  EndIf;
  If _And(aEl.Склад.Магазин.Selected()<>0,(aEl.Склад.Магазин<>aEl)Or(aEl.Selected()<0)) Then
    Message("Выбранный склад уже закреплен за другим магазином!","!");
    Exit 0;
  EndIf;
  If _And(Trim(aEl.КПП)="",aEl.ЮрЛицо.Selected()<>0,Length(aEl.ЮрЛицо.ИНН)<>12) Then
    Message("Для корректной работы программы необходимо выбрать КПП адреса магазина!","!");
    Exit 0;
  EndIf;  
  ФлОбновить:=(aEl.Склад.рзТипЦенПоступления<>aEl.ТипЦенПоступления)or(aEl.Склад.рзТипЦенРеализации<>aEl.ТипЦенРеализации)or(aEl.Склад.Магазин.Selected()=0);
  
  If _Or(aEl.Selected()<0,ФлОбновить) Then
    //Запишем сейчас
    флОк:=0;
    Buff:=aEl.StoreObjectToBuffer();
    BeginTransaction();
    Try
      If not глПриЗаписиЭлементаСправочника(Form.Object) Then
        Exit 0;
      EndIf;
      Form.Object.Save();
      bEl:=aEl.Склад;
      bEl.Copy();
      bEl.Магазин:=aEl;
      bEl.рзТипЦенПоступления:=aEl.ТипЦенПоступления;
      bEl.рзТипЦенРеализации:=aEl.ТипЦенРеализации;
      bEl.Save();
      флОк:=1;
      Exit 2;
    Finally
      If флОк Then
        CommitTransaction();
      Else
        aEl.RestoreObjectFromBuffer(Buff);
        RollbackTransaction();
      EndIf;
    EndTry  
    Exit 0;
  EndIf;

  Exit 1;
EndFunction;

Function СохранитьНастройкиДрайвераЭДО()
  aEl:=Form.Object;
  If not isEmpty(ТНастройки) Then
    Стр:=ТНастройки.ToString();
    aEl.НастройкиДрайвераЭДО:=Стр;
    If aEl.НастройкиДрайвераЭДО<>"" Then
      Form.оУстановкиДрайвераЭДО.Value:="<выбраны>";
    Else
      Form.оУстановкиДрайвераЭДО.Value:="";
    EndIf;
  EndIf;
EndFunction
