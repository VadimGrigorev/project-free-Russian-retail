//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

//Функции:
//DriverInit, DriverDeinit, DriverConnect, DriverDisconnect, RegisterTransaction, OpenShift, CloseShift, ReportX, ReportZ

Function DriverInit(спНастройки)
  Try
    аДрайвер:=CreateOLE("ArcCom.PCPOSTConnectorObj");
  Except
    Exit PopError()+_NEWLINE+"(1) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDeinit(спНастройки)
  спНастройки["Соединено"]:=0;
EndFunction

Function DriverConnect(спНастройки)
  Try
    СтрДоп:=спНастройки["ДопУстановки"];
    Ини:=Ini.Create();
    Ини.AddFromString(СтрДоп);
    
    спНастройки["ОпОплата"]:=Number(Ини.GetData("Оплата","1"));
    спНастройки["ОпОтмена"]:=Number(Ини.GetData("Отмена","2"));
    спНастройки["ОпВозврат"]:=Number(Ини.GetData("Возврат","3"));
    спНастройки["ОпZОтчет"]:=Number(Ини.GetData("Z-Отчет","7"));
    спНастройки["ОпXОтчет"]:=Number(Ини.GetData("X-Отчет","7"));
    спНастройки["МаксимальныйРазмерОтчетаДляПечати"]:=Number(Ини.GetData("МаксимальныйРазмерОтчетаДляПечати","4100"));
    спНастройки["Соединено"]:=1;
  Except
    Exit PopError()+_NEWLINE+"(2) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDisconnect(спНастройки)
  спНастройки["Соединено"]:=0;
EndFunction

Function OpenShift(спНастройки)
  //Не требуется
EndFunction

Function CloseShift(спНастройки)
  Try
    аЗапрос:=CreateOLE("ArcCom.SAPacketObj");
    аОтвет:=CreateOLE("ArcCom.SAPacketObj");
    аДрайвер:=CreateOLE("ArcCom.PCPOSTConnectorObj");
    аЗапрос.CurrencyCode:=643;
    аЗапрос.OperationCode:=спНастройки["ОпZОтчет"];
    аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,15); 
    If аРезультат<>0 Then
      Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
    EndIf;
    СтрОтчет:=аОтвет.SLIP;
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      StringToFile(СтрОтчет,Путь+"ОтчетБанка.txt",1200,0);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
  Except
    Exit PopError()+_NEWLINE+"Ошибка при выгрузке данных в терминал!";
  EndTry;
EndFunction

//ARCUS 2 имеет только операцию сверка итогов, она будет работать, как для Z-отчета, так и для X-отчета
Function ReportX(спНастройки)
  Try
    аЗапрос:=CreateOLE("ArcCom.SAPacketObj");
    аОтвет:=CreateOLE("ArcCom.SAPacketObj");
    аДрайвер:=CreateOLE("ArcCom.PCPOSTConnectorObj");
    аЗапрос.CurrencyCode:=643;
    аЗапрос.OperationCode:=спНастройки["ОпXОтчет"];
    аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,15); 
    If аРезультат<>0 Then
      Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
    EndIf;
    СтрОтчет:=аОтвет.SLIP;
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      StringToFile(СтрОтчет,Путь+"ОтчетБанкаПромежуточный.txt",1200,0);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка печати X-отчета!";
  EndTry;
EndFunction


Function ReportZ(спНастройки)
  Try
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      СтрОтчет:=FileToString(Путь+"ОтчетБанка.txt",1200);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
  Except
  EndTry;
EndFunction

//"Сумма" -- Сумма
//"Магазин" -- Текущий магазин
//"ТабПозиции" -- Таблица с позициями
//"Покупатель" -- Элемент покупателя (может быть пустым)
//"ТипОперации" -- 0 -- Продажа
//                 1 -- Возврат продажи
//                 100 -- Подтверждение предыдущей операции, если требуется (вызывается после закрытия чека)
//                 101 -- Отказ от предыдущей операции
//"ИнформацияПоТранзакции" -- Исходящая переменная для хранения информации, которая может быть использована для "отката транзакции". При первом вызове равна нулю.
//"ДополнительнаяИнформация" -- Исходящая переменная для образа чека, который необходимо вывести на печать на ККМ, если это необходимо
Function RegisterTransaction(спНастройки)
  Try
    См:=Round(спНастройки["Сумма"]*100);
    аТипОперации:=Number(спНастройки["ТипОперации"]);
    спНастройки["ТипПоследнейОперации"]:=аТипОперации;
    спНастройки["ДополнительнаяИнформация"]:="";
    
    аЗапрос:=CreateOLE("ArcCom.SAPacketObj");
    аОтвет:=CreateOLE("ArcCom.SAPacketObj");
    аДрайвер:=CreateOLE("ArcCom.PCPOSTConnectorObj");
    аЗапрос.Amount:=См;
    аЗапрос.CurrencyCode:=643;
    
    //OperationCode: 
    //1 -- оплата
    //2 -- отмена последней успешной операции
    //3 -- возврат
    //4 -- отмена
    //6 -- отчет по операциям
    //7 -- сверка итогов
    //98 -- меню кассира
    //99 -- меню администратора
    //100 -- сессия TMS
    
    If аТипОперации=0 Then
      аЗапрос.OperationCode:=спНастройки["ОпОплата"];
      аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,15); 
      If аРезультат<>0 Then
        Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
      ElseIf Number(аОтвет.ResponseCodeHost)<>0 Then
        Exit аОтвет.TextResponse+" ("+аОтвет.ResponseCodeHost+")";
      EndIf;
      спНастройки["ДополнительнаяИнформация"]:=Str(аОтвет.SLIP);
    ElseIf аТипОперации=1 Then
      аЗапрос.OperationCode:=спНастройки["ОпВозврат"];
      аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,15); 
      If аРезультат<>0 Then
        Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
      ElseIf Number(аОтвет.ResponseCodeHost)<>0 Then
        Exit аОтвет.TextResponse+" ("+аОтвет.ResponseCodeHost+")";
      EndIf;
      спНастройки["ДополнительнаяИнформация"]:=Str(аОтвет.SLIP);
    ElseIf аТипОперации=100 Then
      //Ничего не требуется
    ElseIf аТипОперации=101 Then
      //Отменить последнюю успешную операцию
      аЗапрос.OperationCode:=спНастройки["ОпОтмена"];
      аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,15); 
      If аРезультат<>0 Then
        Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
      ElseIf Number(аОтвет.ResponseCodeHost)<>0 Then
        Exit аОтвет.TextResponse+" ("+аОтвет.ResponseCodeHost+")";
      EndIf;
      спНастройки["ДополнительнаяИнформация"]:=Str(аОтвет.SLIP);
    EndIf;
  Except
    Exit PopError()+_NEWLINE+"Ошибка при выгрузке данных в терминал!";
  EndTry;
EndFunction
