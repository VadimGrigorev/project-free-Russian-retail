//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

//Функции:
//DriverInit, DriverDeinit, DriverConnect, DriverDisconnect, ShiftInfo, OpenShift, CloseShift, DepositMoney, WithdrawMoney, PrintReportX, PrintReportZ, PrintReceipt, PrintLastReceipt, 
//  DeviceInfo, PrintText, CashDrawerInfo, OpenCashDrawer, SeparateProcessServer

Function DriverInit(спНастройки)
EndFunction

Function DriverDeinit(спНастройки)
EndFunction

Function DriverConnect(спНастройки)
  спНастройки["СменаОткрыта"]:=0;
  спНастройки["СуммаВКассе"]:=(Random(25)+1)*1000;
  спНастройки["НомерСмены"]:=GetDay(Date());
  спНастройки["Соединено"]:=1;
EndFunction

Function DriverDisconnect(спНастройки)
  спНастройки["Соединено"]:=0;
EndFunction

//Тип запроса в "ТипЗапросаИнформации", поддерживаются: МодельККТ, СерийныйНомерККТ, РегистрационныйНоменККТ, СерийныйНомерФН, ДатаОкончанияФН, ДатаПервогоНеотправленногоДокумента
//Ответ в "ОтветНаЗапросИнформации". Если запрос не удачный или не поддерживается, ответ -- пустая строка.
Function DeviceInfo(спНастройки)
  спНастройки["ОтветНаЗапросИнформации"]:="";
EndFunction

Function CashDrawerInfo(спНастройки)
  If спНастройки["Соединено"]<>1 Then
    спНастройки["ДенежныйЯщикСостояние"]:=-1;
    спНастройки["ДенежныйЯщикСумма"]:=-1;
    Exit;
  EndIf;
  спНастройки["ДенежныйЯщикСостояние"]:=0;
  спНастройки["ДенежныйЯщикСумма"]:=спНастройки["СуммаВКассе"];
EndFunction

Function OpenCashDrawer(спНастройки)
  If Random<0.05 Then
    Exit "Виртуальный ККТ: невозможно открыть д.я., поломка";
  EndIf;
EndFunction

Function ShiftInfo(спНастройки)
  //-1 -- ошибка, 0 -- закрыта, 1 -- открыта, 2 -- истекла, 3 -- другое
  спНастройки["СменаСостояние"]:=спНастройки["СменаОткрыта"];
  //спНастройки["НомерСмены"] уже есть
  спНастройки["НомерККТ"]:=Random(100000);
  спНастройки["НомерДокумента"]:=Random(100000);
  спНастройки["ДополнительнаяИнформация"]:=0;
EndFunction

Function OpenShift(спНастройки)
  спНастройки["СменаОткрыта"]:=1;
  спНастройки["НомерСмены"]:=Number(спНастройки["НомерСмены"])+1;
  Message("Виртуальный ККТ: смена открыта","I");
EndFunction

Function CloseShift(спНастройки)
  спНастройки["СменаОткрыта"]:=0;
  Message("Виртуальный ККТ: смена закрыта","I");
EndFunction

Function DepositMoney(спНастройки)
  Сумма:=Number(спНастройки["Сумма"]);
  спНастройки["СуммаВКассе"]:=Number(спНастройки["СуммаВКассе"])+Сумма;
  Message("Виртуальный ККТ: внесена сумма "+Сумма,"I");
EndFunction

Function WithdrawMoney(спНастройки)
  Сумма:=Number(спНастройки["Сумма"]);
  If Number(спНастройки["СуммаВКассе"])<Сумма Then
    Exit "Невозможно изъять "+Сумма+" руб., в кассе содержится "+Number(спНастройки["СуммаВКассе"])+" руб.";
  Else
    спНастройки["СуммаВКассе"]:=Number(спНастройки["СуммаВКассе"])-Сумма;
    Message("Виртуальный ККТ: изъята сумма "+Сумма,"I");
  EndIf;
EndFunction


Function PrintReportX(спНастройки)
  If спНастройки["СменаОткрыта"]<>1 Then
    Exit "Смена не открыта!";
  EndIf;
  Message("Виртуальный ККТ: отчет X, сумма в кассе "+Number(спНастройки["СуммаВКассе"]),"I");
EndFunction

Function PrintReportZ(спНастройки)
  If спНастройки["СменаОткрыта"]=1 Then
    Exit "Смена не закрыта!";
  EndIf;
  Message("Виртуальный ККТ: отчет Z, сумма в кассе "+Number(спНастройки["СуммаВКассе"]),"I");
EndFunction

Function PrintLastReceipt(спНастройки)
  Exit "Операция не поддерживается!";
EndFunction


//Используются поля:
//Агент -- не используется
//ТипЧека -- число (см. ниже)
//ФлРозничныйПокупатель -- число
//Контрагент
//ЮрЛицо
//ЕГАИССылка -- URL типа "https://check.egais.ru?id=cf1b1096-3cbc-11e7-b3c1-9b018b2ba3f7", если не пустая, будет выведено дополнение к чеку.
//ЕГАИСПодпись -- строка типа "79DED4A448069B0BFF602FF646F4E9B24D253D311679EA15307AEF38AEEE7933C9175DE5814C3DCF89BF63853CB75003D9FD979F3BEBBC93AFADF1D9A429623F"
//Таблица -- Номенклатура,Количество,Сумма,СтавкаНДС,ФлЛитры
//Сумма -- сумма документа
//ЭлектроннаяСумма -- сумма документа электронной оплатой
//ДругаяБезналичнаяСумма -- сумма документа с особыми оплатами (подарочные сертификаты и пр.)
//СуммаЗакрытияАванса -- при операции закрытия аванса (11), сумма указывает на часть суммы документа, которая ушла на закрытие аванса
//ЭлектроннаяСумма+ДругаяБезналичнаяСумма должны быть меньше или равны параметру Сумма
Function PrintReceipt(спНастройки)
  Try
    ФлРозничныйПокупатель:=Number(спНастройки["ФлРозничныйПокупатель"]);
    ТипЧека:=спНастройки["ТипЧека"];
    //Тип чека:
    //1 -- ПКО (продажа)
    //2 -- РКО (возврат продажи)
    //3 -- Коррекция ПКО (продажи)
    //4 -- Коррекция РКО (возврата продажи)
    //5 -- РКО (покупка)
    //6 -- ПКО (возврат покупки)
    //7 -- Коррекция РКО (покупки)
    //8 -- Коррекция ПКО (возврата покупки)
    //10 -- Аванс (товар не отдается)
    //11 -- Закрытие аванса
    //12 -- Кредит
    //13 -- Закрытие кредита
    спТипыЧеков:=List.Create("ПКО (продажа)","РКО (возврат продажи)","Коррекция ПКО (продажи)","Коррекция РКО (возврата продажи)","РКО (покупка)",
      "ПКО (возврат покупки)","Коррекция РКО (покупки)","Коррекция ПКО (возврата покупки)","","Аванс","Закрытие аванса","Кредит","Закрытие кредита");
    
    Message("Виртуальный ККТ: тип документа: "+спТипыЧеков[ТипЧека],"I");
    Message("Виртуальный ККТ: печать чека, кассир: "+спНастройки["Кассир"],"I");
    Message("Виртуальный ККТ: покупатель: "+?(ФлРозничныйПокупатель,"розничный покупатель",спНастройки["Контрагент"]),"I");
  
    //Позиции
    ФлНДС:=спНастройки["ЮрЛицо"].УчитыватьНДС<>0;
    См:=0;
    aTab:=спНастройки["Таблица"];
    aTab.Select();
    While aTab.Next() Do
      Message("Виртуальный ККТ: строка чека: "+aTab.Количество+" ед. "+aTab.Номенклатура+" за "+aTab.Сумма+" руб., "+?(ФлНДС,aTab.СтавкаНДС,"без НДС"),"I");
      См:=См+aTab.Сумма;
    EndDo;
    If Round(спНастройки["Сумма"],2)<>Round(См,2) Then
      Exit "Виртуальный ККТ: Неверная сумма строк "+См+", не совпадает с суммой документа "+спНастройки["Сумма"];
    EndIf;
    
    ЭлектроннаяСумма:=Number(спНастройки["ЭлектроннаяСумма"]);
    ДругаяБезналичнаяСумма:=Number(спНастройки["ДругаяБезналичнаяСумма"]);
    If Round(ЭлектроннаяСумма,2)+Round(ДругаяБезналичнаяСумма,2)>Round(См,2) Then
      Exit "Безналичные суммы оплаты "+ЭлектроннаяСумма+" больше суммы документа "+спНастройки["Сумма"];
    EndIf;
    
    If ЭлектроннаяСумма>0 Then
      Message("Виртуальный ККТ: оплата: "+Round(ЭлектроннаяСумма,2)+", электронно","I");
      См:=Round(См-ЭлектроннаяСумма,2);
    EndIf;
    If ДругаяБезналичнаяСумма>0 Then
      Message("Виртуальный ККТ: оплата: "+Round(ДругаяБезналичнаяСумма,2)+", другим спобом безналично","I");
      См:=Round(См-ДругаяБезналичнаяСумма,2);
    EndIf;
    If См>0 Then
      Message("Виртуальный ККТ: оплата: "+Round(См,2)+", наличными","I");
    EndIf;  
    If ТипЧека=11 Then
      Message("Виртуальный ККТ: из этим сумм закрытие аванса: "+Round(спНастройки["СуммаЗакрытияАванса"],2),"I");
    EndIf;
    
    If Random<0.05 Then
      Exit "Виртуальный ККТ: чек был аннулирован, ошибка: случайная ошибка с вероятностью 5%";
    EndIf;
    спНастройки["НомерДокумента"]:=1;
    
    ЕГАИССылка:=спНастройки["ЕГАИССылка"];
    ЕГАИСПодпись:=спНастройки["ЕГАИСПодпись"];
    If Trim(ЕГАИССылка)<>"" Then
      Message("Виртуальный ККТ: квитанция ЕГАИС: Ссылка ЕГАИС: "+ЕГАИССылка,"I");
      Message("Виртуальный ККТ: квитанция ЕГАИС: Подпись ЕГАИС: "+ЕГАИСПодпись,"I");
    EndIf;
  Except
    Exit "Виртуальный ККТ: "+PopError();
  EndTry;
EndFunction

//ДополнительнаяИнформация -- строка для печати
Function PrintText(спНастройки)
  Try
    If Trim(спНастройки["ДополнительнаяИнформация"])<>"" Then
      Message(спНастройки["ДополнительнаяИнформация"],"I");
    EndIf;
  Except
    Exit "Виртуальный ККТ: "+PopError();
  EndTry;
EndFunction

//спНастройки["ВызываемаяФункция"] -- функция для вызова
Function SeparateProcessServer(ByRef спНастройки)
  Result:=ExecuteFunction(спНастройки["ВызываемаяФункция"],1,спНастройки);
EndFunction
