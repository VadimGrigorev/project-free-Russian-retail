//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

//Функции:
//DriverInit, DriverDeinit, DriverConnect, DriverDisconnect, RegisterTransaction, OpenShift, CloseShift, ReportX, ReportZ

Function DriverInit(спНастройки)
  Try
    аДрайвер:=CreateOLE("POSConnectorInterface-posconlib");
  Except
    Exit PopError()+_NEWLINE+"(1) Драйвер не установлен или в нерабочем состоянии (требуется установка именно x"+?(PointerSize()=8,"64","86")+" версии)!";
  EndTry;
EndFunction

Function DriverDeinit(спНастройки)
  спНастройки["Соединено"]:=0;
EndFunction

Function DriverConnect(спНастройки)
  Try
    СтрДоп:=спНастройки["ДопУстановки"];
    Ини:=Ini.Create();
    Ини.AddFromString(СтрДоп);
    
    спНастройки["ОпОплата"]:=Number(Ини.GetData("Оплата","1"));
    спНастройки["ОпОтмена"]:=Number(Ини.GetData("Отмена","4"));
    спНастройки["ОпВозврат"]:=Number(Ини.GetData("Возврат","29"));
    спНастройки["ОпZОтчет"]:=Number(Ини.GetData("Z-Отчет","59"));
    спНастройки["ОпXОтчет"]:=Number(Ини.GetData("X-Отчет","63+20"));
    спНастройки["МаксимальныйРазмерОтчетаДляПечати"]:=Number(Ини.GetData("МаксимальныйРазмерОтчетаДляПечати","4100"));
    спНастройки["ИдентификаторТерминала"]:=Ини.GetData("ИдентификаторТерминала","");
    спНастройки["Соединено"]:=1;
  Except
    Exit PopError()+_NEWLINE+"(2) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDisconnect(спНастройки)
  спНастройки["Соединено"]:=0;
EndFunction

Function OpenShift(спНастройки)
  //Не требуется
EndFunction

Function CloseShift(спНастройки)
  Try
    аДрайвер:=CreateOLE("POSConnectorInterface-posconlib");
    аЗапрос:=CreateOLE("SAPacket-posconlib");
    аОтвет:=CreateOLE("SAPacket-posconlib");
    If аДрайвер.InitResources()<>0 Then
      Message("Ошибка: "+аДрайвер.ErrorCode+" - "+аДрайвер.ErrorDescription);
    EndIf;
    аЗапрос.ReceiptData:="Test";//Требуется?
    If спНастройки["ИдентификаторТерминала"]<>"" Then
      аЗапрос.TerminalID:=спНастройки["ИдентификаторТерминала"];
    EndIf;
    
    Стр:=спНастройки["ОпZОтчет"];
    аЗапрос.OperationCode:=Number(TearStr(Стр,"+"));
    If Стр<>"" Then
      аЗапрос.CommandMode2:=Number(Стр);
    EndIf;
    аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,3600000); 
    СтрОтчет:=?(аРезультат=0,Str(аОтвет.ReceiptData),"");
    аЗапрос:=0;
    аОтвет:=0;
    аДрайвер.FreeResources();
    If аРезультат<>0 Then
      Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
    EndIf;
    If _And(Pos("^",СтрОтчет)>0,Pos("^",СтрОтчет)<10) Then
      TearStr(СтрОтчет,"^");
      TearStr(СтрОтчет,"^");
    EndIf;
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      StringToFile(СтрОтчет,Путь+"ОтчетБанка_"+спНастройки["Оборудование"].Code+".txt",1200,0);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
  Except
    Exit PopError()+_NEWLINE+"Ошибка при выгрузке данных в терминал!";
  EndTry;
EndFunction

Function ReportX(спНастройки)
  Try
    аДрайвер:=CreateOLE("POSConnectorInterface-posconlib");
    аЗапрос:=CreateOLE("SAPacket-posconlib");
    аОтвет:=CreateOLE("SAPacket-posconlib");
    If аДрайвер.InitResources()<>0 Then
      Message("Ошибка: "+аДрайвер.ErrorCode+" - "+аДрайвер.ErrorDescription);
    EndIf;
    аЗапрос.ReceiptData:="Test";//Требуется?
    If спНастройки["ИдентификаторТерминала"]<>"" Then
      аЗапрос.TerminalID:=спНастройки["ИдентификаторТерминала"];
    EndIf;
    Стр:=спНастройки["ОпXОтчет"];
    аЗапрос.OperationCode:=Number(TearStr(Стр,"+"));
    If Стр<>"" Then
      аЗапрос.CommandMode2:=Number(Стр);
    EndIf;
    аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,3600000); 
    СтрОтчет:=?(аРезультат=0,Str(аОтвет.ReceiptData),"");
    аЗапрос:=0;
    аОтвет:=0;
    аДрайвер.FreeResources();
    If аРезультат<>0 Then
      Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
    EndIf;
    If _And(Pos("^",СтрОтчет)>0,Pos("^",СтрОтчет)<10) Then
      TearStr(СтрОтчет,"^");
      TearStr(СтрОтчет,"^");
    EndIf;
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      StringToFile(СтрОтчет,Путь+"ОтчетБанкаПромежуточный_"+спНастройки["Оборудование"].Code+".txt",1200,0);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка печати X-отчета!";
  EndTry;
EndFunction


Function ReportZ(спНастройки)
  Try
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      СтрОтчет:=FileToString(Путь+"ОтчетБанка_"+спНастройки["Оборудование"].Code+".txt",1200);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
  Except
  EndTry;
EndFunction

//"Сумма" -- Сумма
//"Магазин" -- Текущий магазин
//"ТабПозиции" -- Таблица с позициями
//"Покупатель" -- Элемент покупателя (может быть пустым)
//"ТипОперации" -- 0 -- Продажа
//                 1 -- Возврат продажи
//                 100 -- Подтверждение предыдущей операции, если требуется (вызывается после закрытия чека)
//                 101 -- Отказ от предыдущей операции
//"ИнформацияПоТранзакции" -- Исходящая переменная для хранения информации, которая может быть использована для "отката транзакции". При первом вызове равна нулю.
//"ДополнительнаяИнформация" -- Исходящая переменная для образа чека, который необходимо вывести на печать на ККМ, если это необходимо
Function RegisterTransaction(спНастройки)
  Try
    См:=Round(спНастройки["Сумма"]*100);
    аТипОперации:=Number(спНастройки["ТипОперации"]);
    спНастройки["ТипПоследнейОперации"]:=аТипОперации;
    спНастройки["ДополнительнаяИнформация"]:="";
    
    аДрайвер:=CreateOLE("POSConnectorInterface-posconlib");
    аЗапрос:=CreateOLE("SAPacket-posconlib");
    аОтвет:=CreateOLE("SAPacket-posconlib");
    If аДрайвер.InitResources()<>0 Then
      Exit "Ошибка: "+аДрайвер.ErrorCode+" - "+аДрайвер.ErrorDescription;
    EndIf;
    аЗапрос.Amount:=См;
    аЗапрос.CurrencyCode:=643;
    If спНастройки["ИдентификаторТерминала"]<>"" Then
      аЗапрос.TerminalID:=спНастройки["ИдентификаторТерминала"];
    EndIf;
    
    //OperationCode: 
    //1 -- оплата
    //2 -- выдача наличных
    //3 -- пополнение счета
    //4 -- отмена последней успешной операции
    //13 -- запрос баланса
    //15 -- "новая аутентификация"
    //16 -- завершение расчетов
    //21 -- [?]
    //26 -- проверка соединения
    //29 -- возврат
    //59 -- сверка итогов
    //71 -- операция кредита
    //76 -- загрузка ключей
    
    //Status:
    //0 -- Неопределенный статус
    //1 -- Одобрено
    //16 -- Отказано
    //17 -- Выполнено в OFFLINE
    //34 -- Нет соединения
    //53 -- Операция прервана    
    

    Try //Обязательное освобождение ресурсов
      If аТипОперации=0 Then
        Стр:=спНастройки["ОпОплата"];
        аЗапрос.OperationCode:=Number(TearStr(Стр,"+"));
        If Стр<>"" Then
          аЗапрос.CommandMode2:=Number(Стр);
        EndIf;
        аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,3600000); 
        If аРезультат<>0 Then
          Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
        ElseIf Number(аОтвет.Status())<>1 Then
          Exit аОтвет.TextResponse+" ("+аОтвет.ResponseCodeHost+")";
        EndIf;
        
        СтрОтчет:=Str(аОтвет.ReceiptData);
        If _And(Pos("^",СтрОтчет)>0,Pos("^",СтрОтчет)<10) Then
          TearStr(СтрОтчет,"^");
          TearStr(СтрОтчет,"^");
        EndIf;
        спИнформация:=List.Create();
        спИнформация["ТипОперации"]:=аТипОперации;
        спИнформация["ReferenceNumber"]:=аОтвет.ReferenceNumber;
        спНастройки["ИнформацияПоТранзакции"]:=спИнформация;
        спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
      ElseIf аТипОперации=1 Then
        Стр:=спНастройки["ОпВозврат"];
        аЗапрос.OperationCode:=Number(TearStr(Стр,"+"));
        If Стр<>"" Then
          аЗапрос.CommandMode2:=Number(Стр);
        EndIf;
        ReferenceNumber:=0;
        If not AskNumber(ReferenceNumber,"Введите номер ссылки продажи (референс):",15,0) Then
          Exit "Пользователь отменил операцию";
        EndIf;
        аЗапрос.ReferenceNumber:=ReferenceNumber;
        аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,3600000); 
        If аРезультат<>0 Then
          Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
        ElseIf Number(аОтвет.Status())<>1 Then
          Exit аОтвет.TextResponse+" ("+аОтвет.ResponseCodeHost+")";
        EndIf;
        
        СтрОтчет:=Str(аОтвет.ReceiptData);
        If _And(Pos("^",СтрОтчет)>0,Pos("^",СтрОтчет)<10) Then
          TearStr(СтрОтчет,"^");
          TearStr(СтрОтчет,"^");
        EndIf;
        спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
      ElseIf аТипОперации=100 Then
        //Ничего не требуется
      ElseIf аТипОперации=101 Then
        //Отменить последнюю успешную операцию
        спИнформация:=спНастройки["ИнформацияПоТранзакции"];
        If TypeStr(спИнформация)="LIST" Then
          аЗапрос.ReferenceNumber:=спИнформация["ReferenceNumber"];
        EndIf;
        Стр:=спНастройки["ОпОтмена"];
        аЗапрос.OperationCode:=Number(TearStr(Стр,"+"));
        If Стр<>"" Then
          аЗапрос.CommandMode2:=Number(Стр);
        EndIf;
        iLoop:=0;
        While 1 Do
          Sleep(2500);//Иногда терминал не готов, если отмена случилась слишком быстро
          аРезультат:=аДрайвер.Exchange(аЗапрос,аОтвет,3600000); 
          If аРезультат=13 Then
            iLoop:=iLoop+1;
            If iLoop=1 Then
              Continue;
            EndIf;
          EndIf;
          If аРезультат<>0 Then
            Exit "Ошибка при выгрузке данных в терминал: "+аРезультат+"!";
          ElseIf Number(аОтвет.Status())<>1 Then
            Exit аОтвет.TextResponse+" ("+аОтвет.ResponseCodeHost+")";
          EndIf;
          Break;
        EndDo;
        
        СтрОтчет:=Str(аОтвет.ReceiptData);
        If _And(Pos("^",СтрОтчет)>0,Pos("^",СтрОтчет)<10) Then
          TearStr(СтрОтчет,"^");
          TearStr(СтрОтчет,"^");
        EndIf;
        спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
      EndIf;
    Finally
      аЗапрос:=0;
      аОтвет:=0;
      аДрайвер.FreeResources();
    EndTry;
  Except
    Exit PopError()+_NEWLINE+"Ошибка при выгрузке данных в терминал!";
  EndTry;
EndFunction
