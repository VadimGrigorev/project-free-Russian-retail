//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

//Функции:
//DriverInit, DriverDeinit, DriverConnect, DriverDisconnect, ShiftInfo, OpenShift, CloseShift, DepositMoney, WithdrawMoney, PrintReportX, PrintReportZ, PrintReceipt, PrintLastReceipt, 
//  DeviceInfo, PrintText, CashDrawerInfo, OpenCashDrawer, SeparateProcessServer

//Документация: http://integration.atol.ru/api/

Function _errorDescription(аДрайвер,aHandle)    
  Стр:=RepeatStr(" ",1024);
  Размер:=аДрайвер.libfptr_error_description(aHandle,Стр,Length(Стр));
  if Размер>Length(Стр) Then
    Стр:=RepeatStr(" ",Размер);
    аДрайвер.libfptr_error_description(aHandle,Стр,Length(Стр));
  EndIf;
  Exit Стр;
EndFunction

Function DriverInit(спНастройки)
  Try
    СтрПеременные:="LIBFPTR_PARAM_TEXT=65536;LIBFPTR_PARAM_TEXT_WRAP=65537;LIBFPTR_PARAM_ALIGNMENT=65538;LIBFPTR_PARAM_FONT=65539;LIBFPTR_PARAM_FONT_DOUBLE_WIDTH=65540;LIBFPTR_PARAM_FONT_DOUBLE_HEIGHT=65541;LIBFPTR_PARAM_LINESPACING=65542"+
    ";LIBFPTR_PARAM_BRIGHTNESS=65543;LIBFPTR_PARAM_MODEL=65544;LIBFPTR_PARAM_RECEIPT_TYPE=65545;LIBFPTR_PARAM_REPORT_TYPE=65546;LIBFPTR_PARAM_MODE=65547;LIBFPTR_PARAM_EXTERNAL_DEVICE_TYPE=65548;LIBFPTR_PARAM_EXTERNAL_DEVICE_DATA=65549"+
    ";LIBFPTR_PARAM_FREQUENCY=65550;LIBFPTR_PARAM_DURATION=65551;LIBFPTR_PARAM_CUT_TYPE=65552;LIBFPTR_PARAM_DRAWER_ON_TIMEOUT=65553;LIBFPTR_PARAM_DRAWER_OFF_TIMEOUT=65554;LIBFPTR_PARAM_DRAWER_ON_QUANTITY=65555"+
    ";LIBFPTR_PARAM_TIMEOUT_ENQ=65556;LIBFPTR_PARAM_COMMAND_BUFFER=65557;LIBFPTR_PARAM_ANSWER_BUFFER=65558;LIBFPTR_PARAM_SERIAL_NUMBER=65559;LIBFPTR_PARAM_MANUFACTURER_CODE=65560;LIBFPTR_PARAM_NO_NEED_ANSWER=65561"+
    ";LIBFPTR_PARAM_INFO_DISCOUNT_SUM=65562;LIBFPTR_PARAM_USE_ONLY_TAX_TYPE=65563;LIBFPTR_PARAM_PAYMENT_TYPE=65564;LIBFPTR_PARAM_PAYMENT_SUM=65565;LIBFPTR_PARAM_REMAINDER=65566;LIBFPTR_PARAM_CHANGE=65567;LIBFPTR_PARAM_DEPARTMENT=65568"+
    ";LIBFPTR_PARAM_TAX_TYPE=65569;LIBFPTR_PARAM_TAX_SUM=65570;LIBFPTR_PARAM_TAX_MODE=65571;LIBFPTR_PARAM_RECEIPT_ELECTRONICALLY=65572;LIBFPTR_PARAM_USER_PASSWORD=65573;LIBFPTR_PARAM_SCALE=65574;LIBFPTR_PARAM_LEFT_MARGIN=65575"+
    ";LIBFPTR_PARAM_BARCODE=65576;LIBFPTR_PARAM_BARCODE_TYPE=65577;LIBFPTR_PARAM_BARCODE_PRINT_TEXT=65578;LIBFPTR_PARAM_BARCODE_VERSION=65579;LIBFPTR_PARAM_BARCODE_CORRECTION=65580;LIBFPTR_PARAM_BARCODE_COLUMNS=65581"+
    ";LIBFPTR_PARAM_BARCODE_INVERT=65582;LIBFPTR_PARAM_HEIGHT=65583;LIBFPTR_PARAM_WIDTH=65584;LIBFPTR_PARAM_FILENAME=65585;LIBFPTR_PARAM_PICTURE_NUMBER=65586;LIBFPTR_PARAM_DATA_TYPE=65587;LIBFPTR_PARAM_OPERATOR_ID=65588"+
    ";LIBFPTR_PARAM_LOGICAL_NUMBER=65589;LIBFPTR_PARAM_DATE_TIME=65590;LIBFPTR_PARAM_FISCAL=65591;LIBFPTR_PARAM_SHIFT_STATE=65592;LIBFPTR_PARAM_CASHDRAWER_OPENED=65593;LIBFPTR_PARAM_RECEIPT_PAPER_PRESENT=65594"+
    ";LIBFPTR_PARAM_COVER_OPENED=65595;LIBFPTR_PARAM_SUBMODE=65596;LIBFPTR_PARAM_RECEIPT_NUMBER=65597;LIBFPTR_PARAM_DOCUMENT_NUMBER=65598;LIBFPTR_PARAM_SHIFT_NUMBER=65599;LIBFPTR_PARAM_RECEIPT_SUM=65600;LIBFPTR_PARAM_RECEIPT_LINE_LENGTH=65601"+
    ";LIBFPTR_PARAM_RECEIPT_LINE_LENGTH_PIX=65602;LIBFPTR_PARAM_MODEL_NAME=65603;LIBFPTR_PARAM_UNIT_VERSION=65604;LIBFPTR_PARAM_PRINTER_CONNECTION_LOST=65605;LIBFPTR_PARAM_PRINTER_ERROR=65606;LIBFPTR_PARAM_CUT_ERROR=65607"+
    ";LIBFPTR_PARAM_PRINTER_OVERHEAT=65608;LIBFPTR_PARAM_UNIT_TYPE=65609;LIBFPTR_PARAM_LICENSE_NUMBER=65610;LIBFPTR_PARAM_LICENSE_ENTERED=65611;LIBFPTR_PARAM_LICENSE=65612;LIBFPTR_PARAM_SUM=65613;LIBFPTR_PARAM_COUNT=65614"+
    ";LIBFPTR_PARAM_COUNTER_TYPE=65615;LIBFPTR_PARAM_STEP_COUNTER_TYPE=65616;LIBFPTR_PARAM_ERROR_TAG_NUMBER=65617;LIBFPTR_PARAM_TABLE=65618;LIBFPTR_PARAM_ROW=65619;LIBFPTR_PARAM_FIELD=65620;LIBFPTR_PARAM_FIELD_VALUE=65621"+
    ";LIBFPTR_PARAM_FN_DATA_TYPE=65622;LIBFPTR_PARAM_TAG_NUMBER=65623;LIBFPTR_PARAM_TAG_VALUE=65624;LIBFPTR_PARAM_DOCUMENTS_COUNT=65625;LIBFPTR_PARAM_FISCAL_SIGN=65626;LIBFPTR_PARAM_DEVICE_FFD_VERSION=65627"+
    ";LIBFPTR_PARAM_FN_FFD_VERSION=65628;LIBFPTR_PARAM_FFD_VERSION=65629;LIBFPTR_PARAM_CHECK_SUM=65630;LIBFPTR_PARAM_COMMODITY_NAME=65631;LIBFPTR_PARAM_PRICE=65632;LIBFPTR_PARAM_QUANTITY=65633;LIBFPTR_PARAM_POSITION_SUM=65634"+
    ";LIBFPTR_PARAM_FN_TYPE=65635;LIBFPTR_PARAM_FN_VERSION=65636;LIBFPTR_PARAM_REGISTRATIONS_REMAIN=65637;LIBFPTR_PARAM_REGISTRATIONS_COUNT=65638;LIBFPTR_PARAM_NO_ERROR_IF_NOT_SUPPORTED=65639;LIBFPTR_PARAM_OFD_EXCHANGE_STATUS=65640"+
    ";LIBFPTR_PARAM_FN_ERROR_DATA=65641;LIBFPTR_PARAM_FN_ERROR_CODE=65642;LIBFPTR_PARAM_ENVD_MODE=65643;LIBFPTR_PARAM_DOCUMENT_CLOSED=65644;LIBFPTR_PARAM_JSON_DATA=65645;LIBFPTR_PARAM_COMMAND_SUBSYSTEM=65646"+
    ";LIBFPTR_PARAM_FN_OPERATION_TYPE=65647;LIBFPTR_PARAM_FN_STATE=65648;LIBFPTR_PARAM_ENVD_MODE_ENABLED=65649;LIBFPTR_PARAM_SETTING_ID=65650;LIBFPTR_PARAM_SETTING_VALUE=65651;LIBFPTR_PARAM_MAPPING_KEY=65652"+
    ";LIBFPTR_PARAM_MAPPING_VALUE=65653;LIBFPTR_PARAM_COMMODITY_PIECE=65654;LIBFPTR_PARAM_POWER_SOURCE_TYPE=65655;LIBFPTR_PARAM_BATTERY_CHARGE=65656;LIBFPTR_PARAM_VOLTAGE=65657;LIBFPTR_PARAM_USE_BATTERY=65658"+
    ";LIBFPTR_PARAM_BATTERY_CHARGING=65659;LIBFPTR_PARAM_CAN_PRINT_WHILE_ON_BATTERY=65660;LIBFPTR_PARAM_MAC_ADDRESS=65661;LIBFPTR_PARAM_FN_FISCAL=65662;LIBFPTR_PARAM_NETWORK_ERROR=65663;LIBFPTR_PARAM_OFD_ERROR=65664"+
    ";LIBFPTR_PARAM_FN_ERROR=65665;LIBFPTR_PARAM_COMMAND_CODE=65666;LIBFPTR_PARAM_PRINTER_TEMPERATURE=65667;LIBFPTR_PARAM_RECORDS_TYPE=65668;LIBFPTR_PARAM_OFD_FISCAL_SIGN=65669;LIBFPTR_PARAM_HAS_OFD_TICKET=65670"+
    ";LIBFPTR_PARAM_NO_SERIAL_NUMBER=65671;LIBFPTR_PARAM_RTC_FAULT=65672;LIBFPTR_PARAM_SETTINGS_FAULT=65673;LIBFPTR_PARAM_COUNTERS_FAULT=65674;LIBFPTR_PARAM_USER_MEMORY_FAULT=65675;LIBFPTR_PARAM_SERVICE_COUNTERS_FAULT=65676"+
    ";LIBFPTR_PARAM_ATTRIBUTES_FAULT=65677;LIBFPTR_PARAM_FN_FAULT=65678;LIBFPTR_PARAM_INVALID_FN=65679;LIBFPTR_PARAM_HARD_FAULT=65680;LIBFPTR_PARAM_MEMORY_MANAGER_FAULT=65681;LIBFPTR_PARAM_SCRIPTS_FAULT=65682"+
    ";LIBFPTR_PARAM_FULL_RESET=65683;LIBFPTR_PARAM_WAIT_FOR_REBOOT=65684;LIBFPTR_PARAM_SCALE_PERCENT=65685;LIBFPTR_PARAM_FN_NEED_REPLACEMENT=65686;LIBFPTR_PARAM_FN_RESOURCE_EXHAUSTED=65687;LIBFPTR_PARAM_FN_MEMORY_OVERFLOW=65688"+
    ";LIBFPTR_PARAM_FN_OFD_TIMEOUT=65689;LIBFPTR_PARAM_FN_CRITICAL_ERROR=65690;LIBFPTR_PARAM_OFD_MESSAGE_READ=65691;LIBFPTR_PARAM_DEVICE_MIN_FFD_VERSION=65692;LIBFPTR_PARAM_DEVICE_MAX_FFD_VERSION=65693;LIBFPTR_PARAM_DEVICE_UPTIME=65694"+
    ";LIBFPTR_PARAM_NOMENCLATURE_TYPE=65695;LIBFPTR_PARAM_GTIN=65696;LIBFPTR_PARAM_FN_DOCUMENT_TYPE=65697;LIBFPTR_PARAM_NETWORK_ERROR_TEXT=65698;LIBFPTR_PARAM_FN_ERROR_TEXT=65699;LIBFPTR_PARAM_OFD_ERROR_TEXT=65700"+
    ";LIBFPTR_PARAM_USER_SCRIPT_ID=65701;LIBFPTR_PARAM_USER_SCRIPT_PARAMETER=65702;LIBFPTR_PARAM_USER_MEMORY_OPERATION=65703;LIBFPTR_PARAM_USER_MEMORY_DATA=65704;LIBFPTR_PARAM_USER_MEMORY_STRING=65705;LIBFPTR_PARAM_USER_MEMORY_ADDRESS=65706"+
    ";LIBFPTR_PARAM_FN_PRESENT=65707;LIBFPTR_PARAM_BLOCKED=65708;LIBFPTR_PARAM_DOCUMENT_PRINTED=65709;LIBFPTR_PARAM_DISCOUNT_SUM=65710;LIBFPTR_PARAM_SURCHARGE_SUM=65711;LIBFPTR_PARAM_LK_USER_CODE=65712;LIBFPTR_PARAM_LICENSE_COUNT=65713"+
    ";LIBFPTR_PARAM_DEFER=65714;LIBFPTR_PARAM_CAP_54FZ=65715;LIBFPTR_PARAM_CAP_MANUAL_CLICHE_CONTROL=65716;LIBFPTR_PARAM_CAP_PAYMENTS_COUNT=65717;LIBFPTR_PARAM_FIRMWARE_CHUNK_SIZE=65718;LIBFPTR_PARAM_FIRMWARE_CHUNK_DATA=65719"+
    ";LIBFPTR_PARAM_FN_FLAGS=65720;LIBFPTR_PARAM_PRINT_FOOTER=65721;LIBFPTR_PARAM_PUBLIC_KEY=65722;LIBFPTR_PARAM_MAGIC_NUMBER=65723;LIBFPTR_PARAM_SIGN=65724;LIBFPTR_PARAM_SOFT_NAME=65725;LIBFPTR_PARAM_SESSION_CODE=65726"+
    ";LIBFPTR_PARAM_ETHERNET_CONFIG_TIMEOUT=65727;LIBFPTR_PARAM_ETHERNET_DHCP=65728;LIBFPTR_PARAM_ETHERNET_IP=65729;LIBFPTR_PARAM_ETHERNET_MASK=65730;LIBFPTR_PARAM_ETHERNET_GATEWAY=65731;LIBFPTR_PARAM_ETHERNET_PORT=65732"+
    ";LIBFPTR_PARAM_ETHERNET_DNS_IP=65733;LIBFPTR_PARAM_ETHERNET_DNS_STATIC=65734;LIBFPTR_PARAM_STORE_IN_JOURNAL=65735;LIBFPTR_PARAM_NEW_PLATFORM=65736;LIBFPTR_PARAM_UNIT_RELEASE_VERSION=65737;LIBFPTR_PARAM_USE_VAT18=65738"+
    ";LIBFPTR_PARAM_TAG_NAME=65739;LIBFPTR_PARAM_TAG_TYPE=65740;LIBFPTR_PARAM_TAG_IS_COMPLEX=65741;LIBFPTR_PARAM_TAG_IS_REPEATABLE=65742;LIBFPTR_PARAM_SHIFT_AUTO_OPENED=65743;LIBFPTR_PARAM_CONTAINER_FIRMWARE_VERSION=65744"+
    ";LIBFPTR_PARAM_CONTAINER_CONFIGURATION_VERSION=65745;LIBFPTR_PARAM_CONTAINER_BOOTLOADER_VERSION=65746;LIBFPTR_PARAM_CONTAINER_SCRIPTS_VERSION=65747;LIBFPTR_PARAM_PAPER_NEAR_END=65748;LIBFPTR_PARAM_REPORT_ELECTRONICALLY=65749"+
    ";LIBFPTR_PARAM_ACTIVATION_METHOD=65750;LIBFPTR_PARAM_KEYS=65751;LIBFPTR_PARAM_UIN=65752;LIBFPTR_PARAM_VERSION=65753;LIBFPTR_PARAM_PUBLIC_KEY_SIGN=65754;LIBFPTR_PARAM_CAP_DISABLE_PRINT_REPORTS=65755;LIBFPTR_PARAM_REGISTRATION_NUMBER=65756"+
    ";LIBFPTR_PARAM_PIXEL_BUFFER=65757;LIBFPTR_PARAM_REPEAT_NUMBER=65758;LIBFPTR_PARAM_FIELD_TYPE=65759;LIBFPTR_PARAM_MARKING_CODE=65760;LIBFPTR_PARAM_CONTAINER_DIRECT_BOOT_VERSION=65761;LIBFPTR_PARAM_SCRIPT_NAME=65762"+
    ";LIBFPTR_PARAM_SCRIPT_HASH=65763;LIBFPTR_PARAM_RECORDS_ID=65764;LIBFPTR_PARAM_USER_SCRIPT_RESULT_1=65765;LIBFPTR_PARAM_USER_SCRIPT_RESULT_2=65766;LIBFPTR_PARAM_USER_SCRIPT_RESULT_3=65767;LIBFPTR_PARAM_USER_SCRIPT_RESULT_4=65768"+
    ";LIBFPTR_PARAM_USER_SCRIPT_RESULT_5=65769;LIBFPTR_PARAM_IS_USER_SCRIPT=65770;LIBFPTR_PARAM_DOCUMENT_NUMBER_END=65771;LIBFPTR_PARAM_SHIFT_NUMBER_END=65772;LIBFPTR_PARAM_SCRIPT_CODE=65773;LIBFPTR_PARAM_SCRIPT_RESULT=65774"+
    ";LIBFPTR_PARAM_SCRIPT_TYPE=65775;LIBFPTR_PARAM_WIFI_CONFIG_TIMEOUT=65776;LIBFPTR_PARAM_WIFI_DHCP=65777;LIBFPTR_PARAM_WIFI_IP=65778;LIBFPTR_PARAM_WIFI_MASK=65779;LIBFPTR_PARAM_WIFI_GATEWAY=65780;LIBFPTR_PARAM_WIFI_PORT=65781"+
    ";LIBFPTR_PARAM_UC_VERSION=65782;LIBFPTR_PARAM_UC_AVAILABLE_MEMORY=65783;LIBFPTR_PARAM_UC_USED_MEMORY_BY_SUMS=65784;LIBFPTR_PARAM_UC_USED_MEMORY_BY_QUANTITIES=65785;LIBFPTR_PARAM_UC_LAYER_1=65786;LIBFPTR_PARAM_UC_FLAGS_1=65787"+
    ";LIBFPTR_PARAM_UC_MASK_1=65788;LIBFPTR_PARAM_UC_LAYER_VALUE_1=65789;LIBFPTR_PARAM_UC_LAYER_2=65790;LIBFPTR_PARAM_UC_FLAGS_2=65791;LIBFPTR_PARAM_UC_MASK_2=65792;LIBFPTR_PARAM_UC_LAYER_VALUE_2=65793;LIBFPTR_PARAM_UC_LAYER_3=65794"+
    ";LIBFPTR_PARAM_UC_FLAGS_3=65795;LIBFPTR_PARAM_UC_MASK_3=65796;LIBFPTR_PARAM_UC_LAYER_VALUE_3=65797;LIBFPTR_PARAM_UC_LAYER_4=65798;LIBFPTR_PARAM_UC_FLAGS_4=65799;LIBFPTR_PARAM_UC_MASK_4=65800;LIBFPTR_PARAM_UC_LAYER_VALUE_4=65801"+
    ";LIBFPTR_PARAM_RECEIPTS_COUNT=65802;LIBFPTR_PARAM_PAYMENTS_SUM_CASH=65803;LIBFPTR_PARAM_PAYMENTS_SUM_ELECTRONICALLY=65804;LIBFPTR_PARAM_PAYMENTS_SUM_PREPAID=65805;LIBFPTR_PARAM_PAYMENTS_SUM_CREDIT=65806"+
    ";LIBFPTR_PARAM_PAYMENTS_SUM_OTHER=65807;LIBFPTR_PARAM_TAXES_SUM_VAT20=65808;LIBFPTR_PARAM_TAXES_SUM_VAT120=65809;LIBFPTR_PARAM_TAXES_SUM_VAT10=65810;LIBFPTR_PARAM_TAXES_SUM_VAT110=65811;LIBFPTR_PARAM_TAXES_SUM_VAT0=65812"+
    ";LIBFPTR_PARAM_TAXES_SUM_NO=65813;LIBFPTR_PARAM_CORRECTIONS_COUNT=65814;LIBFPTR_PARAM_CORRECTIONS_SUM=65815;LIBFPTR_PARAM_FN_COUNTERS_TYPE=65816;LIBFPTR_PARAM_FN_DAYS_REMAIN=65817;LIBFPTR_PARAM_FREE_MEMORY=65818"+
    ";LIBFPTR_PARAM_FN_MAX_FFD_VERSION=65819;LIBFPTR_PARAM_RECEIPTS_SUM=65820;LIBFPTR_PARAM_LICENSE_NAME=65821;LIBFPTR_PARAM_UNIVERSAL_COUNTERS_FAULT=65822;LIBFPTR_PARAM_USE_LICENSES=65823;LIBFPTR_PARAM_LICENSE_VALID_FROM=65824"+
    ";LIBFPTR_PARAM_LICENSE_VALID_UNTIL=65825;LIBFPTR_PARAM_MARKING_CODE_TYPE=65826;LIBFPTR_PARAM_SETTING_NAME=65827;LIBFPTR_PARAM_SETTING_TYPE=65828;LIBFPTR_PARAM_FONT_WIDTH=65829;LIBFPTR_PARAM_REMOTE_CALL=65830"+
    ";LIBFPTR_PARAM_SCRIPT_PARAMS=65831;LIBFPTR_PARAM_IGNORE_EMPTY=65832;LIBFPTR_PARAM_METHOD_DATA=65833;LIBFPTR_PARAM_METHOD_RESULT=65834;LIBFPTR_PARAM_RPC_SERVER_OS=65835;LIBFPTR_PARAM_RPC_SERVER_VERSION=65836"+
    ";LIBFPTR_PARAM_RPC_DRIVER_VERSION=65837;LIBFPTR_PARAM_LOCKED=65838;LIBFPTR_PARAM_BOUND=65839;LIBFPTR_PARAM_COMMODITIES_TABLE_FAULT=65840;LIBFPTR_PARAM_HAS_ADDITIONAL_DATA=65841;LIBFPTR_PARAM_FISCAL_SIGN_ARCHIVE=65842"+
    ";LIBFPTR_PARAM_COMMAND_GROUP=65843;LIBFPTR_PARAM_ERROR_CODE=65844;LIBFPTR_OK=0;LIBFPTR_ERROR_CONNECTION_DISABLED=1;LIBFPTR_ERROR_NO_CONNECTION=2;LIBFPTR_ERROR_PORT_BUSY=3;LIBFPTR_ERROR_PORT_NOT_AVAILABLE=4"+
    ";LIBFPTR_ERROR_INCORRECT_DATA=5;LIBFPTR_ERROR_INTERNAL=6;LIBFPTR_ERROR_UNSUPPORTED_CAST=7;LIBFPTR_ERROR_NO_REQUIRED_PARAM=8;LIBFPTR_ERROR_INVALID_SETTINGS=9;LIBFPTR_ERROR_NOT_CONFIGURED=10;LIBFPTR_ERROR_NOT_SUPPORTED=11"+
    ";LIBFPTR_ERROR_INVALID_MODE=12;LIBFPTR_ERROR_INVALID_PARAM=13;LIBFPTR_ERROR_NOT_LOADED=14;LIBFPTR_ERROR_UNKNOWN=15;LIBFPTR_ERROR_INVALID_SUM=16;LIBFPTR_ERROR_INVALID_QUANTITY=17;LIBFPTR_ERROR_CASH_COUNTER_OVERFLOW=18"+
    ";LIBFPTR_ERROR_LAST_OPERATION_STORNO_DENIED=19;LIBFPTR_ERROR_STORNO_BY_CODE_DENIED=20;LIBFPTR_ERROR_LAST_OPERATION_NOT_REPEATABLE=21;LIBFPTR_ERROR_DISCOUNT_NOT_REPEATABLE=22;LIBFPTR_ERROR_DISCOUNT_DENIED=23"+
    ";LIBFPTR_ERROR_INVALID_COMMODITY_CODE=24;LIBFPTR_ERROR_INVALID_COMMODITY_BARCODE=25;LIBFPTR_ERROR_INVALID_COMMAND_FORMAT=26;LIBFPTR_ERROR_INVALID_COMMAND_LENGTH=27;LIBFPTR_ERROR_BLOCKED_IN_DATE_INPUT_MODE=28"+
    ";LIBFPTR_ERROR_NEED_DATE_ACCEPT=29;LIBFPTR_ERROR_NO_MORE_DATA=30;LIBFPTR_ERROR_NO_ACCEPT_OR_CANCEL=31;LIBFPTR_ERROR_BLOCKED_BY_REPORT_INTERRUPTION=32;LIBFPTR_ERROR_DISABLE_CASH_CONTROL_DENIED=33;LIBFPTR_ERROR_MODE_BLOCKED=34"+
    ";LIBFPTR_ERROR_CHECK_DATE_TIME=35;LIBFPTR_ERROR_DATE_TIME_LESS_THAN_FS=36;LIBFPTR_ERROR_CLOSE_ARCHIVE_DENIED=37;LIBFPTR_ERROR_COMMODITY_NOT_FOUND=38;LIBFPTR_ERROR_WEIGHT_BARCODE_WITH_INVALID_QUANTITY=39"+
    ";LIBFPTR_ERROR_RECEIPT_BUFFER_OVERFLOW=40;LIBFPTR_ERROR_QUANTITY_TOO_FEW=41;LIBFPTR_ERROR_STORNO_TOO_MUCH=42;LIBFPTR_ERROR_BLOCKED_COMMODITY_NOT_FOUND=43;LIBFPTR_ERROR_NO_PAPER=44;LIBFPTR_ERROR_COVER_OPENED=45"+
    ";LIBFPTR_ERROR_PRINTER_FAULT=46;LIBFPTR_ERROR_MECHANICAL_FAULT=47;LIBFPTR_ERROR_INVALID_RECEIPT_TYPE=48;LIBFPTR_ERROR_INVALID_UNIT_TYPE=49;LIBFPTR_ERROR_NO_MEMORY=50;LIBFPTR_ERROR_PICTURE_NOT_FOUND=51;LIBFPTR_ERROR_NONCACH_PAYMENTS_TOO_MUCH=52"+
    ";LIBFPTR_ERROR_RETURN_DENIED=53;LIBFPTR_ERROR_PAYMENTS_OVERFLOW=54;LIBFPTR_ERROR_BUSY=55;LIBFPTR_ERROR_GSM=56;LIBFPTR_ERROR_INVALID_DISCOUNT=57;LIBFPTR_ERROR_OPERATION_AFTER_DISCOUNT_DENIED=58;LIBFPTR_ERROR_INVALID_DEPARTMENT=59"+
    ";LIBFPTR_ERROR_INVALID_PAYMENT_TYPE=60;LIBFPTR_ERROR_MULTIPLICATION_OVERFLOW=61;LIBFPTR_ERROR_DENIED_BY_SETTINGS=62;LIBFPTR_ERROR_TOTAL_OVERFLOW=63;LIBFPTR_ERROR_DENIED_IN_ANNULATION_RECEIPT=64;LIBFPTR_ERROR_JOURNAL_OVERFLOW=65"+
    ";LIBFPTR_ERROR_NOT_FULLY_PAID=66;LIBFPTR_ERROR_DENIED_IN_RETURN_RECEIPT=67;LIBFPTR_ERROR_SHIFT_EXPIRED=68;LIBFPTR_ERROR_DENIED_IN_SELL_RECEIPT=69;LIBFPTR_ERROR_FISCAL_MEMORY_OVERFLOW=70;LIBFPTR_ERROR_INVALID_PASSWORD=71"+
    ";LIBFPTR_ERROR_JOURNAL_BUSY=72;LIBFPTR_ERROR_DENIED_IN_CLOSED_SHIFT=73;LIBFPTR_ERROR_INVALID_TABLE_NUMBER=74;LIBFPTR_ERROR_INVALID_ROW_NUMBER=75;LIBFPTR_ERROR_INVALID_FIELD_NUMBER=76;LIBFPTR_ERROR_INVALID_DATE_TIME=77"+
    ";LIBFPTR_ERROR_INVALID_STORNO_SUM=78;LIBFPTR_ERROR_CHANGE_CALCULATION=79;LIBFPTR_ERROR_NO_CASH=80;LIBFPTR_ERROR_DENIED_IN_CLOSED_RECEIPT=81;LIBFPTR_ERROR_DENIED_IN_OPENED_RECEIPT=82;LIBFPTR_ERROR_DENIED_IN_OPENED_SHIFT=83"+
    ";LIBFPTR_ERROR_SERIAL_NUMBER_ALREADY_ENTERED=84;LIBFPTR_ERROR_TOO_MUCH_REREGISTRATIONS=85;LIBFPTR_ERROR_INVALID_SHIFT_NUMBER=86;LIBFPTR_ERROR_INVALID_SERIAL_NUMBER=87;LIBFPTR_ERROR_INVALID_RNM_VATIN=88"+
    ";LIBFPTR_ERROR_FISCAL_PRINTER_NOT_ACTIVATED=89;LIBFPTR_ERROR_SERIAL_NUMBER_NOT_ENTERED=90;LIBFPTR_ERROR_NO_MORE_REPORTS=91;LIBFPTR_ERROR_MODE_NOT_ACTIVATED=92;LIBFPTR_ERROR_RECORD_NOT_FOUND_IN_JOURNAL=93"+
    ";LIBFPTR_ERROR_INVALID_LICENSE=94;LIBFPTR_ERROR_NEED_FULL_RESET=95;LIBFPTR_ERROR_DENIED_BY_LICENSE=96;LIBFPTR_ERROR_DISCOUNT_CANCELLATION_DENIED=97;LIBFPTR_ERROR_CLOSE_RECEIPT_DENIED=98;LIBFPTR_ERROR_INVALID_ROUTE_NUMBER=99"+
    ";LIBFPTR_ERROR_INVALID_START_ZONE_NUMBER=100;LIBFPTR_ERROR_INVALID_END_ZONE_NUMBER=101;LIBFPTR_ERROR_INVALID_RATE_TYPE=102;LIBFPTR_ERROR_INVALID_RATE=103;LIBFPTR_ERROR_FISCAL_MODULE_EXCHANGE=104;LIBFPTR_ERROR_NEED_TECHNICAL_SUPPORT=105"+
    ";LIBFPTR_ERROR_SHIFT_NUMBERS_DID_NOT_MATCH=106;LIBFPTR_ERROR_DEVICE_NOT_FOUND=107;LIBFPTR_ERROR_EXTERNAL_DEVICE_CONNECTION=108;LIBFPTR_ERROR_DISPENSER_INVALID_STATE=109;LIBFPTR_ERROR_INVALID_POSITIONS_COUNT=110"+
    ";LIBFPTR_ERROR_DISPENSER_INVALID_NUMBER=111;LIBFPTR_ERROR_INVALID_DIVIDER=112;LIBFPTR_ERROR_FN_ACTIVATION_DENIED=113;LIBFPTR_ERROR_PRINTER_OVERHEAT=114;LIBFPTR_ERROR_FN_EXCHANGE=115;LIBFPTR_ERROR_FN_INVALID_FORMAT=116"+
    ";LIBFPTR_ERROR_FN_INVALID_STATE=117;LIBFPTR_ERROR_FN_FAULT=118;LIBFPTR_ERROR_FN_CRYPTO_FAULT=119;LIBFPTR_ERROR_FN_EXPIRED=120;LIBFPTR_ERROR_FN_OVERFLOW=121;LIBFPTR_ERROR_FN_INVALID_DATE_TIME=122;LIBFPTR_ERROR_FN_NO_MORE_DATA=123"+
    ";LIBFPTR_ERROR_FN_TOTAL_OVERFLOW=124;LIBFPTR_ERROR_BUFFER_OVERFLOW=125;LIBFPTR_ERROR_PRINT_SECOND_COPY_DENIED=126;LIBFPTR_ERROR_NEED_RESET_JOURNAL=127;LIBFPTR_ERROR_TAX_SUM_TOO_MUCH=128;LIBFPTR_ERROR_TAX_ON_LAST_OPERATION_DENIED=129"+
    ";LIBFPTR_ERROR_INVALID_FN_NUMBER=130;LIBFPTR_ERROR_TAX_CANCEL_DENIED=131;LIBFPTR_ERROR_LOW_BATTERY=132;LIBFPTR_ERROR_FN_INVALID_COMMAND=133;LIBFPTR_ERROR_FN_COMMAND_OVERFLOW=134;LIBFPTR_ERROR_FN_NO_TRANSPORT_CONNECTION=135"+
    ";LIBFPTR_ERROR_FN_CRYPTO_HAS_EXPIRED=136;LIBFPTR_ERROR_FN_RESOURCE_HAS_EXPIRED=137;LIBFPTR_ERROR_INVALID_MESSAGE_FROM_OFD=138;LIBFPTR_ERROR_FN_HAS_NOT_SEND_DOCUMENTS=139;LIBFPTR_ERROR_FN_TIMEOUT=140;LIBFPTR_ERROR_FN_SHIFT_EXPIRED=141"+
    ";LIBFPTR_ERROR_FN_INVALID_TIME_DIFFERENCE=142;LIBFPTR_ERROR_INVALID_TAXATION_TYPE=143;LIBFPTR_ERROR_INVALID_TAX_TYPE=144;LIBFPTR_ERROR_INVALID_COMMODITY_PAYMENT_TYPE=145;LIBFPTR_ERROR_INVALID_COMMODITY_CODE_TYPE=146"+
    ";LIBFPTR_ERROR_EXCISABLE_COMMODITY_DENIED=147;LIBFPTR_ERROR_FISCAL_PROPERTY_WRITE=148;LIBFPTR_ERROR_INVALID_COUNTER_TYPE=149;LIBFPTR_ERROR_CUTTER_FAULT=150;LIBFPTR_ERROR_REPORT_INTERRUPTED=151;LIBFPTR_ERROR_INVALID_LEFT_MARGIN=152"+
    ";LIBFPTR_ERROR_INVALID_ALIGNMENT=153;LIBFPTR_ERROR_INVALID_TAX_MODE=154;LIBFPTR_ERROR_FILE_NOT_FOUND=155;LIBFPTR_ERROR_PICTURE_TOO_BIG=156;LIBFPTR_ERROR_INVALID_BARCODE_PARAMS=157;LIBFPTR_ERROR_FISCAL_PROPERTY_DENIED=158"+
    ";LIBFPTR_ERROR_FN_INTERFACE=159;LIBFPTR_ERROR_DATA_DUPLICATE=160;LIBFPTR_ERROR_NO_REQUIRED_FISCAL_PROPERTY=161;LIBFPTR_ERROR_FN_READ_DOCUMENT=162;LIBFPTR_ERROR_FLOAT_OVERFLOW=163;LIBFPTR_ERROR_INVALID_SETTING_VALUE=164"+
    ";LIBFPTR_ERROR_HARD_FAULT=165;LIBFPTR_ERROR_FN_NOT_FOUND=166;LIBFPTR_ERROR_INVALID_AGENT_FISCAL_PROPERTY=167;LIBFPTR_ERROR_INVALID_FISCAL_PROPERTY_VALUE_1002_1056=168;LIBFPTR_ERROR_INVALID_FISCAL_PROPERTY_VALUE_1002_1017=169"+
    ";LIBFPTR_ERROR_SCRIPT=170;LIBFPTR_ERROR_INVALID_USER_MEMORY_INDEX=171;LIBFPTR_ERROR_NO_ACTIVE_OPERATOR=172;LIBFPTR_ERROR_REGISTRATION_REPORT_INTERRUPTED=173;LIBFPTR_ERROR_CLOSE_FN_REPORT_INTERRUPTED=174"+
    ";LIBFPTR_ERROR_OPEN_SHIFT_REPORT_INTERRUPTED=175;LIBFPTR_ERROR_OFD_EXCHANGE_REPORT_INTERRUPTED=176;LIBFPTR_ERROR_CLOSE_RECEIPT_INTERRUPTED=177;LIBFPTR_ERROR_FN_QUERY_INTERRUPTED=178;LIBFPTR_ERROR_RTC_FAULT=179"+
    ";LIBFPTR_ERROR_MEMORY_FAULT=180;LIBFPTR_ERROR_CHIP_FAULT=181;LIBFPTR_ERROR_TEMPLATES_CORRUPTED=182;LIBFPTR_ERROR_INVALID_MAC_ADDRESS=183;LIBFPTR_ERROR_INVALID_SCRIPT_NUMBER=184;LIBFPTR_ERROR_SCRIPTS_FAULT=185"+
    ";LIBFPTR_ERROR_INVALID_SCRIPTS_VERSION=186;LIBFPTR_ERROR_INVALID_CLICHE_FORMAT=187;LIBFPTR_ERROR_WAIT_FOR_REBOOT=188;LIBFPTR_ERROR_NO_LICENSE=189;LIBFPTR_ERROR_INVALID_FFD_VERSION=190;LIBFPTR_ERROR_CHANGE_SETTING_DENIED=191"+
    ";LIBFPTR_ERROR_INVALID_NOMENCLATURE_TYPE=192;LIBFPTR_ERROR_INVALID_GTIN=193;LIBFPTR_ERROR_NEGATIVE_MATH_RESULT=194;LIBFPTR_ERROR_FISCAL_PROPERTIES_COMBINATION=195;LIBFPTR_ERROR_OPERATOR_LOGIN=196;LIBFPTR_ERROR_INVALID_INTERNET_CHANNEL=197"+
    ";LIBFPTR_ERROR_DATETIME_NOT_SYNCRONIZED=198;LIBFPTR_ERROR_JOURNAL=199;LIBFPTR_ERROR_DENIED_IN_OPENED_DOC=200;LIBFPTR_ERROR_DENIED_IN_CLOSED_DOC=201;LIBFPTR_ERROR_LICENSE_MEMORY_OVERFLOW=202;LIBFPTR_ERROR_NEED_CANCEL_DOCUMENT=203"+
    ";LIBFPTR_ERROR_REGISTERS_NOT_INITIALIZED=204;LIBFPTR_ERROR_TOTAL_REQUIRED=205;LIBFPTR_ERROR_SETTINGS_FAULT=206;LIBFPTR_ERROR_COUNTERS_FAULT=207;LIBFPTR_ERROR_USER_MEMORY_FAULT=208;LIBFPTR_ERROR_SERVICE_COUNTERS_FAULT=209"+
    ";LIBFPTR_ERROR_ATTRIBUTES_FAULT=210;LIBFPTR_ERROR_ALREADY_IN_UPDATE_MODE=211;LIBFPTR_ERROR_INVALID_FIRMWARE=212;LIBFPTR_ERROR_INVALID_CHANNEL=213;LIBFPTR_ERROR_INTERFACE_DOWN=214;LIBFPTR_ERROR_INVALID_FISCAL_PROPERTY_VALUE_1212_1030=215"+
    ";LIBFPTR_ERROR_INVALID_FISCAL_PROPERTY_VALUE_1214=216;LIBFPTR_ERROR_INVALID_FISCAL_PROPERTY_VALUE_1212=217;LIBFPTR_ERROR_SYNC_TIME=218;LIBFPTR_ERROR_VAT18_VAT20_IN_RECEIPT=219;LIBFPTR_ERROR_PICTURE_NOT_CLOSED=220"+
    ";LIBFPTR_ERROR_INTERFACE_BUSY=221;LIBFPTR_ERROR_INVALID_PICTURE_NUMBER=222;LIBFPTR_ERROR_INVALID_CONTAINER=223;LIBFPTR_ERROR_ARCHIVE_CLOSED=224;LIBFPTR_ERROR_NEED_REGISTRATION=225;LIBFPTR_ERROR_DENIED_DURING_UPDATE=226"+
    ";LIBFPTR_ERROR_INVALID_TOTAL=227;LIBFPTR_ERROR_MARKING_CODE_CONFLICT=228;LIBFPTR_ERROR_INVALID_RECORDS_ID=229;LIBFPTR_ERROR_INVALID_SIGNATURE=230;LIBFPTR_ERROR_INVALID_EXCISE_SUM=231;LIBFPTR_ERROR_NO_DOCUMENTS_FOUND_IN_JOURNAL=232"+
    ";LIBFPTR_ERROR_INVALID_SCRIPT_TYPE=233;LIBFPTR_ERROR_INVALID_SCRIPT_NAME=234;LIBFPTR_ERROR_INVALID_POSITIONS_COUNT_WITH_1162=235;LIBFPTR_ERROR_INVALID_UC_COUNTER=236;LIBFPTR_ERROR_INVALID_UC_TAG=237;LIBFPTR_ERROR_INVALID_UC_IDX=238"+
    ";LIBFPTR_ERROR_INVALID_UC_SIZE=239;LIBFPTR_ERROR_INVALID_UC_CONFIG=240;LIBFPTR_ERROR_CONNECTION_LOST=241;LIBFPTR_ERROR_UNIVERSAL_COUNTERS_FAULT=242;LIBFPTR_ERROR_INVALID_TAX_SUM=243;LIBFPTR_ERROR_INVALID_MARKING_CODE_TYPE=244"+
    ";LIBFPTR_ERROR_LICENSE_HARD_FAULT=245;LIBFPTR_ERROR_LICENSE_INVALID_SIGN=246;LIBFPTR_ERROR_LICENSE_INVALID_SERIAL=247;LIBFPTR_ERROR_LICENSE_INVALID_TIME=248;LIBFPTR_ERROR_DOCUMENT_CANCELED=249;LIBFPTR_ERROR_INVALID_SCRIPT_PARAMS=250"+
    ";LIBFPTR_ERROR_CLICHE_TOO_LONG=251;LIBFPTR_ERROR_COMMODITIES_TABLE_FAULT=252;LIBFPTR_ERROR_COMMODITIES_TABLE=253;LIBFPTR_ERROR_COMMODITIES_TABLE_INVALID_TAG=254;LIBFPTR_ERROR_COMMODITIES_TABLE_INVALID_TAG_SIZE=255"+
    ";LIBFPTR_ERROR_COMMODITIES_TABLE_NO_TAG_DATA=256;LIBFPTR_ERROR_COMMODITIES_TABLE_NO_FREE_MEMORY=257;LIBFPTR_ERROR_BASE_WEB=500;LIBFPTR_ERROR_RECEIPT_PARSE_ERROR=501;LIBFPTR_ERROR_INTERRUPTED_BY_PREVIOUS_ERRORS=502"+
    ";LIBFPTR_ERROR_DRIVER_SCRIPT_ERROR=503;LIBFPTR_ERROR_VALIDATE_FUNC_NOT_FOUND=504;LIBFPTR_ERROR_WEB_FAIL=505;LIBFPTR_ERROR_WEB_END=599;LIBFPTR_PORT_COM=0;LIBFPTR_PORT_USB=1;LIBFPTR_PORT_TCPIP=2;LIBFPTR_PORT_BLUETOOTH=3"+
    ";LIBFPTR_PORT_BITS_7=7;LIBFPTR_PORT_BITS_8=8;LIBFPTR_PORT_PARITY_NO=0;LIBFPTR_PORT_PARITY_ODD=1;LIBFPTR_PORT_PARITY_EVEN=2;LIBFPTR_PORT_PARITY_MARK=3;LIBFPTR_PORT_PARITY_SPACE=4;LIBFPTR_PORT_SB_1=0;LIBFPTR_PORT_SB_1_5=1"+
    ";LIBFPTR_PORT_SB_2=2;LIBFPTR_BT_EAN_8=0;LIBFPTR_BT_EAN_13=1;LIBFPTR_BT_UPC_A=2;LIBFPTR_BT_UPC_E=3;LIBFPTR_BT_CODE_39=4;LIBFPTR_BT_CODE_93=5;LIBFPTR_BT_CODE_128=6;LIBFPTR_BT_CODABAR=7;LIBFPTR_BT_ITF=8;LIBFPTR_BT_ITF_14=9"+
    ";LIBFPTR_BT_GS1_128=10;LIBFPTR_BT_QR=11;LIBFPTR_BT_PDF417=12;LIBFPTR_BT_AZTEC=13;LIBFPTR_BT_CODE_39_EXTENDED=14;LIBFPTR_BC_DEFAULT=0;LIBFPTR_BC_0=1;LIBFPTR_BC_1=2;LIBFPTR_BC_2=3;LIBFPTR_BC_3=4;LIBFPTR_BC_4=5"+
    ";LIBFPTR_BC_5=6;LIBFPTR_BC_6=7;LIBFPTR_BC_7=8;LIBFPTR_BC_8=9;LIBFPTR_TM_POSITION=0;LIBFPTR_TM_UNIT=1;LIBFPTR_SCT_OVERALL=0;LIBFPTR_SCT_FORWARD=1;LIBFPTR_CT_ROLLUP=0;LIBFPTR_CT_RESETTABLE=1;LIBFPTR_SS_CLOSED=0"+
    ";LIBFPTR_SS_OPENED=1;LIBFPTR_SS_EXPIRED=2;LIBFPTR_CT_FULL=0;LIBFPTR_CT_PART=1;LIBFPTR_ALIGNMENT_LEFT=0;LIBFPTR_ALIGNMENT_CENTER=1;LIBFPTR_ALIGNMENT_RIGHT=2;LIBFPTR_TW_NONE=0;LIBFPTR_TW_WORDS=1;LIBFPTR_TW_CHARS=2"+
    ";LIBFPTR_FNT_DEBUG=0;LIBFPTR_FNT_RELEASE=1;LIBFPTR_FNT_UNKNOWN=2;LIBFPTR_RT_CLOSE_SHIFT=0;LIBFPTR_RT_X=1;LIBFPTR_RT_LAST_DOCUMENT=2;LIBFPTR_RT_OFD_EXCHANGE_STATUS=3;LIBFPTR_RT_KKT_DEMO=4;LIBFPTR_RT_KKT_INFO=5"+
    ";LIBFPTR_RT_OFD_TEST=6;LIBFPTR_RT_FN_DOC_BY_NUMBER=7;LIBFPTR_RT_QUANTITY=8;LIBFPTR_RT_DEPARTMENTS=9;LIBFPTR_RT_OPERATORS=10;LIBFPTR_RT_HOURS=11;LIBFPTR_RT_FN_REGISTRATIONS=12;LIBFPTR_RT_FN_SHIFT_TOTAL_COUNTERS=13"+
    ";LIBFPTR_RT_FN_TOTAL_COUNTERS=14;LIBFPTR_RT_FN_NOT_SENT_DOCUMENTS_COUNTERS=15;LIBFPTR_RT_COMMODITIES_BY_TAXATION_TYPES=16;LIBFPTR_RT_COMMODITIES_BY_DEPARTMENTS=17;LIBFPTR_RT_COMMODITIES_BY_SUMS=18;LIBFPTR_RT_START_SERVICE=19"+
    ";LIBFPTR_RT_DISCOUNTS=20;LIBFPTR_RT_JOURNAL_DOCUMENT_BY_NUMBERS=21;LIBFPTR_RT_JOURNAL_DOCUMENT_BY_SHIFTS=22;LIBFPTR_RT_CLOSE_SHIFT_REPORTS=23;LIBFPTR_PT_CASH=0;LIBFPTR_PT_ELECTRONICALLY=1;LIBFPTR_PT_PREPAID=2"+
    ";LIBFPTR_PT_CREDIT=3;LIBFPTR_PT_OTHER=4;LIBFPTR_PT_6=5;LIBFPTR_PT_7=6;LIBFPTR_PT_8=7;LIBFPTR_PT_9=8;LIBFPTR_PT_10=9;LIBFPTR_TAX_DEPARTMENT=0;LIBFPTR_TAX_VAT18=1;LIBFPTR_TAX_VAT10=2;LIBFPTR_TAX_VAT118=3"+
    ";LIBFPTR_TAX_VAT110=4;LIBFPTR_TAX_VAT0=5;LIBFPTR_TAX_NO=6;LIBFPTR_TAX_VAT20=7;LIBFPTR_TAX_VAT120=8;LIBFPTR_TAX_INVALID=9;LIBFPTR_EXTERNAL_DEVICE_DISPLAY=0;LIBFPTR_EXTERNAL_DEVICE_PINPAD=1;LIBFPTR_EXTERNAL_DEVICE_MODEM=2"+
    ";LIBFPTR_EXTERNAL_DEVICE_BARCODE_SCANNER=3;LIBFPTR_DT_STATUS=0;LIBFPTR_DT_CASH_SUM=1;LIBFPTR_DT_UNIT_VERSION=2;LIBFPTR_DT_PICTURE_INFO=3;LIBFPTR_DT_LICENSE_ACTIVATED=4;LIBFPTR_DT_REGISTRATIONS_SUM=5;LIBFPTR_DT_REGISTRATIONS_COUNT=6"+
    ";LIBFPTR_DT_PAYMENT_SUM=7;LIBFPTR_DT_CASHIN_SUM=8;LIBFPTR_DT_CASHIN_COUNT=9;LIBFPTR_DT_CASHOUT_SUM=10;LIBFPTR_DT_CASHOUT_COUNT=11;LIBFPTR_DT_REVENUE=12;LIBFPTR_DT_DATE_TIME=13;LIBFPTR_DT_SHIFT_STATE=14"+
    ";LIBFPTR_DT_RECEIPT_STATE=15;LIBFPTR_DT_SERIAL_NUMBER=16;LIBFPTR_DT_MODEL_INFO=17;LIBFPTR_DT_RECEIPT_LINE_LENGTH=18;LIBFPTR_DT_CUTTER_RESOURCE=19;LIBFPTR_DT_STEP_RESOURCE=20;LIBFPTR_DT_TERMAL_RESOURCE=21"+
    ";LIBFPTR_DT_ENVD_MODE=22;LIBFPTR_DT_SHIFT_TAX_SUM=23;LIBFPTR_DT_RECEIPT_TAX_SUM=24;LIBFPTR_DT_NON_NULLABLE_SUM=25;LIBFPTR_DT_RECEIPT_COUNT=26;LIBFPTR_DT_CANCELLATION_COUNT_ALL=27;LIBFPTR_DT_CANCELLATION_SUM=28"+
    ";LIBFPTR_DT_CANCELLATION_SUM_ALL=29;LIBFPTR_DT_POWER_SOURCE_STATE=30;LIBFPTR_DT_CANCELLATION_COUNT=31;LIBFPTR_DT_NON_NULLABLE_SUM_BY_PAYMENTS=32;LIBFPTR_DT_PRINTER_TEMPERATURE=33;LIBFPTR_DT_FATAL_STATUS=34"+
    ";LIBFPTR_DT_MAC_ADDRESS=35;LIBFPTR_DT_DEVICE_UPTIME=36;LIBFPTR_DT_RECEIPT_BYTE_COUNT=37;LIBFPTR_DT_DISCOUNT_AND_SURCHARGE_SUM=38;LIBFPTR_DT_LK_USER_CODE=39;LIBFPTR_DT_LAST_SENT_OFD_DOCUMENT_DATE_TIME=40"+
    ";LIBFPTR_DT_SHORT_STATUS=41;LIBFPTR_DT_PICTURES_ARRAY_INFO=42;LIBFPTR_DT_ETHERNET_INFO=43;LIBFPTR_DT_SCRIPTS_INFO=44;LIBFPTR_DT_SHIFT_TOTALS=45;LIBFPTR_DT_WIFI_INFO=46;LIBFPTR_DT_FONT_INFO=47;LIBFPTR_DT_SOFTLOCK_STATUS=48"+
    ";LIBFPTR_FNDT_TAG_VALUE=0;LIBFPTR_FNDT_OFD_EXCHANGE_STATUS=1;LIBFPTR_FNDT_FN_INFO=2;LIBFPTR_FNDT_LAST_REGISTRATION=3;LIBFPTR_FNDT_LAST_RECEIPT=4;LIBFPTR_FNDT_LAST_DOCUMENT=5;LIBFPTR_FNDT_SHIFT=6;LIBFPTR_FNDT_FFD_VERSIONS=7"+
    ";LIBFPTR_FNDT_VALIDITY=8;LIBFPTR_FNDT_REG_INFO=9;LIBFPTR_FNDT_DOCUMENTS_COUNT_IN_SHIFT=10;LIBFPTR_FNDT_ERRORS=11;LIBFPTR_FNDT_TICKET_BY_DOC_NUMBER=12;LIBFPTR_FNDT_DOCUMENT_BY_NUMBER=13;LIBFPTR_FNDT_REGISTRATION_TLV=14"+
    ";LIBFPTR_FNDT_ERROR_DETAIL=15;LIBFPTR_FNDT_VALIDITY_DAYS=16;LIBFPTR_FNDT_FREE_MEMORY=17;LIBFPTR_FNDT_TOTALS=18;LIBFPTR_UT_FIRMWARE=0;LIBFPTR_UT_CONFIGURATION=1;LIBFPTR_UT_TEMPLATES=2;LIBFPTR_UT_CONTROL_UNIT=3"+
    ";LIBFPTR_UT_BOOT=4;LIBFPTR_FNOP_REGISTRATION=0;LIBFPTR_FNOP_CHANGE_FN=1;LIBFPTR_FNOP_CHANGE_PARAMETERS=2;LIBFPTR_FNOP_CLOSE_ARCHIVE=3;LIBFPTR_OFD_CHANNEL_NONE=0;LIBFPTR_OFD_CHANNEL_USB=1;LIBFPTR_OFD_CHANNEL_PROTO=2"+
    ";LIBFPTR_OFD_CHANNEL_AUTO=2;LIBFPTR_PST_POWER_SUPPLY=0;LIBFPTR_PST_RTC_BATTERY=1;LIBFPTR_PST_BATTERY=2;LIBFPTR_RT_LAST_DOCUMENT_LINES=0;LIBFPTR_RT_FN_DOCUMENT_TLVS=1;LIBFPTR_RT_EXEC_USER_SCRIPT=2;LIBFPTR_RT_FIRMWARE=3"+
    ";LIBFPTR_RT_LICENSES=4;LIBFPTR_RT_FN_REGISTRATION_TLVS=5;LIBFPTR_RT_PARSE_COMPLEX_ATTR=6;LIBFPTR_RT_FN_SUM_COUNTERS=7;LIBFPTR_RT_FN_QUANTITY_COUNTERS=8;LIBFPTR_RT_FN_UNSENT_DOCS_COUNTERS=9;LIBFPTR_RT_SETTINGS=10"+
    ";LIBFPTR_RT_RUN_COMMAND=11;LIBFPTR_LOG_ERROR=0;LIBFPTR_LOG_WARN=1;LIBFPTR_LOG_INFO=2;LIBFPTR_LOG_DEBUG=3;LIBFPTR_SETTING_LIBRARY_PATH='LibraryPath';LIBFPTR_SETTING_MODEL='Model';LIBFPTR_SETTING_PORT='Port'"+
    ";LIBFPTR_SETTING_BAUDRATE='BaudRate';LIBFPTR_SETTING_BITS='Bits';LIBFPTR_SETTING_PARITY='Parity';LIBFPTR_SETTING_STOPBITS='StopBits';LIBFPTR_SETTING_IPADDRESS='IPAddress';LIBFPTR_SETTING_IPPORT='IPPort'"+
    ";LIBFPTR_SETTING_MACADDRESS='MACAddress';LIBFPTR_SETTING_COM_FILE='ComFile';LIBFPTR_SETTING_USB_DEVICE_PATH='UsbDevicePath';LIBFPTR_SETTING_BT_AUTOENABLE='AutoEnableBluetooth';LIBFPTR_SETTING_BT_AUTODISABLE='AutoDisableBluetooth'"+
    ";LIBFPTR_SETTING_ACCESS_PASSWORD='AccessPassword';LIBFPTR_SETTING_USER_PASSWORD='UserPassword';LIBFPTR_SETTING_OFD_CHANNEL='OfdChannel';LIBFPTR_SETTING_EXISTED_COM_FILES='ExistedComFiles';LIBFPTR_SETTING_SCRIPTS_PATH='ScriptsPath'"+
    ";LIBFPTR_SETTING_DOCUMENTS_JOURNAL_PATH='DocumentsJournalPath';LIBFPTR_SETTING_USE_DOCUMENTS_JOURNAL='UseDocumentsJournal';LIBFPTR_SETTING_AUTO_RECONNECT='AutoReconnect';LIBFPTR_SETTING_INVERT_CASH_DRAWER_STATUS='InvertCashDrawerStatus'"+
    ";LIBFPTR_SETTING_REMOTE_SERVER_ADDR='RemoteServerAddr';LIBFPTR_SETTING_REMOTE_SERVER_CONNECTION_TIMEOUT='RemoteServerConnectionTimeout';LIBFPTR_MODEL_UNKNOWN=0;LIBFPTR_MODEL_ATOL_25F=57;LIBFPTR_MODEL_ATOL_30F=61"+
    ";LIBFPTR_MODEL_ATOL_55F=62;LIBFPTR_MODEL_ATOL_22F=63;LIBFPTR_MODEL_ATOL_52F=64;LIBFPTR_MODEL_ATOL_11F=67;LIBFPTR_MODEL_ATOL_77F=69;LIBFPTR_MODEL_ATOL_90F=72;LIBFPTR_MODEL_ATOL_60F=75;LIBFPTR_MODEL_ATOL_42FS=77"+
    ";LIBFPTR_MODEL_ATOL_15F=78;LIBFPTR_MODEL_ATOL_50F=80;LIBFPTR_MODEL_ATOL_20F=81;LIBFPTR_MODEL_ATOL_91F=82;LIBFPTR_MODEL_ATOL_92F=84;LIBFPTR_MODEL_ATOL_SIGMA_10=86;LIBFPTR_MODEL_ATOL_27F=87;LIBFPTR_MODEL_ATOL_SIGMA_7F=90"+
    ";LIBFPTR_MODEL_ATOL_SIGMA_8F=91;LIBFPTR_MODEL_ATOL_1F=93;LIBFPTR_MODEL_KAZNACHEY_FA=76;LIBFPTR_MODEL_ATOL_AUTO=500;LIBFPTR_PORT_BR_1200=1200;LIBFPTR_PORT_BR_2400=2400;LIBFPTR_PORT_BR_4800=4800;LIBFPTR_PORT_BR_9600=9600"+
    ";LIBFPTR_PORT_BR_19200=19200;LIBFPTR_PORT_BR_38400=38400;LIBFPTR_PORT_BR_57600=57600;LIBFPTR_PORT_BR_115200=115200;LIBFPTR_PORT_BR_230400=230400;LIBFPTR_PORT_BR_460800=460800;LIBFPTR_PORT_BR_921600=921600"+
    ";LIBFPTR_FNS_INITIAL=0;LIBFPTR_FNS_CONFIGURED=1;LIBFPTR_FNS_FISCAL_MODE=3;LIBFPTR_FNS_POSTFISCAL_MODE=7;LIBFPTR_FNS_ACCESS_ARCHIVE=15;LIBFPTR_RT_CLOSED=0;LIBFPTR_RT_SELL=1;LIBFPTR_RT_SELL_RETURN=2;LIBFPTR_RT_SELL_CORRECTION=7"+
    ";LIBFPTR_RT_SELL_RETURN_CORRECTION=8;LIBFPTR_RT_BUY=4;LIBFPTR_RT_BUY_RETURN=5;LIBFPTR_RT_BUY_CORRECTION=9;LIBFPTR_RT_BUY_RETURN_CORRECTION=10;LIBFPTR_FFD_UNKNOWN=0;LIBFPTR_FFD_1_0=100;LIBFPTR_FFD_1_0_5=105"+
    ";LIBFPTR_FFD_1_1=110;LIBFPTR_TT_DEFAULT=0;LIBFPTR_TT_OSN=1;LIBFPTR_TT_USN_INCOME=2;LIBFPTR_TT_USN_INCOME_OUTCOME=4;LIBFPTR_TT_ENVD=8;LIBFPTR_TT_ESN=16;LIBFPTR_TT_PATENT=32;LIBFPTR_AT_NONE=0;LIBFPTR_AT_BANK_PAYING_AGENT=1"+
    ";LIBFPTR_AT_BANK_PAYING_SUBAGENT=2;LIBFPTR_AT_PAYING_AGENT=4;LIBFPTR_AT_PAYING_SUBAGENT=8;LIBFPTR_AT_ATTORNEY=16;LIBFPTR_AT_COMMISSION_AGENT=32;LIBFPTR_AT_ANOTHER=64;LIBFPTR_NT_FURS=0;LIBFPTR_NT_MEDICINES=1"+
    ";LIBFPTR_NT_TOBACCO=2;LIBFPTR_NT_SHOES=3;LIBFPTR_FN_DOC_REGISTRATION=1;LIBFPTR_FN_DOC_OPEN_SHIFT=2;LIBFPTR_FN_DOC_RECEIPT=3;LIBFPTR_FN_DOC_BSO=4;LIBFPTR_FN_DOC_CLOSE_SHIFT=5;LIBFPTR_FN_DOC_CLOSE_FN=6;LIBFPTR_FN_DOC_OPERATOR_CONFIRMATION=7"+
    ";LIBFPTR_FN_DOC_REREGISTRATION=11;LIBFPTR_FN_DOC_EXCHANGE_STATUS=21;LIBFPTR_FN_DOC_CORRECTION=31;LIBFPTR_FN_DOC_BSO_CORRECTION=41;LIBFPTR_UMO_GET_SIZE=0;LIBFPTR_UMO_READ_DATA=1;LIBFPTR_UMO_WRITE_DATA=2"+
    ";LIBFPTR_UMO_READ_STRING=3;LIBFPTR_UMO_WRITE_STRING=4;LIBFPTR_UMO_COMMIT=5;LIBFPTR_GUI_PARENT_NATIVE=0;LIBFPTR_GUI_PARENT_QT=1;LIBFPTR_DEFER_NONE=0;LIBFPTR_DEFER_PRE=1;LIBFPTR_DEFER_POST=2;LIBFPTR_DEFER_OVERLAY=3"+
    ";LIBFPTR_TAG_TYPE_STLV=0;LIBFPTR_TAG_TYPE_STRING=1;LIBFPTR_TAG_TYPE_ARRAY=2;LIBFPTR_TAG_TYPE_FVLN=3;LIBFPTR_TAG_TYPE_BITS=4;LIBFPTR_TAG_TYPE_BYTE=5;LIBFPTR_TAG_TYPE_VLN=6;LIBFPTR_TAG_TYPE_UINT_16=7;LIBFPTR_TAG_TYPE_UINT_32=8"+
    ";LIBFPTR_TAG_TYPE_UNIX_TIME=9;LIBFPTR_TAG_TYPE_BOOL=10;LIBFPTR_FT_BYTE_ARRAY=0;LIBFPTR_FT_BIN=1;LIBFPTR_FT_BCD=2;LIBFPTR_FT_STRING=3;LIBFPTR_FT_STRING_NULL_TERM=4;LIBFPTR_ST_NUMBER=0;LIBFPTR_ST_STRING=1"+
    ";LIBFPTR_ST_BOOL=2;LIBFPTR_FWT_FIRMWARE=0;LIBFPTR_FWT_SCRIPTS=2;LIBFPTR_SCRIPT_EXECUTABLE=0;LIBFPTR_SCRIPT_JSON=1;LIBFPTR_SCRIPT_SETTINGS=2;LIBFPTR_UCL_UNUSED=0;LIBFPTR_UCL_RECEIPT_TYPE=1;LIBFPTR_UCL_TAXATION_TYPE=2"+
    ";LIBFPTR_UCL_TAX_TYPE=3;LIBFPTR_UCL_PRODUCT_TYPE=4;LIBFPTR_UCL_PAYMENT_METHOD=5;LIBFPTR_UCL_USER_3=6;LIBFPTR_UCL_USER_4=7;LIBFPTR_UCL_USER_5=8;LIBFPTR_UCL_USER_6=9;LIBFPTR_UCF_CALC_SUMS=1;LIBFPTR_UCF_CALC_QUANTITIES=2"+
    ";LIBFPTR_UCF_CALC_SUMS_OTHERS=4;LIBFPTR_UCF_CALC_QUANTITIES_OTHERS=8;LIBFPTR_UC_OTHERS=4294967295;LIBFPTR_FNCT_SHIFT=0;LIBFPTR_FNCT_NON_NULLABLE=1;LIBFPTR_MCT_OTHER=0;LIBFPTR_MCT_EGAIS_20=1;LIBFPTR_MCT_EGAIS_30=2"+
    ";LIBFPTR_ERROR_USERS_SCRIPTS_BASE=1000;LIBFPTR_ERROR_USERS_SCRIPTS_END=1999;LIBFPTR_ERROR_BASE_RPC=600;LIBFPTR_ERROR_RCP_SERVER_BUSY=601;LIBFPTR_ERROR_RCP_SERVER_VERSION=602;LIBFPTR_ERROR_RCP_SERVER_EXCHANGE=603"+
    ";LIBFPTR_ERROR_RPC_END=699;LIBFPTR_IU_PIECE=0;LIBFPTR_IU_KILOGRAM=11;LIBFPTR_IU_METER=22;LIBFPTR_IU_SQUARE_METER=32;LIBFPTR_IU_LITER=41;LIBFPTR_IU_CUBIC_METER=42;LIBFPTR_MCT12_AUTO=256;LIBFPTR_MES_PIECE_RETURN=3"+
    ";LIBFPTR_MES_PIECE_SOLD=1;LIBFPTR_MES_DRY_FOR_SALE=2;LIBFPTR_MES_DRY_RETURN=4;LIBFPTR_MES_UNCHANGED=255;LIBFPTR_PARAM_MARKING_CODE_STATUS=65846;LIBFPTR_PARAM_MEASUREMENT_UNIT=65851;LIBFPTR_PARAM_MARKING_PROCESSING_MODE=65852"+
    ";LIBFPTR_PARAM_MARKING_FRACTIONAL_QUANTITY=65853;LIBFPTR_PARAM_MARKING_CODE_VALIDATION_READY=65850;LIBFPTR_PARAM_MARKING_CODE_ONLINE_VALIDATION_RESULT=65886;LIBFPTR_PARAM_MARKING_CODE_ONLINE_VALIDATION_ERROR_DESCRIPTION=65887";
    
    спПеременные:=List.Create();
    While СтрПеременные<>"" Do
      Стр:=TearStr(СтрПеременные,";");
      СтрИмя:=TearStr(Стр,"=");
      If Стр[1]<>"'" Then
        Стр:=Number(Стр);
      Else
        Стр:=Mid(Стр,2,Length(Стр)-2);
      EndIf;
      спПеременные.Add(Стр,СтрИмя);
    EndDo;
    спПеременные.SortByNames(0,1);
    спНастройки["АТОЛПеременные"]:=спПеременные;
    
    СтрДоп:=спНастройки["ДопУстановки"];
    Ини:=Ini.Create();
    Ини.AddFromString(СтрДоп);
    If PointerSize()=8 Then
      СтрИмя:="LIB_PATH64";
      DLLПуть:="C:\Program Files\ATOL\Drivers10\KKT\bin\fptr10.dll";
    Else
      СтрИмя:="LIB_PATH";
      DLLПуть:="C:\Program Files (x86)\ATOL\Drivers10\KKT\bin\fptr10.dll";
    EndIf;
    DLLПуть:=Ини.GetData(СтрИмя,DLLПуть);
    AtolDLL:=Lib.Load(DLLПуть);
    
    AtolDLL.RegisterFunction("libfptr_get_version_string","cdecl",,"SZ");
    AtolDLL.RegisterFunction("libfptr_create","cdecl","@N","I32");
    AtolDLL.RegisterFunction("libfptr_create_with_id","cdecl","@N,^SZW","I32");
    AtolDLL.RegisterFunction("libfptr_destroy","cdecl","N","I32");
    AtolDLL.RegisterFunction("libfptr_set_settings","cdecl","N,^SZW","I32");
    AtolDLL.RegisterFunction("libfptr_get_settings","cdecl","N,@SZW,I32","I32");
    AtolDLL.RegisterFunction("libfptr_set_single_setting","cdecl","N,^SZW,^SZW");
    AtolDLL.RegisterFunction("libfptr_get_single_setting","cdecl","N,^SZW,@SZW,I32","I32");
    AtolDLL.RegisterFunction("libfptr_is_opened","cdecl","N","I32");
    AtolDLL.RegisterFunction("libfptr_error_code","cdecl","N","I32");
    AtolDLL.RegisterFunction("libfptr_error_description","cdecl","N,@SZW,I32","I32");
    AtolDLL.RegisterFunction("libfptr_reset_error","cdecl","N");
    AtolDLL.RegisterFunction("libfptr_set_param_bool","cdecl","N,I32,I32");
    AtolDLL.RegisterFunction("libfptr_set_param_int","cdecl","N,I32,UI32");
    AtolDLL.RegisterFunction("libfptr_set_param_double","cdecl","N,I32,R64");
    AtolDLL.RegisterFunction("libfptr_set_param_str","cdecl","N,I32,^SZW");
    AtolDLL.RegisterFunction("libfptr_set_param_bytearray","cdecl","N,I32,P,I32");
    AtolDLL.RegisterFunction("libfptr_set_param_datetime","cdecl","N,I32,I32,I32,I32,I32,I32,I32");
    AtolDLL.RegisterFunction("libfptr_set_non_printable_param_bool","cdecl","N,I32,I32");
    AtolDLL.RegisterFunction("libfptr_set_non_printable_param_int","cdecl","N,I32,UI32");
    AtolDLL.RegisterFunction("libfptr_set_non_printable_param_double","cdecl","N,I32,R64");
    AtolDLL.RegisterFunction("libfptr_set_non_printable_param_str","cdecl","N,I32,^SZW");
    AtolDLL.RegisterFunction("libfptr_set_non_printable_param_bytearray","cdecl","N,I32,P,I32");
    AtolDLL.RegisterFunction("libfptr_set_non_printable_param_datetime","cdecl","N,I32,I32,I32,I32,I32,I32,I32");
    AtolDLL.RegisterFunction("libfptr_set_user_param_bool","cdecl","N,I32,I32");
    AtolDLL.RegisterFunction("libfptr_set_user_param_int","cdecl","N,I32,UI32");
    AtolDLL.RegisterFunction("libfptr_set_user_param_double","cdecl","N,I32,R64");
    AtolDLL.RegisterFunction("libfptr_set_user_param_str","cdecl","N,I32,^SZW");
    AtolDLL.RegisterFunction("libfptr_set_user_param_bytearray","cdecl","N,I32,P,I32");
    AtolDLL.RegisterFunction("libfptr_set_user_param_datetime","cdecl","N,I32,I32,I32,I32,I32,I32,I32");
    AtolDLL.RegisterFunction("libfptr_get_param_bool","cdecl","N,I32","I32");
    AtolDLL.RegisterFunction("libfptr_get_param_int","cdecl","N,I32","UI32");
    AtolDLL.RegisterFunction("libfptr_get_param_double","cdecl","N,I32","R64");
    AtolDLL.RegisterFunction("libfptr_get_param_str","cdecl","N,I32,@SZW,I32","I32");
    AtolDLL.RegisterFunction("libfptr_get_param_bytearray","cdecl","N,I32,P,I32","I32");
    AtolDLL.RegisterFunction("libfptr_get_param_datetime","cdecl","N,I32,@I32,@I32,@I32,@I32,@I32,@I32");
    AtolDLL.RegisterFunction("libfptr_log_write_ex","cdecl","N,^SZW,I32,^SZW");
    AtolDLL.RegisterFunction("libfptr_show_properties","cdecl","N,I32,N");
    
    СтрФункции:="libfptr_apply_single_settings;libfptr_open;libfptr_close;libfptr_reset_params;libfptr_run_command;libfptr_beep;libfptr_open_drawer;libfptr_cut;libfptr_device_poweroff;libfptr_device_reboot;libfptr_open_shift"+
    ";libfptr_reset_summary;libfptr_init_device;libfptr_query_data;libfptr_cash_income;libfptr_cash_outcome;libfptr_open_receipt;libfptr_cancel_receipt;libfptr_close_receipt;libfptr_check_document_closed"+
    ";libfptr_receipt_total;libfptr_receipt_tax;libfptr_registration;libfptr_payment;libfptr_report;libfptr_print_text;libfptr_print_cliche;libfptr_begin_nonfiscal_document;libfptr_end_nonfiscal_document"+
    ";libfptr_print_barcode;libfptr_print_picture;libfptr_print_picture_by_number;libfptr_upload_picture_from_file;libfptr_clear_pictures;libfptr_write_device_setting_raw;libfptr_read_device_setting_raw"+
    ";libfptr_commit_settings;libfptr_init_settings;libfptr_reset_settings;libfptr_write_date_time;libfptr_write_license;libfptr_fn_operation;libfptr_fn_query_data;libfptr_fn_write_attributes;libfptr_external_device_power_on"+
    ";libfptr_external_device_power_off;libfptr_external_device_write_data;libfptr_external_device_read_data;libfptr_operator_login;libfptr_process_json;libfptr_read_device_setting;libfptr_write_device_setting"+
    ";libfptr_begin_read_records;libfptr_read_next_record;libfptr_end_read_records;libfptr_user_memory_operation;libfptr_continue_print;libfptr_init_mgm;libfptr_util_form_tlv;libfptr_util_form_nomenclature"+
    ";libfptr_util_mapping;libfptr_read_model_flags;libfptr_line_feed;libfptr_flash_firmware;libfptr_soft_lock_init;libfptr_soft_lock_query_session_code;libfptr_soft_lock_validate;libfptr_util_calc_tax"+
    ";libfptr_download_picture;libfptr_bluetooth_remove_paired_devices;libfptr_util_tag_info;libfptr_util_container_versions;libfptr_activate_licenses;libfptr_remove_licenses;libfptr_enter_keys;libfptr_validate_keys"+
    ";libfptr_enter_serial_number;libfptr_get_serial_number_request;libfptr_upload_pixel_buffer;libfptr_download_pixel_buffer;libfptr_print_pixel_buffer;libfptr_util_convert_tag_value;libfptr_parse_marking_code"+
    ";libfptr_call_script;libfptr_set_header_lines;libfptr_set_footer_lines;libfptr_upload_picture_cliche;libfptr_upload_picture_memory;libfptr_upload_pixel_buffer_cliche;libfptr_upload_pixel_buffer_memory"+
    ";libfptr_exec_driver_script;libfptr_upload_driver_script;libfptr_exec_driver_script_by_id;libfptr_write_universal_counters_settings;libfptr_read_universal_counters_settings;libfptr_query_universal_counters_state"+
    ";libfptr_reset_universal_counters;libfptr_cache_universal_counters;libfptr_read_universal_counter_sum;libfptr_read_universal_counter_quantity;libfptr_clear_universal_counters_cache;libfptr_disable_ofd_channel"+
    ";libfptr_enable_ofd_channel;libfptr_validate_json;libfptr_reflection_call;libfptr_get_remote_server_info;-libfptr_begin_marking_code_validation;-libfptr_cancel_marking_code_validation;-libfptr_get_marking_code_validation_status"+
    ";-libfptr_accept_marking_code;-libfptr_check_marking_code_validations_ready;-libfptr_clear_marking_code_validation_result";
    
    While СтрФункции<>"" Do
      СтрФункция:=TearStr(СтрФункции,";");
      ФлИгнорироватьОшибку:=0;
      If Left(СтрФункция,1)="-" Then
        ФлИгнорироватьОшибку:=1;
        СтрФункция:=Mid(СтрФункция,2);
      EndIf;
      Try
        AtolDLL.RegisterFunction(СтрФункция,"cdecl","N","I32");
      Except
        If not ФлИгнорироватьОшибку Then
          Exit PopError()+_NEWLINE+"(1.5) Драйвер не установлен или в нерабочем состоянии!";
        EndIf;
      EndTry;
    EndDo;
  
    aHandle:=0;
    AtolDLL.libfptr_create(aHandle);
    Стр:=AtolDLL.libfptr_get_version_string();
    Стр:=TearStr(Стр,".");
    If Number(Стр)<10 Then
      AtolDLL.libfptr_close(aHandle);
      AtolDLL.libfptr_destroy(aHandle);
      Exit "Неверная версия драйвера! Должна быть не менее 10!";
    EndIf;
    спНастройки["АТОЛУказатель"]:=aHandle;
    спНастройки["Драйвер"]:=AtolDLL;
  Except
    Exit PopError()+_NEWLINE+"(1) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDeinit(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    If спНастройки["Соединено"]=1 Then
      аДрайвер.libfptr_close(aHandle);
      спНастройки["Соединено"]:=0;
    EndIf;
    аДрайвер.libfptr_destroy(aHandle);
  Except
    Exit PopError()+_NEWLINE+"Невозможно произвести отключение от драйвера!";
  EndTry;
EndFunction


Function DriverConnect(спНастройки)
  var спПеременные Export;

    Function _ПолучитьИни(Ини,Имя)
      Знач:=Ини.GetData(Имя,"");
      If not isEmpty(Знач) Then
        If pos("LIBFPTR_",Знач)>0 Then
          Exit спПеременные[Знач];
        Else
          If Str(Number(Знач))=Знач Then
            Exit Знач;
          ElseIf Left(Знач,1)<>"""" Then
            Exit """"+Знач+"""";
          Else
            Exit Знач;
          EndIf;
        EndIf;
      EndIf;
      Exit """""";
    EndFunction
    
    Function _ЕстьУстановка(Ини,Имя)
      Exit Ини.GetData(Имя,"")<>"";
    EndFunction  
    
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    СтрДоп:=спНастройки["ДопУстановки"];
    Ини:=0;
    If not isEmpty(СтрДоп) Then
      Ини:=Ini.Create();
      Ини.AddFromString(СтрДоп);
      Стр:="{"""+спПеременные["LIBFPTR_SETTING_MODEL"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_MODEL")+","+
          " """+спПеременные["LIBFPTR_SETTING_PORT"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_PORT")+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_COM_FILE"),", """+спПеременные["LIBFPTR_SETTING_COM_FILE"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_COM_FILE"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_BAUDRATE"),", """+спПеременные["LIBFPTR_SETTING_BAUDRATE"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_BAUDRATE"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_STOPBITS"),", """+спПеременные["LIBFPTR_SETTING_STOPBITS"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_STOPBITS"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_PARITY"),", """+спПеременные["LIBFPTR_SETTING_PARITY"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_PARITY"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_OFD_CHANNEL"),", """+спПеременные["LIBFPTR_SETTING_OFD_CHANNEL"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_OFD_CHANNEL"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_BITS"),", """+спПеременные["LIBFPTR_SETTING_BITS"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_BITS"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_IPADDRESS"),", """+спПеременные["LIBFPTR_SETTING_IPADDRESS"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_IPADDRESS"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_IPPORT"),", """+спПеременные["LIBFPTR_SETTING_IPPORT"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_IPPORT"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_MACADDRESS"),", """+спПеременные["LIBFPTR_SETTING_MACADDRESS"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_MACADDRESS"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_ACCESS_PASSWORD"),", """+спПеременные["LIBFPTR_SETTING_ACCESS_PASSWORD"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_ACCESS_PASSWORD"))+
          ?(_ЕстьУстановка(Ини,"LIBFPTR_SETTING_USER_PASSWORD"),", """+спПеременные["LIBFPTR_SETTING_USER_PASSWORD"]+""": "+_ПолучитьИни(Ини,"LIBFPTR_SETTING_USER_PASSWORD"))+"}";
      аДрайвер.libfptr_set_settings(aHandle,Стр);    
    EndIf;
    
    If аДрайвер.libfptr_open(aHandle)<>0 Then
      Exit "Ошибка открытия ККМ "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
    EndIf;
    спНастройки["LIBFPTR_PARAM_RECEIPT_ELECTRONICALLY"]:=?(IsEmpty(Ини),0,Number(Ини.GetData("LIBFPTR_PARAM_RECEIPT_ELECTRONICALLY","0")));
    спНастройки["FFDVersion"]:=?(IsEmpty(Ини),"",Number(Ини.GetData("FFDVersion","")));
    
    //Исправление текущей даты и времени в ККМ -- Атол не дайет возможности исправить дату и время программно
    ТекДата0:=Date();
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_DATE_TIME"]);
    аДрайвер.libfptr_query_data(aHandle);    
    аГод:=0;
    аМесяц:=0;
    аДень:=0;
    аЧас:=0;
    аМинута:=0;
    аСекунда:=0;
    ТекДата:=аДрайвер.libfptr_get_param_datetime(aHandle,спПеременные["LIBFPTR_PARAM_DATE_TIME"],аГод,аМесяц,аДень,аЧас,аМинута,аСекунда);
    ТекДата:=Date(Right("0"+аДень,2)+"."+Right("0"+аМесяц,2)+"."+Right(аГод,4)+" "+Right("0"+аЧас,2)+":"+Right("0"+аМинута,2)+":"+Right("0"+аСекунда,2));
    If not IsEmpty(ТекДата) Then
      If Abs(GetPeriod(ТекДата,ТекДата0,5))>30000 Then //Полминуты
        ТекДата0:=Date();
        аДрайвер.libfptr_set_param_datetime(aHandle,спПеременные["LIBFPTR_PARAM_DATE_TIME"],GetYear(ТекДата0),GetMonth(ТекДата0),GetDay(ТекДата0),GetHour(ТекДата0),GetMinute(ТекДата0),GetSecond(ТекДата0));
        If аДрайвер.libfptr_write_date_time(aHandle)<>0 Then
          Стр:="Время в ККТ сильно отличается от времени компьютера (на "+Abs(GetPeriod(ТекДата,ТекДата0,5) div 1000)+" с.), однако изменить время не удалось ("+
            _errorDescription(аДрайвер,aHandle)+"), рекомендуется изменить время в ККМ вручную!";
          Box(Стр,Q_WARNING);
        EndIf;
      EndIf;
    EndIf;
        
    спНастройки["Соединено"]:=1;
  Except
    Exit PopError()+_NEWLINE+"(2) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDisconnect(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    аДрайвер.libfptr_close(aHandle);
    спНастройки["Соединено"]:=0;
  Except
    Exit PopError()+_NEWLINE+"(3) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function CashDrawerInfo(спНастройки)
  Try
    If спНастройки["Соединено"]<>1 Then
      спНастройки["ДенежныйЯщикСостояние"]:=-1;
      спНастройки["ДенежныйЯщикСумма"]:=-1;
      Exit;
    EndIf;
  
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_STATUS"]);
    аДрайвер.libfptr_query_data(aHandle);    
    спНастройки["ДенежныйЯщикСостояние"]:=аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_CASHDRAWER_OPENED"]);
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_CASH_SUM"]);
    аДрайвер.libfptr_query_data(aHandle);
    спНастройки["ДенежныйЯщикСумма"]:=аДрайвер.libfptr_get_param_double(aHandle,спПеременные["LIBFPTR_PARAM_SUM"]);
  Except
    Exit "Ошибка команды: "+PopError();
  EndTry;
EndFunction

Function OpenCashDrawer(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    аДрайвер.libfptr_open_drawer(aHandle);
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка открытия денежного ящика!";
  EndTry;
EndFunction

//Тип запроса в "ТипЗапросаИнформации", поддерживаются: МодельККТ, СерийныйНомерККТ, РегистрационныйНоменККТ, СерийныйНомерФН, ДатаОкончанияФН, ДатаПервогоНеотправленногоДокумента
//Ответ в "ОтветНаЗапросИнформации". Если запрос не удачный или не поддерживается, ответ -- пустая строка.
Function DeviceInfo(спНастройки)
  Var аДрайвер Export, aHandle Export, спПеременные Export;

  Function GetParamString(Тип)
    Стр:=RepeatStr(" ",1024);
    Размер:=аДрайвер.libfptr_get_param_str(aHandle,Тип,Стр,Length(Стр));
    if Размер>Length(Стр) Then
      Стр:=RepeatStr(" ",Размер);
      аДрайвер.libfptr_get_param_str(aHandle,Тип,Стр,Length(Стр));
    EndIf;
    Exit Стр;
  EndFunction    

  Function GetParamDate()
    аГод:=0;
    аМесяц:=0;
    аДень:=0;
    аЧас:=0;
    аМинута:=0;
    аСекунда:=0;
    Дата:=аДрайвер.libfptr_get_param_datetime(aHandle,спПеременные["LIBFPTR_PARAM_DATE_TIME"],аГод,аМесяц,аДень,аЧас,аМинута,аСекунда);
    Exit Date(Right("0"+аДень,2)+"."+Right("0"+аМесяц,2)+"."+Right(аГод,4)+" "+Right("0"+аЧас,2)+":"+Right("0"+аМинута,2)+":"+Right("0"+аСекунда,2));
  EndFunction    
  
  Try
    спНастройки["ОтветНаЗапросИнформации"]:="";
    If спНастройки["Соединено"]<>1 Then
      Exit;
    EndIf;
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    СтрЗапрос:=спНастройки["ТипЗапросаИнформации"];
    
    If СтрЗапрос="МодельККТ" Then
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_STATUS"]);
      аДрайвер.libfptr_query_data(aHandle);
      спНастройки["ОтветНаЗапросИнформации"]:=GetParamString(спПеременные["LIBFPTR_PARAM_MODEL_NAME"])+", прошивка "+GetParamString(спПеременные["LIBFPTR_PARAM_UNIT_VERSION"]);
    ElseIf СтрЗапрос="СерийныйНомерККТ" Then
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_SERIAL_NUMBER"]);
      аДрайвер.libfptr_query_data(aHandle);
      спНастройки["ОтветНаЗапросИнформации"]:=GetParamString(спПеременные["LIBFPTR_PARAM_SERIAL_NUMBER"]);
    ElseIf СтрЗапрос="РегистрационныйНоменККТ" Then
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_FN_DATA_TYPE"],спПеременные["LIBFPTR_FNDT_REG_INFO"]);
      аДрайвер.libfptr_fn_query_data(aHandle);
      спНастройки["ОтветНаЗапросИнформации"]:=GetParamString(1037);//В Атоле нет имени этой переменной
    ElseIf СтрЗапрос="СерийныйНомерФН" Then
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_FN_DATA_TYPE"],спПеременные["LIBFPTR_FNDT_FN_INFO"]);
      аДрайвер.libfptr_fn_query_data(aHandle);
      спНастройки["ОтветНаЗапросИнформации"]:=GetParamString(спПеременные["LIBFPTR_PARAM_SERIAL_NUMBER"]);
    ElseIf СтрЗапрос="ДатаОкончанияФН" Then
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_FN_DATA_TYPE"],спПеременные["LIBFPTR_FNDT_VALIDITY"]);
      аДрайвер.libfptr_fn_query_data(aHandle);
      спНастройки["ОтветНаЗапросИнформации"]:=GetParamDate();
      спНастройки["ОтветНаЗапросИнформации"]:=?(IsEmpty(спНастройки["ОтветНаЗапросИнформации"]),"",спНастройки["ОтветНаЗапросИнформации"]);
    ElseIf СтрЗапрос="ДатаПервогоНеотправленногоДокумента" Then
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_FN_DATA_TYPE"],спПеременные["LIBFPTR_FNDT_OFD_EXCHANGE_STATUS"]);
      аДрайвер.libfptr_fn_query_data(aHandle);
      спНастройки["ОтветНаЗапросИнформации"]:=GetParamDate();
      спНастройки["ОтветНаЗапросИнформации"]:=?(IsEmpty(спНастройки["ОтветНаЗапросИнформации"]),"",спНастройки["ОтветНаЗапросИнформации"]);
    EndIf;
  Except
    Exit "Ошибка команды: "+PopError();
  EndTry;
EndFunction

Function ShiftInfo(спНастройки)
  Try
    If спНастройки["Соединено"]<>1 Then
      спНастройки["СменаСостояние"]:=-1;
      Exit;
    EndIf;
  
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_SHIFT_STATE"]);
    аДрайвер.libfptr_query_data(aHandle);
    
    //-1 -- ошибка, 0 -- закрыта, 1 -- открыта, 2 -- истекла, 3 -- другое
    спНастройки["СменаСостояние"]:=3;
    аСмена:=аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_SHIFT_STATE"]);
    If аСмена=спПеременные["LIBFPTR_SS_CLOSED"] Then
      спНастройки["СменаСостояние"]:=0;
    ElseIf аСмена=спПеременные["LIBFPTR_SS_OPENED"] Then
      спНастройки["СменаСостояние"]:=1;
    ElseIf аСмена=спПеременные["LIBFPTR_SS_EXPIRED"] Then
      спНастройки["СменаСостояние"]:=2;
    EndIf;
    спНастройки["НомерСмены"]:=аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_SHIFT_NUMBER"]);
    
    If спНастройки["ДополнительнаяИнформация"]=1 Then
      спНастройки["ДополнительнаяИнформация"]:=0;
      
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_RECEIPT_STATE"]);
      аДрайвер.libfptr_query_data(aHandle);    
      спНастройки["НомерДокумента"]:=аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DOCUMENT_NUMBER"]);
      
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_SERIAL_NUMBER"]);
      аДрайвер.libfptr_query_data(aHandle);    
      Стр:=RepeatStr(" ",1024);
      Размер:=аДрайвер.libfptr_get_param_str(aHandle,спПеременные["LIBFPTR_PARAM_SERIAL_NUMBER"],Стр,Length(Стр));
      if Размер>Length(Стр) Then
        Стр:=RepeatStr(" ",Размер);
        аДрайвер.libfptr_get_param_str(aHandle,спПеременные["LIBFPTR_PARAM_SERIAL_NUMBER"],Стр,Length(Стр));
      EndIf;
      спНастройки["НомерККТ"]:=Стр;
      
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_SHORT_STATUS"]);
      аДрайвер.libfptr_query_data(aHandle);    
      спНастройки["БумагаЗаканчивается"]:=_Or(аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_PAPER_NEAR_END"]),
        not аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_RECEIPT_PAPER_PRESENT"]));
      спНастройки["ОбщаяПроблемаККМ"]:=_Or(аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_PRINTER_CONNECTION_LOST"]),
        аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_PRINTER_ERROR"]),аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_BLOCKED"]));
    EndIf;
  Except
    Exit "Ошибка команды: "+PopError();
  EndTry;
EndFunction

Function OpenShift(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    Кассир:=спНастройки["Кассир"];
    стрИНН:=Trim(Кассир.ИНН);
    стрИНН:=TearStr(стрИНН,"/");
    аДрайвер.libfptr_set_param_str(aHandle,1021,"Кассир "+Кассир.ПолнНаименование);
    аДрайвер.libfptr_set_param_str(aHandle,1203,стрИНН);
    аДрайвер.libfptr_operator_login(aHandle);
    If IsExecutingInSeparateProcess Then //Иногда смена открывается очень долго
      аНовый:=InterProcessServerTimeout();
      аНовый:=?(аНовый>0,Max(аНовый,300000));
      аСтарый:=InterProcessServerTimeout(аНовый);
    EndIf;
    Try
      If аДрайвер.libfptr_open_shift(aHandle)<>0 Then
        Exit "Ошибка открытия смены: "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
      EndIf;
    Finally
      If IsExecutingInSeparateProcess Then
        InterProcessServerTimeout(аСтарый);
      EndIf;
    EndTry;
    аДрайвер.libfptr_check_document_closed(aHandle);
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка открыть смену!";
  EndTry;
EndFunction

Function CloseShift(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    Кассир:=спНастройки["Кассир"];
    стрИНН:=Trim(Кассир.ИНН);
    стрИНН:=TearStr(стрИНН,"/");
    аДрайвер.libfptr_set_param_str(aHandle,1021,"Кассир "+Кассир.ПолнНаименование);
    аДрайвер.libfptr_set_param_str(aHandle,1203,стрИНН);
    аДрайвер.libfptr_operator_login(aHandle);
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_REPORT_TYPE"],спПеременные["LIBFPTR_RT_CLOSE_SHIFT"]);
    If аДрайвер.libfptr_report(aHandle)<>0 Then
      Exit "Ошибка закрытия смены: "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
    EndIf;
    аДрайвер.libfptr_check_document_closed(aHandle);
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка закрыть смену!";
  EndTry;
EndFunction

Function DepositMoney(спНастройки)
  Try
    Сумма:=Number(спНастройки["Сумма"]);
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_SUM"],Сумма);
    аДрайвер.libfptr_cash_income(aHandle);
  Except
    Exit PopError()+_NEWLINE+"Неудачная выгрузки внесения наличных!";
  EndTry;
EndFunction

Function WithdrawMoney(спНастройки)
  Try
    Сумма:=Number(спНастройки["Сумма"]);
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_SUM"],Сумма);
    аДрайвер.libfptr_cash_outcome(aHandle);
  Except
    Exit PopError()+_NEWLINE+"Неудачная выгрузки изъятия наличных!";
  EndTry;
EndFunction


Function PrintReportX(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];    
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_SHIFT_STATE"]);
    аДрайвер.libfptr_query_data(aHandle);
    аСмена:=аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_SHIFT_STATE"]);
    If аСмена<>спПеременные["LIBFPTR_SS_OPENED"] Then
      Exit "Смена не открыта!";
    EndIf;
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_REPORT_TYPE"],спПеременные["LIBFPTR_RT_X"]);
    аДрайвер.libfptr_report(aHandle);
    аДрайвер.libfptr_check_document_closed(aHandle);
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка печати X-отчета!";
  EndTry;
EndFunction

Function PrintReportZ(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_SHIFT_STATE"]);
    аДрайвер.libfptr_query_data(aHandle);
    аСмена:=аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_SHIFT_STATE"]);
    If аСмена=спПеременные["LIBFPTR_SS_OPENED"] Then
      Exit "Смена не закрыта!";
    EndIf;
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_REPORT_TYPE"],спПеременные["LIBFPTR_RT_CLOSE_SHIFT"]);
    аДрайвер.libfptr_report(aHandle);
    //аДрайвер.libfptr_check_document_closed(aHandle);
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка печати Z-отчета!";
  EndTry;
EndFunction

Function PrintLastReceipt(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    If not IsEmpty(спНастройки["НомерДокумента"]) Then
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_REPORT_TYPE"],спПеременные["LIBFPTR_RT_FN_DOC_BY_NUMBER"]);
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DOCUMENT_NUMBER"],спНастройки["НомерДокумента"]);
      аДрайвер.libfptr_report(aHandle);
    Else
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_REPORT_TYPE"],спПеременные["LIBFPTR_RT_LAST_DOCUMENT"]);
      аДрайвер.libfptr_report(aHandle);
    EndIf;
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка печати копии чека!";
  EndTry;
EndFunction


//ФФД 1.2: https://forum.nalog.ru/index.php?app=core&module=attach&section=attach&attach_id=3772
//Используются поля:
//Агент -- не используется
//ТипЧека -- число (см. ниже)
//ФлРозничныйПокупатель -- число
//Контрагент
//ЮрЛицо
//ЕГАИССылка -- URL типа "https://check.egais.ru?id=cf1b1096-3cbc-11e7-b3c1-9b018b2ba3f7", если не пустая, будет выведено дополнение к чеку.
//ЕГАИСПодпись -- строка типа "79DED4A448069B0BFF602FF646F4E9B24D253D311679EA15307AEF38AEEE7933C9175DE5814C3DCF89BF63853CB75003D9FD979F3BEBBC93AFADF1D9A429623F"
//ДополнительнаяИнформация -- текст для печати после всех чеков
//ТабИСМП -- таблица "Номенклатура,Марка,ФлНеПрошлаПроверку,Причина,Поле1,Поле2" для проверки и прикрепления к чеку
//ТабОшибкиПроверкиМарок -- исходящая таблица со столбцами "Марка,Причина"
//Таблица -- Номенклатура,Количество,Сумма,СтавкаНДС
//Сумма -- сумма документа
//ЭлектроннаяСумма -- сумма документа электронной оплатой
//ДругаяБезналичнаяСумма -- сумма документа с особыми оплатами (подарочные сертификаты и пр.)
//СуммаЗакрытияАванса -- при операции закрытия аванса (11), сумма указывает на часть суммы документа, которая ушла на закрытие аванса
//ЭлектроннаяСумма+ДругаяБезналичнаяСумма должны быть меньше или равны параметру Сумма
Function PrintReceipt(спНастройки)
  ФлОтменитьЧек:=0;
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
    Кассир:=спНастройки["Кассир"];
    стрИНН:=Trim(Кассир.ИНН);
    стрИНН:=TearStr(стрИНН,"/");
    аДрайвер.libfptr_set_param_str(aHandle,1021,"Кассир "+Кассир.ПолнНаименование);
    аДрайвер.libfptr_set_param_str(aHandle,1203,стрИНН);
    аДрайвер.libfptr_operator_login(aHandle);
    
    //Отменить предыдущий документ, если он открыт в данный момент
    If not аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_DOCUMENT_CLOSED"]) Then
      аДрайвер.libfptr_cancel_receipt(aHandle);
    EndIf;    
    
    //Версия ФФД
    If not IsEmpty(спНастройки["FFDVersion"]) Then
      ФФД12:=Number(спНастройки["FFDVersion"])>=120;
      ФФД11:=Number(спНастройки["FFDVersion"])>=110;
      ФФД10:=Number(спНастройки["FFDVersion"])<105;
    Else
      аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_FN_DATA_TYPE"],спПеременные["LIBFPTR_FNDT_FFD_VERSIONS"]);
      аДрайвер.libfptr_fn_query_data(aHandle);
      ФФД12:=0;
      ФФД11:=0;
      Try
        ФФД12:=(аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DEVICE_FFD_VERSION"])>=120)And(аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DEVICE_MAX_FFD_VERSION"])>=120);
        ФФД11:=(аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DEVICE_FFD_VERSION"])>=110)And(аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DEVICE_MAX_FFD_VERSION"])>=110);
        ФФД10:=(аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DEVICE_FFD_VERSION"])<105)Or(аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DEVICE_MAX_FFD_VERSION"])<105);
      Except
        ФФД10:=1;
      EndTry;
    EndIf;
    аТип0:=спНастройки["ТипЧека"];
    If (аТип0<>10)And(аТип0<>13)And(ФФД12) Then
      аДрайвер.libfptr_cancel_marking_code_validation(aHandle);
      аДрайвер.libfptr_clear_marking_code_validation_result(aHandle);
    EndIf;
    
    //Единица измерения (2108)
    //0 -- шт    (796)
    //10 - г
    //11 - кг    (166)
    //12 - т
    //20 - см
    //21 - дм
    //22 - м     (006)
    //30 - см2
    //31 - дм2
    //32 - м2    (055)
    //40 - мл
    //41 - л     (112)
    //42 - м3    (113)
    //...
    If ФФД12 Then
      спЕдиница:=List.Create();
      спЕдиница.Add(спПеременные["LIBFPTR_IU_PIECE"]);
      спЕдиница["166"]:=спПеременные["LIBFPTR_IU_KILOGRAM"];
      спЕдиница["006"]:=спПеременные["LIBFPTR_IU_METER"];
      спЕдиница["055"]:=спПеременные["LIBFPTR_IU_SQUARE_METER"];
      спЕдиница["112"]:=спПеременные["LIBFPTR_IU_LITER"];
      спЕдиница["113"]:=спПеременные["LIBFPTR_IU_CUBIC_METER"];
    EndIf;
    
    //Тип чека:
    //1 -- ПКО (продажа)                      = LIBFPTR_RT_SELL
    //2 -- РКО (возврат продажи)              = LIBFPTR_RT_SELL_RETURN
    //3 -- Коррекция ПКО (продажи)            = LIBFPTR_RT_SELL_CORRECTION
    //4 -- Коррекция РКО (возврата продажи)   = LIBFPTR_RT_SELL_CORRECTION
    //5 -- РКО (покупка)                      = LIBFPTR_RT_BUY
    //6 -- ПКО (возврат покупки)              = LIBFPTR_RT_BUY_RETURN
    //7 -- Коррекция РКО (покупки)            = LIBFPTR_RT_BUY_CORRECTION
    //8 -- Коррекция ПКО (возврата покупки)   = LIBFPTR_RT_BUY_CORRECTION
    //10 -- Аванс (товар не отдается)         = LIBFPTR_RT_SELL + способ расчета LIBFPTR_PT_PREPAID (и наличная и безналичная оплаты), 1214=4, 1212=10, Количество = 1, Наименование "Аванс за товары"
    //11 -- Закрытие аванса                   = LIBFPTR_RT_SELL + способ расчета LIBFPTR_PT_CREDIT (и наличная и безналичная оплаты до суммы СуммаЗакрытияАванса, остальное обычным способом), 1214=4, 1212=1
    //12 -- Кредит                            = LIBFPTR_RT_SELL + способ расчета LIBFPTR_PT_CREDIT (и наличная и безналичная оплаты), 1214=5, 1212=1
    //13 -- Закрытие кредита                  = LIBFPTR_RT_SELL + способ расчета LIBFPTR_PT_PREPAID (и наличная и безналичная оплаты), 1214=7, 1212=10, Количество = 1, Наименование "Закрытие кредита за товары"
    
    //Признак предмена расчета (1212):
    //[+] 1. "ТОВАР"                      //Кроме акцизного и марочного, алкоголь марочным товаром не считается ("не такой" марочный)
    //[+] 2. "ПОДАКЦИЗНЫЙ ТОВАР"          //Для ФФД 1.05,1.1
    //3. "РАБОТА"
    //4. "УСЛУГА"
    //5. "СТАВКА АЗАРТНОЙ ИГРЫ"
    //6. "ВЫИГРЫШ АЗАРТНОЙ ИГРЫ"
    //7. "ЛОТЕРЕЙНЫЙ БИЛЕТ"
    //8. "ВЫИГРЫШ ЛОТЕРЕИ"
    //9. "ПРЕДОСТАВЛЕ-НИЕ РИД"
    //[+] 10. "ПЛАТЕЖ"                    //об авансе, задатке, предоплате, кредите
    //11. "АГЕНТСКОЕ ВОЗНАГРАЖДЕНИЕ"
    //12. "ВЫПЛАТА"
    //13. "ИНОЙ ПРЕДМЕТ РАСЧЕТА"
    //14. "ИМУЩЕСТВЕННОЕ ПРАВО"
    //15. "ВНЕРЕАЛИЗАЦИОННЫЙ ДОХОД"
    //16. "ИНЫЕ ПЛАТЕЖИ И ВЗНОСЫ"
    //17. "ТОРГОВЫЙ СБОР"
    //18. "КУРОРТНЫЙ СБОР"
    //19. "ЗАЛОГ"
    //20. "РАСХОД"
    //21. "ВЗНОСЫ НА ОБЯЗАТЕЛЬНОЕ ПЕНСИОННОЕ СТРАХОВАНИЕ ИП"
    //22. "ВЗНОСЫ НА ОБЯЗАТЕЛЬНОЕ ПЕНСИОННОЕ СТРАХОВАНИЕ"
    //23. "ВЗНОСЫ НА ОБЯЗАТЕЛЬНОЕ МЕДИЦИНСКОЕ СТРАХОВАНИЕ ИП"
    //24. "ВЗНОСЫ НА ОБЯЗАТЕЛЬНОЕ МЕДИЦИНСКОЕ СТРАХОВАНИЕ"
    //25. "ВЗНОСЫ НА ОБЯЗАТЕЛЬНОЕ СОЦИАЛЬНОЕ СТРАХОВАНИЕ"
    //26. "ПЛАТЕЖ КАЗИНО"
    //27. "ВЫДАЧА ДЕНЕЖНЫХ СРЕДСТВ"
    //30. подакцизном товаре, подлежащем маркировке средством идентификации, не имеющем кода маркировки
    //31. подакцизном товаре, подлежащем маркировке средством идентификации, имеющем код маркировки
    //32. товаре, подлежащем маркировке средством идентификации, не имеющем кода маркировки, за исключением подакцизного товара
    //[+] 33. товаре, подлежащем маркировке средством идентификации, имеющем код маркировки, за исключением подакцизного товара
        
    //Признаки способа расчета (1214):
    //1 -- Предоплата 100%
    //2 -- Предоплата
    //3 -- Аванс
    //4 -- Полная оплата (+ аванс)
    //5 -- Частичная оплата (+кредит)
    //6 -- Полный кредит
    //7 -- Оплата кредита
    
    спТип:=List.Create("LIBFPTR_RT_SELL","LIBFPTR_RT_SELL_RETURN","LIBFPTR_RT_SELL_CORRECTION","LIBFPTR_RT_SELL_CORRECTION","LIBFPTR_RT_BUY","LIBFPTR_RT_BUY_RETURN","LIBFPTR_RT_BUY_CORRECTION","LIBFPTR_RT_BUY_CORRECTION","",
      "LIBFPTR_RT_SELL","LIBFPTR_RT_SELL","LIBFPTR_RT_SELL","LIBFPTR_RT_SELL");
    спНДС:=List.Create(спПеременные["LIBFPTR_TAX_NO"],спПеременные["LIBFPTR_TAX_VAT0"],спПеременные["LIBFPTR_TAX_VAT10"],спПеременные["LIBFPTR_TAX_VAT18"],спПеременные["LIBFPTR_TAX_VAT20"]);
        
    ФлРозничныйПокупатель:=Number(спНастройки["ФлРозничныйПокупатель"]);
    аТип:=спПеременные[спТип.Get(аТип0)];
    
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_RECEIPT_TYPE"],аТип);
    
    ФлПочта:=0;
    If Trim(спНастройки["ПочтаИлиТелефонКлиента"])<>"" Then
      //"client@mail.ru" или "+79161234567"
      аДрайвер.libfptr_set_param_str(aHandle,1008,Trim(спНастройки["ПочтаИлиТелефонКлиента"]));
      ФлПочта:=1;
    EndIf;
    
    аДрайвер.libfptr_set_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_RECEIPT_ELECTRONICALLY"],Min(ФлПочта,спНастройки["LIBFPTR_PARAM_RECEIPT_ELECTRONICALLY"]));
    If not ФлРозничныйПокупатель Then
      //Заполняем: 1227, 1228
      зК:=спНастройки["Контрагент"];
      стрИНН:=Trim(зК.ИНН);
      стрИНН:=TearStr(стрИНН,"/");
      
      аДрайвер.libfptr_set_param_str(aHandle,1227,зК.ПолнНаименование);
      аДрайвер.libfptr_set_param_str(aHandle,1228,стрИНН);
    EndIf;
    
    аДрайвер.libfptr_open_receipt(aHandle);    
    Try
      ФлОтменитьЧек:=1;
      ТабИСМП:=спНастройки["ТабИСМП"];
    
      ФлГИСМТ:=0;
      //Проверка кодов марок ГИС МТ
      спНастройки["ТабОшибкиПроверкиМарок"]:=0;
      If (аТип0<>10)And(аТип0<>13)And(ФФД12) Then
        ТабОшибкиПроверкиМарок:=Tab.Create("Марка,Причина");
        спНастройки["ТабОшибкиПроверкиМарок"]:=ТабОшибкиПроверкиМарок;
        ФлВозврат:=(аТип0=2)Or(аТип0=5);
        
        ТабИСМП.Select();
        While ТабИСМП.Next() Do
          ФлГИСМТ:=1;
          ТабИСМП.Поле1:=?(ФлВозврат,спПеременные["LIBFPTR_MES_PIECE_RETURN"],спПеременные["LIBFPTR_MES_PIECE_SOLD"]);
          ТабИСМП.Поле2:=0;
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_TYPE"],спПеременные["LIBFPTR_MCT12_AUTO"]);
          аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE"],ТабИСМП.Марка);
          //1 -Штучный товар, подлежащий обязательной маркировке средством идентификации, реализован
          //2 -Мерный товар, подлежащий обязательной маркировке средством идентификации, в стадии реализации
          //3 -Штучный товар, подлежащий обязательной маркировке средством идентификации, возвращен
          //4 -Часть товара, подлежащего обязательной маркировке средством идентификации, возвращена
          //255 -Статус товара, подлежащего обязательной маркировке средством идентификации, не изменился
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_STATUS"],ТабИСМП.Поле1);
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_PROCESSING_MODE"],0);                   //"Режим", всегда равен нулю
          //1023: для марок упаковки при продаже единицы может записываться как "1/x", где x -- количество в упаковке
          //аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_FRACTIONAL_QUANTITY"],"1/2");
          If аДрайвер.libfptr_begin_marking_code_validation(aHandle)<>0 Then
            ТабОшибкиПроверкиМарок.AddLine("Марка,Причина",ТабИСМП.Марка,"beginMarkingCodeValidation. Ошибка "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle));
            Continue;
          EndIf;
          
          ФлРезультат:=0;
          аДата:=Date();
          While 1 Do
            If аДрайвер.libfptr_get_marking_code_validation_status(aHandle)<>0 Then
              ТабОшибкиПроверкиМарок.AddLine("Марка,Причина",ТабИСМП.Марка,"getMarkingCodeValidationStatus. Ошибка "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle));
              Continue 2;
            EndIf;
            If аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_VALIDATION_READY"]) Then
              ФлРезультат:=аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_ONLINE_VALIDATION_RESULT"]);
              Break;
            EndIf;
            If GetPeriodMs(аДата)>7000 Then //7 с. максимум (Атол отменяет по таймаут менее чем через 6 секунд)
              аДрайвер.libfptr_cancel_marking_code_validation(aHandle);
              ТабОшибкиПроверкиМарок.AddLine("Марка,Причина",ТабИСМП.Марка,"getMarkingCodeValidationStatus не возвратил готовность длительное время. Проверка прекращена!");
              Continue 2;
            EndIf;
            Sleep(100);
          EndDo;
          //биты 2106 (LIBFPTR_PARAM_MARKING_CODE_ONLINE_VALIDATION_RESULT):
          //бит 0: был проверен
          //бит 1: проверка успешна
          //бит 2: проверка ОИСМ выполнена
          //бит 3: планируемый статус (реализация или возврат) корректен, иначе -- нет
          //бит 4: 0 -- онлайн режим ККТ, 1 -- автономно
          ТабИСМП.Поле2:=ФлРезультат;
          If ((ФлРезультат And 1<>0)And(ФлРезультат And 2=0))Or(ФлРезультат And 5=0)Or((ФлРезультат And 4<>0)And(ФлРезультат And 8=0)) Then
            Стр:=RepeatStr(" ",1024);
            Размер:=аДрайвер.libfptr_get_param_str(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_ONLINE_VALIDATION_ERROR_DESCRIPTION"],Стр,Length(Стр));
            if Размер>Length(Стр) Then
              Стр:=RepeatStr(" ",Размер);
              аДрайвер.libfptr_get_param_str(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_ONLINE_VALIDATION_ERROR_DESCRIPTION"],Стр,Length(Стр));
            EndIf;
            Стр:=?(Стр<>"",Стр+". ","")+"Код проверки марки: "+ФлРезультат;
            ТабОшибкиПроверкиМарок.AddLine("Марка,Причина",ТабИСМП.Марка,Стр);
          EndIf;
          аДрайвер.libfptr_accept_marking_code(aHandle);
        EndDo;
      EndIf;
          
      //Позиции
      ФлНДС:=спНастройки["ЮрЛицо"].УчитыватьНДС<>0;
      If (аТип0=10)Or(аТип0=13) Then
        См:=спНастройки["Сумма"];
        аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_COMMODITY_NAME"],?(аТип0=10,"Аванс за товары","Закрытие кредита за товары"));
        аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PRICE"],Round(См,2));
        аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_QUANTITY"],1);
        If ФФД11 Then
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MEASUREMENT_UNIT"],спПеременные["LIBFPTR_IU_PIECE"]);
        EndIf;
        If ФлНДС Then
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_TAX_TYPE"],спПеременные["LIBFPTR_TAX_VAT20"]);
        Else
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_TAX_TYPE"],спПеременные["LIBFPTR_TAX_NO"]);
        EndIf;
        //аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_POSITION_SUM"],Round(См,2));
        аДрайвер.libfptr_set_param_int(aHandle,1214,?(аТип0=13,7,4));
        аДрайвер.libfptr_set_param_int(aHandle,1212,10);
        If аДрайвер.libfptr_registration(aHandle)<>0 Then
          Exit "Невозможно зарегистрировать товар. Ошибка "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
        EndIf;
      Else
        aTab:=спНастройки["Таблица"];
        aTab.Select();
        While aTab.Next() Do
          If (not aTab.Номенклатура.флПодлежитПрослеживаемости)or(aTab.Номенклатура.ГИСМТТоварнаяГруппа.Selected()=0)or(ФФД10) Then
            аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_COMMODITY_NAME"],aTab.Номенклатура.Name);
            аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PRICE"],Round(aTab.Сумма/aTab.Количество,2));
            аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_QUANTITY"],aTab.Количество);
            аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_TAX_TYPE"],?(ФлНДС,спНДС.Get(aTab.СтавкаНДС.Index()),спПеременные["LIBFPTR_TAX_NO"]));
            //аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_POSITION_SUM"],aTab.Сумма);
            аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_COMMODITY_PIECE"],?(aTab.Номенклатура.флВесовойТовар,0,1));
            If ФФД11 Then
              аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MEASUREMENT_UNIT"],спПеременные["LIBFPTR_IU_PIECE"]);
            EndIf;
            If (aTab.Номенклатура.флПодлежитПрослеживаемости)And(not ФФД10) Then
              аДрайвер.libfptr_set_param_int(aHandle,1212,2);               //См. выше (1212) предмет расчета: акцизный товар
            Else
              аДрайвер.libfptr_set_param_int(aHandle,1212,1);               //См. выше (1212) предмет расчета: товар
            EndIf;
            аДрайвер.libfptr_set_param_int(aHandle,1214,?(аТип0=12,5,4)); //4 -- полная оплата
            If аДрайвер.libfptr_registration(aHandle)<>0 Then
              Exit "Невозможно зарегистрировать товар. Ошибка "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
            EndIf;
          Else
            //Для марочного ГИС МТ товара необходимо передавать каждую марку
            зЦ:=Round(aTab.Сумма/aTab.Количество,2);
            зК:=aTab.Количество;
            While зК>0 Do
              аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_COMMODITY_NAME"],aTab.Номенклатура.Name);
              аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PRICE"],зЦ);
              аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_QUANTITY"],1);
              аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_TAX_TYPE"],?(ФлНДС,спНДС.Get(aTab.СтавкаНДС.Index()),спПеременные["LIBFPTR_TAX_NO"]));
              //аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_POSITION_SUM"],зЦ);
              аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_COMMODITY_PIECE"],1);
              If ФФД11 Then
                аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MEASUREMENT_UNIT"],спПеременные["LIBFPTR_IU_PIECE"]);
              EndIf;
              //аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_FRACTIONAL_QUANTITY"],"1/2");
              аДрайвер.libfptr_set_param_int(aHandle,1214,?(аТип0=12,5,4));//4 -- полная оплата
              If not ТабИСМП.FindAndGoto(aTab.Номенклатура,,"Номенклатура",1) Then
                Exit "Не все марки заданы для позиции "+aTab.Номенклатура+", внутренняя ошибка!";
              EndIf;
              If ФФД12 Then
                //аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_TYPE"],спПеременные["LIBFPTR_MCT12_AUTO"]);
                аДрайвер.libfptr_set_param_int(aHandle,1212,33); //Марочный товар
                аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE"],ТабИСМП.Марка);
                аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_STATUS"],ТабИСМП.Поле1);
                аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE_ONLINE_VALIDATION_RESULT"],ТабИСМП.Поле2);
                аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_PROCESSING_MODE"],0);
              ElseIf ФФД11 Then
                аДрайвер.libfptr_set_param_int(aHandle,1212,2);//"Подакцизный товар"
                аДрайвер.libfptr_set_param_int(аДрайвер,спПеременные["LIBFPTR_PARAM_MARKING_CODE_TYPE"],спПеременные["LIBFPTR_MCT_OTHER"]);
                Buf:=Buffer.Create(Length(ТабИСМП.Марка));
                Buf.SetString(0,ТабИСМП.Марка);
                аДрайвер.libfptr_set_param_bytearray(aHandle,спПеременные["LIBFPTR_PARAM_MARKING_CODE"],Buf,Length(ТабИСМП.Марка));
              Else
                аДрайвер.libfptr_set_param_int(aHandle,1212,2);//"Подакцизный товар"
                Buf:=Buffer.Create(Length(ТабИСМП.Марка)+2);
                Buf.SetByte(0,$44);//GS1 Data Matrix (DM)
                Buf.SetByte(0,$4D);
                Buf.SetString(2,ТабИСМП.Марка);
                аДрайвер.libfptr_set_param_bytearray(aHandle,1162,Buf,Length(ТабИСМП.Марка));
              EndIf;
              зК:=зК-1;
              ТабИСМП.Remove(ТабИСМП.CurLine);
              If аДрайвер.libfptr_registration(aHandle)<>0 Then
                Exit "Невозможно зарегистрировать товар. Ошибка "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
              EndIf;
            EndDo;
          EndIf;
        EndDo;
      EndIf;
      
      См:=Round(спНастройки["Сумма"],2);
      аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_SUM"],См);
      If аДрайвер.libfptr_receipt_total(aHandle)<0 Then
        Exit "Невозможно зарегистрировать сумму итого. Ошибка "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
      EndIf;
      
      //Оплата
      //LIBFPTR_PT_CASH, LIBFPTR_PT_ELECTRONICALLY, LIBFPTR_PT_PREPAID, LIBFPTR_PT_CREDIT, LIBFPTR_PT_OTHER...
      ЭлектроннаяСумма:=Number(спНастройки["ЭлектроннаяСумма"]);
      ДругаяБезналичнаяСумма:=Number(спНастройки["ДругаяБезналичнаяСумма"]);
      СуммаЗакрытияАванса:=Number(спНастройки["СуммаЗакрытияАванса"]);
      If Round(ЭлектроннаяСумма,2)+Round(ДругаяБезналичнаяСумма,2)>Round(См,2) Then
        Exit "Безналичные суммы оплаты "+ЭлектроннаяСумма+" больше суммы документа "+спНастройки["Сумма"];
      EndIf;
      If (аТип0=10)or(аТип0=12) Then
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_TYPE"],?(аТип0=10,спПеременные["LIBFPTR_PT_PREPAID"],спПеременные["LIBFPTR_PT_CREDIT"]));
        аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_SUM"],Round(См,2));
        аДрайвер.libfptr_payment(aHandle);
      ElseIf (аТип0=11)And(СуммаЗакрытияАванса>0) Then
        If Round(СуммаЗакрытияАванса,2)>Round(См,2) Then
          Exit "Сумма закрытия аванса "+СуммаЗакрытияАванса+" больше суммы документа "+спНастройки["Сумма"];
        EndIf;
        См:=СуммаЗакрытияАванса;//Round(См-СуммаЗакрытияАванса,2);
        //аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_TYPE"],спПеременные["LIBFPTR_PT_CREDIT"]);
        //аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_SUM"],Round(СуммаЗакрытияАванса,2));
        //аДрайвер.libfptr_payment(aHandle);
        If (См>0)And(ЭлектроннаяСумма>0) Then
          ЭлектроннаяСумма:=Min(ЭлектроннаяСумма,См);
          См:=Round(См-ЭлектроннаяСумма,2);
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_TYPE"],спПеременные["LIBFPTR_PT_ELECTRONICALLY"]);
          аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_SUM"],Round(ЭлектроннаяСумма,2));
          аДрайвер.libfptr_payment(aHandle);
        EndIf;
        If (См>0)And(ДругаяБезналичнаяСумма>0) Then
          ДругаяБезналичнаяСумма:=Min(ДругаяБезналичнаяСумма,См);
          См:=Round(См-ДругаяБезналичнаяСумма,2);
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_TYPE"],спПеременные["LIBFPTR_PT_OTHER"]);
          аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_SUM"],Round(ДругаяБезналичнаяСумма,2));
          аДрайвер.libfptr_payment(aHandle);
        EndIf;
        If См>0 Then
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_TYPE"],спПеременные["LIBFPTR_PT_CASH"]);
          аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_SUM"],Round(См,2));
          аДрайвер.libfptr_payment(aHandle);
        EndIf;  
      Else
        If ЭлектроннаяСумма>0 Then
          См:=Round(См-ЭлектроннаяСумма,2);
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_TYPE"],спПеременные["LIBFPTR_PT_ELECTRONICALLY"]);
          аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_SUM"],Round(ЭлектроннаяСумма,2));
          аДрайвер.libfptr_payment(aHandle);
        EndIf;
        If ДругаяБезналичнаяСумма>0 Then
          См:=Round(См-ДругаяБезналичнаяСумма,2);
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_TYPE"],спПеременные["LIBFPTR_PT_OTHER"]);
          аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_SUM"],Round(ДругаяБезналичнаяСумма,2));
          аДрайвер.libfptr_payment(aHandle);
        EndIf;
        If См>0 Then
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_TYPE"],спПеременные["LIBFPTR_PT_CASH"]);
          аДрайвер.libfptr_set_param_double(aHandle,спПеременные["LIBFPTR_PARAM_PAYMENT_SUM"],Round(См,2));
          аДрайвер.libfptr_payment(aHandle);
        EndIf;
      EndIf;
    
      //Закрытие чека
      If IsExecutingInSeparateProcess Then
        аСтарый:=InterProcessServerTimeout(0);
      EndIf;
      Try
        If аДрайвер.libfptr_close_receipt(aHandle)<>0 Then
          Стр:="Ошибка закрытия чека: "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
          аДрайвер.libfptr_cancel_receipt(aHandle);
          ФлОтменитьЧек:=0;
          Exit Стр;
        EndIf;
      Finally
        If IsExecutingInSeparateProcess Then
          InterProcessServerTimeout(аСтарый);
        EndIf;
      EndTry;
      While аДрайвер.libfptr_check_document_closed(aHandle)<>0 Do
        If AskQuestion("Потеря связи с ККТ или ФН при закрытии документа. Описание ошибки: "+_errorDescription(аДрайвер,aHandle)+". Попытайтесь исправить ошибку и нажмите повторить "+
            "или нажмите отмену, если исправить ошибку не удается (в этом случае, чек может быть отменен)!",Q_WARNING+Q_RETRYCANCEL)=R_RETRY Then
          Continue;
        EndIf;
        Break;
      EndDo;
    Finally
      If not аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_DOCUMENT_CLOSED"]) Then
        // Документ не закрылся. Требуется его отменить (если это чек) и сформировать заново
        Стр:="Чек был аннулирован. Ошибка "+аДрайвер.libfptr_error_code(aHandle)+": "+_errorDescription(аДрайвер,aHandle);
        аДрайвер.libfptr_cancel_receipt(aHandle);
        ФлОтменитьЧек:=0;
        If IsEmpty(Result) Then
          Exit Стр;
        Else
          Exit;
        EndIf;
      Else
        ФлОтменитьЧек:=0;
      EndIf;
      If not аДрайвер.libfptr_get_param_bool(aHandle,спПеременные["LIBFPTR_PARAM_DOCUMENT_PRINTED"]) Then
        While аДрайвер.libfptr_continue_print(aHandle)<>0 Do
          If AskQuestion("Невозможно напечатать чек. Ошибка: "+_errorDescription(аДрайвер,aHandle)+"! Не продолжать печать (нет) или повторно попытаться напечатать (да)?",Q_QUESTION+Q_YESNO)=R_YES Then
            Continue;
          EndIf;
          Break;
        EndDo;
      EndIf;
    EndTry;
    аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_FN_DATA_TYPE"],спПеременные["LIBFPTR_FNDT_LAST_DOCUMENT"]);
    аДрайвер.libfptr_fn_query_data(aHandle);
    спНастройки["НомерДокумента"]:=аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DOCUMENT_NUMBER"]);
    
    Try
      ЕГАИССылка:=спНастройки["ЕГАИССылка"];
      ЕГАИСПодпись:=спНастройки["ЕГАИСПодпись"];
      If Trim(ЕГАИССылка)<>"" Then
        //ЕГАИССылка -- URL типа "https://check.egais.ru?id=cf1b1096-3cbc-11e7-b3c1-9b018b2ba3f7", если не пустая, будет выведено дополнение к чеку.
        //ЕГАИСПодпись -- строка типа "79DED4A448069B0BFF602FF646F4E9B24D253D311679EA15307AEF38AEEE7933C9175DE5814C3DCF89BF63853CB75003D9FD979F3BEBBC93AFADF1D9A429623F"
        
        стрДок:=спНастройки["НомерДокумента"];
        НомерСмены:=спНастройки["НомерСмены"];
        If IsEmpty(НомерСмены) Then
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_DATA_TYPE"],спПеременные["LIBFPTR_DT_SHIFT_STATE"]);
          аДрайвер.libfptr_query_data(aHandle);
          НомерСмены:=аДрайвер.libfptr_get_param_int(aHandle,спПеременные["LIBFPTR_PARAM_SHIFT_NUMBER"]);
        EndIf;
  
        аДрайвер.libfptr_begin_nonfiscal_document(aHandle);
      
        зЮЛ:=спНастройки["ЮрЛицо"];
        стрКПП:=Trim(зЮЛ.ИНН);
        стрИНН:=TearStr(стрКПП,"/");
        
        аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_TEXT"],"ИНН: "+стрИНН+?(стрКПП<>""," КПП: "+стрКПП));
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_ALIGNMENT"],спПеременные["LIBFPTR_ALIGNMENT_CENTER"]);
        аДрайвер.libfptr_print_text(aHandle);
        
        //аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_TEXT"],"КАССА: 1               СМЕНА: "+НомерСмены);
        аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_TEXT"],"СМЕНА: "+НомерСмены);
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_ALIGNMENT"],спПеременные["LIBFPTR_ALIGNMENT_CENTER"]);
        аДрайвер.libfptr_print_text(aHandle);
      
        аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_TEXT"],"ЧЕК: "+стрДок+" ДАТА: "+FormatDate(Date(),"dd.mm.YYYY hh:tt"));
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_ALIGNMENT"],спПеременные["LIBFPTR_ALIGNMENT_CENTER"]);
        аДрайвер.libfptr_print_text(aHandle);
      
  
        аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_BARCODE"],ЕГАИССылка);
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_BARCODE_TYPE"],спПеременные["LIBFPTR_BT_QR"]);
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_ALIGNMENT"],спПеременные["LIBFPTR_ALIGNMENT_CENTER"]);
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_SCALE"],5);
        аДрайвер.libfptr_print_barcode(aHandle);
      
        аДрайвер.libfptr_print_text(aHandle);
  
        аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_TEXT"],ЕГАИССылка);
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_ALIGNMENT"],спПеременные["LIBFPTR_ALIGNMENT_CENTER"]);
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_TEXT_WRAP"],спПеременные["LIBFPTR_TW_CHARS"]);
        аДрайвер.libfptr_print_text(aHandle);
      
        аДрайвер.libfptr_print_text(aHandle);
      
        ЕГАИСПодпись:=Trim(ЕГАИСПодпись);
        Стр:="";
        While ЕГАИСПодпись<>"" Do
          Стр:=Стр+?(Стр="",""," ")+Left(ЕГАИСПодпись,2);
          ЕГАИСПодпись:=Mid(ЕГАИСПодпись,3);
        EndDo;
  
        аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_TEXT"],Стр);
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_ALIGNMENT"],спПеременные["LIBFPTR_ALIGNMENT_CENTER"]);
        аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_TEXT_WRAP"],спПеременные["LIBFPTR_TW_WORDS"]);
        аДрайвер.libfptr_print_text(aHandle);
              
        аДрайвер.libfptr_end_nonfiscal_document(aHandle);
      EndIf;
      
      //Печать дополнительной информации (банковская квитанция и т.п.)
      ДополнительнаяИнформация:=спНастройки["ДополнительнаяИнформация"];
      If Trim(ДополнительнаяИнформация)<>"" Then
        аДрайвер.libfptr_begin_nonfiscal_document(aHandle);
        While ДополнительнаяИнформация<>"" Do
          Стр:=TearStr(ДополнительнаяИнформация,_NEWLINE);
          аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_TEXT"],Стр);
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_ALIGNMENT"],спПеременные["LIBFPTR_ALIGNMENT_LEFT"]);
          аДрайвер.libfptr_print_text(aHandle);
        EndDo;
        аДрайвер.libfptr_end_nonfiscal_document(aHandle);
      EndIf;
    Except
      Message("Ошибка печати нефискальной части чека: "+PopError(),"!");
    EndTry;
  Except
    If ФлОтменитьЧек Then
      Try
        аДрайвер.libfptr_cancel_receipt(aHandle);
      Except
      EndTry;
    EndIf;
    Exit PopError()+_NEWLINE+"Неудачная попытка выгрузки чека!";
  EndTry;
EndFunction

//ДополнительнаяИнформация -- строка для печати
Function PrintText(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    aHandle:=спНастройки["АТОЛУказатель"];
    спПеременные:=спНастройки["АТОЛПеременные"];
  
    //Печать дополнительной информации (банковская квитанция и т.п.)
    ДополнительнаяИнформация:=спНастройки["ДополнительнаяИнформация"];
    If Trim(ДополнительнаяИнформация)<>"" Then
      аДрайвер.libfptr_begin_nonfiscal_document(aHandle);
      While ДополнительнаяИнформация<>"" Do
        Стр:=TearStr(ДополнительнаяИнформация,_NEWLINE);
          аДрайвер.libfptr_set_param_str(aHandle,спПеременные["LIBFPTR_PARAM_TEXT"],Стр);
          аДрайвер.libfptr_set_param_int(aHandle,спПеременные["LIBFPTR_PARAM_ALIGNMENT"],спПеременные["LIBFPTR_ALIGNMENT_LEFT"]);
          аДрайвер.libfptr_print_text(aHandle);
      EndDo;
      аДрайвер.libfptr_end_nonfiscal_document(aHandle);
    EndIf;
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка печати нефискальной информации!";
  EndTry;
EndFunction

//спНастройки["ВызываемаяФункция"] -- функция для вызова
Function SeparateProcessServer(ByRef спНастройки)
  спНастройки["Драйвер"]:=глККМОбъектДрайвера;
  спНастройки["АТОЛПеременные"]:=глККМОбъектДрайвера2;
  Try
    Result:=ExecuteFunction(спНастройки["ВызываемаяФункция"],1,спНастройки);
  Finally
    If глККМОбъектДрайвера=0 Then
      глККМОбъектДрайвера:=спНастройки["Драйвер"];
    EndIf;
    If глККМОбъектДрайвера2=0 Then
      глККМОбъектДрайвера2:=спНастройки["АТОЛПеременные"];
    EndIf;
    спНастройки["Драйвер"]:=0;
    спНастройки["АТОЛПеременные"]:=0;
  EndTry;
EndFunction
