//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

//Функции:
//DriverInit, DriverDeinit, DriverConnect, DriverDisconnect, UpdateDisplayInfo, UpdateDisplayInfoPayment

Function ВывестиСтроку(спНастройки,Стр,Стр2="",Стр3="");
  аДрайвер:=спНастройки["Драйвер"];
  If спНастройки["ВысотаДисплея"]=1 Then
    Стр:=Str(Стр)+?(Стр2<>"","   "+Стр2)+?(Стр3<>"","   "+Стр3);
    Стр2:="";
    Стр3:="";
  ElseIf спНастройки["ВысотаДисплея"]=2 Then
    Стр:=Str(Стр)+?(Стр3<>"","   "+Стр3);
    Стр3:="";
  EndIf;
  //Строка,Номер Строки,Задержка обновления,Количество кругов,Задержка вывода,Расстояние между строками
  //Задержка вывода: 20
  //Задержка обновления: 20 
  //Номер Строки: строка по вертикали
  аДрайвер.StopRunString(1);
  If спНастройки["ВысотаДисплея"]>1 Then
    аДрайвер.StopRunString(2);
  EndIf;
  If спНастройки["ВысотаДисплея"]>2 Then
    аДрайвер.StopRunString(3);
  EndIf;
  аДрайвер.ClearDispl();
  
  If Length(Стр)>спНастройки["ШиринаДисплея"] Then
    аДрайвер.StartRunString(Стр,1,20,-1,20,5);
  Else
    аДрайвер.EnterStr(0,Стр);
  EndIf;
  If спНастройки["ВысотаДисплея"]>1 Then
    If Length(Стр2)>спНастройки["ШиринаДисплея"] Then
      аДрайвер.StartRunString(Стр2,2,20,-1,20,5);
    Else
      аДрайвер.EnterStr(спНастройки["ШиринаДисплея"],Стр2);
    EndIf;
  EndIf;
  If спНастройки["ВысотаДисплея"]>2 Then
    If Length(Стр3)>спНастройки["ШиринаДисплея"] Then
      аДрайвер.StartRunString(Стр3,3,20,-1,20,5);
    Else
      аДрайвер.EnterStr(спНастройки["ШиринаДисплея"]*2,Стр3);
    EndIf;
  EndIf;
EndFunction

Function DriverInit(спНастройки)
  Try
    аДрайвер:=CreateOLE("DrvDspl.v1_2");
    Стр:=Trim(аДрайвер.Version);//1.40.1.211
    If Стр="" Then
      Exit "Драйвер не отдает номер версии, неверный драйвер?";
    EndIf;
    спНастройки["Драйвер"]:=аДрайвер;
  Except
    Exit PopError()+_NEWLINE+"(1) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDeinit(спНастройки)
  спНастройки["Драйвер"]:=0;
EndFunction


Function DriverConnect(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    СтрДоп:=спНастройки["ДопУстановки"];
    Ини:=Ini.Create();
    Ини.AddFromString(СтрДоп);
    
    спНастройки["CurrentDeviceIndex"]:=Number(Ини.GetData("CurrentDeviceIndex","-1"));
    If спНастройки["CurrentDeviceIndex"]>=0 Then
      аДрайвер.CurrentDeviceIndex:=спНастройки["CurrentDeviceIndex"];
    EndIf;
    
    Стр:=Ини.GetData("WorkArea","20:2");
    Стр2:=Number(TearStr(Стр,":"));
    If Стр2<10 Then
      Стр2:=20;
    EndIf;
    спНастройки["ШиринаДисплея"]:=Стр2;
    Стр2:=Number(Стр);
    If Стр2<1 Then
      Стр2:=2;
    EndIf;
    спНастройки["ВысотаДисплея"]:=Стр2;
    
    Стр:=Ини.GetData("Connection","");
    If Стр<>"" Then
      аДрайвер.PortNumber:=Number(TearStr(Стр,","));
      аДрайвер.BaudRate:=Number(TearStr(Стр,","));
      Стр2:=Lowercase(TearStr(Стр,","));
      If Стр2="N" Then
        аДрайвер.Parity:=1;
      ElseIf Стр2="O" Then
        аДрайвер.Parity:=2;
      ElseIf Стр2="E" Then
        аДрайвер.Parity:=3;
      ElseIf Стр2="M" Then
        аДрайвер.Parity:=4;
      ElseIf Стр2="S" Then
        аДрайвер.Parity:=5;
      EndIf;
      Стр2:=Number(TearStr(Стр,","));
      If Стр2=5 Then
        аДрайвер.DataBits:=1;
      ElseIf Стр2=6 Then
        аДрайвер.DataBits:=2;
      ElseIf Стр2=7 Then
        аДрайвер.DataBits:=3;
      Else
        аДрайвер.DataBits:=4;
      EndIf;
      Стр2:=Number(TearStr(Стр,","));
      If Стр2=2 Then
        аДрайвер.StopBits:=3;
      ElseIf Стр2=1.5 Then
        аДрайвер.StopBits:=2;
      Else
        аДрайвер.StopBits:=1;
      EndIf;
    EndIf;
    
    Стр:=Ини.GetData("DisplType","");
    If Стр<>"" Then
      аДрайвер.DisplType:=Number(Стр);
    EndIf;
        
    Стр:=Ини.GetData("ConvertSymbols","");
    If Стр<>"" Then
      аДрайвер.ConvertSymbols:=Number(Стр);
    EndIf;
        
    Стр:=Ини.GetData("XSize","");
    If Стр<>"" Then
      аДрайвер.XSize:=Number(Стр);
    EndIf;
        
    Стр:=Ини.GetData("YSize","");
    If Стр<>"" Then
      аДрайвер.YSize:=Number(Стр);
    EndIf;
        
    Стр:=Ини.GetData("BlincInterval","");
    If Стр<>"" Then
      аДрайвер.BlincInterval:=Number(Стр);
    EndIf;
        
    Стр:=Ини.GetData("Brightness","");
    If Стр<>"" Then
      аДрайвер.Brightness:=Number(Стр);
    EndIf;
    
    аДрайвер.Enable:=1;
    аДрайвер.InitialDispl();
    аДрайвер.ClearAllAnnun();
    аДрайвер.StopRunString(1);
    If спНастройки["ВысотаДисплея"]>1 Then
      аДрайвер.StopRunString(2);
    EndIf;
    If спНастройки["ВысотаДисплея"]>2 Then
      аДрайвер.StopRunString(3);
    EndIf;
    аДрайвер.ClearDispl();
    ВывестиСтроку(спНастройки,"*** Добро пожаловать! ***");
    
    спНастройки["Соединено"]:=1;
  Except
    Exit PopError()+_NEWLINE+"(2) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDisconnect(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    аДрайвер.StopRunString(1);
    If спНастройки["ВысотаДисплея"]>1 Then
      аДрайвер.StopRunString(2);
    EndIf;
    If спНастройки["ВысотаДисплея"]>2 Then
      аДрайвер.StopRunString(3);
    EndIf;
    аДрайвер.ClearDispl();
    аДрайвер.Enable:=0;
    спНастройки["Соединено"]:=0;
  Except
    Exit PopError()+_NEWLINE+"(3) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

//ТабПозиции - Номенклатура,Количество,Цена,СуммаБезСкидки,Скидка,Сумма
Function UpdateDisplayInfo(спНастройки)
  Try
    If спНастройки["Соединено"]<>1 Then
      Exit;
    EndIf;
    аДрайвер:=спНастройки["Драйвер"];
    ТабПозиции:=спНастройки["ТабПозиции"];
    If спНастройки["CurrentDeviceIndex"]>=0 Then
      аДрайвер.CurrentDeviceIndex:=спНастройки["CurrentDeviceIndex"];
    EndIf;
    
    If ТабПозиции.Size()=0 Then
      ВывестиСтроку(спНастройки,"*** Добро пожаловать! ***");
    Else
      If ТабПозиции.CurLine=0 Then
        ТабПозиции.CurLine:=ТабПозиции.Size();
      EndIf;
      Стр:=ТабПозиции.Номенклатура;
      Стр2:=глФРМ(ТабПозиции.Сумма)+" руб."+?(ТабПозиции.Количество<>1," за "+Round(ТабПозиции.Количество,3)+" ("+Lowercase(ТабПозиции.Номенклатура.базЕдиница)+")");
      Стр3:="";
      If спНастройки["ВысотаДисплея"]>2 Then
        Стр3:="Итого "+глФРМ(ТабПозиции.SUM("Сумма"))+" руб.";
      EndIf;
      ВывестиСтроку(спНастройки,Стр,Стр2,Стр3);
    EndIf;
  Except
    Exit "Ошибка команды: "+PopError();
  EndTry;
EndFunction

//ТабПозиции - Номенклатура,Количество,Цена,СуммаБезСкидки,Скидка,Сумма
//Также доступны: СуммаЧека,СуммаНаличные,СуммаКарта,СуммаСертификатов,СуммаСкидок,СуммаСкидочныхКарт,Итого,ИтогоСкидки,ИтогоОплата,ИтогоСдача
//                Магазин,Покупатель
//ОперацияОплаты: 0 -- продажа, 1 -- возврат, 2 -- аванс, 3 -- кредит, 4 -- закрытие аванса, 5 -- закрытие кредита
//ЭтапОперации: -1 -- ожидание оплаты, 0 -- попытка оплаты, 1 -- отмена оплаты (ошибка),  2 -- удачная оплата
Function UpdateDisplayInfoPayment(спНастройки)
  Try
    If спНастройки["Соединено"]<>1 Then
      Exit;
    EndIf;
    аДрайвер:=спНастройки["Драйвер"];
    If спНастройки["CurrentDeviceIndex"]>=0 Then
      аДрайвер.CurrentDeviceIndex:=спНастройки["CurrentDeviceIndex"];
    EndIf;
    
    ЭтапОперации:=Number(спНастройки["ЭтапОперации"]);
    ОперацияОплаты:=Number(спНастройки["ОперацияОплаты"]);
    If ЭтапОперации=-1 Then
      Стр:=?(ОперацияОплаты=1,"ВОЗВРАТ! ")+"Итого "+глФРМ(спНастройки["СуммаЧека"])+" руб.";
      Стр2:=?(спНастройки["СуммаСкидок"]>0,"Скидка "+глФРМ(спНастройки["СуммаСкидок"])+" руб.","");
      Стр3:="";
      If _And(спНастройки["ВысотаДисплея"]>2,спНастройки["СуммаСкидочныхКарт"]>0) Then
        Стр3:="Ск. карты: "+глФРМ(спНастройки["СуммаСкидочныхКарт"])+" руб.";
      EndIf;
      ВывестиСтроку(спНастройки,Стр,Стр2,Стр3);
    ElseIf ЭтапОперации=0 Then
      Стр:=?(ОперацияОплаты=1,"ВОЗВРАТ! ")+"Итого "+глФРМ(спНастройки["СуммаЧека"])+" руб.";
      Стр2:="Нал: "+глФРМ(спНастройки["СуммаНаличные"],"")+" р., безнал: "+глФРМ(спНастройки["СуммаКарта"],"")+" р.";
      ВывестиСтроку(спНастройки,Стр,Стр2);
    ElseIf ЭтапОперации=1 Then
      Стр:="Ошибка оплаты!";
      ВывестиСтроку(спНастройки,Стр);
    ElseIf ЭтапОперации=2 Then
      Стр:="Спасибо за покупку!";
      Стр2:="";
      If спНастройки["ИтогоСдача"]>0 Then
        Стр2:="Сдача "+глФРМ(спНастройки["ИтогоСдача"])+" руб.";
      EndIf;
      ВывестиСтроку(спНастройки,Стр,Стр2);
    Else
      ВывестиСтроку(спНастройки,"*** Добро пожаловать! ***");
    EndIf;
  Except
    Exit "Ошибка команды: "+PopError();
  EndTry;
EndFunction

