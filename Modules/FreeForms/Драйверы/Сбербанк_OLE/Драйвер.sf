//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

//Функции:
//DriverInit, DriverDeinit, DriverConnect, DriverDisconnect, RegisterTransaction, OpenShift, CloseShift, ReportX, ReportZ

Function DriverInit(спНастройки)
  Try
    аДрайвер:=CreateOLE("SBRFSRV.Server");
    спНастройки["Драйвер"]:=аДрайвер;
  Except
    Exit PopError()+_NEWLINE+"(1) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDeinit(спНастройки)
  спНастройки["Драйвер"]:=0;;
  спНастройки["Соединено"]:=0;
EndFunction

Function DriverConnect(спНастройки)
  Try
    СтрДоп:=спНастройки["ДопУстановки"];
    Ини:=Ini.Create();
    Ини.AddFromString(СтрДоп);
    
    спНастройки["Department"]:=Number(Ини.GetData("Department","-1"));
    спНастройки["МаксимальныйРазмерОтчетаДляПечати"]:=Number(Ини.GetData("МаксимальныйРазмерОтчетаДляПечати","4100"));
    спНастройки["КодВалюты"]:=Number(Ини.GetData("КодВалюты","0"));
    спНастройки["Соединено"]:=1;
  Except
    Exit PopError()+_NEWLINE+"(2) Драйвер не установлен или в нерабочем состоянии!";
  EndTry;
EndFunction

Function DriverDisconnect(спНастройки)
  спНастройки["Соединено"]:=0;
EndFunction

Function OpenShift(спНастройки)
  //Смена открывается автоматически, выделенной команды нет
EndFunction

Function CloseShift(спНастройки)
  Try
    спНастройки["ДополнительнаяИнформация"]:="";
    аДрайвер:=спНастройки["Драйвер"];
    аДрайвер.Clear();
    If спНастройки["Department"]>=0 Then
      аДрайвер.SParam("Department",спНастройки["Department"]);
    EndIf;
    аРезультат:=аДрайвер.NFun(6000);
    ReturnToForeground();
    If аРезультат<>0 Then
      Exit "Ошибка "+аРезультат;
    EndIf;
    
    СтрОтчет:=аДрайвер.GParamString("Cheque");
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      StringToFile(СтрОтчет,Путь+"ОтчетБанка_"+спНастройки["Оборудование"].Code+".txt",1200,0);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
    аДрайвер.Clear();
  Except
    Exit PopError()+_NEWLINE+"Ошибка при выгрузке данных в терминал!";
  EndTry;
EndFunction

Function ReportX(спНастройки)
  Try
    спНастройки["ДополнительнаяИнформация"]:="";
    аДрайвер:=спНастройки["Драйвер"];
    аДрайвер.Clear();
    If спНастройки["Department"]>=0 Then
      аДрайвер.SParam("Department",спНастройки["Department"]);
    EndIf;
    аРезультат:=аДрайвер.NFun(6002);
    ReturnToForeground();
    If аРезультат<>0 Then
      Exit "Ошибка "+аРезультат;
    EndIf;
    
    СтрОтчет:=аДрайвер.GParamString("Cheque");
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      StringToFile(СтрОтчет,Путь+"ОтчетБанкаПромежуточный_"+спНастройки["Оборудование"].Code+".txt",1200,0);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;      
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
    аДрайвер.Clear();
  Except
    Exit PopError()+_NEWLINE+"Неудачная попытка печати X-отчета!";
  EndTry;
EndFunction

Function ReportZ(спНастройки)
  Try
    спНастройки["ДополнительнаяИнформация"]:="";
    Путь:="Temp\Розница\";
    If File.CreateDirectory(Путь) Then
      СтрОтчет:=FileToString(Путь+"ОтчетБанка_"+спНастройки["Оборудование"].Code+".txt",1200);
    EndIf;
    If Length(СтрОтчет)<спНастройки["МаксимальныйРазмерОтчетаДляПечати"] Then //Защита от перерасхода кассовой ленты
      спНастройки["ДополнительнаяИнформация"]:=СтрОтчет;
    Else
      спНастройки["ДополнительнаяИнформацияНаЭкран"]:=СтрОтчет;
    EndIf;
  Except
  EndTry;
EndFunction


//"Сумма" -- Сумма
//"Магазин" -- Текущий магазин
//"ТабПозиции" -- Таблица с позициями
//"Покупатель" -- Элемент покупателя (может быть пустым)
//"ТипОперации" -- 0 -- Продажа
//                 1 -- Возврат продажи
//                 100 -- Подтверждение предыдущей операции, если требуется (вызывается после закрытия чека)
//                 101 -- Отказ от предыдущей операции
//"ИнформацияПоТранзакции" -- Исходящая переменная для хранения информации, которая может быть использована для "отката транзакции". При первом вызове равна нулю.
Function RegisterTransaction(спНастройки)
  Try
    аДрайвер:=спНастройки["Драйвер"];
    См:=Round(спНастройки["Сумма"]*100);
    аТипОперации:=Number(спНастройки["ТипОперации"]);
    спНастройки["ДополнительнаяИнформация"]:="";
    
    //Доп. переменные (не используются здесь):
    //CashierFIO -- Ф.и.о. кассира
    //GoodsPrice -- цена товара
    //GoodsVolume -- количество товара
    //GoodsCode -- код товара
    //GoodsName -- имя товара в 866
    //GoodsName1251 -- имя товара в 1251
    //PinRequired -- необходимо использовать PIN
    //dirgate -- Путь к библиотеке (d:\Soft\PC\PILOT_NT\)
    //Currency -- 643
    
    If аТипОперации=0 Then
      аДрайвер.Clear();
      аДрайвер.SParam("Amount",См);
      If спНастройки["КодВалюты"]>=0 Then
        аДрайвер.SParam("Currency",спНастройки["КодВалюты"]);
      EndIf;
      If спНастройки["Department"]>=0 Then
        аДрайвер.SParam("Department",спНастройки["Department"]);
      EndIf;
      //аДрайвер.SParam("AuthCode","");
      аДрайвер.SParam("CashierFIO",Trim(спНастройки["Кассир"]));//TranslateTo(спНастройки["Кассир"],866)
      аРезультат:=аДрайвер.NFun(4000);
      ReturnToForeground();
      If аРезультат<>0 Then
        Exit "Ошибка "+аРезультат;
      EndIf;
    
      спИнформация:=List.Create();
      спИнформация["ТипОперации"]:=аТипОперации;
      спИнформация["НезакрытаяТранзакция"]:=0;
      спИнформация["RRN"]:=аДрайвер.GParamString("RRN");
      спНастройки["ИнформацияПоТранзакции"]:=спИнформация;
      спНастройки["ДополнительнаяИнформация"]:=Str(аДрайвер.GParamString("Cheque"));
    ElseIf аТипОперации=1 Then
      аДрайвер.Clear();
      аДрайвер.SParam("Amount",См);
      If спНастройки["КодВалюты"]>=0 Then
        аДрайвер.SParam("Currency",спНастройки["КодВалюты"]);
      EndIf;
      If спНастройки["Department"]>=0 Then
        аДрайвер.SParam("Department",спНастройки["Department"]);
      EndIf;
      //аДрайвер.SParam("AuthCode","");
      аДрайвер.SParam("CashierFIO",Trim(спНастройки["Кассир"]));
      аРезультат:=аДрайвер.NFun(4002);
      If аРезультат<>0 Then
        Exit "Ошибка "+аРезультат;
      EndIf;
      
      спИнформация:=List.Create();
      спИнформация["ТипОперации"]:=аТипОперации;
      спИнформация["НезакрытаяТранзакция"]:=0;
      спИнформация["RRN"]:=аДрайвер.GParamString("RRN");
      спНастройки["ИнформацияПоТранзакции"]:=спИнформация;
      спНастройки["ДополнительнаяИнформация"]:=Str(аДрайвер.GParamString("Cheque"));
    ElseIf аТипОперации=100 Then
      //Ничего не требуется
    ElseIf аТипОперации=101 Then
      //Отменить
      спИнформация:=спНастройки["ИнформацияПоТранзакции"];
      If спНастройки["Department"]>=0 Then
        аДрайвер.SParam("Department",спНастройки["Department"]);
      EndIf;
      //Открыть транзакцию для возможности отмены, а также сама отмена
      If аДрайвер.NFun(6003)=0 Then
        If аДрайвер.NFun(6004)=0 Then
          //ошибка здесь не важна, так как транзакция отменится сама при изменении смены
        EndIf;
        аДрайвер.Clear();
        Exit;
      EndIf;
      If TypeStr(спИнформация)<>"LIST" Then
        Raise "Неверный тип дополнительной информации!";
      EndIf;
      RRN:=спИнформация["RRN"];
      аТипОперации2:=спИнформация["ТипОперации"];
      
      аДрайвер.Clear();
      аДрайвер.SParam("Amount",См);
      If спНастройки["КодВалюты"]>=0 Then
        аДрайвер.SParam("Currency",спНастройки["КодВалюты"]);
      EndIf;
      //аДрайвер.SParam("AuthCode","");
      аДрайвер.SParam("CashierFIO",спНастройки["Кассир"]);
      аДрайвер.SParam("Track2","QSELECT");
      аДрайвер.SParam("RRN",RRN);
      If спНастройки["Department"]>=0 Then
        аДрайвер.SParam("Department",спНастройки["Department"]);
      EndIf;
      
      аРезультат:=аДрайвер.NFun(?(аТипОперации2=0,4002,4000));
      спНастройки["ДополнительнаяИнформация"]:=Str(аДрайвер.GParamString("Cheque"));
      аДрайвер.Clear();
      If аРезультат<>0 Then
        Exit "Ошибка "+аРезультат;
      EndIf;
    EndIf;
  Except
    Exit PopError()+_NEWLINE+"Ошибка при выгрузке данных в терминал!";
  EndTry;
EndFunction
