//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function ОбновитьВидимость()
  оПериод:=Form.оПериод.Value;
  Form.тТ2.isInvisible:=1-оПериод;
  Form.оДатаКон.isInvisible:=1-оПериод;
  If оПериод=0 Then
    Form.тТ1.Caption:="На дату:";
  Else
    Form.тТ1.Caption:="На период:";
  EndIf;
EndFunction

Function OnExecute()

  оДатаКон:=BegOfDay(Form.оДатаКон.Value);
  оДата:=BegOfDay(Form.оДата.Value);
  If Form.оПериод.Value=0 Then
    оДатаКон:=оДата;
  Else
    If not глПроверитьДатуВОтчетах(Param,оДата,оДатаКон,-1) Then
      Exit;
    EndIf;  
  EndIf;
  оТЦ:=Form.оТЦ.Value;
  оН:=Form.оН.Value.Get(1);
  оННЕ:=Form.оН.Value.Get(2);
  If оН.Size()=0 Then
    Box("Необходимо выбрать номенклатуру!",Q_STOP);
    Exit;
  EndIf;
  
  ТЗ:="зН:=Ref.тмцНоменклатура;
  |зСтатус:=Ref.тмцНоменклатура.@STATUS;
  |зПапка:=Ref.тмцНоменклатура.@ISFOLDER;
  |Condition(зПапка=0);"+
  ?(Form.оТакжеУдал.Value=0,"Condition(зСтатус=0);","")+
  "Condition(зН IN оН);
  |Condition(зН NOT IN оННЕ);
  |Group зН"+?(Form.оГруппы.Value=1," with folders","")+";";
  
  З:=Query.Create();
  З.Execute(ТЗ);
  
  пЗаголовок:="Формирование расчетных цен"+?(Form.оПериод.Value=0," на дату "+оДата," за период с "+оДата+" по "+оДатаКон);
  пСвойства:=глСвойстваПечатиПростые();
  if Form.оСимул.Value Then
    пСвойства:=пСвойства+" Режим симуляции!";
  EndIf;
  
  ФлЦен:=0;
  Т:=Table.Create();  
  Т.CopyByX("v1",1);
  Т.CopyByX("v2|h1",1);
  For а:=1 to оТЦ.Size() Do
    If оТЦ.Check(а) Then
      пЦена:=оТЦ.Get(а);
      ФлЦен:=ФлЦен+1;
      If пЦена.ТипЦенРасчетныхЦен.Selected()<>0 Then
        пЦена:=""+пЦена+" (расчет от "+пЦена.ТипЦенРасчетныхЦен+")";
      EndIf;
      Т.CopyByX("v2|h2");
    EndIf;
  EndDo;
  Т.CopyByX("v2|h3");
  Т.Options.FixedLine:=Т.Height();
  
  спТвердыеЦены:=List.Create();
  
  спБуфер:=List.Create();
  ФлНом:=100;
  If З.ResultTable.Size()<20 Then
    ФлНом:=0;
    While З.Next(1) Do
      If not З.зН.IsFolder() Then
        ФлНом:=ФлНом+1;
      EndIf;
    EndDo;
    З.First();
  EndIf;
  If (ФлНом<4)and(ФлЦен<3) Then
    спБуфер:=0;
  EndIf;
  ФлИзмененных:=0;
  пКолВо:=0;
  BeginTransaction();
  Try
    While З.Next(1) Do
      пН:=З.зН;
      пКод:=пН.Code;
      пНаименование:=пН.Name;
      Ст:="3";
      пЦ:="";
      If not пН.IsFolder() Then
        пЕд:=Str(пН.базЕдиница)+" "+Str(пН.оснЕдиница)+" ("+пН.оснКоэффициент+")";
        пЦ:=глПолучитьОсновнуюЦену(пН,глПользователь.Магазин.Склад,оДатаКон,1);
        Ст:="4";
        пКолВо:=пКолВо+1;
      EndIf;
      Form.StatusText(Str(Round(З.ResultTable.CurLine/З.ResultTable.Size()*100,2))+"%");
      Form.UpdateProgress(З.ResultTable.CurLine,З.ResultTable.Size());
      
      _пЦ:=пЦ;
      пЦ0:=глФРМ(пЦ,"");
      Т.CopyByX("v"+Ст+"|h1",1);
      For аа:=1 to оТЦ.Size() Do
        If оТЦ.Check(аа) Then
          пЦ:=_пЦ;
          ТЦ:=оТЦ.Get(аа);
          If ТЦ.ТипЦенРасчетныхЦен.Selected()<>0 Then
            пЦ:=глНайтиЦенуТипаЦен(пН,ТЦ.ТипЦенРасчетныхЦен,оДатаКон);
          EndIf;
          
          If пН.IsFolder() Then
            Т.CopyByX("v"+Ст+"|h2");
            Continue;
          EndIf;
          
          //Подготовить элемент
          Ц:=Ref.цЦены;
          If Ц.Find("@Parent,ТипЦен",пН,ТЦ) Then
            If Ц.Status()=1 Then
              Ц.Mark(0,,пН);
            Else
              пН.SetTrigger(1);
            EndIf;
          Else
            Ц.New();
            Ц.Parent(пН);
            Ц.ТипЦен:=ТЦ;
            If not глЗаписать(Ц) Then
              Exit;
            EndIf;
          EndIf;
          ФлИзмененных:=ФлИзмененных+1;
          
          //Найти новую цену
          пЦ0:=Ц.GetValue("Цена",оДата);
          пПр:=0;пР:=0;
          пЦ1:=глРассчитатьЦену(пН,ТЦ,пЦ,пПр,пР,,спБуфер);
          ФлРуч:=?(пЦ1=-1,1,0);
          пЦ1:=?(пЦ1=-1,пЦ0,пЦ1);
          пДельта:=пЦ1-пЦ0;
          
          //Изменение справочника
          If (not Form.оСимул.Value)And(not ФлРуч) Then
            Try
              If Form.оПериод.Value=1 Then
                Ц.SetValue("Цена",пЦ1,оДата,оДатаКон);
              ElseIf Ц.GetValue("Цена",оДата)<>пЦ1 Then
                Ц.SetValue("Цена",пЦ1,оДата);
              EndIf;
            Except  
              Box("Не удалось установить цену для номенклатуры "+пН+", пожалуйста, запустите обработку снова!",Q_STOP);
              Message("Не удалось установить цену для номенклатуры %LINK%, пожалуйста, запустите обработку снова!","!",пН);
            EndTry;
          EndIf;
          
          пЦ0:=глФРМ(пЦ0,"");
          пЦ1:=глФРМ(пЦ1,"");
          пПр:=глФРМ(пПр,"");
          пР:=глФРМ(пР,"");
          пДельта:=глФРМ(пДельта,"");
          Т.CopyByX("v"+?(not ФлРуч,Ст,"6")+"|h2");
        EndIf;
        
        If ФлИзмененных>50 Then
          CommitTransaction();
          ФлИзмененных:=0;
          BeginTransaction();
        EndIf;
      EndDo;
      Т.CopyByX("v"+Ст+"|h3");
    EndDo;
  Finally
    If IsTransactionActive() Then
      CommitTransaction();
    EndIf;
  EndTry;
  
  Т.CopyByX("v5|h1",1);
  For а:=1 to оТЦ.Size() Do
    If оТЦ.Check(а) Then
      Т.CopyByX("v5|h2");
    EndIf;
  EndDo;
  Т.CopyByX("v5|h3");
  
  If not Form.оСимул.Value Then
    глФормированиеОтчетаДобавитьВСобытия("Формирование расчетных цен",оДата,оДатаКон,"оН");
  EndIf;
  If Form.оОтчет.Value Then
    глПечатнаяФормаОтчета(Т,Param,пЗаголовок);
  EndIf;  
EndFunction

