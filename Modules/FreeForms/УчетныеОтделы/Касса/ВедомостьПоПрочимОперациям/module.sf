//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.


Function ОбновитьТексты()
  оВО:=Form.оВО.Value.SelectedLine;
  If (оВО<>2)And(оВО<>4) Then
    глУдалитьИзТаблицыФильтров("оГруппы",List.Create("По банкам","По расчетным счетам"));
  Else
    глЗаполнитьТаблицуФильтров("оГруппы",List.Create("По юридическим лицам!По банкам#БанковскийСчет.Банк#зБн","По банкам!По расчетным счетам#БанковскийСчет#зРс"),1);
  EndIf;  
  If оВО>2 Then
    глУдалитьИзТаблицыФильтров("оГруппы",List.Create("По бух. счетам","По субконто"));
  Else
    глЗаполнитьТаблицуФильтров("оГруппы",List.Create("По юридическим лицам!По бух. счетам#Счет#зСч","По бух. счетам!По субконто#Субконто1#зСб"),1);
  EndIf;  
EndFunction


Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего);
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    
    пКод:="";
    If (ИмяПер<>"зСч")And(ИмяПер<>"Документ") Then
      пКод:=глНомерБезНулей(пЭлР);
    EndIf;  
    пПриход:=глФРМ(З.зПриход);
    пРасход:=глФРМ(З.зРасход);
    Т.CopyByX("v2",1);
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1,3,Ур,УрВсего,2,5,пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего);

    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
EndFunction

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оВО:=глПолучитьУстановку(ТабФорма,"оВО").SelectedLine;
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,0) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    ТЗ0:="зСтатус:=Doc.#.@Status;Condition(зСтатус>1);зДата:=BegOfDay(Doc.#.DocDate);Condition((зДата>=НачДата)And(зДата<=КонДата));
      |зКО:=Doc.#.КодОперации;Condition(зКО=$);зСм:=Doc.#.СуммаВзаиморасчетов;"+_NEWLINE;
    Стр0:="оЮЛ@зЮЛ@ЮрЛицо,оСч@зСч@Счет";
    ТЗ:="";ТЗ2:="";ТЗ3:="";ТЗ4:="";
  
    If оВО=1 Then
      оКО1:=Enum.коПКО.Прочее;
      оКО2:=Enum.коРКО.Прочее;
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,"Doc.ПКО",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ:=Replace(Replace(ТЗ0,"#","ПКО"),"$","оКО1")+ТЗ+"зПриход:=SUM(зСм);";
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ2,ТабФорма,"Doc.РКО",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ2:=Replace(Replace(ТЗ0,"#","РКО"),"$","оКО2")+ТЗ2+"зРасход:=SUM(зСм);";
      
      ТЗ:="("+_NEWLINE+ТЗ+_NEWLINE+
        ") UNION ALL"+_NEWLINE+
        "("+_NEWLINE+ТЗ2+");";
    ElseIf оВО=2 Then
      оКО1:=Enum.коВыпискаБанкаПриход.Прочее;
      оКО2:=Enum.коВыпискаБанкаРасход.Прочее;
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,"Doc.ВыпискаБанкаПриход",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ:=Replace(Replace(ТЗ0,"#","ВыпискаБанкаПриход"),"$","оКО1")+ТЗ+"зПриход:=SUM(зСм);";
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ2,ТабФорма,"Doc.ВыпискаБанкаРасход",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ2:=Replace(Replace(ТЗ0,"#","ВыпискаБанкаРасход"),"$","оКО2")+ТЗ2+"зРасход:=SUM(зСм);";
      
      ТЗ:="("+_NEWLINE+ТЗ+_NEWLINE+
        ") UNION ALL"+_NEWLINE+
        "("+_NEWLINE+ТЗ2+");";
    ElseIf оВО=3 Then
      оКО1:=Enum.коПКО.ОплатаПокупателя;
      оКО2:=Enum.коРКО.ВозвратПокупателю;
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,"Doc.ПКО",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ:=Replace(Replace(ТЗ0,"#","ПКО"),"$","оКО1")+ТЗ+"зПриход:=SUM(зСм);";
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ2,ТабФорма,"Doc.РКО",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ2:=Replace(Replace(ТЗ0,"#","РКО"),"$","оКО2")+ТЗ2+"зРасход:=SUM(зСм);";
      
      ТЗ:="("+_NEWLINE+ТЗ+_NEWLINE+
        ") UNION ALL"+_NEWLINE+
        "("+_NEWLINE+ТЗ2+");";
    ElseIf оВО=4 Then
      оКО1:=Enum.коВыпискаБанкаПриход.ОплатаПокупателя;
      оКО2:=Enum.коВыпискаБанкаРасход.ВозвратПокупателю;
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,"Doc.ВыпискаБанкаПриход",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ:=Replace(Replace(ТЗ0,"#","ВыпискаБанкаПриход"),"$","оКО1")+ТЗ+"зПриход:=SUM(зСм);";
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ2,ТабФорма,"Doc.ВыпискаБанкаРасход",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ2:=Replace(Replace(ТЗ0,"#","ВыпискаБанкаРасход"),"$","оКО2")+ТЗ2+"зРасход:=SUM(зСм);";
      
      ТЗ:="("+_NEWLINE+ТЗ+_NEWLINE+
        ") UNION ALL"+_NEWLINE+
        "("+_NEWLINE+ТЗ2+");";
    ElseIf оВО=5 Then
      оКО1:=Enum.коПКО.ОплатаПокупателя;
      оКО2:=Enum.коРКО.ВозвратПокупателю;
      оКО3:=Enum.коВыпискаБанкаПриход.ОплатаПокупателя;
      оКО4:=Enum.коВыпискаБанкаРасход.ВозвратПокупателю;
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,"Doc.ПКО",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ:=Replace(Replace(ТЗ0,"#","ПКО"),"$","оКО1")+ТЗ+"зПриход:=SUM(зСм);";
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ2,ТабФорма,"Doc.РКО",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ2:=Replace(Replace(ТЗ0,"#","РКО"),"$","оКО2")+ТЗ2+"зРасход:=SUM(зСм);";
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ3,ТабФорма,"Doc.ВыпискаБанкаПриход",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ3:=Replace(Replace(ТЗ0,"#","ВыпискаБанкаПриход"),"$","оКО3")+ТЗ3+"зПриход:=SUM(зСм);";
      
      спРезПеременные:=List.Create();
      глПостроитьТекстЗапросаИзФильтров(ТЗ4,ТабФорма,"Doc.ВыпискаБанкаРасход",0,0,Стр0,"оГруппы",спРезПеременные);
      ТЗ4:=Replace(Replace(ТЗ0,"#","ВыпискаБанкаРасход"),"$","оКО4")+ТЗ4+"зРасход:=SUM(зСм);";
      
      
      ТЗ:="("+_NEWLINE+ТЗ+_NEWLINE+
        ") UNION ALL"+_NEWLINE+
        "("+_NEWLINE+ТЗ2+_NEWLINE+
        ") UNION ALL"+_NEWLINE+
        "("+_NEWLINE+ТЗ3+_NEWLINE+
        ") UNION ALL"+_NEWLINE+
        "("+_NEWLINE+ТЗ4+_NEWLINE+
        ");";
    EndIf;
  
  
    З:=Query.Create();
    З.Execute(ТЗ);
    
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
  
    оЗагол:="Ведомость по прочим операциям";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оСч","Вид операций@оВО","");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    пПриход:=глФРМ(З.BegTotals("зПриход"));
    пРасход:=глФРМ(З.EndTotals("зРасход"));
    
    Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего);
    Т.CopyByX("v3",1);
    
    If оУровни=1 Then
      Т.Levels().Close();
    EndIf;
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  
Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

