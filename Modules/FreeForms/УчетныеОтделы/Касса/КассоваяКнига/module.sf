//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
var БылПКО Export;
var Добавлено Export;
var Т2 Export;

Function ОбновитьТексты()
  н2:=Form.оТипПеч.Value.SelectedLine;
  Фл2:=?((н2=4)Or(н2=5),0,1);
  н:=Form.оНумер.Value.SelectedLine;
  Фл:=?((н=1)Or(н=3),1,0);
  If Form.тНумерацияПКО.isDisabled<>1-Фл Then
    Form.тНумерацияПКО.isDisabled:=1-Фл;
    Form.тНумерацияРКО.isDisabled:=1-Фл;
    Form.оНПКО.isDisabled:=1-Фл;
    Form.оНРКО.isDisabled:=1-Фл;
  EndIf;
  If Form.тНумерацияЛистов.isDisabled<>1-Фл2 Then
    Form.тНумерацияЛистов.isDisabled:=1-Фл2;
    Form.тОканчиваетсяЛистом.isDisabled:=1-Фл2;
    Form.оНЛ.isDisabled:=1-Фл2;
    Form.оКонец.isDisabled:=1-Фл2;
  EndIf;
EndFunction

Function НапечататьТ2()
  Т2.EditorMode:=глПользователь.общиеИзменениеПечатныхФорм;
  Т2.Printing.ScaleMode:=3;
  If Form.оНаПринтер.Value=1 Then
    глПринтерПоУмолчанию(Т2);
    Т2.Print();
  Else
    Т2.Show("Печать ПКО/РКО","");  
  EndIf;
  Т2:=Table.Create();
  Добавлено:=0;
EndFunction

Function ДобавитьДокумент(Док,ДваНаЛист,Закончить=0,пН=0,РезКаталог="")
  ФлПч:=0;
  If Док<>0 Then
    If Док.DBName()="ПеремещениеДенег" Then
      Exit;
    EndIf;
    If (БылПКО=1)And(Док.DBName()="РКО") Then
      НапечататьТ2();
      ФлПч:=1;
    EndIf;
    БылПКО:=?(Док.DBName()="ПКО",1,0);
  EndIf;
  
  aList:=List.Create();
  aList.Add(0,"ПечататьБезВывода");
  aList.Add(1,"Ориентация");
  aList.Add(1,"КоличествоКопий");
  
  ФлПч:=0;
  If ДваНаЛист=0 Then
    If (Добавлено=2)Or((Form.оБезДвухСторон.Value=1)And(Добавлено>0)) Then
      НапечататьТ2();
      ФлПч:=1;
    ElseIf Добавлено=1 Then
      Т2.PageBreaks.Add();
      ФлПч:=2;
    EndIf;
  ElseIf Добавлено=4 Then
    НапечататьТ2();
    ФлПч:=1;
  ElseIf Добавлено=2 Then
    If Form.оБезДвухСторон.Value=1 Then
      НапечататьТ2();
      ФлПч:=1;
    Else
      Т2.PageBreaks.Add();
      ФлПч:=2;
    EndIf;
  ElseIf Добавлено>0 Then
    aList.Add(0,"Присоединить");
    ФлПч:=3;
  EndIf;
  
  If Док<>0 Then
    aList.Add(Т2,"Таблица");
    aList.Add(пН,"Номер");
    aList.Add(1-Form.оКорешки.Value,"БезКорешка");
    aList.Add(Док,"Object");
    LoadModule(0,"Modules\FreeForms\ПечатныеФормы\Документ."+Док.DBName()+"\ПечатнаяФорма",aList,0);
    If not IsEmpty(РезКаталог) then
      Т2.Save(РезКаталог+Док.DBName()+" "+Док.Docnum+" "+Док.DocDate+".xlsx","xlsx");
    EndIf;
    Добавлено:=Добавлено+1;
  EndIf;

  If (Закончить=1)And(Добавлено>0) Then
    НапечататьТ2();
  EndIf;
EndFunction

Function ФорматироватьЧисло(См)
  Стр:=Replace(FormatNumber(См,1,"",2),".","=");
  Exit ?(Стр="","-",Стр);
EndFunction


Function Печать(СпУстановки)
  If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,0) Then
    Exit;
  EndIf;
  If Form.оЮЛ.Value.Selected()=0 Then
    Box("Не выбрано юридическое лицо!",Q_STOP);
    Exit;
  EndIf;  
  Т:=Table.Create();
  НачДата:=BegOfDay(Form.НачДата.Value);
  КонДата:=BegOfDay(Form.КонДата.Value);
  оКс:=Form.оКс.Value;
  оНумер:=Form.оНумер.Value.SelectedLine;
  оТипПеч:=Form.оТипПеч.Value.SelectedLine;
  оЮЛ:=Form.оЮЛ.Value;
  оОбл:=Form.оОбл.Value;
  РезКаталог:="";
  If Form.оСохранятьВПапку.Value Then
    If SelectFolderDialog(РезКаталог,"Выберите каталог для выгрузки:")<>1 Then
      Box("Необходимо выбрать папку для выгрузки!",Q_STOP);
      Exit;
    EndIf;
  EndIf;
  
  ТЗ:="Period From НачДата to КонДата;
  |зЮЛ:=Storage.Касса.ЮрЛицо;
  |зКс:=Storage.Касса.Касса;
  |Condition(зКс IN оКс.Get(1));
  |Condition(зКс NOT IN оКс.Get(2));
  |зНО:=BegTotals(Сумма);
  |зПриход:=Income(Сумма);
  |зРасход:=Expense(Сумма);
  |зКО:=EndTotals(Сумма);
  |Condition(зЮЛ=Form.оЮЛ.Value);
  |Документ:=Storage.Касса.@LINK;
  |День:=@DAY;
  |Group День;
  |Group Документ;";
  
  З:=Query.Create();
  З.Execute(ТЗ);
  
  Т:=Table.Create();
  Т2:=Table.Create();
  Добавлено:=0;
  Т.SetSourceName("Table");

  глСимулироватьСальдоПоДокументам(З,"Документ:зНО:зПриход:зРасход:зКО");
  спДокументы:=List.Create();
  
  БылЛист:=0;
  БылПКО:=0;
  пНЛ:=Form.оНЛ.Value-1;
  н0ПКО:=Form.оНПКО.Value-1;
  н0РКО:=Form.оНРКО.Value-1;

  While З.Next(1) Do
    День:=З.День;
    
    пДень:="Касса за "+FormatDate(День,"DD MMM YYYY г.");
    пКопия:="";
    пВидЛиста:="Вкладной лист кассовой книги";
    пОПриход:=З.зПриход;
    пОРасход:=З.зРасход;
    пНО:=ФорматироватьЧисло(З.зНО);
    пКО:=ФорматироватьЧисло(З.зКО);
    
    пПрМинус:=0;
    пРсМинус:=0;
    ТД:=Tab.Create("Документ,Вид");
    ТД.AddColumn("зПриход",,"Number");ТД.AddColumn("зРасход",,"Number");
    
    While З.Next(2) Do
      if isEmpty(З.Документ) Then
        Continue;
      EndIf;
      Вид:=З.Документ.DBName();
      If Вид="ПеремещениеДенег" Then
        If Round(З.зПриход-З.зРасход,2)=0 Then
          Continue;
        EndIf;
        ТД.AddLine("Документ,Вид,зПриход,зРасход",З.Документ,З.Документ.DBName(),Max(0,З.зПриход-З.зРасход),Max(0,З.зРасход-З.зПриход));
        Continue;
      ElseIf (Вид<>"ПКО")And(Вид<>"РКО") Then
        пПрМинус:=пПрМинус-З.зПриход;
        пРсМинус:=пРсМинус-З.зРасход;
        Continue;
      EndIf;
      ТД.AddLine("Документ,Вид,зПриход,зРасход",З.Документ,З.Документ.DBName(),З.зПриход,З.зРасход);
    EndDo;
    
    If ТД.Size()>0 Then
      ТД.Sort("Вид,Документ+");
    Else
      Continue;
    EndIf;

    If БылЛист Then
      Т.PageBreaks.Add();
    EndIf;
    БылЛист:=1;
    
    Стр:=0;
    пНЛ:=пНЛ+1;
    
    Т.CopyByX("v1",1);
    //Т.Printing.ContinualLines.From:=Т.Height()-3;
    //Т.Printing.ContinualLines.To:=Т.Height()-1;
    
    Столб:=Т.CurPutX;
    Т.PageBreaks.AddVertical(Столб-1);
    пКопия:="Копия";
    пВидЛиста:="Отчет кассира";
    Т.CopyByX("v1");
    
    нПКО:=0;
    нРКО:=0;
    ТД.Select();
    While ТД.Next() Do
      Вид:=ТД.Вид;
      If (Вид<>"ПКО")And(Вид<>"РКО")And(Вид<>"ПеремещениеДенег") Then
        Continue;
      EndIf;
      
      If Вид="ПеремещениеДенег" Then
        ФлПКО:=ТД.зПриход>0;
        ФлРКО:=ТД.зПриход=0;
      Else
        ФлПКО:=Вид="ПКО";
        ФлРКО:=Вид="РКО";
      EndIf;
      нПКО:=нПКО+ФлПКО;
      нРКО:=нРКО+ФлРКО;
      н0ПКО:=н0ПКО+ФлПКО;
      н0РКО:=н0РКО+ФлРКО;
      пДок:=ТД.Документ;
      пН:=?(ФлПКО,н0ПКО,н0РКО);
      If оНумер=4 Then
        пН:="";
      ElseIf оНумер>1 Then
        пН:=?(оНумер=2,глНомерБезНулей(пДок,2),Str(пН)+" / "+глНомерБезНулей(пДок,2));
      EndIf;
      
      КО:=пДок.КодОперации;
      пКР:=0;
      Подотч:=0;
      If (КО=Enum.коПКО.ОплатаПокупателя)Or(КО=Enum.коПКО.ВозвратОтПоставщика)or(КО=Enum.коРКО.ОплатаПоставщику)or(КО=Enum.коРКО.ВозвратПокупателю) Then
        пКР:=пДок.Контрагент;
        пК:=пКР.ПолнНаименование;
      ElseIf (КО=Enum.коПКО.ВозвратОтПодотчетника)Or(КО=Enum.коРКО.ВыдачаПодотчет) Then
        пКР:=пДок.ПодотчетноеЛицо;
        пК:=пКР.ПолнНаименование;
        Подотч:=1;
      EndIf;
      If isEmpty(пКР) Then
        пКР:=GetNothing();
        If глЕстьРеквизитДокумента("Выдать",Вид) Then
          пК:=пДок.Выдать;
        ElseIf глЕстьРеквизитДокумента("ПринятоОт",Вид) Then
          пК:=пДок.ПринятоОт;
        EndIf;
        If глЕстьРеквизитДокумента("ЦентрЗатрат",Вид) Then
          If Trim(пК)="" Then
            пКР:=пДок.ЦентрЗатрат.Ответственный;
            пК:=пКР.ПолнНаименование;
          EndIf;
        EndIf;
      EndIf;
      пПриход:=ФорматироватьЧисло(ТД.зПриход);
      пРасход:=ФорматироватьЧисло(ТД.зРасход);

      пБухСч:="";
      If (КО=Enum.коПКО.ОплатаПокупателя)Or(КО=Enum.коРКО.ВозвратПокупателю) Then
        пБухСч:="62.1";
      ElseIf (КО=Enum.коПКО.Инкассация)Or(КО=Enum.коРКО.Инкассация) Then
        пКР:=пДок.ПодотчетноеЛицо;
        пК:=пКР.ПолнНаименование;
        пБухСч:="57.1";
      ElseIf (КО=Enum.коПКО.ВозвратОтПоставщика)Or(КО=Enum.коРКО.ОплатаПоставщику) Then
        пБухСч:="60.1";
      ElseIf Вид="ПеремещениеДенег" Then
        пБухСч:="50.1";
      ElseIf Подотч=1 Then
        пБухСч:="71.1";
      Else
        пБухСч:=?(пДок.Счет.Selected()=0,"",пДок.Счет.Code);
      EndIf;
      
      Т.CopyByX("v2",1);
      Т.CopyByX("v2");
      
      If оТипПеч<>3 Then
        спДокументы.Add(пДок,Str(пН));
      EndIf;
            
      Form.StatusText(н0ПКО+н0РКО);
    EndDo;
    
    пОПриход:=ФорматироватьЧисло(пОПриход+пПрМинус);
    пОРасход:=ФорматироватьЧисло(пОРасход+пРсМинус);
    
    фИНН:="";фРук:="";фБух:="";фАдрес:="";фКас:="";
    //For i:=1 to оКс.Get(1).Size() Do
    //  зК:=оКс.Get(1).Get(i);
    //  Фил:=зК.КассаФилиала;
    //  If not isEmpty(Фил) Then
    //    фИНН:=глПолучитьИННПодразделения(оЮЛ,Фил);
    //    фАдрес:=глПолучитьАдресПодразделения(оЮЛ,Фил);
    //    фРук:="";фБух:="";фКас:="";глПолучитьСотрудниковПодразделения(оЮЛ,Фил,День,фРук,фБух,фКас);
    //    break;
    //  EndIf;  
    //EndDo;
    
    пКассир:=?(фКас="",Trim(оЮЛ.GetValue("Кассир",День).ПолнНаименование),фКас);
    пБухгалтер:=?(фБух<>"",фБух,Trim(оЮЛ.GetValue("ГлБухгалтер",День).ПолнНаименование));
    пДобавочныйТекст:="Записи в кассовой книге проверил и документы в количестве "+
      ?(нПКО>0,LowerCase(SpellNumber(нПКО)),"-")+" приходных и "+
      ?(нРКО>0,LowerCase(SpellNumber(нРКО)),"-")+" расходных получил.";
    //Т.Printing.ContinualLines.EndCell:=Т.Height();
    Т.CopyByX("v3",1);
    Т.CopyByX("v3");
  EndDo;
  
  
  ОК:=Form.оКонец.Value.SelectedLine;
  пКонец:="Количество листов кассовой книги за период с "+?(ОК=1,""+НачДата+" по "+КонДата+": "+пНЛ,
    ?(ОК=2,""+BegOfMonth(НачДата)+" по "+EndOfMonth(КонДата)+": "+пНЛ,
    ""+BegOfYear(НачДата)+" по "+EndOfYear(КонДата)+": "+пНЛ));
  Т.CopyByX("v4",1);
  Т.CopyByX("v4");
  
  If оТипПеч<4 Then
    глПечатнаяФормаОтчета(Т,Param,"Кассовая книга");
    
    If оОбл=1 Then
      Т:=Table.Create();
      пГод:="на "+GetYear(КонДата)+" г.";
      пОКПО:=оЮЛ.ОКПО;
      пЮЛ:=Trim(оЮЛ.ОфициальноеНаименование);
      пБух:=Trim(оЮЛ.GetValue("ГлБухгалтер",КонДата).ПолнНаименование);
      пДир:=Trim(оЮЛ.GetValue("Руководитель",КонДата).ПолнНаименование);
      Т.SetSourceName("Обложка");
      Т.CopyByX("v1",1);
      Т.PageBreaks.Add();
      Т.CopyByX("v1",1);
      Т.PageBreaks.Add();
      Т.CopyByX("v2",1);
      глПечатнаяФормаОтчета(Т,Param,"Обложка и титульный лист");
    EndIf;
  EndIf;
  
  
  If спДокументы.Size()>0 Then
    For i:=1 to спДокументы.Size() Do
      пДок:=спДокументы.Get(i);
      Ном:=спДокументы.GetName(i);
      ДобавитьДокумент(пДок,?((оТипПеч=2)Or(оТипПеч=5),1,0),0,Ном,РезКаталог);
    EndDo;
    ДобавитьДокумент(0,0,1,,РезКаталог);
  EndIf;  
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

