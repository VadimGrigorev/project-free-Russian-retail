//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function ОбновитьТексты()
  Вид:="";
  аВО:=Form.оВО.Value.SelectedLine;
  Form.оЗаголовок.Caption:=?(аВО=1,"Ведомость по подотчетникам",?(аВО=2,"Ведомость по операциям инкассо","Ведомость по основным средствам в эксплуатации"));
  Form.тОС.isDisabled:=аВО<>3;
  Form.оН.isDisabled:=аВО<>3;
  
  If аВО<>3 Then
    глУдалитьИзТаблицыФильтров("оГруппы",List.Create("По основным средствам"));
  Else
    глЗаполнитьТаблицуФильтров("оГруппы",List.Create("По подотчетникам!По основным средствам#Номенклатура#зН"),1);
  EndIf;
EndFunction

Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего);
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  аВО:=глПолучитьУстановку(ТабФорма,"оВО").SelectedLine;
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      If ИмяПер="Документ" Then  
        пЭл:="< Начальный остаток >";
      Else
        пЭл:="< Не выбран >";
      EndIf;
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    пКомментарий:="";
    If (ИмяПер="Документ")And(not isEmpty(пЭлР)) Then  
      If глЕстьРеквизитДокумента("Комментарий",пЭлР.DBName()) Then
        пКомментарий:=пЭлР.Комментарий;
      EndIf;
    EndIf;  
    
    If аВО<>3 Then
      пНОстАванс:=глФРМ(-Min(З.зНачОст,0));
      пНОстДолг:=глФРМ(Max(З.зНачОст,0));
      пПриход:=глФРМ(З.зПриход);
      пРасход:=глФРМ(З.зРасход);
      пКОстАванс:=глФРМ(-Min(З.зКонОст,0));
      пКОстДолг:=глФРМ(Max(З.зКонОст,0));
    Else
      пКолво0:=глФРМ(З.зНачОстКл);
      пКолво1:=глФРМ(З.зПриходКл-З.зРасходКл);
      пКолво2:=глФРМ(З.зКонОстКл);
      пСм0:=глФРМ(З.зНачОст);
      пСм1:=глФРМ(З.зПриход-З.зРасход);
      пСм2:=глФРМ(З.зКонОст);
    EndIf;  
    пЕд:="";
    If ИмяПер="зН" Then
      If not пЭлР.IsFolder() Then
        пЕд:=Str(З.зН.базЕдиница)+" "+Str(З.зН.оснЕдиница)+" ("+З.зН.оснКоэффициент+")";
      EndIf;
    EndIf;
    пКод:=глПолучитьКод(пЭлР);
    Т.CopyByX("v2",1);
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1,3,Ур,УрВсего,2,?(аВО=3,11,10),пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего);

    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
EndFunction

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оЮЛ:=глПолучитьУстановку(ТабФорма,"оЮЛ");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  
  аВО:=глПолучитьУстановку(ТабФорма,"оВО").SelectedLine;
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,0) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    Т.SetSourceName(?(аВО<>3,"Table","ОсновныеСредства"));
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.ПодотчетныеОперации";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@ЮрЛицо,оПд@зПд@ПодотчетноеЛицо"+?(аВО=3,",оН@зН@Номенклатура",""),"оГруппы",спРезПеременные);
    
    опИнк:=Enum.ТипыПодотчетныхОпераций.Инкассация;
    опОС:=Enum.ТипыПодотчетныхОпераций.ОсновныеСредства;
    опПод:=Enum.ТипыПодотчетныхОпераций.ПодотчетнаяОперация;    
    СтрТип:=глПолучитьУстановку(ТабФорма,"оВО","Selected");
    ТЗ:=ТЗ+"зРасход:=Expense(Сумма);
      |зНачОст:=BegTotals(Сумма);
      |зПриход:=Income(Сумма);
      |зКонОст:=EndTotals(Сумма);"+?(аВО=3,
      "зРасходКл:=Expense(Количество);
      |зНачОстКл:=BegTotals(Количество);
      |зПриходКл:=Income(Количество);
      |зКонОстКл:=EndTotals(Количество);","")+
      СтрТип;
  
    З:=Query.Create();
    З.Execute(ТЗ);
    
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
  
    оЗагол:=?(аВО=1,"Ведомость по подотчетникам",?(аВО=2,"Ведомость по операциям инкассо","Ведомость по основным средствам в эксплуатации"));
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оПд"+?(аВО=3,",оН",""));
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    If аВО=3 Then
      пКолво0:=глФРМ(З.Compute("зНачОстКл"));
      пКолво1:=глФРМ(З.Compute("зПриходКл")-З.Compute("зРасходКл"));
      пКолво2:=глФРМ(З.Compute("зКонОстКл"));
      пСм0:=глФРМ(З.Compute("зНачОст"));
      пСм1:=глФРМ(З.Compute("зПриход")-З.Compute("зРасход"));
      пСм2:=глФРМ(З.Compute("зКонОст"));
      глСимулироватьСальдоПоДокументам(З,"Документ:зНачОст:зПриход:зРасход:зКонОст");
      глСимулироватьСальдоПоДокументам(З,"Документ:зНачОстКл:зПриходКл:зРасходКл:зКонОстКл");
    Else
      пНОстАванс:=З.BegTotals("зНачОст");
      пНОстДолг:=глФРМ(Max(пНОстАванс,0));
      пНОстАванс:=глФРМ(-Min(пНОстАванс,0));
      пПриход:=глФРМ(З.Compute("зПриход"));
      пРасход:=глФРМ(З.Compute("зРасход"));
      пКОстАванс:=З.EndTotals("зКонОст");
      пКОстДолг:=глФРМ(Max(пКОстАванс,0));
      пКОстАванс:=глФРМ(-Min(пКОстАванс,0));
      глСимулироватьСальдоПоДокументам(З,"Документ:зНачОст:зПриход:зРасход:зКонОст");
    EndIf;  
    
    
    Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего);
    Т.CopyByX("v3",1);
    
    If not ФлЛок Then
      глФормированиеОтчетаДобавитьВСобытия(оЗагол,НачДата,КонДата,"оЮЛ,оПд,оН");
    EndIf;
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

