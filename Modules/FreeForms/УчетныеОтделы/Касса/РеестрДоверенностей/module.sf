//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
var пН Export;

Function ВосстановитьНастройкиСписков()
  Сп:=List.Create();
  Сп.Add("");
  For i:=1 to Struct.Enum("коДоверенность").Values.Count() Do
    Сп.Add(Enum.Get("коДоверенность."+Struct.Enum("коДоверенность").Values(i).Name));
  EndDo;
  глВосстановитьНастройкуПростогоСписка(Сп,Form.оВид.Value);
  
  Сп:=List.Create();
  Сп.Add("");
  For i:=1 to Struct.Enum("ВидыГашений").Values.Count() Do
    Сп.Add(Enum.Get("ВидыГашений."+Struct.Enum("ВидыГашений").Values(i).Name));
  EndDo;
  глВосстановитьНастройкуПростогоСписка(Сп,Form.оСтатус.Value);
EndFunction

Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего);
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      If ИмяПер="Документ" Then  
        пЭл:="< Начальный остаток >";
      Else
        пЭл:="< Не выбран >";
      EndIf;
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    
    пСм:=глФРМ(З.зСм);
    Секция:="v5";
    If ИмяПер="Документ" Then
      пН:=пН+1;
      пНом:=Trim(З.Документ.DocNum);
      пДата:=Trim(З.Документ.DocDate);
      пДата2:="";
      пПКО:=GetNothing();
      дПКО:=глНайтиПодчиненныйПоВиду(З.Документ,"ПКО",-1);//TODO: медленно?
      If дПКО<>0 Then
        пПКО:=дПКО;
        пДата2:=Trim(дПКО.DocDate);
      EndIf;
      пТД:=Trim(Replace(З.Документ.КодОперации,"Доверенность",""));
      пСТ:=?(З.Документ.ВидГашения=Enum.ВидыГашений.НеВозвращен,"НЕ ПОГАШЕН",?(З.Документ.ВидГашения=Enum.ВидыГашений.ПустойДокумент,"(пустой)",""));
      пК:=З.Документ.Контрагент;
      пКод:=глНомерБезНулей(пК,0);
      пДок:=З.Документ;
      Секция:="v2";
    EndIf;    
    Т.CopyByX(Секция,1);
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1,3,Ур,УрВсего,2,10,пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего);

    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
EndFunction

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Doc.Доверенность";
    ТЗ:="";
    спРезПеременные:=List.Create();
    оВид:=глПолучитьУстановку(ТабФорма,"оВид");
    оСтатус:=глПолучитьУстановку(ТабФорма,"оСтатус");
    
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,0,0,"оЮЛ@зЮЛ@ЮрЛицо,оСтр@зСтр@ДоверенноеЛицо,оК@зК@Контрагент,оД@зД@Договор","оГруппы",спРезПеременные);
    
    ТЗ:=ТЗ+"зСтатус:=Doc.Доверенность.@Status;Condition(зСтатус<>1);DocDate:=Doc.Доверенность.DocDate;
      |Condition((DocDate>='"+BegOfDay(НачДата)+"')And(DocDate<'"+BegOfDay(КонДата+1)+"'));
      |зСм0:=Doc.Доверенность.СуммаВзаиморасчетов;
      |зСм:=SUM(зСм0);"+
      ?(оВид.SelectedLine>1,"зВд:=Doc.Доверенность.КодОперации;Condition(зВд=оВид.Get(оВид.SelectedLine));","")+
      ?(оСтатус.SelectedLine>1,"зСт:=Doc.Доверенность.ВидГашения;Condition(зСт=оСтатус.Get(оСтатус.SelectedLine));","");
  
    З:=Query.Create();
    З.Execute(ТЗ);
    
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
  
    оЗагол:="Реестр документов "+?(оВид=1,"'Доверенность'","'"+оВид.Get(оВид.SelectedLine)+"'");
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оСтр,оК,оД");
    If оСтатус.SelectedLine>1 Then
      оСвойства:=оСвойства+_NEWLINE+"Особые фильтры: ";
      Ткс:=оСтатус.Get(оСтатус.SelectedLine);
      оСвойства:=оСвойства+?(оСтатус.SelectedLine>1," "+Ткс+".","");
    EndIf;
      
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    пН:=0;
    пСм:=глФРМ(З.Compute("зСм"));
    Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего);
    Т.CopyByX("v3",1);
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction


