//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оСк:=глПолучитьУстановку(ТабФорма,"оСк");
  оН:=глПолучитьУстановку(ТабФорма,"оН");
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");

  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,0) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  
  Try
    оЗагол:="Маржинальная прибыль остатков";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оСк,оН");
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    Form.StatusText("Проверка изменения цен номенклатуры...");
    ТНом:=глПолучитьПромежуточнуюТаблицуИзмененияЦенНоменклатуры(НачДата,КонДата,оСк,оН);
    If ТНом=0 Then
      Exit;
    EndIf;
    
    пТовар:=Enum.ВидыНоменклатуры.Товар;
    ТЗ:="Period From НачДата to КонДата;
    |зСк:=Storage.ОстаткиТМЦ.Склад;
    |зСА:=Storage.ОстаткиТМЦ.Склад.ИспользоватьВАктиве;
    |Condition(зСА=1);
    |зН:=Storage.ОстаткиТМЦ.Номенклатура;
    |Документ:=Storage.ОстаткиТМЦ.@LINK;
    |Вн:=Storage.ОстаткиТМЦ.Номенклатура.ВидНоменклатуры;Condition(Вн=пТовар);
    |зТГ:=Storage.ОстаткиТМЦ.Номенклатура.ТоварнаяГруппа;"+
    ?(оСк.Get(1).Size()>0,"Condition(зСк IN оСк.Get(1));"+_NEWLINE,"")+
    ?(оСк.Get(2).Size()>0,"Condition(зСк NOT IN оСк.Get(2)));"+_NEWLINE,"")+
    ?(оН.Get(1).Size()>0,"Condition(зН IN оН.Get(1));"+_NEWLINE,"")+
    ?(оН.Get(2).Size()>0,"Condition(зН NOT IN оН.Get(2)));"+_NEWLINE,"")+
    "зКН:=BegTotals(Количество);
    |зКП:=Income(Количество);
    |зКР:=Expense(Количество);
    |Group зТГ,зСк,зН,Документ;";
    
    З:=Query.Create();
    З.Execute(ТЗ,2);
    
    //ВНИМАНИЕ:
    //Отчет также вычисляет стоимость остатков на начало и конце периода, но эти столбцы
    //  в отчете приводили к постоянной путанице, когда операторы пытались вычислять прибыль, как разницы между этими столбцами.
    //Прибыль так вычислять нельзя. Чтобы исключить постоянные ошибки операторов, столбики пришлось убрать.
    пСмН4:=0;
    пСмК4:=0;
    пПр4:=0;
    пПр4НДС:=0;
    While З.Next(1) Do
      зТГ:=З.зТГ;
      Form.StatusText("Обработка товарноый группы: "+зТГ);
      
      пПБ:="";пПК:="";пПД:="";пКл:="";пСмН:="";пСмП:="";пСм:="";пСмНДС:="";
      пЭл:=зТГ;
      пЭлР:=зТГ;
      Т.CopyByX("v2",1);
      глРаскраситьСтроку(Т,1,2,1,3,2,8,пЭлР);
      Выс2:=Т.Height();
      
      пСмН3:=0;
      пСмК3:=0;
      пПр3:=0;
      пПр3НДС:=0;
      While З.Next(2) Do
        пЭл:=З.зСк;
        пЭлР:=пЭл;
        зТЦ:=?(З.зСк.рзТипЦенПоступления.Selected()=0,0,З.зСк.рзТипЦенПоступления);
        пПБ:="";пПК:="";пПД:="";пКл:="";пСмН:="";пСмП:="";пСм:="";пСмНДС:="";
        Т.CopyByX("v2",1);
        глРаскраситьСтроку(Т,1,2,2,3,2,8,пЭлР);
        Выс3:=Т.Height();
        
        пН1:=0;
        While З.Next(3) Do
          пН1:=пН1+1;
        EndDo;
        
        пН2:=0;
        пСмН2:=0;
        пСмК2:=0;
        пПр2:=0;
        пПр2НДС:=0;
        
        While З.Next(3) Do
          зН:=З.зН;
          If флЦентральнаяБаза=0 Then
            If зТЦ=0 Then
              If ТНом.FindAndGoto(зН,,"зН",1)=0 Then
                Continue;
              EndIf;
            ElseIf ТНом.FindAndGoto(зН.Code+"@"+Trim(зТЦ.Code),,"зН",1)=0 Then
              Continue;
            EndIf;
          Else
            If ТНом.FindAndGoto(зН.Code+"@"+Trim(З.зСк.рбПрефиксУдаленнойБазы),,"зН",1)=0 Then
              Continue;
            EndIf;
          EndIf;
          ТЦ:=ТНом.ТЦ;
          
          пН2:=пН2+1;
          If пН2%10=0 Then
            Form.StatusText(""+зТГ+": "+пН2+" из "+пН1);
          EndIf;
          
          пПБ:=глПолучитьОсновнуюЦену(зН,З.зСк,НачДата-1);
          пПК:=глПолучитьОсновнуюЦену(зН,З.зСк,КонДата);
          пПД:=глФРМ(пПК-пПБ);
          пСмН:=пПБ*З.BegTotals("зКН");
          пСмП:=пПК*(З.BegTotals("зКН")+З.Compute("зКП")-З.Compute("зКР"));
          пПБ:=глФРМ(пПБ);
          пПК:=глФРМ(пПК);
          
          пСмН2:=пСмН2+пСмН;
          пСмК2:=пСмК2+пСмП;
          пСмН:=глФРМ(пСмН);
          пСмП:=глФРМ(пСмП);
          пКл:=глФРМ(ТНом.Кл);
          
          ОстК:=З.BegTotals("зКН");ОстТ:=ОстК;
          ДатаК:=НачДата;
          пПр:=0;
          While З.Next(4) Do
            If isEmpty(З.Документ) Then
              Continue;
            EndIf;
            ДД:=BegOfDay(З.Документ.DocDate);
            While ДД>ДатаК Do
              пПр:=пПр+ОстК*Number(ТЦ.GetByName(""+ДатаК));
              ОстК:=ОстТ;
              ДатаК:=ДатаК+1;
            EndDo;
            ОстТ:=ОстТ+З.зКП-З.зКР;
          EndDo;
          While ДатаК<=КонДата Do
            пПр:=пПр+ОстК*Number(ТЦ.GetByName(""+ДатаК));
            ОстК:=ОстТ;
            ДатаК:=ДатаК+1;
          EndDo;
  
          пЭл:=З.зН;
          пЭлР:=пЭл;
          пСм:=глФРМ(пПр);
          пСмНДС:=глФРМ(пПр*(1-глКоэффНДС(зН.СтавкаНДС)));
          Т.CopyByX("v2",1);
          глРаскраситьСтроку(Т,1,2,3,3,2,8,пЭлР);
          пПр2:=пПр2+пПр;
          пПр2НДС:=пПр2НДС+пПр*(1-глКоэффНДС(зН.СтавкаНДС));
        EndDo;
        
        //Т.Area(7,Выс3,7,Выс3).Text:=глФРМ(пСмН2);
        //Т.Area(8,Выс3,8,Выс3).Text:=глФРМ(пСмК2);
        Т.Area(7,Выс3,7,Выс3).Text:=глФРМ(пПр2);
        Т.Area(8,Выс3,8,Выс3).Text:=глФРМ(пПр2НДС);
        If оУровни=1 Then
          глДобавитьУровень(Т,Выс3,Т.Height());
        EndIf;
        пСмН3:=пСмН3+пСмН2;
        пСмК3:=пСмК3+пСмК2;
        пПр3:=пПр3+пПр2;
        пПр3НДС:=пПр3НДС+пПр2НДС;
      EndDo;
      
      //Т.Area(7,Выс2,7,Выс2).Text:=глФРМ(пСмН3);
      //Т.Area(8,Выс2,8,Выс2).Text:=глФРМ(пСмК3);
      Т.Area(7,Выс2,7,Выс2).Text:=глФРМ(пПр3);
      Т.Area(8,Выс2,8,Выс2).Text:=глФРМ(пПр3НДС);
      If оУровни=1 Then
        глДобавитьУровень(Т,Выс2,Т.Height());
      EndIf;
      пСмН4:=пСмН4+пСмН3;
      пСмК4:=пСмК4+пСмК3;
      пПр4:=пПр4+пПр3;
      пПр4НДС:=пПр4НДС+пПр3НДС;
    EndDo;
    
    пСмН:=глФРМ(пСмН4);
    пСмП:=глФРМ(пСмК4);
    пСм:=глФРМ(пПр4);
    пСмНДС:=глФРМ(пПр4НДС);
    Т.CopyByX("v3",1);
    If оУровни=1 Then
      Т.Levels(0).Close();
    EndIf;
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction



Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction


