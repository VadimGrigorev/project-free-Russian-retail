//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var тТабД Export;

Function ДобавитьКТаблицеОпКапитала(З,СпО,тТабД,оДок)
  НачДата:=BegOfDay(Form.НачДата.Value);
  While З.Next(1) Do
    а:=BegOfDay(З.День)-НачДата+2;
    СпО.Set(а,Number(СпО.Get(а))+З.зКО);
    If оДок=1 Then
      While З.Next(2) Do
        If тТабД.FindAndGoto(З.Документ,,"Док")=0 Then
          тТабД.AddLine("Док,СмО",З.Документ,З.зР-З.зП);
        Else
          тТабД.СмО:=тТабД.СмО+З.зР-З.зП;
        EndIf;
      EndDo;
    EndIf;  
  EndDo;
EndFunction


Function Печать(СпУстановки)
  НачДата:=BegOfDay(Form.НачДата.Value);
  КонДата:=BegOfDay(Form.КонДата.Value);
  оДок:=Form.оДок.Value;
  оВО:=Form.оВО.Value.SelectedLine;

  If not глПроверитьДатуВОтчетах(Param,НачДата,КонДата,-1) Then
    Exit;
  EndIf;
  
  ФлСПоставщикамиС:=Number(DBVar.ИспользоватьПерепродажиВФинОтчетах);
  Form.StatusText("Проверка изменения цен номенклатуры...");
  ТНом:=глПолучитьПромежуточнуюТаблицуИзмененияЦенНоменклатуры(НачДата,КонДата,List.Create(List.Create(),List.Create()),List.Create(List.Create(),List.Create()));
  If ТНом=0 Then
    Exit;
  EndIf;
  
  СпЗ:=List.Create();
  СпЗ2:=List.Create();
  СпМ:=List.Create();
  СпО:=List.Create();
  For i:=1 to КонДата-НачДата+1 Do
    СпЗ.Add(0);
    СпЗ2.Add(0);
    СпМ.Add(0);
    СпО.Add(0);
  EndDo;
  СпО.Add(0);
  
  тТабД:=Tab.Create("Док");
  тТабД.AddColumn("СмЗ",,"Number");
  тТабД.AddColumn("СмЗ2",,"Number");//Доп. затраты
  тТабД.AddColumn("СмМ",,"Number");//Марж прибыль
  тТабД.AddColumn("СмО",,"Number");//Операционный капитал
  тТабД.AddColumn("ФлУд",,"Number");

  ТЗ:="Period From НачДата to КонДата;
  |зМрТип:=Storage.ДвижениеТМЦ.ТипЗаписи;Condition(зМрТип<2);
  |зМрТУ:=Storage.ДвижениеТМЦ.ТипУчета;Condition(зМрТУ=0);
  |День:=Storage.ДвижениеТМЦ.@DAY;
  |зСкА:=Storage.ДвижениеТМЦ.Склад.ИспользоватьВАктиве;Condition(зСкА=1);
  |зСк:=Storage.ДвижениеТМЦ.Склад;"+
  ?(ФлСПоставщикамиС=0,"зТипАкт:=Storage.ДвижениеТМЦ.Договор.@Parent.ТипАктива;Condition(зТипАкт<>3);","")+
  "зС00:=Storage.ДвижениеТМЦ.Себестоимость;
  |зС0:=Storage.ДвижениеТМЦ.Сумма;
  |зСм0:=SUM(зС0);
  |зСм1:=SUM(зС00);
  |Group День;"+
  ?(оДок=0,"","Документ:=Storage.ДвижениеТМЦ.@LINK;Group Документ;");
  
  Form.StatusText("Марж. прибыль, покупатели...");
  З:=Query.Create();
  З.Execute(ТЗ);
  Form.StatusText("Марж. прибыль, покупатели (расчет)...");

  While З.Next(1) Do
    а:=BegOfDay(З.День)-НачДата+1;
    СпМ.Set(а,З.зСм0-З.зСм1);
    If оДок=1 Then
      While З.Next(2) Do
        тТабД.AddLine("Док,СмМ",З.Документ,З.зСм0-З.зСм1);
      EndDo;
    EndIf;
  EndDo;


  ТЗ:="Period From НачДата to КонДата;
  |зМрТип:=Storage.ДвижениеТМЦ.ТипЗаписи;Condition(зМрТип<4);Condition(зМрТип>1);
  |зМрТУ:=Storage.ДвижениеТМЦ.ТипУчета;Condition(зМрТУ=0);"+
  ?(ФлСПоставщикамиС=0,"зТипАкт:=Storage.ДвижениеТМЦ.Договор.@Parent.ТипАктива;Condition(зТипАкт<>3);","")+
  "зСкА:=Storage.ДвижениеТМЦ.Склад.ИспользоватьВАктиве;Condition(зСкА=1);
  |День:=Storage.ДвижениеТМЦ.@DAY;
  |зСк:=Storage.ДвижениеТМЦ.Склад;
  |зС00:=Storage.ДвижениеТМЦ.Себестоимость;
  |зС0:=Storage.ДвижениеТМЦ.Сумма;
  |зСм0:=SUM(зС0);
  |зСм1:=SUM(зС00);
  |Group День;"+
  ?(оДок=0,"","Документ:=Storage.ДвижениеТМЦ.@LINK;Group Документ;");
  
  Form.StatusText("Марж. прибыль, поставщики...");
  З:=Query.Create();
  З.Execute(ТЗ);
  Form.StatusText("Марж. прибыль, поставщики (расчет)...");

  While З.Next(1) Do
    а:=BegOfDay(З.День)-НачДата+1;
    СпМ.Set(а,Number(СпМ.Get(а))+З.зСм1-З.зСм0);
    If оДок=1 Then
      While З.Next(2) Do
        If тТабД.FindAndGoto(З.Документ,,"Док")=0 Then
          тТабД.AddLine("Док,СмМ",З.Документ,З.зСм1-З.зСм0);
        Else
          тТабД.СмМ:=тТабД.СмМ+З.зСм1-З.зСм0;
        EndIf;
      EndDo;
    EndIf;
  EndDo;
  

  
  //Скидки поставщиков, движения
  Form.StatusText("Скидки поставщиков (движения)...");
  
  ТЗ:="Period From НачДата to КонДата;
  |День:=Storage.СкидкиПоставщиков.@DAY;
  |зП:=Income(Сумма);зР:=Expense(Сумма);
  |зТипАкт:=Storage.СкидкиПоставщиков.Поставщик.ТипАктива;Condition(зТипАкт<>3);
  |Group День;"+
  ?(оДок=0,"","Документ:=Storage.СкидкиПоставщиков.@LINK;Group Документ;");
  
  З:=Query.Create();
  З.Execute(ТЗ);
  
  While З.Next(1) Do    
    а:=BegOfDay(З.День)-НачДата+1;
    СпМ.Set(а,Number(СпМ.Get(а))+З.зП-З.зР);
    If оДок=1 Then
      While З.Next(2) Do
        If тТабД.FindAndGoto(З.Документ,,"Док")=0 Then
          тТабД.AddLine("Док,СмМ",З.Документ,З.зП-З.зР);
        Else
          тТабД.СмМ:=тТабД.СмМ+З.зП-З.зР;
        EndIf;
      EndDo;
    EndIf;
  EndDo;
  
  
  
  пВидТовар:=Enum.ВидыНоменклатуры.Товар;
  пЦЗ:=GetNothing("Ref.зтЦентрыЗатрат");
  
  ТЗ:="зСтатус:=Doc.РегистрацияТМЦ.@Status;Condition(зСтатус>1);зДата:=BegOfDay(Doc.РегистрацияТМЦ.DocDate);Condition((зДата>=НачДата)And(зДата<=КонДата));
  |зЦЗ:=Doc.РегистрацияТМЦ.ЦентрЗатрат;Condition(isEmpty(зЦЗ));
  |зСкАкт:=Doc.РегистрацияТМЦ.Склад.ИспользоватьВАктиве;
  |Condition(зСкАкт=1);
  |Документ:=Doc.РегистрацияТМЦ;
  |зСк:=Doc.РегистрацияТМЦ.Склад;
  |Group Документ;";
  
  Form.StatusText("Обработка списаний/оприходований...");
  З:=Query.Create();
  З.Execute(ТЗ);
  
  While З.Next(1) Do
    Д:=З.Документ;
    Знак:=?(Д.КодОперации=Enum.коРегистрацияТМЦ.ОприходованиеТМЦ,1,-1);
    а:=BegOfDay(Д.DocDate)-НачДата+1;
    См:=0;
    aTab:=Д.LineParts("Номенклатура");
    aTab.Select();
    While aTab.Next() Do
      Н:=aTab.Номенклатура;
      //If Н.ВидНоменклатуры<>пВидТовар Then
      //  Continue;
      //EndIf;
      См:=См+глПолучитьОсновнуюЦену(Н,Д.Склад,Д.DocDate)*aTab.Количество*Знак;
    EndDo;
    
    СпМ.Set(а,Number(СпМ.Get(а))+См);
    If оДок=1 Then
      If тТабД.FindAndGoto(Д,,"Док")=0 Then
        тТабД.AddLine("Док,СмМ",Д,См);
      Else
        тТабД.СмМ:=тТабД.СмМ+См;
      EndIf;
    EndIf;
  EndDo;
  
  
  
  ТЗ:="(зСтатус:=Doc.РеализацияПрочее.@Status;Condition(зСтатус>1);День:=BegOfDay(Doc.РеализацияПрочее.DocDate);Condition((День>=НачДата)And(День<=КонДата));
  |зС0:=Doc.РеализацияПрочее.СуммаВзаиморасчетов;
  |зСм:=SUM(зС0);
  |зТипАкт:=Doc.РеализацияПрочее.Контрагент.ТипАктива;Condition(зТипАкт<>3);
  |Документ:=Doc.РеализацияПрочее;
  |Group День,Документ;
  |) UNION ALL
  |(зСтатус:=Doc.КорректировкаДолга.@Status;Condition(зСтатус>1);День:=BegOfDay(Doc.КорректировкаДолга.DocDate);Condition((День>=НачДата)And(День<=КонДата));
  |зС0:=Doc.КорректировкаДолга.СуммаВзаиморасчетов;
  |зСм:=SUM(зС0);
  |зСт:=Doc.КорректировкаДолга.СтатьяЗатрат;Condition(IsEmpty(зСт));
  |зТипАкт:=Doc.КорректировкаДолга.Контрагент.ТипАктива;Condition(зТипАкт<>3);
  |Документ:=Doc.КорректировкаДолга;
  |Group День,Документ;
  |);";
  
  Form.StatusText("Скидки поставщиков...");
  З:=Query.Create();
  З.Execute(ТЗ);
  Form.StatusText("Скидки поставщиков (расчет)...");
  
  While З.Next(1) Do
    См:=0;
    См2:=0;
    While З.Next(2) Do
      См:=См+З.зСм;
      См2:=См2+0;//З.зСм*(1-Фл);
      
      If оДок=1 Then
        If тТабД.FindAndGoto(З.Документ,,"Док")=0 Then
          тТабД.AddLine("Док,СмМ,СмЗ2",З.Документ,З.зСм,-З.зСм*0);
        Else
          тТабД.СмМ:=тТабД.СмМ+З.зСм;
          тТабД.СмЗ2:=тТабД.СмЗ2-З.зСм*0;
        EndIf;
      EndIf;
    EndDo;
    а:=BegOfDay(З.День)-НачДата+1;
    СпМ.Set(а,Number(СпМ.Get(а))+См);
    СпЗ2.Set(а,Number(СпЗ2.Get(а))-См2);
  EndDo;
  

//Затраты, которые входят в отчет по прибылям и убыткам
  ТЗ:="Period From НачДата to КонДата;
  |зВН:=Storage.Затраты.ЦентрЗатрат.ВнутреннееПеремещение;
  |зСЗ:=Storage.Затраты.СтатьяЗатрат;
  |зС0:=Storage.Затраты.Сумма;
  |День:=Storage.Затраты.@DAY;
  |зТЗ:=Storage.Затраты.ТипЗаписи;"+
  ?(оВО=1,"Condition(зТЗ<2);","Condition((зТЗ=0)Or(зТЗ=2));")+_NEWLINE+
  "зСм:=SUM(зС0);
  |Condition(зВН=0);
  |Group День,зСЗ;"+
  ?(оДок=0,"","Документ:=Storage.Затраты.@LINK;Group Документ;");
  
  Form.StatusText("Затраты...");
  З:=Query.Create();
  З.Execute(ТЗ);
  Form.StatusText("Затраты (расчет)...");
  
  While З.Next(1) Do
    While З.Next(2) Do
      If З.зСЗ.GetValue("ТипСтатьиЗатрат",EndOfMonth(З.День)).Index()<2 Then
        Continue;
      EndIf;
      а:=BegOfDay(З.День)-НачДата+1;
      СпЗ.Set(а,Number(СпЗ.Get(а))+З.зСм);

      If оДок=1 Then
        While З.Next(3) Do
          If тТабД.FindAndGoto(З.Документ,,"Док")=0 Then
            тТабД.AddLine("Док,СмЗ",З.Документ,З.зСм);
          Else
            тТабД.СмЗ:=тТабД.СмЗ+З.зСм;
          EndIf;
        EndDo;
      EndIf;
    EndDo;
  EndDo;
  
//Остальные корректировки, внутренние 2 или 3, что не вошли в отчет по прибылям и убыткам
  ТЗ:="Period From НачДата to КонДата;
  |зВН:=Storage.Затраты.ЦентрЗатрат.ВнутреннееПеремещение;
  |зСЗ:=Storage.Затраты.СтатьяЗатрат;
  |зС0:=Storage.Затраты.Сумма;
  |День:=Storage.Затраты.@DAY;
  |зТЗ:=Storage.Затраты.ТипЗаписи;"+
  ?(оВО=1,"Condition(зТЗ<2);","Condition((зТЗ=0)Or(зТЗ=2));")+_NEWLINE+
  "зСм:=SUM(зС0);
  |Condition(зВН>1);
  |Group День,зСЗ;"+
  ?(оДок=0,"","Документ:=Storage.Затраты.@LINK;Group Документ;");
  
  Form.StatusText("Затраты...");
  З:=Query.Create();
  З.Execute(ТЗ);
  Form.StatusText("Затраты (расчет)...");
  
  While З.Next(1) Do
    While З.Next(2) Do
      If З.зСЗ.GetValue("ТипСтатьиЗатрат",EndOfMonth(З.День)).Index()>1 Then
        Continue;
      EndIf;
      а:=BegOfDay(З.День)-НачДата+1;
      СпЗ2.Set(а,Number(СпЗ2.Get(а))+З.зСм);
      
      If оДок=1 Then
        While З.Next(3) Do
          If тТабД.FindAndGoto(З.Документ,,"Док")=0 Then
            тТабД.AddLine("Док,СмЗ2",З.Документ,З.зСм);
          Else
            тТабД.СмЗ2:=тТабД.СмЗ2+З.зСм;
          EndIf;
        EndDo;
      EndIf;
    EndDo;
  EndDo;
  
//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал
//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал
//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал//Формируем оп. капитал
  
  //Банки
  Form.StatusText("Расчетные счета и банковские кредиты...");
  НДата:=НачДата-1;
  ТЗ:="Period From НДата to КонДата;
  |зСчет:=Storage.Банк.БанковскийСчет;
  |День:=Storage.Банк.@DAY;
  |зКА:=Storage.Банк.БанковскийСчет.@Parent.ТипАктива;
  |зК:=Storage.Банк.БанковскийСчет.@Parent;
  |зП:=Income(Сумма);
  |зР:=Expense(Сумма);
  |зКО:=EndTotals(Сумма);
  |Group День;"+
  ?(оДок=0,"","Документ:=Storage.Банк.@LINK;Group Документ;");
  
  З:=Query.Create();
  З.Execute(ТЗ);
  ДобавитьКТаблицеОпКапитала(З,СпО,тТабД,оДок);
    
  //Кассы
  Form.StatusText("Кассы...");
  НДата:=НачДата-1;
  ТЗ:="Period From НДата to КонДата;
  |зЧЮЛ:=Storage.Касса.ЮрЛицо.флЧужоеЮЛ;Condition(зЧЮЛ=0);
  |зП:=Income(Сумма);
  |зР:=Expense(Сумма);
  |зКО:=EndTotals(Сумма);
  |День:=Storage.Касса.@DAY;
  |Group День;"+
  ?(оДок=0,"","Документ:=Storage.Касса.@LINK;Group Документ;");
  
  З:=Query.Create();
  З.Execute(ТЗ);
  ДобавитьКТаблицеОпКапитала(З,СпО,тТабД,оДок);
  
  
  //Бух. счета
  Form.StatusText("Бух. счета...");
  НДата:=НачДата-1;
  ТЗ:="Period From НДата to КонДата;
  |зЧЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо.флЧужоеЮЛ;Condition(зЧЮЛ=0);
  |зФл:=Storage.БухгалтерскиеСчета.Счет.флИспользуетсяВББЛ;Condition(зФл=1);
  |зП:=Income(Сумма);
  |зР:=Expense(Сумма);
  |зКО:=EndTotals(Сумма);
  |День:=Storage.БухгалтерскиеСчета.@DAY;
  |Group День;"+
  ?(оДок=0,"","Документ:=Storage.БухгалтерскиеСчета.@LINK;Group Документ;");
  
  З:=Query.Create();
  З.Execute(ТЗ);
  ДобавитьКТаблицеОпКапитала(З,СпО,тТабД,оДок);
  
  
  //Скидки поставщиков, остатки
  Form.StatusText("Скидки поставщиков...");
  НДата:=НачДата-1;
  ТЗ:="Period From НДата to КонДата;
  |зТипАкт:=Storage.СкидкиПоставщиков.Поставщик.ТипАктива;Condition(зТипАкт<>3);
  |зП:=Income(Сумма);
  |зР:=Expense(Сумма);
  |зКО:=EndTotals(Сумма);
  |День:=Storage.СкидкиПоставщиков.@DAY;
  |Group День;"+
  ?(оДок=0,"","Документ:=Storage.СкидкиПоставщиков.@LINK;Group Документ;");
  
  З:=Query.Create();
  З.Execute(ТЗ);
  ДобавитьКТаблицеОпКапитала(З,СпО,тТабД,оДок);

  
  //Инкассация, подотчет
  Form.StatusText("Инкассация...");
  СпПод:=List.Create(Enum.ТипыПодотчетныхОпераций.Инкассация);
  If Form.оПод.Value=1 Then
    СпПод.Add(Enum.ТипыПодотчетныхОпераций.ПодотчетнаяОперация);
  EndIf;
  
  ТЗ:="Period From НДата to КонДата;
  |зЧЮЛ:=Storage.ПодотчетныеОперации.ЮрЛицо.флЧужоеЮЛ;Condition(зЧЮЛ=0);
  |зТип:=Storage.ПодотчетныеОперации.ТипОперации;Condition(зТип IN СпПод);
  |зП:=Income(Сумма);
  |зР:=Expense(Сумма);
  |зКО:=EndTotals(Сумма);
  |День:=Storage.ПодотчетныеОперации.@DAY;
  |Group День;"+
  ?(оДок=0,"","Документ:=Storage.ПодотчетныеОперации.@LINK;Group Документ;");
  
  З:=Query.Create();
  З.Execute(ТЗ);
  ДобавитьКТаблицеОпКапитала(З,СпО,тТабД,оДок);
  
  

  //Долги
  НДата:=BegOfMonth(НачДата);
  ТЗ:="Period From НДата to КонДата;
  |зК:=Storage.Взаиморасчеты.Договор.@Parent;
  |зЧЮЛ:=Storage.Взаиморасчеты.Договор.ЮрЛицо.флЧужоеЮЛ;Condition(зЧЮЛ=0);
  |зКТА:=Storage.Взаиморасчеты.Договор.@Parent.ТипАктива;
  |зТара:=Storage.Взаиморасчеты.Тара;
  |зДП:=Storage.Взаиморасчеты.ДатаПродажи;
  |Документ:=Storage.Взаиморасчеты.@LINK;
  |зСмН:=BegTotals(Сумма);
  |зСмП:=Income(Сумма);
  |зСмР:=Expense(Сумма);
  |Condition(isEmpty(зТара));"+
  ?(оВО=1,"Condition((зКТА<2)Or(зКТА>3));","Condition(зКТА<>3);")+_NEWLINE+
  "Group зК,Документ;";
  Form.StatusText("Взаиморасчеты...");
  З:=Query.Create();
  З.Execute(ТЗ,2);
  Form.StatusText("Взаиморасчеты (расчет)...");

  While З.Next(1) Do
    ТекДата:=BegOfDay(НачДата)-1;
    См0:=З.зСмН;
    While З.Next(2) Do
      If isEmpty(З.Документ) Then
        Continue;//Нач ост.
      EndIf;
      ДП:=BegOfDay(З.Документ.DocDate);//З.зДП
      См:=З.зСмП-З.зСмР;
      
      If оДок=1 Then
        If ДП>=НачДата Then
          If тТабД.FindAndGoto(З.Документ,,"Док")=0 Then
            тТабД.AddLine("Док,СмО",З.Документ,-См);
          Else
            тТабД.СмО:=тТабД.СмО-См;
          EndIf;
        EndIf;
      EndIf;
      
      If ДП>ТекДата Then
        For i:=1 To ДП-ТекДата Do
          б:=(ТекДата+i-1)-НачДата+2;
          СпО.Set(б,Number(СпО.Get(б))+См0);
        EndDo;
        ТекДата:=ДП;
      EndIf;
      См0:=См0+См;
    EndDo;
    
    For i:=1 To КонДата-ТекДата+1 Do
      б:=(ТекДата+i-1)-НачДата+2;
      СпО.Set(б,Number(СпО.Get(б))+См0);
    EndDo;
  EndDo;
  
  
  //Остатки на складах + марж. прибыль остатков
  Товар:=Enum.ВидыНоменклатуры.Товар;
  НДата:=НачДата-1;
  ТЗ:="Period From НДата to КонДата;
  |зН:=Storage.ОстаткиТМЦ.Номенклатура;
  |зНТип:=Storage.ОстаткиТМЦ.Номенклатура.ВидНоменклатуры;
  |Condition(зНТип=Товар);
  |зСк:=Storage.ОстаткиТМЦ.Склад;
  |зСкА:=Storage.ОстаткиТМЦ.Склад.ИспользоватьВАктиве;
  |Condition(зСкА=1);
  |зКлП:=Income(Количество);
  |зКлР:=Expense(Количество);
  |зКлО:=EndTotals(Количество);
  |День:=Storage.ОстаткиТМЦ.@DAY;
  |Group День,зСк,зН;";
  Form.StatusText("Остатки ТМЦ...");
  З:=Query.Create();
  З.Execute(ТЗ,2);
  Form.StatusText("Остатки ТМЦ (расчет)...");
  
  ТО:=Tab.Create("Индекс");//Дата@КодСклада@КодТМЦ
  ТО.AddColumn("Кл",,"Number");
  
  While З.Next(1) Do
    ТекДата:=BegOfDay(З.День);
    Form.StatusText("Остатки ТМЦ (расчет "+ТекДата+")...");
    См:=0;
    While З.Next(2) Do
      зСк:=З.зСк;
      While З.Next(3) Do
        См:=См+З.зКлО*глПолучитьОсновнуюЦену(З.зН,зСк,ТекДата);
        
        //Марж. прибыль остатков
        ТО.AddLine("Индекс,Кл",""+ТекДата+"@"+зСк.Code+"@"+З.зН.Code,З.зКлО);
        If ТО.FindAndGoto(""+(ТекДата-1)+"@"+зСк.Code+"@"+З.зН.Code,,"Индекс")>0 Then
          ОстК:=ТО.Кл;
          If ТНом.FindAndGoto(З.зН,,"зН",1)=0 Then
            Continue;
          EndIf;
          ТЦ:=ТНом.ТЦ;
          а:=BegOfDay(ТекДата)-НачДата+1;
          СпМ.Set(а,Number(СпМ.Get(а))+ОстК*Number(ТЦ.GetByName(Str(ТекДата))));
        EndIf;
        
      EndDo;
    EndDo;
    а:=BegOfDay(ТекДата)-НачДата+2;
    СпО.Set(а,Number(СпО.Get(а))+См);
  EndDo;
  
  //Остатки по документам
  If оДок=1 Then
    ТЗ:="Period From НачДата to КонДата;
    |зН:=Storage.ОстаткиТМЦ.Номенклатура;
    |зНТип:=Storage.ОстаткиТМЦ.Номенклатура.ВидНоменклатуры;
    |Condition(зНТип=Товар);
    |зСк:=Storage.ОстаткиТМЦ.Склад;
    |зСкА:=Storage.ОстаткиТМЦ.Склад.ИспользоватьВАктиве;
    |Документ:=Storage.ОстаткиТМЦ.@LINK;
    |Condition(зСкА=1);
    |зКлП:=Income(Количество);
    |зКлР:=Expense(Количество);
    |Group зСк,Документ,зН;";
    
    Form.StatusText("Остатки ТМЦ по документам...");
    З:=Query.Create();
    З.Execute(ТЗ,2);
    Form.StatusText("Остатки ТМЦ по документам (расчет)...");
  
    While З.Next(1) Do
      аДата:=0;
      While З.Next(2) Do
        См0:=0;
        ТекДата:=BegOfDay(З.Документ.DocDate);
        If аДата<>ТекДата Then
          аДата:=ТекДата;
          Form.StatusText("Остатки ТМЦ по документам (расчет "+зСк+", "+ТекДата+")...");
        EndIf;  
        While З.Next(3) Do
          См0:=См0+глПолучитьОсновнуюЦену(З.зН,З.зСк,ТекДата)*(З.зКлП-З.зКлР);
        EndDo;
        If тТабД.FindAndGoto(З.Документ,,"Док")=0 Then
          тТабД.AddLine("Док,СмО",З.Документ,-См0);
        Else
          тТабД.СмО:=тТабД.СмО-См0;
        EndIf;
      EndDo;
    EndDo;
  EndIf;

  
  //Очистка списка документов 
  If оДок=1 Then
  
    Form.StatusText("Очистка списка документов...");
    i:=0;
    While тТабД.Size()>i Do
      i:=i+1;
      тТабД.CurLine:=i;
      If Round(тТабД.СмМ+тТабД.СмО-тТабД.СмЗ-тТабД.СмЗ2,3)=0 Then
        тТабД.Remove(i);
        i:=i-1;
        Continue;
      EndIf;
    EndDo;
    тТабД.Sort("Док+");

    If Form.оВсе.Value=0 Then
      //Дата@КодКонтр
      ТабКорр:=Tab.Create("Индекс,Стр");
      ТабКорр.AddColumn("Сумма",,"Number");
      
      //Дата@КонтЮЛПлюс@КонтМинус
      ТабВн:=Tab.Create("Индекс,Стр");
      ТабВн.AddColumn("Сумма",,"Number");
      
      ФлБылиУд:=0;
      Form.StatusText("Дополнительная очистка списка документов...");
      i:=0;
      While тТабД.Size()>i Do
        i:=i+1;
        тТабД.CurLine:=i;
        Д:=тТабД.Док;
        См:=Round(тТабД.СмМ+тТабД.СмО-тТабД.СмЗ-тТабД.СмЗ2,3);
        Вид:=Д.DBName();
        If Вид="КорректировкаДолга" Then
          Инд:=""+BegOfDay(Д.DocDate)+"@"+Д.Контрагент.Code;
          If ТабКорр.FindAndGoto(Инд,,"Индекс")>0 Then
            Стр2:=ТабКорр.Стр;
            If (Round(ТабКорр.Сумма+См,3)=0)And(тТабД.Get(Стр2,"ФлУд")<>1) Then
              тТабД.ФлУд:=1;
              тТабД.Set(Стр2,"ФлУд",1);
              ФлБылиУд:=1;
              ТабКорр.Remove(ТабКорр.CurLine);
              Continue;
            EndIf;
          EndIf;
          ТабКорр.AddLine("Индекс,Сумма,Стр",Инд,См,i);
        ElseIf Pos(Вид,"Реализация,ПоступлениеТМЦ,")>0 Then
          If Вид="Реализация" Then
            КПлюс:=Д.Контрагент;
            КМинус:=Д.ЮрЛицо.Контрагент;
          Else
            КМинус:=Д.Контрагент;
            КПлюс:=Д.ЮрЛицо.Контрагент;
          EndIf;
          
          Инд:=""+BegOfDay(Д.DocDate)+"@"+КПлюс.Code+"@"+КМинус.Code+"@1";
          If ТабВн.FindAndGoto(Инд,,"Индекс")>0 Then
            Стр2:=ТабВн.Стр;
            If (Round(ТабВн.Сумма+См,3)=0)And(тТабД.Get(Стр2,"ФлУд")<>1) Then
              тТабД.ФлУд:=1;
              тТабД.Set(Стр2,"ФлУд",1);
              ФлБылиУд:=1;
              ТабВн.Remove(ТабВн.CurLine);
              Continue;
            EndIf;
          EndIf;
          ТабВн.AddLine("Индекс,Сумма,Стр",Инд,См,i);
        ElseIf Pos(Вид,"ВозвратПоставщику,ВозвратОтПокупателя,")>0 Then
          If Вид="ВозвратПоставщику" Then
            КПлюс:=Д.Контрагент;
            КМинус:=Д.ЮрЛицо.Контрагент;
          Else
            КМинус:=Д.Контрагент;
            КПлюс:=Д.ЮрЛицо.Контрагент;
          EndIf;
          
          Инд:=""+BegOfDay(Д.DocDate)+"@"+КПлюс.Code+"@"+КМинус.Code+"@2";
          If ТабВн.FindAndGoto(Инд,,"Индекс")>0 Then
            Стр2:=ТабВн.Стр;
            If (Round(ТабВн.Сумма+См,3)=0)And(тТабД.Get(Стр2,"ФлУд")<>1) Then
              тТабД.ФлУд:=1;
              тТабД.Set(Стр2,"ФлУд",1);
              ФлБылиУд:=1;
              ТабВн.Remove(ТабВн.CurLine);
              Continue;
            EndIf;
          EndIf;
          ТабВн.AddLine("Индекс,Сумма,Стр",Инд,См,i);
        EndIf;
      EndDo;
  
      If ФлБылиУд Then
        i:=1;
        While i<=тТабД.Size() Do
          If тТабД.Get(i,"ФлУд")=1 Then
            тТабД.Remove(i);
            Continue;
          EndIf;
          i:=i+1;
        EndDo;
      EndIf;
    EndIf;
  EndIf;
  
  //Сортировка списка документов
  тТабД.AddColumn("ИСорт",,"Number");
  тТабД.AddColumn("ДатаДок");
  тТабД.Select();
  While тТабД.Next() Do
    тТабД.ДатаДок:=BegOfDay(тТабД.Док.DocDate);
    тТабД.ИСорт:=Abs(тТабД.СмМ+тТабД.СмО-тТабД.СмЗ-тТабД.СмЗ2);
  EndDo;
  тТабД.Sort("ДатаДок+,ИСорт-");
  
  
  оЗагол:="Сравнение по дням отчета по прибыли и операционного капитала";
  оСвойства:=глСвойстваПечатиПростые()+?(оДок=1,_NEWLINE+"Внимание! Сумма показателей по документам не будет совпадать с итого за день, так как документы без разницы исключаются из отчета!","");
  Т:=Table.Create();  
  Т.SetSourceName("Table");
  Т.CopyByX("v1",1);  
  Т.Options.FixedLine:=Т.Height();
    
  пЗатр0:=0;
  пЗатр02:=0;
  пМаржа0:=0;
  пИтого20:=0;
  For i:=1 To КонДата-НачДата+1 Do
    пДата:=BegOfDay(НачДата+i-1);
    пЭл:=FormatDate(пДата,"DD MMM YYYY г. (NN)");
    пЭлР:=GetNothing();
    пЗатр0:=пЗатр0+Number(СпЗ.Get(i));
    пЗатр02:=пЗатр02+Number(СпЗ2.Get(i));
    пЗатр:=глФРМ(Number(СпЗ.Get(i)));
    пЗатр2:=глФРМ(Number(СпЗ2.Get(i)));
    
    пМаржа0:=пМаржа0+Number(СпМ.Get(i));
    пМаржа:=глФРМ(Number(СпМ.Get(i)));
    пИтого:=глФРМ(Number(СпМ.Get(i))-Number(СпЗ.Get(i)));
    
    пИтого20:=пИтого20+Number(СпО.Get(i+1))-Number(СпО.Get(i));
    пИтого2:=глФРМ(Number(СпО.Get(i+1))-Number(СпО.Get(i)));
    
    пРазница:=глФРМ(Number(СпМ.Get(i))-Number(СпЗ.Get(i))-Number(СпЗ2.Get(i))-Number(СпО.Get(i+1))+Number(СпО.Get(i)));
    Т.CopyByX("v2",1);
    If оДок=1 Then
      глРаскраситьСтроку(Т,1,2,1,2,2,8);
    EndIf;
    If пРазница<>"" Then
      Т.Area(8,Т.Height(),8,Т.Height()).ColorProfile:=28+оДок;
    EndIf;
    
    If оДок=1 Then
      НачВыс:=Т.Height();
      If тТабД.FindAndGoto(пДата,,"ДатаДок")>0 Then
        i2:=тТабД.CurLine;
        Repeat
          тТабД.CurLine:=i2;
          пЭл:=тТабД.Док;
          пЭлР:=тТабД.Док;
          пЗатр:=глФРМ(тТабД.СмЗ);
          пЗатр2:=глФРМ(тТабД.СмЗ2);
          пМаржа:=глФРМ(тТабД.СмМ);
          пМаржа:=глФРМ(тТабД.СмМ);
          пИтого:=глФРМ(тТабД.СмМ-тТабД.СмЗ);
          пИтого2:=глФРМ(-тТабД.СмО);
          пРазница:=глФРМ(тТабД.СмМ+тТабД.СмО-тТабД.СмЗ-тТабД.СмЗ2);
          Т.CopyByX("v2",1);
          глРаскраситьСтроку(Т,1,2,2,2,2,8);
          If пРазница<>"" Then
            Т.Area(8,Т.Height(),8,Т.Height()).ColorProfile:=28;
          EndIf;
          
          i2:=i2+1;
        Until _Or(i2>тТабД.Size(),тТабД.Get(i2,"ДатаДок")<>пДата);
        
        If Form.оУровни.Value=1 Then
          глДобавитьУровень(Т,НачВыс,Т.Height());
        EndIf;
      EndIf;  
    EndIf;
  EndDo;
  пЗатр:=глФРМ(пЗатр0);
  пЗатр2:=глФРМ(пЗатр02);
  пМаржа:=глФРМ(пМаржа0);
  пИтого:=глФРМ(пМаржа0-пЗатр0);
  пИтого2:=глФРМ(пИтого20);
  пРазница:=глФРМ(пМаржа0-пЗатр0-пЗатр02-пИтого20);
  Т.CopyByX("v3",1);  
  
  If Form.оУровни.Value=1 Then
    Т.Levels().Close();
  EndIf;
  глПечатнаяФормаОтчета(Т,Param,оЗагол);
EndFunction


Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

