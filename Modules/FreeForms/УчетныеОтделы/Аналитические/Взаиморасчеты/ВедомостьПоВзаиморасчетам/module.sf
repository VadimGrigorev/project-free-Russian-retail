//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var аТипУчета Export;

Function лкОбработатьВыводимоеЗначениеВОтчет(ByRef пЭл,ByRef пЭлР,ByRef СТарой2,ИмяПер,оТипАктива,ТипДок)
    If ИмяПер="ЗТА" Then  
      оТипАктива.Get(Min(Max(пЭл+2,2),6),пЭл);
      пЭлР:=GetNothing();      
    ElseIf ИмяПер="ЗТД2" Then  
      пЭл:=ТипДок.Get(Min(Max(пЭл+1,1),6));
      пЭлР:=GetNothing();      
    ElseIf ИмяПер="ЗВКЛ" Then  
      пЭл:=?(пЭл=0,"Исключенные из кн. продаж/покупок","Включенные в кн. продаж/покупок");
      пЭлР:=GetNothing();      
    ElseIf IsEmpty(пЭл) Then
      If ИмяПер="ДОКУМЕНТ" Then  
        пЭл:="< Начальный остаток >";
      ElseIf ИмяПер="ЗН" Then  
        пЭл:="Денежные средства";
        пКод:="";
        СТарой2:=0;
      Else
        пЭл:="< Не выбран >";
      EndIf;
    EndIf;
EndFunction

Function ВывестиИтого(Т,ТИтого,СТарой,оСумНДС)
  ТИтого.CurLine:=ТИтого.Size();
  ГорПолей:=глПолучитьИзМодуля("ГорПолей");
  For i:=1 To ГорПолей Do
    Т.Area(4-оСумНДС*2+i*2,ТИтого.Выс-СТарой,4-оСумНДС*2+i*2,ТИтого.Выс-СТарой).Text:=глФРМ(ТИтого.Get(ТИтого.CurLine,"зПр"+i));
    Т.Area(4-оСумНДС*2+i*2+1,ТИтого.Выс-СТарой,4-оСумНДС*2+i*2+1,ТИтого.Выс-СТарой).Text:=глФРМ(ТИтого.Get(ТИтого.CurLine,"зРс"+i));
    If СТарой Then
      Т.Area(4-оСумНДС*2+i*2,ТИтого.Выс,4-оСумНДС*2+i*2,ТИтого.Выс).Text:=глФРМ(ТИтого.Get(ТИтого.CurLine,"зПрК"+i));
      Т.Area(4-оСумНДС*2+i*2+1,ТИтого.Выс,4-оСумНДС*2+i*2+1,ТИтого.Выс).Text:=глФРМ(ТИтого.Get(ТИтого.CurLine,"зРсК"+i));
    EndIf;
  EndDo;
  ТИтого.Remove(ТИтого.Size());
EndFunction


Function Группировка(З,ТабФорма,Т,Ур,УрВсего,УрВсегоГ,ТИтого,СТарой=0,СтлИнд=0)
  GroupCount:=глПолучитьИзМодуля("GroupCount");
  If Ур>GroupCount Then
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  ТипДок:=глПолучитьИзМодуля("ТипДок");
  оТипАктива:=глПолучитьУстановку(ТабФорма,"оТипАктива");
  оСумНДС:=Number(глПолучитьУстановку(ТабФорма,"оСумНДС"));
  ГорПолей:=глПолучитьИзМодуля("ГорПолей");
  
  ИмяПер:=З.Groups(Ур);
  While З.Next(Ур) Do
    СТарой2:=СТарой;
    
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    пКод:="";
    If Pos("DB.REF",TypeStr(пЭлР))>0 Then
      пКод:=глПолучитьКод(пЭлР);
    EndIf;
    
    лкОбработатьВыводимоеЗначениеВОтчет(пЭл,пЭлР,СТарой2,ИмяПер,оТипАктива,ТипДок);
    If Ур>УрВсего Then
      СТарой2:=СТарой;
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);

    Имя:="v5";
    пНач:=З.зНачОст;
    пНачАванс:=глФРМ(?(пНач<0,-пНач,0));
    пНачДолг:=глФРМ(?(пНач>0,пНач,0));
    пПриход:=глФРМ(З.зПриход);
    пРасход:=глФРМ(З.зРасход);
    пКон:=З.зКонОст;
    пКонАванс:=глФРМ(?(пКон<0,-пКон,0));
    пКонДолг:=глФРМ(?(пКон>0,пКон,0));
    
    If СТарой2 Then
      Имя:="v2";
      пНач:=З.зНачОстКол;
      пНачКолАванс:=глФРМЧл(?(пНач<0,-пНач,0));
      пНачКолДолг:=глФРМЧл(?(пНач>0,пНач,0));
      пПриходКол:=глФРМЧл(З.зПриходКол);
      пРасходКол:=глФРМЧл(З.зРасходКол);
      пКон:=З.зКонОстКол;
      пКонКолАванс:=глФРМЧл(?(пКон<0,-пКон,0));
      пКонКолДолг:=глФРМЧл(?(пКон>0,пКон,0));
      
      пНачКолАванс:=пНачКолАванс+?(пНачКолАванс="",""," шт.");
      пНачКолДолг:=пНачКолДолг+?(пНачКолДолг="",""," шт.");
      пПриходКол:=пПриходКол+?(пПриходКол="",""," шт.");
      пРасходКол:=пРасходКол+?(пРасходКол="",""," шт.");
      пКонКолАванс:=пКонКолАванс+?(пКонКолАванс="",""," шт.");
      пКонКолДолг:=пКонКолДолг+?(пКонКолДолг="",""," шт.");
    EndIf;  
    
    If Ур>УрВсего Then
      СтлИнд:=СтлИнд+1;
      Т.CopyByX(Имя+"|h3");
      ТИтого.Select();
      While ТИтого.Next() Do
        ТИтого.Set(ТИтого.CurLine,"зПр"+СтлИнд,ТИтого.Get(ТИтого.CurLine,"зПр"+СтлИнд)+З.зПриход);
        ТИтого.Set(ТИтого.CurLine,"зРс"+СтлИнд,ТИтого.Get(ТИтого.CurLine,"зРс"+СтлИнд)+З.зРасход);
        If СТарой2 Then
          ТИтого.Set(ТИтого.CurLine,"зПрК"+СтлИнд,ТИтого.Get(ТИтого.CurLine,"зПрК"+СтлИнд)+З.зПриходКол);
          ТИтого.Set(ТИтого.CurLine,"зРсК"+СтлИнд,ТИтого.Get(ТИтого.CurLine,"зРсК"+СтлИнд)+З.зРасходКол);
        EndIf;  
      EndDo;
    ElseIf УрВсегоГ>0 Then
      СтлИнд:=0;
      Т.CopyByX(Имя+"|h2",1);
      If not оСумНДС then
        Т.CopyByX(Имя+"|h5");
      EndIf;
      If Ур<УрВсего Then
        For i:=1 To ГорПолей Do
          пПриход:="";
          пРасход:="";
          пПриходКол:="";
          пРасходКол:="";
          Т.CopyByX(Имя+"|h3");
        EndDo;
        If not оСумНДС then
          Т.CopyByX(Имя+"|h6");
        EndIf;
        Т.CopyByX(Имя+"|h4");
        ТИтого.AddLine("Выс",Т.Height());
      EndIf;  
    ElseIf оСумНДС then
      Т.CopyByX(Имя+"|h2",1);
      Т.CopyByX(Имя+"|h3");
      Т.CopyByX(Имя+"|h4");
    Else
      Т.CopyByX(Имя+"|h1",1);
    EndIf;  
    
    If Ур<=УрВсего Then
      If СТарой2 Then
        Т.Area(3,Т.Height(),3,Т.Height()-1).Merge();
        Т.Area(2,Т.Height(),2,Т.Height()-1).Merge();
      EndIf;  
      НачВыс:=Т.Height();
      Form.StatusText(НачВыс);
      Form.UpdateProgress(-1,,""+Т.Height());
      СтВсего:=9-оСумНДС*4;
      If УрВсегоГ>0 Then
        СтВсего:=СтВсего+ГорПолей*2-2;
      EndIf;  
      глРаскраситьСтроку(Т,1+СТарой2,3,Ур,УрВсего,2,СтВсего,пЭлР);
      ТИтого.CurLine:=0;
    EndIf;  
    
    Группировка(З,ТабФорма,Т,Ур+1,УрВсего,УрВсегоГ,ТИтого,СТарой2,СтлИнд);
    
    If УрВсегоГ>0 Then
      If Ур=УрВсего Then
        If оСумНДС then
          Т.CopyByX(Имя+"|h4");
        Else
          Т.CopyByX(Имя+"|h6");
          Т.CopyByX(Имя+"|h4");
        EndIf;
      ElseIf Ур<УрВсего Then
        ВывестиИтого(Т,ТИтого,СТарой2,оСумНДС);
      EndIf;
    EndIf;
    
    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
EndFunction

Function КоличествоГорПолей(З,флПропуститьУровней,Уровень=1)
  GroupCount:=глПолучитьИзМодуля("GroupCount");
  Result:=0;
  If Уровень<=флПропуститьУровней Then
    ИмяПер:=З.Groups(Уровень);
    While З.Next(Уровень) Do
      пЭл:=З.Get(ИмяПер);
      If _And(pos("DB.REF.",TypeStr(пЭл))>0,not isEmpty(пЭл),пЭл.isFolder()) Then
        Continue;
      EndIf;
      Result:=КоличествоГорПолей(З,флПропуститьУровней,Уровень+1);
      Break;
    EndDo;
  ElseIf Уровень<=GroupCount Then
    While З.Next(Уровень) Do
      Result:=Result+1+КоличествоГорПолей(З,флПропуститьУровней,Уровень+1);
    EndDo;
  EndIf;
EndFunction


Function ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,Уровень,флПропуститьУровней)
  If Уровень>флПропуститьУровней Then
    оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
    ТипДок:=глПолучитьИзМодуля("ТипДок");
    оТипАктива:=глПолучитьУстановку(ТабФорма,"оТипАктива");
    GroupCount:=глПолучитьИзМодуля("GroupCount");
    
    While З.Next(Уровень) Do
      Чл:=Т.CurPutX;
      ИмяПер:=З.Groups(Уровень);
      пГруппировка:=З.Get(ИмяПер);
      пЭлР:=0;
      лкОбработатьВыводимоеЗначениеВОтчет(пГруппировка,пЭлР,пЭлР,ИмяПер,оТипАктива,ТипДок);
      глОбработатьВыводимоеЗначениеВОтчет(пГруппировка,ИмяПер);
      Т.CopyByX("v8|h3");
      If Уровень<GroupCount Then
        ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,Уровень+1,флПропуститьУровней);
        //Т.Area(Т.CurPutX-1,Т.Height(),Чл,Т.Height()).Merge();
        //If (оУровни=1)And(Уровень<GroupCount) Then
        If (1=1)And(Уровень<GroupCount) Then
          глДобавитьУровень(Т,Чл+1,Т.CurPutX-1,1,0);
        EndIf;
      EndIf;  
    EndDo;
  Else
    ИмяПер:=З.Groups(Уровень);
    While З.Next(Уровень) Do
      пЭл:=З.Get(ИмяПер);
      If _And(pos("DB.REF.",TypeStr(пЭл))>0,not isEmpty(пЭл),пЭл.isFolder()) Then
        Continue;
      EndIf;
      ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,Уровень+1,флПропуститьУровней);
      Break;
    EndDo;
  EndIf;  
EndFunction


Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  оГруппыГ:=глПолучитьУстановку(ТабФорма,"оГруппыГ");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оТипУчета:=глПолучитьУстановку(ТабФорма,"оТипУчета").SelectedLine;
  оТипДолга:=глПолучитьУстановку(ТабФорма,"оТипДолга").SelectedLine;
  оТипАктива:=глПолучитьУстановку(ТабФорма,"оТипАктива").SelectedLine;
  оВключить:=глПолучитьУстановку(ТабФорма,"оВключить").SelectedLine;
  оТипДокумента:=глПолучитьУстановку(ТабФорма,"оТипДокумента").SelectedLine;
  оСтавкаНДС:=глПолучитьУстановку(ТабФорма,"оСтавкаНДС").SelectedLine;
  оСумНДС:=Number(глПолучитьУстановку(ТабФорма,"оСумНДС"));
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,0) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.Взаиморасчеты";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@Договор.ЮрЛицо,оН@зН@Тара,оК@зК@Договор.@Parent,оД@зД@Договор","оГруппы",спРезПеременные);
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,0,0,"","оГруппыГ",спРезПеременные,1,оГруппы.Size());
    
    If оТипУчета>1 Then
      If isEmpty(спРезПеременные.GetByName("зН")) Then
        ТЗ:=ТЗ+"зН:=Stor.Взаиморасчеты.Тара;";
      EndIf;
      If оТипУчета=2 Then
        ТЗ:=ТЗ+"Condition(IsEmpty(зН));"+_NEWLINE;
      ElseIf оТипУчета=3 Then
        ТЗ:=ТЗ+"Condition(NOT IsEmpty(зН));"+_NEWLINE;
      EndIf;
    EndIf;  
    
    ппТипДолга:=0;
    If оТипДолга>1 Then
      If pos("зПП:=",ТЗ)=0 Then
        ТЗ:=ТЗ+"зПП:=Stor.Взаиморасчеты.ВидДолга;";
      EndIf;
      If оТипДолга=2 Then
        ппТипДолга:=Enum.ПокупательПоставщик.Покупатель;
        ТЗ:=ТЗ+"Condition(зПП=ппТипДолга);"+_NEWLINE;
      ElseIf оТипДолга=3 Then
        ппТипДолга:=Enum.ПокупательПоставщик.Поставщик;
        ТЗ:=ТЗ+"Condition(зПП=ппТипДолга);"+_NEWLINE;
      EndIf;
    EndIf;
    
    If оТипАктива>1 Then
      If pos("зТА:=",ТЗ)=0 Then
        ТЗ:=ТЗ+"зТА:=Stor.Взаиморасчеты.Договор.@Parent.ТипАктива;";
      EndIf;
      If оТипАктива=2 Then
        ТЗ:=ТЗ+"Condition(зТА=0);"+_NEWLINE;
      ElseIf оТипАктива=3 Then
        ТЗ:=ТЗ+"Condition(зТА=1);"+_NEWLINE;
      ElseIf оТипАктива=4 Then
        ТЗ:=ТЗ+"Condition(зТА=2);"+_NEWLINE;
      ElseIf оТипАктива=5 Then
        ТЗ:=ТЗ+"Condition(зТА=3);"+_NEWLINE;
      ElseIf оТипАктива=6 Then
        ТЗ:=ТЗ+"Condition(зТА=4);"+_NEWLINE;
      EndIf;
    EndIf;
    
    If оВключить>1 Then
      ТЗ:=ТЗ+"зВкл:=Stor.Взаиморасчеты.УчитыватьВНалоговомУчете;";
      If оВключить=2 Then
        ТЗ:=ТЗ+"Condition(зВкл>0);"+_NEWLINE;
      ElseIf оВключить=3 Then
        ТЗ:=ТЗ+"Condition(зВкл=0);"+_NEWLINE;
      EndIf;
    EndIf;
    
    If оТипДокумента>1 Then
      ТЗ:=ТЗ+"зТД:=Stor.Взаиморасчеты.ТипДокумента;";
      If оТипДокумента=2 Then
        ТЗ:=ТЗ+"Condition(зТД=1);"+_NEWLINE;
      ElseIf оТипДокумента=3 Then
        ТЗ:=ТЗ+"Condition(зТД=2);"+_NEWLINE;
      ElseIf оТипДокумента=4 Then
        ТЗ:=ТЗ+"Condition(зТД=3);"+_NEWLINE;
      ElseIf оТипДокумента=5 Then
        ТЗ:=ТЗ+"Condition((зТД=4)or(зТД=5));"+_NEWLINE;
      ElseIf оТипДокумента=6 Then
        ТЗ:=ТЗ+"Condition(зТД=4);"+_NEWLINE;
      ElseIf оТипДокумента=7 Then
        ТЗ:=ТЗ+"Condition(зТД=5);"+_NEWLINE;
      EndIf;
    EndIf;
    
    ндсБезНДС:=Enum.СтавкиНДС.БезНДС;
    ндс0:=Enum.СтавкиНДС.НДС0;
    ндс10:=Enum.СтавкиНДС.НДС10;
    ндс18:=Enum.СтавкиНДС.НДС18;
    ндс20:=Enum.СтавкиНДС.НДС20;
    If оСтавкаНДС>1 Then
      If pos("зНДС:=",ТЗ)=0 Then
        ТЗ:=ТЗ+"зНДС:=Stor.Взаиморасчеты.СтавкаНДС;";
      EndIf;
      If оСтавкаНДС=2 Then
        ТЗ:=ТЗ+"Condition(isEmpty(зНДС));"+_NEWLINE;
      ElseIf оСтавкаНДС=3 Then
        ТЗ:=ТЗ+"Condition(зНДС=ндсБезНДС);"+_NEWLINE;
      ElseIf оСтавкаНДС=4 Then
        ТЗ:=ТЗ+"Condition(зНДС=ндс0);"+_NEWLINE;
      ElseIf оСтавкаНДС=5 Then
        ТЗ:=ТЗ+"Condition((зНДС=ндсБезНДС)or((зНДС=ндс0))or(isEmpty(зНДС)));"+_NEWLINE;
      ElseIf оСтавкаНДС=6 Then
        ТЗ:=ТЗ+"Condition((зНДС<>ндсБезНДС)And((зНДС<>ндс0))And(NOT isEmpty(зНДС)));"+_NEWLINE;
      ElseIf оСтавкаНДС=7 Then
        ТЗ:=ТЗ+"Condition(зНДС=ндс10);"+_NEWLINE;
      ElseIf оСтавкаНДС=8 Then
        ТЗ:=ТЗ+"Condition(зНДС=ндс18);"+_NEWLINE;
      ElseIf оСтавкаНДС=9 Then
        ТЗ:=ТЗ+"Condition(зНДС=ндс20);"+_NEWLINE;
      EndIf;
    EndIf;
    
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
    УрВсегоГ:=глКоличествоУровнейИзФильтров(оГруппыГ);
    
    ФлЛишняяГруппа:=0;
    грТара:=_Or(глГруппировкаАктивна("По таре",оГруппы),глГруппировкаАктивна("По таре",оГруппыГ));
    If оСумНДС=1 Then
      If not _Or(глГруппировкаАктивна("По ставкам НДС (только движения)",оГруппы),глГруппировкаАктивна("По ставкам НДС (только движения)",оГруппыГ)) Then
        If pos("зНДС:=",ТЗ)=0 Then
          ТЗ:=ТЗ+"зНДС:=Stor.Взаиморасчеты.СтавкаНДС;";
        EndIf;
        ФлЛишняяГруппа:=1;
        If УрВсегоГ>0 Then
          ТЗ:=ТЗ+"HorGroup зНДС;"+_NEWLINE;
        Else
          ТЗ:=ТЗ+"Group зНДС;"+_NEWLINE;
        EndIf;  
      EndIf;
    EndIf;
    
    ТЗ:=ТЗ+
      ?(грТара=0,"","зРасходКол:=Expense(Количество);
      |зНачОстКол:=BegTotals(Количество);
      |зПриходКол:=Income(Количество);
      |зКонОстКол:=EndTotals(Количество);")+
      ?(оСумНДС=0,
      "зРасход:=Expense(Сумма);
      |зНачОст:=BegTotals(Сумма);
      |зПриход:=Income(Сумма);
      |зКонОст:=EndTotals(Сумма);",
      "зРасход:=Expense(Сумма);
      |зНачОст:=0;
      |зПриход:=Income(Сумма);
      |зКонОст:=0;
      |Postprocessing (
      |ForceAggregateSingleLineLev1 1;
      |Aggregate1 зРасход As SUM(зРасход*(CASE зНДС WHEN ндс10 THEN 10/110 WHEN ндс18 THEN 18/118 WHEN ндс20 THEN 20/120 ELSE 0 END));
      |Aggregate1 зПриход As SUM(зПриход*(CASE зНДС WHEN ндс10 THEN 10/110 WHEN ндс18 THEN 18/118 WHEN ндс20 THEN 20/120 ELSE 0 END));
      |)");
  
    З:=Query.Create();
    З.Execute(ТЗ);
    глСохранитьВМодуле("GroupCount",З.GroupCount()-ФлЛишняяГруппа);
    
    If УрВсегоГ>0 Then
      ГорПолей:=КоличествоГорПолей(З,УрВсего);
    Else
      ГорПолей:=1;
    EndIf;
    глСохранитьВМодуле("ГорПолей",ГорПолей);
  
    оЗагол:="Ведомость по взаиморасчетам";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оН,оК,оД",?(оТипУчета>1,"Тип учета@оТипУчета","")+
      ?(оТипДолга>1,",Тип долга@оТипДолга","")+?(оТипАктива>1,",Тип актива@оТипАктива","")+?(оВключить>1,",Включать в книги п/п@оВключить","")+
      ?(оТипДокумента>1,",Тип документов@оТипДокумента","")+?(оСтавкаНДС>1,",Ставки НДС@оСтавкаНДС",""),"Выводить суммы НДС (только приход и расход)@оСумНДС");
    
    З.First();
    Сп:=СпУстановки;
    ТИтого:=Tab.Create("Выс");
    if УрВсегоГ>0 Then
      Т.CopyByX("v1|h2",1);
      If not оСумНДС Then
        Т.CopyByX("v1|h5");
      EndIf;
      For i:=1 To ГорПолей Do
        Т.CopyByX("v1|h3");
        ТИтого.AddColumn("зПр"+i,,"NUMBER");
        ТИтого.AddColumn("зРс"+i,,"NUMBER");
        ТИтого.AddColumn("зПрК"+i,,"NUMBER");
        ТИтого.AddColumn("зРсК"+i,,"NUMBER");
      EndDo;
      If not оСумНДС Then
        Т.CopyByX("v1|h6");
      EndIf;
      Т.CopyByX("v1|h4");
      
      //Вывод шабки с горизонтальным разрезом
      Т.CopyByX("v8|h2",1);
      If not оСумНДС Then
        Т.CopyByX("v8|h5");
      EndIf;
      ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,1,УрВсего);
      If not оСумНДС Then
        Т.CopyByX("v8|h6");
      EndIf;
      Т.CopyByX("v8|h4");
      
      Т.CopyByX("v4|h2",1);
      If not оСумНДС Then
        Т.CopyByX("v4|h5");
      EndIf;
      For i:=1 To ГорПолей Do
        Т.CopyByX("v4|h3");
      EndDo;
      If not оСумНДС Then
        Т.CopyByX("v4|h6");
      EndIf;
      Т.CopyByX("v4|h4");
      Т.Area(2,Т.Height()-2,2,Т.Height()).Merge();
      Т.Area(3,Т.Height()-2,3,Т.Height()).Merge();
      If not оСумНДС Then
        Т.Area(4,Т.Height()-2,5,Т.Height()-1).Merge();
        Т.Area(6+ГорПолей*2,Т.Height()-2,7+ГорПолей*2,Т.Height()-1).Merge();
      EndIf;
    ElseIf оСумНДС then
      Т.CopyByX("v1|h2",1);
      Т.CopyByX("v1|h3");
      Т.CopyByX("v1|h4");
      Т.CopyByX("v4|h2",1);
      Т.CopyByX("v4|h3");
      Т.CopyByX("v4|h4");
    Else
      Т.CopyByX("v1",1);
      Т.CopyByX("v4",1);
    EndIf;  
    Т.Options.FixedLine:=Т.Height();
    Т.Area(2,3,?(оСумНДС=0,9,5),3).Merge();
    ТИтого.AddLine("Выс",0);
    
    пНач:=З.BegTotals("зНачОст");
    пНачАванс:=глФРМ(?(пНач<0,-пНач,0));
    пНачДолг:=глФРМ(?(пНач>0,пНач,0));
    пПриход:=глФРМ(З.Compute("зПриход",,,оСумНДС));
    пРасход:=глФРМ(З.Compute("зРасход",,,оСумНДС));
    пКон:=З.EndTotals("зКонОст");
    пКонАванс:=глФРМ(?(пКон<0,-пКон,0));
    пКонДолг:=глФРМ(?(пКон>0,пКон,0));
    
    If грТара Then
      пНач:=З.BegTotals("зНачОстКол");
      пНачКолАванс:=глФРМЧл(?(пНач<0,-пНач,0));
      пНачКолДолг:=глФРМЧл(?(пНач>0,пНач,0));
      пПриходКол:=глФРМЧл(З.Compute("зПриходКол",,,оСумНДС));
      пРасходКол:=глФРМЧл(З.Compute("зРасходКол",,,оСумНДС));
      пКон:=З.EndTotals("зКонОстКол");
      пКонКолАванс:=глФРМЧл(?(пКон<0,-пКон,0));
      пКонКолДолг:=глФРМЧл(?(пКон>0,пКон,0));
      
      пНачКолАванс:=пНачКолАванс+?(пНачКолАванс="",""," шт.");
      пНачКолДолг:=пНачКолДолг+?(пНачКолДолг="",""," шт.");
      пПриходКол:=пПриходКол+?(пПриходКол="",""," шт.");
      пРасходКол:=пРасходКол+?(пРасходКол="",""," шт.");
      пКонКолАванс:=пКонКолАванс+?(пКонКолАванс="",""," шт.");
      пКонКолДолг:=пКонКолДолг+?(пКонКолДолг="",""," шт.");
    EndIf;  
    глСимулироватьСальдоПоДокументам(З,"Документ:зНачОст:зПриход:зРасход:зКонОст");
    If грТара Then
      глСимулироватьСальдоПоДокументам(З,"Документ:зНачОстКол:зПриходКол:зРасходКол:зКонОстКол");
    EndIf;  
    
    З.First();
    Группировка(З,ТабФорма,Т,1,УрВсего,УрВсегоГ,ТИтого,грТара);
    If грТара Then
      if УрВсегоГ>0 Then
        Т.CopyByX("v3|h2",1);
        If not оСумНДС Then
          Т.CopyByX("v3|h5");
        EndIf;
        For i:=1 To ГорПолей Do
          пПриход:="";
          пРасход:="";
          пПриходКол:="";
          пРасходКол:="";
          Т.CopyByX("v3|h3");
        EndDo;
        If not оСумНДС Then
          Т.CopyByX("v3|h6");
        EndIf;
        Т.CopyByX("v3|h4");
        
        ТИтого.CurLine:=1;
        ТИтого.Выс:=Т.Height()-1;
        ВывестиИтого(Т,ТИтого,1,оСумНДС);
      ElseIf оСумНДС then
        Т.CopyByX("v3|h2",1);
        Т.CopyByX("v3|h3");
        Т.CopyByX("v3|h4");
      Else
        Т.CopyByX("v3",1);
      EndIf;  
    Else
      if УрВсегоГ>0 Then
        Т.CopyByX("v6|h2",1);
        If not оСумНДС Then
          Т.CopyByX("v6|h5");
        EndIf;
        For i:=1 To ГорПолей Do
          пПриход:="";
          пРасход:="";
          Т.CopyByX("v6|h3");
        EndDo;
        If not оСумНДС Then
          Т.CopyByX("v6|h6");
        EndIf;
        Т.CopyByX("v6|h4");
        ТИтого.CurLine:=1;
        ТИтого.Выс:=Т.Height();
        ВывестиИтого(Т,ТИтого,0,оСумНДС);
        
        Т.CopyByX("v7|h2",1);
        If not оСумНДС Then
          Т.CopyByX("v7|h5");
        EndIf;
        For i:=1 To ГорПолей Do
          Т.CopyByX("v7|h3");
        EndDo;
        If not оСумНДС Then
          Т.CopyByX("v7|h6");
        EndIf;
        Т.CopyByX("v7|h4");
      ElseIf оСумНДС then
        Т.CopyByX("v6|h2",1);
        Т.CopyByX("v6|h3");
        Т.CopyByX("v6|h4");
        
        Т.CopyByX("v7|h2",1);
        Т.CopyByX("v7|h3");
        Т.CopyByX("v7|h4");
      Else
        Т.CopyByX("v6",1);
        Т.CopyByX("v7",1);
      EndIf;  
    EndIf;

    If not ФлЛок Then
      глФормированиеОтчетаДобавитьВСобытия(оЗагол,НачДата,КонДата,"оЮЛ,оК,оД,оН");
    EndIf;
        
    If глЗагрузкаРезультатаОтчетаВМультиФильтр(Param,З,"зКонОст"+?(грТара=0,"","Кол")) Then
      Form.Close(0);
      Exit;
    EndIf;
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

