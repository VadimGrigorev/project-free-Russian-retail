//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var аТипВыборки Export;
Var спДопСв Export;

Function ДобавитьТипыДопСвойств(aList,спДопСв,Вид,Стр,Чл)
  аЭл:=Ref.общТипыДополнительныхСвойств;
  аЭл.Select("ВидСправочника,@Status",Вид,0);
  While аЭл.Next() Do
    aList.Add(Стр+" "+Trim(аЭл.Name)+"#"+Чл+"@"+Trim(аЭл.Name)+"@@@15");
    спДопСв.Add(аЭл.Copy());
    Чл:=Чл+1;
  EndDo;
EndFunction

Function ОбновитьТексты(флИзменилсяВидОтчета=0)
  оТипВыборки:=Form.оТипВыборки.Value.SelectedLine;
  аТипВыборки:=оТипВыборки;
  
  //оТипВыборки: 1 -- договоры
  //             2 -- контрагенты (без: ЮЛ,Д)
  
  Form.тЮЛ.isDisabled:=(оТипВыборки=2);
  Form.оЮЛ.isDisabled:=(оТипВыборки=2);
  Form.тД.isDisabled:=(оТипВыборки=2);
  Form.оД.isDisabled:=(оТипВыборки=2);
  
  aList:=List.Create();
  If оТипВыборки<>2 Then
    aList.Add("По юридическим лицам#ЮрЛицо#зЮЛ");
  EndIf;
  aList.Add("По контрагентам#!@Parent#зК");
  If оТипВыборки<>2 Then
    aList.Add("По договорам##зД");
  EndIf;
  глЗаполнитьТаблицуФильтров("оГруппы",aList);
  глОбновитьТаблицуФильтров("оГруппы");
  If флИзменилсяВидОтчета=1 Then
    глУдалитьНесовместимыеФильтрыИзТаблицы("оГруппы","Ref."+Form.оТипВыборки.Value.Get(оТипВыборки));
  EndIf;  

  //Доп. поля
  //Индекс@наим. столбца@требуемый запрос@выравнивание@ширина
  aList:=List.Create("Код элемента#!100@Код@@@10","Наименование элемента#!101@Элемент@@@40","Код контрагента#24@Код контрагента@@@10","Наименование контрагента#13@Контрагент@@@40",
    "Количество реализаций#1@Реализаций@1@1@10","Количество возвратов#2@Возвратов@1@1@10",
    "Количество активных клиентов#22@Активных клиентов@3@1@10","Количество неактивных клиентов#23@Неактивных клиентов@3@1@10",
    "Среднее SKU клиента#26@Среднее SKU клиента@5@1@12");
  If оТипВыборки<>2 Then
    aList.Add("Наименование договора#14@Договор@@@30");
    aList.Add("Номер договора#15@№ договора@@@15");
  EndIf;  
  aList.Add("ИНН контрагента#31@ИНН@@@15");
  aList.Add("КПП контрагента или точки#40@КПП@@@10");
  aList.Add("Юридический адрес контрагента#33@Юр. адрес@@@40");
  aList.Add("Фактический адрес контрагента#38@Факт. адрес@@@40");
  aList.Add("Лицензия на алкоголь#35@Лицензия на алкоголь@@@20");
  aList.Add("Комментарий из справочника#32@Комментарий@@@25");
  If оТипВыборки<>2 Then
    aList.Add("Дата заключения договора#16@Дата договора@@@10");
    aList.Add("Дней кредита в договоре#17@Дней кредита@@1@10");
    aList.Add("Сумма кредита в договоре#18@Сумма кредита@@1@15");
  EndIf;  
  
  Чл:=500;спДопСв:=List.Create();
  ДобавитьТипыДопСвойств(aList,спДопСв,Enum.ВидыСправочниковСДопСвойствами.кнтКонтрагенты,"(кнт)",Чл);
  If оТипВыборки<>2 Then
    ДобавитьТипыДопСвойств(aList,спДопСв,Enum.ВидыСправочниковСДопСвойствами.кнтДоговоры,"(дгв)",Чл);
  EndIf;
  глЗаполнитьСписокПоказателей("оПоля",aList);
  глОбновитьСписокПоказателей("оПоля");
  If флИзменилсяВидОтчета=1 Then
    aList:=Form.оПоля.Value;
    i:=0;
    While i<aList.Size() Do
      i:=i+1;
      If Pos("(польз)",aList.GetName(i))=1 Then
        aList.Remove(i);
        i:=i-1;
      EndIf;
    EndDo;
  EndIf;
EndFunction

Function ДобавитьПользовательскиеПоляКЗапросу(ByRef ТЗ,оПоля)
  //Добавление польз. переменных к полям
  Индекс:=0;
  For i:=1 to оПоля.Size() Do
    If оПоля.Check(i)=0 Then
      Continue;
    EndIf;
    Индекс:=Индекс+1;;
    //Stor.ОстаткиТМЦ.Номенклатура.флАлкогольнаяПродукция
    СтрПуть:=оПоля.Get(i);
    If Pos("(польз)",оПоля.GetName(i))<>1 Then
      If Pos("@",СтрПуть)>0 Then
        Continue;
      EndIf;
    EndIf;  
    ТЗ:=ТЗ+"зСпПерем"+Индекс+":="+СтрПуть+";"+_NEWLINE;
  EndDo;  
EndFunction

Function Синхронизировать(ЗП,З,Тек,Группы,ТипГр,Всего,ByRef ВерхГрп)
  ЗП.First();
  Тк:="";
  ТкГрп:="";
  ВерхГрп:=0;
  Ур:=0;
  While Группы>"" Do
    TearStr(Группы,"@");
    ИмяПер:=TearStr(Группы,"@");
    
    //Устраняем папки
    пЭл:=З.Get(ИмяПер);
    If ?((Pos("DB.REF.",typestr(пЭл))>0)And(not isEmpty(пЭл)),пЭл.isFolder(),0) Then
      Exit 0;
    EndIf;
    
    ВерхГрп:=ВерхГрп+1;
    Тк:=Тк+?(Тк>"",",","")+"З."+ИмяПер;
    ТкГрп:=ТкГрп+?(ТкГрп>"",",","")+ИмяПер;
    Ур:=Ур+1;
    If ИмяПер=ТипГр Then
      Break;
    EndIf;
    If Ур=Всего Then
      If Группы>"" Then
        Exit 0;
      EndIf;
      Break;
    EndIf;
  EndDo;
  //@LEVEL=1 -- последняя группировка, @LEVEL=Всего -- первая
  Стр:="ЗП.ResultTable.LocateAndGoto(""@LEVEL,"+ТкГрп+""",Всего-Ур+1,"+Тк+")>0";
  Exit Eval(Стр);
EndFunction

//Находит число случаев Имя
Function ПодсчитатьЧислоСлучаев(ЗП,ТабФорма,Грп,Осталось,Тип,Имя,Сп=0)
  оУдал:=глПолучитьУстановку(ТабФорма,"оУдал");

  If Осталось=0 Then
    If Тип="" Then
      If _Or(ЗП.ResultTable.GetColumnIndex("зКл")=0,ЗП.зКл>0) Then
        Exit 1;
      Else
        Exit 0;
      EndIf;  
    ElseIf ЗП.Документ.DBName()=Тип Then
      Exit 1;
    EndIf;
    Exit 0;
  EndIf;
  
  If Сп=0 Then
    Сп:=Tab.Create("Эл");
  EndIf;
  
  If Осталось=1 Then
    Фл:=0;
    While ЗП.Next(Грп+1) Do
      Эл:=ЗП.Get(Имя);
      If Сп.FindAndGoto(Эл,,"Эл")>0 Then
        Continue;
      EndIf;
      Сп.AddLine("Эл",Эл);
      If _And(not isEmpty(Эл),Pos("DB.REF.",typeStr(Эл))=1) Then
        If Эл.IsFolder() Then
          Continue;
        EndIf;
        If (Эл.Status()=1)And(оУдал=0) Then
          Continue;
        EndIf;
      EndIf;
      If Тип="" Then
        If _Or(ЗП.ResultTable.GetColumnIndex("зКл")=0,ЗП.зКл>0) Then
          Фл:=Фл+1;
        EndIf;  
      ElseIf ЗП.Документ.DBName()=Тип Then
        Фл:=Фл+1;
      EndIf;
    EndDo;
    Exit Фл;
  EndIf;
  Фл=0;
  While ЗП.Next(Грп+1) Do
    Фл:=Фл+ПодсчитатьЧислоСлучаев(ЗП,ТабФорма,Грп+1,Осталось-1,Тип,Имя,Сп);
  EndDo;
  Exit Фл;
EndFunction



//Находит среднее число случаев Имя2 по количеству Имя
Function ПодсчитатьЧислоСлучаевСложное(ByRef Общее2,ТабФорма,ЗП,Грп,Осталось,Имя,Сп=0,Имя2,Осталось2)
  If Осталось=0 Then
    Общее2:=ПодсчитатьЧислоСлучаев(ЗП,ТабФорма,Грп,Осталось2,"",Имя2);
    Exit 1;
  EndIf;
  
  If Сп=0 Then
    Сп:=Tab.Create("Эл");
  EndIf;
  
  оУдал:=глПолучитьУстановку(ТабФорма,"оУдал");
  If Осталось=1 Then
    Фл:=0;
    Общее2:=0;
    While ЗП.Next(Грп+1) Do
      Эл:=ЗП.Get(Имя);
      If Сп.FindAndGoto(Эл,,"Эл")>0 Then
        Continue;
      EndIf;
      Сп.AddLine("Эл",Эл);
      If _And(not isEmpty(Эл),Pos("DB.REF.",typeStr(Эл))=1) Then
        If Эл.IsFolder() Then
          Continue;
        EndIf;
        If (Эл.Status()=1)And(оУдал=0) Then
          Continue;
        EndIf;
      EndIf;
      Фл:=Фл+1;
      Общее2:=Общее2+ПодсчитатьЧислоСлучаев(ЗП,ТабФорма,Грп+1,Осталось2-1,"",Имя2);
    EndDo;
    Exit Фл;
  EndIf;
  Фл:=0;
  While ЗП.Next(Грп+1) Do
    Фл:=Фл+ПодсчитатьЧислоСлучаевСложное(Общее2,ТабФорма,ЗП,Грп+1,Осталось-1,Имя,Сп,Имя2,Осталось2-1);
  EndDo;
  Exit Фл;
EndFunction


Function НайтиДопСвойство(Эл,Тип);
  aEl:=Ref.общДополнительныеСвойства;
  If aEl.Find("ТипСвойства,Элемент",Тип,Эл) Then
    Exit aEl.Name;
  EndIf;
  Exit "";
EndFunction


Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего,БылиГруппировки="")
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего,БылиГруппировки);
    Exit;
  EndIf;

  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  оПоля:=глПолучитьУстановку(ТабФорма,"оПоля");
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  ТекБылиГруппировки:=БылиГруппировки+"@"+ИмяПер+"@";
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  ЧлОсновнойСтолбец:=глПолучитьИзМодуля("ЧлОсновнойСтолбец");
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    Гр:=?((Pos("DB.REF.",typestr(пЭлР))>0)And(not isEmpty(пЭлР)),пЭлР.isFolder(),0);
    
    Стл:=2;
    Индекс:=0;
    пН:=Number(глПолучитьИзМодуля("пН"+Ур))+1;
    глСохранитьВМодуле("пН"+Ур,пН);
    Т.CopyByX("v2|h1",1,1);
    For i:=1 to оПоля.Size() Do
      If оПоля.Check(i)=0 Then
        Continue;
      EndIf;
      Индекс:=Индекс+1;
      //Индекс@наим. столбца@требуемый запрос@выравнивание@ширина
      Стл:=Стл+1;
      Стр:=оПоля.Get(i);
      If Pos("(польз)",оПоля.GetName(i))=1 Then
        //Стр: Ref.кнтКонтрагенты.Телефоны
        СтрТип:=глПолучитьТипДанныхИзПутиФильтра(Стр);
        Чл:=-1;//польз. поля
        Выр:=0;
        If Pos("NUMBER",СтрТип)=1 Then
          Выр:=1;
        EndIf;
      Else
        Чл:=Number(TearStr(Стр));
        TearStr(Стр);
        TearStr(Стр);
        Выр:=Number(TearStr(Стр));
      EndIf;  
      
      ФлНеВыводить:=0;
      пЗнч:="";
      пЗнчР:=GetNothing();
      If Чл=-1 Then
        пЗнч:=З.Get("зСпПерем"+Индекс);
        пЗнчР:=пЗнч;
      ElseIf Чл=1 Then
        //Количество реализаций
        //@зК@@зД@@зТЦ@@зАД@
        ВерхГрп:=0;
        ЗАП:=глПолучитьИзМодуля("ЗАП");
        ЗАПВсего:=глПолучитьИзМодуля("ЗАПВсего");
        If Синхронизировать(ЗАП,З,ИмяПер,ТекБылиГруппировки,"Документ",ЗАПВсего,ВерхГрп) Then
          пЗнч:=глФРМ(ПодсчитатьЧислоСлучаев(ЗАП,ТабФорма,ВерхГрп,ЗАПВсего-ВерхГрп,"Реализация","Документ"));
        EndIf;
      ElseIf Чл=2 Then
        //Количество возвратов
        ВерхГрп:=0;
        ЗАП:=глПолучитьИзМодуля("ЗАП");
        ЗАПВсего:=глПолучитьИзМодуля("ЗАПВсего");
        If Синхронизировать(ЗАП,З,ИмяПер,ТекБылиГруппировки,"Документ",ЗАПВсего,ВерхГрп) Then
          пЗнч:=глФРМ(ПодсчитатьЧислоСлучаев(ЗАП,ТабФорма,ВерхГрп,ЗАПВсего-ВерхГрп,"ВозвратОтПокупателя","Документ"));
        EndIf;
      ElseIf Чл=22 Then
        //Количество активных контрагентов
        ВерхГрп:=0;
        ЗАП3:=глПолучитьИзМодуля("ЗАП3");
        ЗАП3Всего:=глПолучитьИзМодуля("ЗАП3Всего");
        If Синхронизировать(ЗАП3,З,ИмяПер,ТекБылиГруппировки,"зК",ЗАП3Всего,ВерхГрп) Then
          пЗнч:=глФРМ(ПодсчитатьЧислоСлучаев(ЗАП3,ТабФорма,ВерхГрп,ЗАП3Всего-ВерхГрп,"","зК"));
        EndIf;
      ElseIf Чл=23 Then
        //Количество неактивных контрагентов
        ВерхГрп:=0;
        ЗАП3:=глПолучитьИзМодуля("ЗАП3");
        ЗАП3С:=глПолучитьИзМодуля("ЗАП3С");
        ЗАП3Всего:=глПолучитьИзМодуля("ЗАП3Всего");
        If Синхронизировать(ЗАП3С,З,ИмяПер,ТекБылиГруппировки,"зК",ЗАП3Всего,ВерхГрп) Then
          пЗнч:=ПодсчитатьЧислоСлучаев(ЗАП3С,ТабФорма,ВерхГрп,ЗАП3Всего-ВерхГрп,"","зК");
          ВерхГрп:=0;
          If Синхронизировать(ЗАП3,З,ИмяПер,ТекБылиГруппировки,"зК",ЗАП3Всего,ВерхГрп) Then
            пЗнч:=пЗнч-ПодсчитатьЧислоСлучаев(ЗАП3,ТабФорма,ВерхГрп,ЗАП3Всего-ВерхГрп,"","зК");
          EndIf;
          пЗнч:=глФРМ(пЗнч);
        EndIf;
      ElseIf Чл=26 Then
        //SKU у клиента                            
        ВерхГрп:=0;ГлН:=0;
        ЗАП5:=глПолучитьИзМодуля("ЗАП5");
        ЗАП5Всего:=глПолучитьИзМодуля("ЗАП5Всего");
        If Синхронизировать(ЗАП5,З,ИмяПер,ТекБылиГруппировки,"зК",ЗАП5Всего,ВерхГрп) Then
          Чл2:=0;
          Чл:=ПодсчитатьЧислоСлучаевСложное(Чл2,ТабФорма,ЗАП5,ВерхГрп,ЗАП5Всего-ВерхГрп-1,"зК",,"зН",ЗАП5Всего-ВерхГрп);
          пЗнч:=глФРМЧл(?(Чл=0,0,Чл2/Чл));
        EndIf;
      ElseIf Чл=13 Then
        //Контрагент
        If Pos("@зК@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зК;
          пЗнчР:=пЗнч;
        ElseIf Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.Parent();
          пЗнчР:=пЗнч;
        EndIf;
      ElseIf Чл=31 Then
        //ИНН
        If Pos("@зК@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зК.ИНН;
          пЗнчР:=пЗнч;
        ElseIf Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.Parent().ИНН;
          пЗнчР:=пЗнч;
        EndIf;
        пЗнч:=Replace(пЗнч,"\","/");
        пЗнч:=TearStr(пЗнч,"/");
      ElseIf Чл=40 Then
        //КПП
        If Pos("@зК@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зК.ИНН;
          пЗнчР:=пЗнч;
        ElseIf Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.Parent().ИНН;
          пЗнчР:=пЗнч;
        EndIf;
        пЗнч:=Replace(пЗнч,"\","/");
        TearStr(пЗнч,"/");
      ElseIf Чл=33 Then
        //Юр. адрес
        If Pos("@зК@",ТекБылиГруппировки)>0 Then
          пЗнч:=глПредставлениеАдреса(З.зК.ЮрАдрес);
        ElseIf Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=глПредставлениеАдреса(З.зД.Parent().ЮрАдрес);
        EndIf;
      ElseIf Чл=38 Then
        //Факт. адрес
        If Pos("@зК@",ТекБылиГруппировки)>0 Then
          пЗнч:=глПредставлениеАдреса(З.зК.ФактАдрес);
        ElseIf Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=глПредставлениеАдреса(З.зД.Parent().ФактАдрес);
        EndIf;
      ElseIf Чл=32 Then
        //Комментарий
        If ИмяПер="зК" Then
          пЗнч:=Trim(З.зК.Комментарий);
        EndIf;
      ElseIf Чл=24 Then
        //Код контрагента
        If Pos("@зК@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зК.Code;
        ElseIf Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.Parent().Code;
        EndIf;
      ElseIf Чл=14 Then
        //Договор
        If Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД;
          пЗнчР:=пЗнч;
        EndIf;
      ElseIf Чл=15 Then
        //Номер договора
        If Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.НомерДоговора;
        EndIf;
      ElseIf Чл=16 Then
        //Дата договора
        If Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.ДатаЗаключенияДоговора;
        EndIf;
      ElseIf Чл=17 Then
        //Дней кредита
        If Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.ГлубинаКредита;
        EndIf;
      ElseIf Чл=18 Then
        //Сумма кредита
        If Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.СуммаКредита;
        EndIf;
      ElseIf Чл=35 Then
        //Лицензия на алкоголь
        If Pos("@зК@",ТекБылиГруппировки)>0 Then
          КЛиц:=глПолучитьЛицензиюКонтрагентаНаДату(З.зК,КонДата,Enum.кнтТипыЛицензий.АлкогольнаяРозничная,Enum.кнтТипыЛицензий.АлкогольнаяОптовая);
        ElseIf Pos("@зД@",ТекБылиГруппировки)>0 Then
          КЛиц:=глПолучитьЛицензиюКонтрагентаНаДату(З.зД.Parent(),КонДата,Enum.кнтТипыЛицензий.АлкогольнаяРозничная,Enum.кнтТипыЛицензий.АлкогольнаяОптовая);
        EndIf;
        If not isEmpty(КЛиц) Then
          пЗнч:=?(Trim(КЛиц.Name)="","",Trim(КЛиц.Name)+" от "+Trim(КЛиц.ДатаНачалаДействияЛицензии)+" до "+Trim(КЛиц.ДатаОкончанияДействияЛицензии));
        EndIf;
      ElseIf Чл=20 Then
        //Уникальный код
        If Pos("@зД@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зД.УникальныйИдентификатор;
        ElseIf Pos("@зК@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зК.УникальныйИдентификатор;
        EndIf;
      ElseIf Чл=36 Then
        //Уникальный код 2
        If Pos("@зК@",ТекБылиГруппировки)>0 Then
          пЗнч:=З.зК.КодТочкиЕГАИС;
        EndIf;
      ElseIf Чл=101 Then
        //Элемент
        пЗнч:=пЭл;
        пЗнчР:=пЭлР;
      ElseIf Чл=100 Then
        //Код элемента
        пЗнч:=глПолучитьКод(пЭлР);
        пЗнчР:=пЭлР;
      ElseIf Чл>499 Then
        //Доп. свойства
        спДопСв:=глПолучитьИзМодуля("спДопСв");
        Тип:=спДопСв.Get(Чл-499);
        If Тип.ВидСправочника=Enum.ВидыСправочниковСДопСвойствами.кнтКонтрагенты Then
          If Pos("@зК@",ТекБылиГруппировки)>0 Then
            пЗнч:=НайтиДопСвойство(З.зК,Тип);
          ElseIf Pos("@зД@",ТекБылиГруппировки)>0 Then
            пЗнч:=НайтиДопСвойство(З.зД.Parent(),Тип);
          EndIf;
        ElseIf Тип.ВидСправочника=Enum.ВидыСправочниковСДопСвойствами.кнтДоговоры Then
          If Pos("@зД@",ТекБылиГруппировки)>0 Then
            пЗнч:=НайтиДопСвойство(З.зД,Тип);
          EndIf;
        EndIf;
      EndIf;
      If not ФлНеВыводить Then
        Т.CopyByX("v2|h2");
        Ar:=Т.Area(Стл,Т.Height(),Стл,Т.Height());
        If Выр=1 Then
          Ar.RedNegative:=1;
          Ar.ClipMode:=1;
          Ar.HAlign:=1;
        EndIf;  
      EndIf;
    EndDo;
    
    Form.StatusText(Т.Height());
    Form.UpdateProgress(-1,,""+Т.Height());
    
    НачВыс:=Т.Height();
    глРаскраситьСтроку(Т,1,ЧлОсновнойСтолбец,Ур,УрВсего,2,Стл,пЭлР);
    
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего,ТекБылиГруппировки);
    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
EndFunction

Function ВыполнитьЗапросПоПродажам(ТЗ,ТабФорма,УрВсего,Грп,ByRef Всего,Сп=0,ByRef ЗП=0,ТипЗп=0)
  оН:=глПолучитьУстановку(ТабФорма,"оН");
  оТГ:=глПолучитьУстановку(ТабФорма,"оТГ");
  оМг:=глПолучитьУстановку(ТабФорма,"оМг");
  оВзв:=глПолучитьУстановку(ТабФорма,"оВзв");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  
  ТЗ2:="";
  Фл:=0;
  Всего:=УрВсего;
  While ТЗ>"" Do
    Стр:=TearStr(ТЗ,";");
    Стр:=Replace(Стр,"Ref.кнтКонтрагенты.","Ref.кнтДоговоры.@Parent.");
    If Pos("Group "+Грп,Стр)>0 Then
      Фл:=1;
    ElseIf (Pos("Group ",Стр)>0)And(Фл) Then
      Всего:=Всего-1;
      Continue;
    ElseIf IsBlankString(Стр) Then
      Continue;
    ElseIf (Pos("зСтатус:=",Стр)>0)Or(Pos("зСтатус=",Стр)>0) Then
      Continue;
    EndIf;
    ТЗ2:=ТЗ2+Стр+";";
  EndDo;
  If Not Фл Then
    Всего:=Всего+1;
    If Грп="Документ" Then
      ТЗ2:=ТЗ2+"Документ:=Storage.ДвижениеТМЦ.@LINK;";
    ElseIf Грп="зК" Then
      If Pos("зК:=",ТЗ2)=0 Then
        ТЗ2:=ТЗ2+"зК:=Ref.кнтДоговоры.@Parent;";
      EndIf;
    EndIf;
    ТЗ2:=ТЗ2+"Group "+Грп+";";
  EndIf;
  If ТипЗп=1 Then
    Всего:=Всего+1;
    ТЗ2:=ТЗ2+"зН:=Storage.ДвижениеТМЦ.Номенклатура;Group зН;";
  EndIf;

  If Сп<>0 Then
    ЗП:=Query.Create();
    ЗП.Execute(ТЗ2);
  EndIf;

  ТЗ2:=Replace(ТЗ2,"Ref.кнтДоговоры","Storage.ДвижениеТМЦ.Договор");
  
  ТЗ2:="Period From НачДата to КонДата;"+_NEWLINE+
  ?((оН.Get(1).Size()+оН.Get(1).Size()>0)And(ТипЗп=0),"зН:=Storage.ДвижениеТМЦ.Номенклатура;"+_NEWLINE,"")+
  ТЗ2+_NEWLINE+
  ?(оТГ.Get(1).Size()+оТГ.Get(2).Size()>0,"зТГ:=Storage.ДвижениеТМЦ.Номенклатура.ТоварнаяГруппа;"+_NEWLINE,"")+
  ?(оТГ.Get(1).Size()=0,"","Condition(зТГ IN оТГ.Get(1));"+_NEWLINE)+
  ?(оТГ.Get(2).Size()=0,"","Condition(зТГ NOT IN оТГ.Get(2));"+_NEWLINE)+
  ?(оМг.Get(1).Size()+оМг.Get(2).Size()>0,"зМг:=Storage.ДвижениеТМЦ.Магазин;"+_NEWLINE,"")+
  ?(оМг.Get(1).Size()=0,"","Condition(зМг IN оМг.Get(1));"+_NEWLINE)+
  ?(оМг.Get(2).Size()=0,"","Condition(зМг NOT IN оМг.Get(2));"+_NEWLINE)+  
  ?(оН.Get(1).Size()=0,"","Condition(зН IN оН.Get(1));"+_NEWLINE)+
  ?(оН.Get(2).Size()=0,"","Condition(зН NOT IN оН.Get(2));"+_NEWLINE)+
  "зКл0:=Storage.ДвижениеТМЦ.Количество;
  |зМрТип:=Storage.ДвижениеТМЦ.ТипЗаписи;"+?((оВзв=1)Or(Сп=0),"Condition(зМрТип<4);","Condition((зМрТип=0)Or(зМрТип=2));")+_NEWLINE+
  "зМрТУ:=Storage.ДвижениеТМЦ.ТипУчета;Condition(зМрТУ=0);
  |зКл:=SUM(зКл0);";
  
  ТЗ2:=Replace(ТЗ2,"Ref.кнтДоговоры","Storage.ДвижениеТМЦ.Договор");
  
  З2:=Query.Create();
  З2.Execute(ТЗ2);
  Exit З2;
EndFunction

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оПоля:=глПолучитьУстановку(ТабФорма,"оПоля");
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  оТипАктива:=глПолучитьУстановку(ТабФорма,"оТипАктива").SelectedLine;
  оУдал:=глПолучитьУстановку(ТабФорма,"оУдал");
  оТипВыборки:=глПолучитьУстановку(ТабФорма,"оТипВыборки").SelectedLine;
  оПл:=глПолучитьУстановку(ТабФорма,"оПл");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Ref.кнтДоговоры";
    ТЗ:="";
    спРезПеременные:=List.Create();
    Стр:="оК@зК@@Parent";
    If оТипВыборки<>2 Then
      Стр:=Стр+",оД@зД@,оЮЛ@зЮЛ@ЮрЛицо";
    EndIf;
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,0,0,Стр,"оГруппы",спРезПеременные);
    ДобавитьПользовательскиеПоляКЗапросу(ТЗ,оПоля);
    If оТипАктива>1 Then
      If pos("зТА:=",ТЗ)=0 Then
        ТЗ:=ТЗ+"зТА:="+Путь+".@Parent.ТипАктива;";
      EndIf;
      Сп:=глПолучитьУстановку(ТабФорма,"оТипАктива");
      ТЗ:=ТЗ+"Condition("+Сп.Get(оТипАктива)+");";
    EndIf;
    If оУдал=0 Then
      ТЗ:=ТЗ+"зСтатус:="+Путь+".@Status;Condition(зСтатус=0);";
    EndIf;
    ТЗ2:=ТЗ;
    
    аТипВыборки:=оТипВыборки;
    If аТипВыборки=2 Then //Контрагенты
      //.@Parent
      ТЗ:=Replace(ТЗ,"Ref.кнтДоговоры","Ref.кнтКонтрагенты");
      ТЗ:=Replace(ТЗ,".@Parent","");
    EndIf;
    
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
    З:=Query.Create();
    З.Execute(ТЗ);
    
    оЗагол:="Список контрагентов и анализ активности";
    Стр:="оК";
    If оТипВыборки<>2 Then
      Стр:=Стр+",оЮЛ,оД";
    EndIf;
    Стр:=Стр+",оТГ,оН,оСк,оМг";
    Стр2:=?(оТипАктива>1,"Тип актива@оТипАктива","");
    
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,Стр,Стр2,"");
    If оТипВыборки=1 Then
      оСвойства:=оСвойства+_NEWLINE+"Выборка по: договорам";
    Else
      оСвойства:=оСвойства+_NEWLINE+"Выборка по: контрагентам";
    EndIf;

    
    Сп:=СпУстановки;
    Т.CopyByX("v1|h1",1,1);
        
    ТЗ0:=ТЗ;
    ЧлОсновнойСтолбец:=0;
    ЗАП:=0;ЗАП3:=0;ЗАП5:=0;
    ЗАПВсего:=0;ЗАП3Всего:=0;ЗАП5Всего:=0;
    ЗАП3С:=0;
    For i:=1 To оПоля.Size() Do
      If оПоля.Check(i)=0 Then
        Continue;
      EndIf;
      //Индекс@наим. столбца@требуемый запрос@выравнивание@ширина
      Стр:=оПоля.Get(i);
      If Pos("(польз)",оПоля.GetName(i))=1 Then
        //Стр: Ref.кнтКонтрагенты.Телефоны
        СтрТип:=глПолучитьТипДанныхИзПутиФильтра(Стр);
        Чл:=-1;//польз. поля
        Выр:=0;
        If Pos("NUMBER",СтрТип)=1 Then
          Выр:=1;
        EndIf;
        Шир:=глПолучитьШиринуКолонкиИзТипаДанных(СтрТип) div 10;
        пЭл:=оПоля.GetName(i);
      Else
        Чл:=Number(TearStr(Стр));
        пЭл:=TearStr(Стр);
        пНЗ:=Number(TearStr(Стр));
        Выр:=Number(TearStr(Стр));
        Шир:=Number(TearStr(Стр));
      EndIf;  
      If (ЧлОсновнойСтолбец=0)And(Number(TearStr(Стр))=0)And(Шир>15) Then
        ЧлОсновнойСтолбец:=Т.CurPutX;
      EndIf;
      If Чл=101 Then
        ЧлОсновнойСтолбец:=Т.CurPutX;
        Т.CopyByX("v1|h2");
      Else
        If (пНЗ=1)And(ЗАП=0) Then
          ЗАП:=ВыполнитьЗапросПоПродажам(ТЗ2,ТабФорма,УрВсего,"Документ",ЗАПВсего);
          If ЗАП=0 Then
            Exit;
          EndIf;
        ElseIf (пНЗ=3)And(ЗАП3=0) Then
          ЗАП3:=ВыполнитьЗапросПоПродажам(ТЗ2,ТабФорма,УрВсего,"зК",ЗАП3Всего,1,ЗАП3С);
          If ЗАП3=0 Then
            Exit;
          EndIf;
        ElseIf (пНЗ=5)And(ЗАП5=0) Then
          ЗАП5:=ВыполнитьЗапросПоПродажам(ТЗ2,ТабФорма,УрВсего,"зК",ЗАП5Всего,,,1);
          If ЗАП5=0 Then
            Exit;
          EndIf;
        EndIf;
        Т.CopyByX("v1|h2");
      EndIf;
    EndDo;    
    
    Т.CopyByX("v1|h3");
    Т.Options.FixedLine:=Т.Height();

    глСохранитьВМодуле("ЗАП",ЗАП);
    глСохранитьВМодуле("ЗАП3",ЗАП3);
    глСохранитьВМодуле("ЗАП5",ЗАП5);
    глСохранитьВМодуле("ЗАПВсего",ЗАПВсего);
    глСохранитьВМодуле("ЗАП3Всего",ЗАП3Всего);
    глСохранитьВМодуле("ЗАП5Всего",ЗАП5Всего);
    глСохранитьВМодуле("ЗАП3С",ЗАП3С);
    глСохранитьВМодуле("спДопСв",спДопСв);
    глСохранитьВМодуле("ЧлОсновнойСтолбец",ЧлОсновнойСтолбец);
    For i:=1 To УрВсего Do
      глСохранитьВМодуле("пН"+i,0);
    EndDo;  
    
    //Вывод тела
    Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего);


    //Выводим концовку и устанавливаем ширину
    Т.CopyByX("v3|h1",1);
    пЗнч:="";
    Стл:=2;
    For i:=1 to оПоля.Size() Do
      If оПоля.Check(i)=0 Then
        Continue;
      EndIf;
      ФлНеВыводить:=0;
      Стл:=Стл+1;
      //Индекс@наим. столбца@требуемый запрос@выравнивание@ширина
      Стр:=оПоля.Get(i);
      If Pos("(польз)",оПоля.GetName(i))=1 Then
        //Стр: Ref.кнтКонтрагенты.Телефоны
        СтрТип:=глПолучитьТипДанныхИзПутиФильтра(Стр);
        Чл:=-1;//польз. поля
        Выр:=0;
        If Pos("NUMBER",СтрТип)=1 Then
          Выр:=1;
        EndIf;
        Шир:=глПолучитьШиринуКолонкиИзТипаДанных(СтрТип) div 10;
      Else
        Чл:=Number(TearStr(Стр));
        пЗнч:="";
        пЗнчР:=GetNothing();
        TearStr(Стр);
        TearStr(Стр);
        Выр:=Number(TearStr(Стр));
        Шир:=Number(TearStr(Стр));
      EndIf;  
      
      If Чл=1 Then
        //Количество реализаций
        ЗАП.First();
        пЗнч:=глФРМ(ПодсчитатьЧислоСлучаев(ЗАП,ТабФорма,0,ЗАПВсего,"Реализация","Документ"));
      ElseIf Чл=2 Then
        //Количество возвратов
        ЗАП.First();
        пЗнч:=глФРМ(ПодсчитатьЧислоСлучаев(ЗАП,ТабФорма,0,ЗАПВсего,"ВозвратОтПокупателя","Документ"));
      ElseIf Чл=22 Then
        //Количество активных контрагентов
        ЗАП3.First();
        пЗнч:=глФРМ(ПодсчитатьЧислоСлучаев(ЗАП3,ТабФорма,0,ЗАП3Всего,"","зК"));
      ElseIf Чл=26 Then
        //SKU у клиента                            
        ЗАП5.First();
        Чл2:=0;
        Чл:=ПодсчитатьЧислоСлучаевСложное(Чл2,ТабФорма,ЗАП5,0,ЗАП5Всего-1,"зК",,"зН",ЗАП5Всего);
        пЗнч:=глФРМЧл(?(Чл=0,0,Чл2/Чл));
      ElseIf Чл=23 Then
        //Количество пассивных контрагентов
        ЗАП3С.First();
        ЗАП3.First();
        пЗнч:=ПодсчитатьЧислоСлучаев(ЗАП3С,ТабФорма,0,ЗАП3Всего,"","зК");
        пЗнч:=пЗнч-ПодсчитатьЧислоСлучаев(ЗАП3,ТабФорма,0,ЗАП3Всего,"","зК");
        пЗнч:=глФРМ(Max(пЗнч,0));
      EndIf;
      
      If not ФлНеВыводить Then
        Т.CopyByX("v3|h2");
        Ar:=Т.Area(Стл,Т.Height()-1,Стл,Т.Height()-1);
        If Выр=1 Then
          Ar.RedNegative:=1;
          Ar.ClipMode:=1;
          Ar.HAlign:=1;
        EndIf;  
        Ar.ColWidth:=Шир*10;
      EndIf;      
    EndDo;
    Т.CopyByX("v3|h3",0,1);
    //тСумма.Set(тСумма.Size(),"Выс",Т.Height()-1);
    //ВывестиИтоги(Т,ТабФорма,тСумма);
    
    If глЗагрузкаРезультатаОтчетаВМультиФильтр(Param,З) Then
      Form.Close(0);
      Exit;
    EndIf;
    
    If оУровни=1 Then
      Т.Levels(0).Close();
    EndIf;
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction


Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

