//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function ПолучитьПериодXYZ(оПериодXYZ,Чл,ByRef НачДата,ByRef КонДата)
  Чл:=Чл-1;
  If оПериодXYZ=1 Then //День
    НачДата:=AddDay(КонДата,-Чл);
  ElseIf оПериодXYZ=2 Then //Неделя
    If КонДата<>EndOfWeek(КонДата) Then
      КонДата:=BegOfWeek(КонДата)-1;
    EndIf;
    НачДата:=BegOfWeek(AddDay(КонДата,-Чл*7));
  ElseIf оПериодXYZ=3 Then //Месяц
    If КонДата<>EndOfMonth(КонДата) Then
      КонДата:=BegOfMonth(КонДата)-1;
    EndIf;
    НачДата:=BegOfMonth(AddMonth(КонДата,-Чл));
  ElseIf оПериодXYZ=4 Then //Квартал
    If КонДата<>EndOfQuarter(КонДата) Then
      КонДата:=BegOfQuarter(КонДата)-1;
    EndIf;
    НачДата:=BegOfQuarter(AddMonth(КонДата,-Чл*3));
  Else //Год
    If КонДата<>EndOfYear(КонДата) Then
      КонДата:=BegOfYear(КонДата)-1;
    EndIf;
    НачДата:=BegOfYear(AddYear(КонДата,-Чл));
  EndIf;
EndFunction

Function ОбновитьПериодXYZ()
  Чл:=Max(Form.оКолвоПериодов.Value,3);
  оПериодXYZ:=Form.оПериодXYZ.Value.SelectedLine;
  НачДата:=0;
  КонДата:=BegOfDay(Form.КонДата.Value);
  ПолучитьПериодXYZ(оПериодXYZ,Чл,НачДата,КонДата);
  
  Form.тПериод.Caption:="Период формирования XYZ анализа: с "+НачДата+" по "+КонДата;
EndFunction

Function ПолучитьТаблицуXYZАнализа(ТабФорма,ТЗ,спГруппировкиСправочников)
  //Убираем лишние группировки (кроме спГруппировкиСправочников)
  ТЗ2:="";
  While Pos("Group ",ТЗ)>0 Do
    //"Group зСк with folders;"
    ТЗ2:=ТЗ2+TearStr(ТЗ,"Group ");
    Стр:=TearStr(ТЗ,";");//"зСк with folders" или "зСк"
    Стр1:=TearStr(Стр," ");//Стр: "with folders" или ""
    If спГруппировкиСправочников.Find(Uppercase(Стр1))>0 Then
      ТЗ2:=ТЗ2+"Group "+Стр1+?(Стр<>""," "+Стр)+";";
    EndIf;
  EndDo;
  ТЗ:=ТЗ2+ТЗ;
  //Добавляем группировку по времени периода анализа
  оПериодXYZ:=глПолучитьУстановку(ТабФорма,"оПериодXYZ").SelectedLine;
  If оПериодXYZ=1 Then //День
    ТЗ:=ТЗ+"зАнализДата:=Storage.ДвижениеТМЦ.@DAY;Group зАнализДата;";
  ElseIf оПериодXYZ=2 Then //Неделя
    ТЗ:=ТЗ+"зАнализДата:=Storage.ДвижениеТМЦ.@WEEK;Group зАнализДата;";
  ElseIf оПериодXYZ=3 Then //Месяц
    ТЗ:=ТЗ+"зАнализДата:=Storage.ДвижениеТМЦ.@MONTH;Group зАнализДата;";
  ElseIf оПериодXYZ=4 Then //Квартал
    ТЗ:=ТЗ+"зАнализДата:=Storage.ДвижениеТМЦ.@QUARTER;Group зАнализДата;";
  Else //Год
    ТЗ:=ТЗ+"зАнализДата:=Storage.ДвижениеТМЦ.@YEAR;Group зАнализДата;";
  EndIf;
  //Меняем период формирования 
  НДата:=0;
  КДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  Чл:=Max(глПолучитьУстановку(ТабФорма,"оКолвоПериодов"),3);
  ПолучитьПериодXYZ(оПериодXYZ,Чл,НДата,КДата);
  НачБазы:=DBVar.НачалоПериодаБазы;
  If _And(Not IsEmpty(НачБазы),НДата<НачБазы) Then
    Box("Период формирования XYZ анализа выходит за дату начала рабочей базы ("+НачБазы+")! Отчет не может быть сформирован, так как анализ не будет иметь корректных цифр!",Q_STOP);
    Exit 0;
  EndIf;
  ТЗ2:=TearStr(ТЗ,"Period from '")+"Period from '"+НДата+"'";
  TearStr(ТЗ,"'");
  ТЗ2:=ТЗ2+TearStr(ТЗ," to '")+" to '"+КДата+"'";
  TearStr(ТЗ,"'");
  ТЗ:=ТЗ2+ТЗ;
  З2:=Query.Create();
  Exit З2.Execute(ТЗ,0);
EndFunction


Function ОбновитьТексты()
  оРасш:=Form.оРасш.Value;
  
  оВидОтчета:=Form.оВидОтчета.Value;
  If оВидОтчета.Size()=0 Then
    оВидОтчета.Add(0,"Анализ продаж");
    оВидОтчета.Add(1,"Анализ закупок");
  EndIf;
  
  If оРасш=0 Then
    If оВидОтчета.Size()>2 Then
      оВидОтчета.Remove(3,оВидОтчета.Size()-2);
      оВидОтчета.SelectedLine:=1;
    EndIf;
  Else
    If оВидОтчета.Size()=2 Then
      оВидОтчета.Add(2,"Анализ движения (реализации)");
      оВидОтчета.Add(3,"Анализ движения (возвраты от покупателей)");
      оВидОтчета.Add(4,"Анализ движения (поступления)");
      оВидОтчета.Add(5,"Анализ движения (возвраты поставщикам)");
      оВидОтчета.Add(-1,"Анализ движения (полный)");
      оВидОтчета.Add(-2,"Перемещения ТМЦ");
    EndIf;  
  EndIf;
  If оВидОтчета.SelectedLine=0 Then
    оВидОтчета.SelectedLine:=1;
  EndIf;
  Form.оЗаголовок.Caption:=оВидОтчета.GetName(оВидОтчета.SelectedLine);
  
  aList:=List.Create("По юридическим лицам#Договор.ЮрЛицо#зЮЛ","По магазинам#Склад.Магазин#зМг",
    "По складам#Склад#зСк","По контрагентам#Договор.@Parent#зК","По товарным группам#Номенклатура.ТоварнаяГруппа#зТГ","По номенклатуре#!Номенклатура#зН",
    "По годам#@YEAR#Год","По месяцам#@MONTH#Месяц","По неделям#@WEEK#Неделя","По дням#@DAY#День","По документам#!@LINK#Документ");

  If оРасш=1 Then
    aList.Add("По контрагентам!По договорам#Договор#зД");
    aList.Add("По цифровым кодам#Номенклатура.ВнешнийКод#зАрт");
    aList.Add("По цифровым кодам упаковки#Номенклатура.ВнешнийКодОсновнаяЕдиница#зАрт2");
    aList.Add("По основным сортам#Номенклатура.ВнешнийТекстовыйКод#зАрт3");
    aList.Add("По кодам АП ЕГАИС (в номенклатуре)#Номенклатура.ЕГАИСКодАП#зАрт4");
    aList.Add("По производителям номенклатуры#Номенклатура.сертПроизводитель#зПрТМЦ");
    aList.Add("По типам движения#ТипЗаписи#зМрТип");
    aList.Add("По ставкам НДС#СтавкаНДС#зНДС");
    aList.Add("По контрагентам!По типам актива#Договор.@Parent.ТипАктива#зТА");
    aList.Add("По номенклатуре!По партиям ТМЦ#Партия#зПартия");
    aList.Add("По партиям ТМЦ!По производителям номенклатуры (из партий)#Партия.Производитель#зПрТМЦП");
    aList.Add("По конечным срокам реализации/дате производства#Партия.КСР#зКСР");
    aList.Add("По номерам ГТД#Партия.НомерГТД#зГТД");
    aList.Add("По кодам АП ЕГАИС (в партиях)#Партия.ЕГАИСКодАП#зВнКП");
    aList.Add("По коду ЕГАИС номенклатуры (в партиях)#Партия.ЕГАИСКодНоменклатуры#зВнКП2");
  EndIf;
  
  глЗаполнитьТаблицуФильтров("оГруппы",aList);
  глОбновитьТаблицуФильтров("оГруппы");

  aNum:=aList.Find("По номенклатуре#!Номенклатура#зН");
  aList.Set(aNum,"По номенклатуре#Номенклатура#зН");
  aNum:=aList.Find("По документам#!@LINK#Документ");
  aList.Set(aNum,"По документам#@LINK#Документ");
  
  глЗаполнитьТаблицуФильтров("оГруппыГ",aList);
  глОбновитьТаблицуФильтров("оГруппыГ");

  
  //Показатели
  aList:=List.Create("Количество единиц#!З.зКл#зКл",
    "Количество упаковок#З.зКлЦел#зКл@зКлЦел",
    "Объем (дал)#З.зО/10#зКл@зО",
    "Объем (литров)#З.зО#зКл@зО",
    "Сумма (рублей)#!З.зСумма#зСумма");
  If глПользователь.зтАналитикЗатрат Then
    aList.Add("Себестоим. (рублей)#З.зСеб#зСеб");
    aList.Add("Прибыль (рублей)#З.зСумма-З.зСеб#зСумма@зСеб");
    aList.Add("Прибыль (%)#?(Number(З.зСумма)=0,0,(З.зСумма-З.зСеб)/З.зСумма)*100#зСумма@зСеб");
    aList.Add("Наценка (%)#?(Number(З.зСеб)=0,0,(З.зСумма-З.зСеб)/З.зСеб)*100#зСумма@зСеб");
  EndIf;
  aList.Add("Объем (литров)!Объем (гекталитров)#З.зО/100#зКл@зО");
  aList.Add("Объем (гекталитров)!Масса (кг)#З.зКг#зКл@зКг");
  aList.Add("Масса (кг)!Масса (тонн)#З.зКг/1000#зКл@зКг");

  глЗаполнитьСписокПоказателей("оПоказатели",aList,"Сегмент ");
  глОбновитьСписокПоказателей("оПоказатели");
    
  //Доп. поля
  aList:=List.Create("Код текущего элемента#!#!зТекКод","Текущий элемент#!#!",
    "Контрагент#Договор.@Parent#зК","ИНН/КПП#Договор.@Parent.ИНН#зИНН","Код контрагента#Договор.@Parent.Code#зККод",
    "Договор#Договор#зД","Дней кредита#Договор.ГлубинаКредита#зДГДней","Сумма кредита#Договор.СуммаКредита#зДГСумма",
    "Номенклатура#Номенклатура#зН","Код номенклатуры#Номенклатура.Code#зНКод",
    "Товарная группа#Номенклатура.ТоварнаяГруппа#зТГ","Комментарий из документов##!Коммент","Дата документа##!ДатаДок","Номер документа##!НомерДок");
    
  If оРасш=1 Then
    aList.Add("ИНН/КПП!ID контрагента#Договор.@Parent.УникальныйИдентификатор#зИДКНТ");
    aList.Add("ID контрагента!Код ЕГАИС поставщика#Договор.@Parent.КодТочкиЕГАИС#зИДКНТ2");
    aList.Add("Номенклатура!Цифровой код производителя#Номенклатура.ВнешнийКод#зИДН");
    aList.Add("Код текущего элемента!Код текущего элемента (без ведущих нулей)##!зТекКод2");
    aList.Add("Цифровой код производителя!Цифровой код производителя2#Номенклатура.ВнешнийКодОсновнаяЕдиница#зИДН2");
    aList.Add("Цифровой код производителя2!Основной код (сорт)#Номенклатура.ВнешнийТекстовыйКод#зИД2Н");
    aList.Add("Основной код (сорт)!Код АП ЕГАИС (в номенклатуре)#Номенклатура.ЕГАИСКодАП#зИД2Н2");
  EndIf;

  глЗаполнитьСписокПоказателей("оПоля",aList);
  глОбновитьСписокПоказателей("оПоля");
  
  ОбновитьПериодXYZ();  
EndFunction

Function УмолчанияПоСегментамABC()
  ТСегмент:=Form.ТСегмент.Value;
  оСпособСегментации:=Form.оСпособСегментации.Value.SelectedLine;
  If ТСегмент.Size()=0 Then
    If оСпособСегментации=1 Then
      ТСегмент.AddLine("Сегмент,Доля","Сегмент A",50);
      ТСегмент.AddLine("Сегмент,Доля","Сегмент B",30);
      ТСегмент.AddLine("Сегмент,Доля","Сегмент C",0);
    ElseIf оСпособСегментации=2 Then
      ТСегмент.AddLine("Сегмент,Доля","Сегмент A",15);
      ТСегмент.AddLine("Сегмент,Доля","Сегмент B",5);
      ТСегмент.AddLine("Сегмент,Доля","Сегмент C",0);
    EndIf;
  EndIf;
EndFunction

Function УмолчанияПоСегментамXYZ()
  ТСегмент2:=Form.ТСегмент2.Value;
  If ТСегмент2.Size()=0 Then
    ТСегмент2.AddLine("Сегмент,Доля","Сегмент X",15);
    ТСегмент2.AddLine("Сегмент,Доля","Сегмент Y",35);
    ТСегмент2.AddLine("Сегмент,Доля","Сегмент Z",0);
  EndIf;
EndFunction



Function ОбработатьВыводимоеЗначениеЛок(ByRef пЭл,ИмяПер)

  If ИмяПер="зМрТип" Then
    ВидыДвижения:=глПолучитьИзМодуля("ВидыДвижения");
    пЭл:=ВидыДвижения.Get(Min(Number(пЭл)+1,ВидыДвижения.Size()));
  ElseIf ИмяПер="зТА" Then
    Актив:=глПолучитьИзМодуля("Актив");
    пЭл:=Актив.Get(Min(Number(пЭл)+1,Актив.Size()));
  ElseIf IsEmpty(пЭл) Then
    If ИмяПер="зПартия" Then
      пЭл:="< Не указана партия ТМЦ >";
    Else
      пЭл:="< Не выбран >";
    EndIf;
  EndIf;
  
  глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
EndFunction

Function СоздатьТаблицу(оПоказатели)
  Таб:=Tab.Create();
  For i:=1 To оПоказатели.Size() Do
    If оПоказатели.Check(i)=0 Then
      Continue;
    EndIf;
    Таб.AddColumn("зСм"+i,,"Number");
  EndDo;
  Exit Таб;
EndFunction

Function ВыполнитьРасчетXYZ(ТабФорма,ТабXYZ,aTab,ПолеРесурса,ПолеЭлементов,ПолеРезультата,ФлДобавить)
  //оСпособСегментации: 1 -- группировки, отсортированные по продажам по убыванию, первые группировки, сумма продаж которых составляет сегмент A процентов от всех продаж, принадлежат сегменту A, и т.д.
  //                    2 -- каждая группа, продажи которой составляют сегмент A процентов от всех продаж, принадлежит сегменту A, и т.д.
  ТСегмент:=глПолучитьУстановку(ТабФорма,"ТСегмент2");
  MassLoadObjects(ТабXYZ,ПолеЭлементов);
  bTab:=ТабXYZ.Copy();
  bTab.Group(ПолеЭлементов+",зАнализДата",ПолеРесурса);
  //СреднееАрифметическое:=ОбщаяСумма/Периодов
  //СреднеквадратичноеОтклонение:=sqrt(SUM(sqr(СмПериода-СреднееАрифметическое))/Периодов)
  //Коэфф:=СреднеквадратичноеОтклонение/СреднееАрифметическое
  КлПериодов:=Max(глПолучитьУстановку(ТабФорма,"оКолвоПериодов"),3);
  
  //Среднее арифметическое
  aEl:=0;
  СмАриф:=0;
  аСтрока:=1;
  bTab.Sort(ПолеЭлементов+",зАнализДата+");
  bTab.AddColumn("Сегмент",,"Number");
  bTab.AddColumn("Сред",,"Number");
  bTab.Select();
  While bTab.Next() Do
    If aEl<>bTab[ПолеЭлементов] Then
      If aEl<>0 Then
        bTab.Set(аСтрока,"Сред",СмАриф/КлПериодов);
      EndIf;
      aEl:=bTab[ПолеЭлементов];
      СмАриф:=0;
      аСтрока:=bTab.CurLine;
    EndIf;
    СмАриф:=СмАриф+bTab[ПолеРесурса];
  EndDo;
  bTab.Set(аСтрока,"Сред",СмАриф/КлПериодов);
  
  aEl:=0;
  ФлПериодов:=0;
  СмТек:=0;
  аСтрока:=1;
  bTab.Select();
  While bTab.Next() Do
    If aEl<>bTab[ПолеЭлементов] Then
      If aEl<>0 Then
        //Если ФлПериодов меньше КлПериодов, для остатка периодов предполагается См=0
        СмСред:=bTab.Get(аСтрока,"Сред");
        If Round(СмСред,6)<>0 Then
          СмТек:=СмТек+sqr(СмСред)*Max(0,КлПериодов-ФлПериодов);
          Коэфф:=sqrt(СмТек/КлПериодов)/СмСред*100;
          ТСегмент.Select();
          While ТСегмент.Next() Do
            If _Or(Коэфф<ТСегмент.Доля,ТСегмент.CurLine=ТСегмент.Size()) Then
              bTab.Set(аСтрока,"Сегмент",ТСегмент.CurLine);
              Break;
            EndIf;
          EndDo;
        EndIf;
      EndIf;
      aEl:=bTab[ПолеЭлементов];
      ФлПериодов:=0;
      СмТек:=0;
      аСтрока:=bTab.CurLine;
    EndIf;
    ФлПериодов:=ФлПериодов+1;
    СмТек:=СмТек+sqr(bTab[ПолеРесурса]-bTab.Get(аСтрока,"Сред"));
  EndDo;
  СмСред:=bTab.Get(аСтрока,"Сред");
  If Round(СмСред,6)<>0 Then
    СмТек:=СмТек+sqr(СмСред)*Max(0,КлПериодов-ФлПериодов);
    Коэфф:=sqrt(СмТек/КлПериодов)/СмСред*100;
    ТСегмент.Select();
    While ТСегмент.Next() Do
      If _Or(Коэфф<ТСегмент.Доля,ТСегмент.CurLine=ТСегмент.Size()) Then
        bTab.Set(аСтрока,"Сегмент",ТСегмент.CurLine);
        Break;
      EndIf;
    EndDo;
  EndIf;
  bTab.Group(ПолеЭлементов,"Сегмент");
  bTab.Sort(ПолеЭлементов);
  
  aTab.Select();
  While aTab.Next() Do
    aEl:=aTab[ПолеЭлементов];
    If bTab.FindAndGoto(aEl,,ПолеЭлементов,1) Then
      If bTab.Сегмент=0 Then
        Стр:=ТСегмент.Get(ТСегмент.Size(),"Сегмент");
      Else
        Стр:=ТСегмент.Get(bTab.Сегмент,"Сегмент");
      EndIf;
    Else
      Стр:=ТСегмент.Get(ТСегмент.Size(),"Сегмент");
    EndIf;
    If ФлДобавить Then
      TearStr(Стр," ");//"Сегмент ?"
      aTab[ПолеРезультата]:=aTab[ПолеРезультата]+Стр;
    Else
      aTab[ПолеРезультата]:=Стр;
    EndIf;
  EndDo;
EndFunction


Function ВыполнитьРасчетABC(ТабФорма,aTab,ОбщаяСумма,ПолеРесурса,ПолеЭлементов,ПолеРезультата)
  //оСпособСегментации: 1 -- группировки, отсортированные по продажам по убыванию, первые группировки, сумма продаж которых составляет сегмент A процентов от всех продаж, принадлежат сегменту A, и т.д.
  //                    2 -- каждая группа, продажи которой составляют сегмент A процентов от всех продаж, принадлежит сегменту A, и т.д.
  оСпособСегментации:=глПолучитьУстановку(ТабФорма,"оСпособСегментации").SelectedLine;
  ТСегмент:=глПолучитьУстановку(ТабФорма,"ТСегмент");
  //MassLoadObjects(aTab,ПолеЭлементов,,,1);
  MassLoadObjects(aTab,ПолеЭлементов);
  bTab:=aTab.Copy();
  bTab.Group(ПолеЭлементов,ПолеРесурса);
  bTab.Sort(ПолеРесурса+"-");
  bTab.AddColumn("Сегмент",,"Number");
  If оСпособСегментации=1 Then
    НС:=0;
    ТСегмент.Select();
    While ТСегмент.Next() Do
      ФлПоследний:=ТСегмент.CurLine=ТСегмент.Size();
      НС:=НС+1;
      См:=0;
      См1:=ОбщаяСумма*ТСегмент.Доля/100;
      bTab.Select();
      While bTab.Next() Do
        If bTab.Сегмент>0 Then
          Continue;
        EndIf;
        См:=См+bTab[ПолеРесурса];
        bTab.Сегмент:=НС;
        If _And(См>См1,not ФлПоследний) Then
          Break;
        EndIf;
      EndDo;
    EndDo;
  ElseIf оСпособСегментации=2 Then
    НС:=0;
    ТСегмент.Select();
    While ТСегмент.Next() Do
      ФлПоследний:=ТСегмент.CurLine=ТСегмент.Size();
      НС:=НС+1;
      bTab.Select();
      While bTab.Next() Do
        If bTab.Сегмент>0 Then
          Continue;
        EndIf;
        If _Or(bTab.зСм/ОбщаяСумма>=ТСегмент.Доля/100,ФлПоследний) Then
          bTab.Сегмент:=НС;
        Else
          Break;
        EndIf;
      EndDo;
    EndDo;
  EndIf;
  bTab.Sort(ПолеЭлементов);
  
  aTab.Select();
  While aTab.Next() Do
    aEl:=aTab[ПолеЭлементов];
    If _And(bTab.FindAndGoto(aEl,,ПолеЭлементов,1),bTab.Сегмент>0) Then
      aTab[ПолеРезультата]:=ТСегмент.Get(bTab.Сегмент,"Сегмент");
    EndIf;
  EndDo;
EndFunction


Function ГруппировкаГ(З,ТабФорма,Т,Ном,Ур,тГруппы,тГруппыГ,УрВсего,ГоризонтальныхУровней,ТИтого=0,ТабИтогиОбщие=0,ByRef ГорИндекс=0,ByRef ГорИндексПоля=0)
  оПоказатели:=глПолучитьУстановку(ТабФорма,"оПоказатели");
  флБезВывода:=УрВсего=ГоризонтальныхУровней;
  ФлПроцентыВИтогах:=глПолучитьИзМодуля("ФлПроцентыВИтогах");
  спГруппировкиСправочников:=глПолучитьИзМодуля("спГруппировкиСправочников");

  ГорИндексПоля0:=ГорИндексПоля;
  If Ном>тГруппыГ.Size() Then
    ГорИндексПоля:=ГорИндексПоля+1;
    If _And(ФлПроцентыВИтогах,УрВсего>0) Then
      ТабИтогиОбщие.Select();
      While ТабИтогиОбщие.Next() Do
        ТабИтогиОбщие["зСм"+ГорИндексПоля+"_0"]:=ТабИтогиОбщие["зСм"+ГорИндексПоля+"_0"]+З.зСеб;
        ТабИтогиОбщие["зСм"+ГорИндексПоля+"_1"]:=ТабИтогиОбщие["зСм"+ГорИндексПоля+"_1"]+З.зСумма;
      EndDo;
    EndIf;
  
    Фл:=0;
    For i:=1 To оПоказатели.Size() Do
      If оПоказатели.Check(i)=0 Then
        Continue;
      EndIf;
      ГорИндекс:=ГорИндекс+1;
      Фл:=Фл+1;
      Иконка:=0;
      If Pos("(польз)",оПоказатели.GetName(i))=1 Then
        пЗнч:=З.Get("зСм"+Фл);
      Else
        //З.зКл#зКл
        Стр0:=оПоказатели.Get(i);
        Стр:=TearStr(Стр0,"#");
        If Стр[1]="*" Then
          пЗнч:="";
          Иконка:=4;
        Else
          пЗнч:=Eval(Стр);
        EndIf;
      EndIf;
      If _And(УрВсего>0,Иконка=0) Then
        ТИтого.Select();
        While ТИтого.Next() Do
          ТИтого["зСм"+i]:=ТИтого["зСм"+i]+пЗнч;
        EndDo;
        ТабИтогиОбщие.Select();
        While ТабИтогиОбщие.Next() Do
          ТабИтогиОбщие["зСм"+ГорИндекс]:=ТабИтогиОбщие["зСм"+ГорИндекс]+пЗнч;
        EndDo;
      EndIf;  
      
      If оПоказатели.GetName(i)="Прибыль (%)" Then
        пЗнч:=глФРМЧл(пЗнч);
        Иконка:=2;
      ElseIf оПоказатели.GetName(i)="Наценка (%)" Then
        пЗнч:=глФРМЧл(пЗнч);
        Иконка:=3;
      ElseIf Pos("зСумма",Стр)+Pos("зСеб",Стр)>0 Then
        пЗнч:=глФРМ(пЗнч);
      ElseIf Иконка=0 Then
        пЗнч:=глФРМЧл(пЗнч);
        Иконка:=1;
      EndIf;
      If Иконка>0 Then
        ТабИтогиОбщие.Icon(1,"зСм"+ГорИндекс,Иконка);
      EndIf;  
      
      If not флБезВывода Then
        Т.CopyByX("v2|h3");
      EndIf;  
    EndDo;
    Exit;
  EndIf;
  If тГруппыГ.Check(Ном,"Группировка")=0 Then
    ГруппировкаГ(З,ТабФорма,Т,Ном+1,Ур,тГруппы,тГруппыГ,УрВсего,ГоризонтальныхУровней,ТИтого,ТабИтогиОбщие,ГорИндекс,ГорИндексПоля);
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  ИмяПер:=глПолучитьИмяПеременной(тГруппыГ,Ном,тГруппы.Size());
  оБезИтого:=глПолучитьУстановку(ТабФорма,"оБезИтого");
  If ТИтого=0 Then
    ТИтого:=СоздатьТаблицу(оПоказатели);
  EndIf;  
  
  ТИтого.NewLine();
  While З.Next(Ур) Do
    ГруппировкаГ(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,тГруппыГ,УрВсего,ГоризонтальныхУровней,ТИтого,ТабИтогиОбщие,ГорИндекс,ГорИндексПоля);
  EndDo;
  
  If оБезИтого=0 Then
    ГорИндексПоля:=ГорИндексПоля+1;
    If ФлПроцентыВИтогах Then
      ТабИтогиОбщие.Select();
      While ТабИтогиОбщие.Next() Do
        If флБезВывода Then
          For i:=ГорИндексПоля0+1 To ГорИндексПоля-1 Do
            ТабИтогиОбщие["зСм"+ГорИндексПоля+"_0"]:=ТабИтогиОбщие["зСм"+ГорИндексПоля+"_0"]+ТабИтогиОбщие["зСм"+i+"_0"];
            ТабИтогиОбщие["зСм"+ГорИндексПоля+"_1"]:=ТабИтогиОбщие["зСм"+ГорИндексПоля+"_1"]+ТабИтогиОбщие["зСм"+i+"_1"];
          EndDo;  
        Else
          ТабИтогиОбщие["зСм"+ГорИндексПоля+"_0"]:=ТабИтогиОбщие["зСм"+ГорИндексПоля+"_0"]+З.зСеб;
          ТабИтогиОбщие["зСм"+ГорИндексПоля+"_1"]:=ТабИтогиОбщие["зСм"+ГорИндексПоля+"_1"]+З.зСумма;
        EndIf;  
      EndDo;
    EndIf;
    
    Фл:=0;
    For i:=1 To оПоказатели.Size() Do
      If оПоказатели.Check(i)=0 Then
        Continue;
      EndIf;
      ГорИндекс:=ГорИндекс+1;
      Фл:=Фл+1;
      //З.зКл#зКл
      Стр0:=оПоказатели.Get(i);
      Стр:=TearStr(Стр0,"#");
      Иконка:=0;
      If Стр[1]="*" Then
        СтрИмя:=З.Groups(Ур-1);
        ФлПапка:=З.Get(СтрИмя);
        ФлПапка:=_And(pos("DB.REF.",TypeStr(ФлПапка))>0,not isEmpty(ФлПапка),ФлПапка.isFolder());
        If _And(not ФлПапка,спГруппировкиСправочников.Find(СтрИмя)>0) Then
          пЗнч:=З.Get("зСм"+Фл+"_"+СтрИмя);
        Else
          пЗнч:="";
        EndIf;
        Иконка:=4;
      Else
        пЗнч:=ТИтого.Get(ТИтого.Size(),"зСм"+i);
        ТабИтогиОбщие.Select();
        While ТабИтогиОбщие.Next() Do
          ТабИтогиОбщие["зСм"+ГорИндекс]:=ТабИтогиОбщие["зСм"+ГорИндекс]+пЗнч;
        EndDo;
      EndIf;
      
      If оПоказатели.GetName(i)="Прибыль (%)" Then
        пЗнч:=глФРМЧл(пЗнч);
        If ФлПроцентыВИтогах Then
          If З.ResultTable.CurLine=0 Then
            //Только горизонтальные группировки, ни одной вертикальной
            пЗнч:=глФРМЧл(?(З.ResultTable.Size()=0,0,?(З.ResultTable["зСумма",1]=0,0,(З.ResultTable["зСумма",1]-З.ResultTable["зСеб",1])/З.ResultTable["зСумма",1])*100));
          Else
            пЗнч:=глФРМЧл(?(З.зСумма=0,0,(З.зСумма-З.зСеб)/З.зСумма)*100);
          EndIf;
        EndIf;
        Иконка:=2;
      ElseIf оПоказатели.GetName(i)="Наценка (%)" Then
        пЗнч:=глФРМЧл(пЗнч);
        If ФлПроцентыВИтогах Then
          If З.ResultTable.CurLine=0 Then
            //Только горизонтальные группировки, ни одной вертикальной
            пЗнч:=глФРМЧл(?(З.ResultTable.Size()=0,0,?(З.ResultTable["зСеб",1]=0,0,(З.ResultTable["зСумма",1]-З.ResultTable["зСеб",1])/З.ResultTable["зСеб",1])*100));
          Else
            пЗнч:=глФРМЧл(?(З.зСеб=0,0,(З.зСумма-З.зСеб)/З.зСеб)*100);
          EndIf;
        EndIf;
        Иконка:=3;
      ElseIf Pos("зСумма",Стр)+Pos("зСеб",Стр)>0 Then
        пЗнч:=глФРМ(пЗнч);
      ElseIf Иконка=0 Then
        пЗнч:=глФРМЧл(пЗнч);
        Иконка:=1;
      EndIf;
      If Иконка>0 Then
        ТабИтогиОбщие.Icon(1,"зСм"+ГорИндекс,Иконка);
      EndIf;  
      
      if not флБезВывода Then
        Т.CopyByX("v2|h3");
        If Иконка=4 Then
          Т.Area(Т.CurPutX-1,Т.CurPutY,Т.CurPutX-1,Т.CurPutY).HAlign:=2;
        EndIf;  
      EndIf;  
    EndDo;
    ТИтого.Size(ТИтого.Size()-1);
  EndIf;
  
EndFunction


Function ВывестиСтрокуОбщихИтогов(Т,ТабИтогиОбщие,НачЗнач)
  ГорПолей:=глПолучитьИзМодуля("ГорПолей");
  ГорПоказателей:=глПолучитьИзМодуля("ГорПоказателей");
  ФлПроцентыВИтогах:=глПолучитьИзМодуля("ФлПроцентыВИтогах");
  ТабИтогиОбщие.CurLine:=ТабИтогиОбщие.Size();
  Выс:=ТабИтогиОбщие.Выс;
  
  ГорПоле:=0;
  For i=1 To ТабИтогиОбщие.SizeC()-1-ГорПолей*2 Do
    зСм:=ТабИтогиОбщие["зСм"+i];
    ГорПоле:=((i-1)\ГорПоказателей)+1;
    Иконка:=ТабИтогиОбщие.Icon(1,"зСм"+i);
    If Иконка=1 Then
      Т.Area(НачЗнач+i-1,Выс,НачЗнач+i-1,Выс).Text:=глФРМЧл(зСм);
    ElseIf Иконка=2 Then
      //Прибыль (%)
      зСм0:=ТабИтогиОбщие["зСм"+ГорПоле+"_0"];
      зСм1:=ТабИтогиОбщие["зСм"+ГорПоле+"_1"];
      Т.Area(НачЗнач+i-1,Выс,НачЗнач+i-1,Выс).Text:=глФРМЧл(?(зСм1=0,0,(зСм1-зСм0)/зСм1)*100);
    ElseIf Иконка=3 Then
      //Наценка (%)
      зСм0:=ТабИтогиОбщие["зСм"+ГорПоле+"_0"];
      зСм1:=ТабИтогиОбщие["зСм"+ГорПоле+"_1"];
      Т.Area(НачЗнач+i-1,Выс,НачЗнач+i-1,Выс).Text:=глФРМЧл(?(зСм0=0,0,(зСм1-зСм0)/зСм0)*100);
    ElseIf Иконка=0 Then
      Т.Area(НачЗнач+i-1,Выс,НачЗнач+i-1,Выс).Text:=глФРМ(зСм);
    EndIf;  
  EndDo;
  ТабИтогиОбщие.Size(ТабИтогиОбщие.Size()-1);
EndFunction


Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,тГруппыГ,УрВсего,ГоризонтальныхУровней,ТабИтогиОбщие)
  If Ном>тГруппы.Size() Then
    //Исключительный случай -- только гор. группировки
    If УрВсего=ГоризонтальныхУровней Then
      ГруппировкаГ(З,ТабФорма,Т,1,Ур,тГруппы,тГруппыГ,УрВсего,ГоризонтальныхУровней,0,ТабИтогиОбщие,0);
    EndIf;
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,тГруппыГ,УрВсего,ГоризонтальныхУровней,ТабИтогиОбщие);
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  оПоказатели:=глПолучитьУстановку(ТабФорма,"оПоказатели");
  оПоля:=глПолучитьУстановку(ТабФорма,"оПоля");
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  ИмяПер2:=Uppercase(ИмяПер);
  ГорДопПолей:=глПолучитьИзМодуля("ГорДопПолей");
  ГорПолей:=глПолучитьИзМодуля("ГорПолей");
  ГорПоказателей:=глПолучитьИзМодуля("ГорПоказателей");
  НачЗнач:=глПолучитьИзМодуля("НачЗнач");
  ФлОсновноеПоле:=глПолучитьИзМодуля("ФлОсновноеПоле");
  ФлПроцентыВИтогах:=глПолучитьИзМодуля("ФлПроцентыВИтогах");
  спГруппировкиСправочников:=глПолучитьИзМодуля("спГруппировкиСправочников");
  ФлСложныеПоказатели:=глПолучитьИзМодуля("ФлСложныеПоказатели");
  
  спГруппы:=List.Create();
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    ОбработатьВыводимоеЗначениеЛок(пЭл,ИмяПер);
    Гр:=_And(Pos("DB.REF.",typestr(пЭлР))>0,not isEmpty(пЭлР),пЭлР.isFolder());
    
    ФлПапка:=0;
    If _And(ГоризонтальныхУровней>0,Гр) Then
      //Завершить предыдущую папку?
      While спГруппы.Size()>0 Do
        пЭлПред:=спГруппы.Get(спГруппы.Size());
        if пЭлПред.Contains(пЭлР) Then
          Break;
        EndIf;
        ВывестиСтрокуОбщихИтогов(Т,ТабИтогиОбщие,НачЗнач);
        спГруппы.Remove(спГруппы.Size());
      EndDo;
    
      спГруппы.Add(пЭлР);
      ТабИтогиОбщие.AddLine("Выс",Т.Height()+1);
      ФлПапка:=1;
    EndIf;
    
    Т.CopyByX("v2|h1",1);
    For i:=1 To оПоля.Size() Do
      If not оПоля.Check(i) Then
        Continue;
      EndIf;
      ИмяПоля:=глПолучитьИмяПеременной(оПоля,i,0,"зСпПерем");
      If ИмяПоля="!" Then
        пПоказатель:=пЭл;
        пПоказательР:=пЭлР;
      ElseIf ИмяПоля="!зТекКод" Then  
        пПоказатель:=глПолучитьКод(пЭлР);
        пПоказательР:=пЭлР;
      ElseIf ИмяПоля="!зТекКод2" Then  
        пПоказатель:=глНомерБезНулей(пЭлР,0);
        пПоказательР:=пЭлР;
      ElseIf ИмяПоля="!Коммент" Then  
        пПоказатель:="";
        If _And(not isEmpty(пЭлР),Pos("DB.DOC.",typestr(пЭлР))=1,глЕстьРеквизитДокумента("Комментарий",пЭлР.DBName())) Then
          пПоказатель:=пЭлР.Комментарий;
        EndIf;
        пПоказательР:=пЭлР;
      ElseIf ИмяПоля="!ДатаДок" Then  
        пПоказатель:="";
        If _And(not isEmpty(пЭлР),Pos("DB.DOC.",typestr(пЭлР))=1,глЕстьРеквизитДокумента("DocDate",пЭлР.DBName())) Then
          пПоказатель:=пЭлР.DocDate;
        EndIf;
        пПоказательР:="";
      ElseIf ИмяПоля="!НомерДок" Then  
        пПоказатель:="";
        If _And(not isEmpty(пЭлР),Pos("DB.DOC.",typestr(пЭлР))=1,глЕстьРеквизитДокумента("DocNum",пЭлР.DBName())) Then
          пПоказатель:=пЭлР.DocNum;
        EndIf;
        пПоказательР:="";
      Else
        пПоказатель:=З.Get(ИмяПоля);
        пПоказательР:=пПоказатель;
        ОбработатьВыводимоеЗначениеЛок(пПоказатель,ИмяПоля);
      EndIf;
      Т.CopyByX("v2|h2");
    EndDo;
    
    If ГоризонтальныхУровней=0 Then
      //Исключения для нахождения итого с %
      If _And(ФлПроцентыВИтогах,Ур=УрВсего,not Гр) Then
        ТабИтогиОбщие.Select();
        While ТабИтогиОбщие.Next() Do
          ТабИтогиОбщие["зСм1_0"]:=ТабИтогиОбщие["зСм1_0"]+З.зСеб;
          ТабИтогиОбщие["зСм1_1"]:=ТабИтогиОбщие["зСм1_1"]+З.зСумма;
        EndDo;
      EndIf;
      
      Чл:=0;
      For i:=1 To оПоказатели.Size() Do
        If оПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        Чл:=Чл+1;
        Иконка:=0;
        If Pos("(польз)",оПоказатели.GetName(i))=1 Then
          пЗнч:=З.Get("зСм"+Чл);
        Else
          //З.зКл#зКл
          Стр0:=оПоказатели.Get(i);
          Стр:=TearStr(Стр0,"#");
          If Стр[1]="*" Then
            If _And(not Гр,спГруппировкиСправочников.Find(ИмяПер2)>0) Then
              пЗнч:=З.Get("зСм"+Чл+"_"+ИмяПер2);
            Else
              пЗнч:="";
            EndIf;
            Иконка:=4;
          Else
            пЗнч:=Eval(Стр);
          EndIf;
        EndIf;
        If _And(Ур=УрВсего,not Гр,Иконка=0) Then
          ТабИтогиОбщие.Select();
          While ТабИтогиОбщие.Next() Do
            ТабИтогиОбщие["зСм"+Чл]:=ТабИтогиОбщие["зСм"+Чл]+пЗнч;
          EndDo;
        EndIf;  
        
        If оПоказатели.GetName(i)="Прибыль (%)" Then
          пЗнч:=глФРМЧл(пЗнч);
          Иконка:=2;
        ElseIf оПоказатели.GetName(i)="Наценка (%)" Then
          пЗнч:=глФРМЧл(пЗнч);
          Иконка:=3;
        ElseIf Pos("зСумма",Стр)+Pos("зСеб",Стр)>0 Then
          пЗнч:=глФРМ(пЗнч);
        ElseIf Иконка=0 Then
          пЗнч:=глФРМЧл(пЗнч);
          Иконка:=1;
        EndIf;
        If _And(Ур=УрВсего,Иконка>0) Then
          ТабИтогиОбщие.Icon(1,"зСм"+Чл,Иконка);
        EndIf;  
        Т.CopyByX("v2|h3");
        If Иконка=4 Then
          Т.Area(Т.CurPutX-1,Т.CurPutY,Т.CurPutX-1,Т.CurPutY).HAlign:=2;
        EndIf;  
      EndDo;
    ElseIf _Or(ФлПапка,УрВсего-ГоризонтальныхУровней>Ур) Then
      Чл:=?(ФлСложныеПоказатели>0,(ГорПолей-1)*ГорПоказателей,ГорПолей*ГорПоказателей);
      пЗнч:="";
      For i:=1 To Чл Do
        Т.CopyByX("v2|h3");
      EndDo;
      If ФлСложныеПоказатели>0 Then
        Чл:=0;
        For i:=1 To оПоказатели.Size() Do
          If оПоказатели.Check(i)=0 Then
            Continue;
          EndIf;
          Чл:=Чл+1;
          пЗнч:="";
          Иконка:=0;
          If Pos("(польз)",оПоказатели.GetName(i))=0 Then
            //З.зКл#зКл
            Стр0:=оПоказатели.Get(i);
            Стр:=TearStr(Стр0,"#");
            If Стр[1]="*" Then
              If _And(not Гр,спГруппировкиСправочников.Find(ИмяПер2)>0) Then
                пЗнч:=З.Get("зСм"+Чл+"_"+ИмяПер2);
                Иконка:=4;
              Else
                пЗнч:="";
              EndIf;
            EndIf;
          EndIf;
          Т.CopyByX("v2|h3");
          If Иконка=4 Then
            Т.Area(Т.CurPutX-1,Т.CurPutY,Т.CurPutX-1,Т.CurPutY).HAlign:=2;
          EndIf;  
        EndDo;
      EndIf;
      Т.CopyByX("v2|h4");
      If ФлПапка=0 Then
        ТабИтогиОбщие.AddLine("Выс",Т.Height());
      EndIf;  
    Else
      ГруппировкаГ(З,ТабФорма,Т,1,Ур+1,тГруппы,тГруппыГ,УрВсего,ГоризонтальныхУровней,0,ТабИтогиОбщие);
    EndIf;  
    Т.CopyByX("v2|h4");
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1,ФлОсновноеПоле,Ур,УрВсего-ГоризонтальныхУровней,2,1+ГорДопПолей+Max(ГорПолей,1)*ГорПоказателей,пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,тГруппыГ,УрВсего,ГоризонтальныхУровней,ТабИтогиОбщие);
    
    If (not ФлПапка)And(УрВсего-ГоризонтальныхУровней>Ур)And(ГоризонтальныхУровней>0) Then
      ВывестиСтрокуОбщихИтогов(Т,ТабИтогиОбщие,НачЗнач);
    EndIf;
    
    If (оУровни=1)and(Ур<УрВсего-ГоризонтальныхУровней) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
  
  While спГруппы.Size()>0 Do
    ВывестиСтрокуОбщихИтогов(Т,ТабИтогиОбщие,НачЗнач);
    спГруппы.Remove(спГруппы.Size());
  EndDo;
EndFunction


Function ВыводЗаголовковГоризонтальныхГ(Т,ТабФорма,З,Ном,Уровень,флПропуститьУровней,УрВсего,тГруппы,тГруппыГ,флПоказатели=0,ИмяПер="")
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  тПоказатели:=глПолучитьУстановку(ТабФорма,"оПоказатели");
  оБезИтого:=глПолучитьУстановку(ТабФорма,"оБезИтого");

  If Ном>тГруппыГ.Size() Then
    If флПоказатели=0 Then
      пГруппировка:=З.Get(ИмяПер);
      ОбработатьВыводимоеЗначениеЛок(пГруппировка,ИмяПер);
      For i:=1 To тПоказатели.Size() Do
        If тПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        Т.CopyByX("v4|h3");
      EndDo;
    Else
      For i:=1 To тПоказатели.Size() Do
        If тПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        пКатегория:=тПоказатели.GetName(i);
        Т.CopyByX("v5|h3");
      EndDo;
    EndIf;  
    Exit;
  EndIf;
  If тГруппыГ.Check(Ном,"Группировка")=0 Then
    ВыводЗаголовковГоризонтальныхГ(Т,ТабФорма,З,Ном+1,Уровень,флПропуститьУровней,УрВсего,тГруппы,тГруппыГ,флПоказатели,ИмяПер);
    Exit;
  EndIf;

  If флПропуститьУровней=0 Then
    ИмяПер:=глПолучитьИмяПеременной(тГруппыГ,Ном,тГруппы.Size());
  EndIf;
  While З.Next(Уровень) Do
    Чл:=Т.CurPutX;
    ВыводЗаголовковГоризонтальныхГ(Т,ТабФорма,З,Ном+1,Уровень+1,флПропуститьУровней-1,УрВсего,тГруппы,тГруппыГ,флПоказатели,ИмяПер);
    If (флПропуститьУровней=0)And(флПоказатели=0) Then
      Т.Area(Т.CurPutX-1,Т.Height(),Чл,Т.Height()).Merge();
    EndIf;  
    If (флПоказатели=1)And(оУровни=1)And(оБезИтого=0)and(Уровень<УрВсего) Then
      глДобавитьУровень(Т,Чл,Т.CurPutX-1,1,1);
    EndIf;
  EndDo;
  If оБезИтого=0 Then
    If флПоказатели=0 Then
      пГруппировка:="Итого:";
      Чл:=0;
      For i:=1 To тПоказатели.Size() Do
        If тПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        Чл:=Чл+1;
        Т.CopyByX("v4|h3");
      EndDo;
      Т.Area(Т.CurPutX-1,Т.Height(),Т.CurPutX-Чл,Т.Height()-Max(флПропуститьУровней,0)).Merge();
    Else
      For i:=1 To тПоказатели.Size() Do
        If тПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        пКатегория:=тПоказатели.GetName(i);
        Т.CopyByX("v5|h3");
      EndDo;
    EndIf;  
  EndIf;
EndFunction



Function ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,Ном,Уровень,флПропуститьУровней,УрВсего,тГруппы,тГруппыГ,флПоказатели=0)
  If Ном>тГруппы.Size() Then
    ВыводЗаголовковГоризонтальныхГ(Т,ТабФорма,З,Ном-тГруппы.Size(),Уровень,флПропуститьУровней,УрВсего,тГруппы,тГруппыГ,флПоказатели);
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,Ном+1,Уровень,флПропуститьУровней,УрВсего,тГруппы,тГруппыГ,флПоказатели);
    Exit;
  EndIf;
  ИмяПер:=З.Groups(Уровень);
  While З.Next(Уровень) Do
    пЭл:=З.Get(ИмяПер);
    If _And(pos("DB.REF.",TypeStr(пЭл))>0,not isEmpty(пЭл),пЭл.isFolder()) Then
      Continue;
    EndIf;
    ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,Ном+1,Уровень+1,флПропуститьУровней-1,УрВсего,тГруппы,тГруппыГ,флПоказатели);
    Break;
  EndDo;
EndFunction
  


Function КоличествоГорПолей(З,флПропуститьУровней,флУровней,Уровень=1,оБезИтого)
  Result:=0;
  If флПропуститьУровней>0 Then
    ИмяПер:=З.Groups(Уровень);
    While З.Next(Уровень) Do
      пЭл:=З.Get(ИмяПер);
      If _And(pos("DB.REF.",TypeStr(пЭл))>0,not isEmpty(пЭл),пЭл.isFolder()) Then
        Continue;
      EndIf;
      Result:=КоличествоГорПолей(З,флПропуститьУровней-1,флУровней,Уровень+1,оБезИтого);
      Break;
    EndDo;
  ElseIf флУровней>0 Then
    While З.Next(Уровень) Do
      Result:=Result+КоличествоГорПолей(З,0,флУровней-1,Уровень+1,оБезИтого);
    EndDo;
    Result:=Result+1-оБезИтого;
  Else
    Result:=1;
  EndIf;
EndFunction


Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  оГруппыГ:=глПолучитьУстановку(ТабФорма,"оГруппыГ");
  оПоказатели:=глПолучитьУстановку(ТабФорма,"оПоказатели");
  оПоля:=глПолучитьУстановку(ТабФорма,"оПоля");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оВидОтчета:=глПолучитьУстановку(ТабФорма,"оВидОтчета").SelectedLine;
  оБезИтого:=глПолучитьУстановку(ТабФорма,"оБезИтого");
  оВидОтбора:=глПолучитьУстановку(ТабФорма,"оВидОтбора").SelectedLine;
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  оБезИтого:=глПолучитьУстановку(ТабФорма,"оБезИтого");
  оТУТ:=глПолучитьУстановку(ТабФорма,"оТУТ");
  оСортировкаСегменты:=глПолучитьУстановку(ТабФорма,"оСортировкаСегменты");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.ДвижениеТМЦ";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@Договор.ЮрЛицо,оМг@зМг@Склад.Магазин,оК@зК@Договор.@Parent,"+
      "оД@зД@Договор,оСк@зСк@Склад,оТГ@зТГ@Номенклатура.ТоварнаяГруппа,оН@зН@Номенклатура,"+
      "оНДС@зНДС@СтавкаНДС","оГруппы",спРезПеременные);
    
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,0,0,"","оГруппыГ",спРезПеременные,1,оГруппы.Size());
    
    //оВидОтчета
    //1 - Анализ продаж
    //2 - Анализ закупок
    //3 - Анализ движения (реализации)
    //4 - Анализ движения (возвраты от покупателей)
    //5 - Анализ движения (поступления)
    //6 - Анализ движения (возвраты поставщикам)
    //7 - Анализ движения (полный)
    //8 - Перемещения ТМЦ
    //9 - Расход материалов в производстве
    //10 - Брак в производстве
    //11 - Приход изделий в производстве
    
    //ТипЗаписи:
    //0-Реализация
    //1-Возврат от покупателя
    //2-Поступление
    //3-Возврат поставщику
    //4-Перемещения
    //5-Производство (списание в и возврат из) - только себестоимость
    //6-Брак - только себестоимость
    //7-Производство (произведенные изделия) - только себестоимость    
    
    If Pos("зМрТип:=",ТЗ)=0 Then
      ТЗ:=ТЗ+"зМрТип:=Storage.ДвижениеТМЦ.ТипЗаписи;";
    EndIf;  
    If оВидОтчета=1 Then
      ТЗ:=ТЗ+"Condition(зМрТип<2);";
    ElseIf оВидОтчета=2 Then
      ТЗ:=ТЗ+"Condition((зМрТип>1)And(зМрТип<4));";
    ElseIf (оВидОтчета>2)And(оВидОтчета<7) Then
      ТЗ:=ТЗ+"Condition(зМрТип="+(оВидОтчета-3)+");";
    ElseIf оВидОтчета=7 Then
      ТЗ:=ТЗ+"Condition(зМрТип<4);";
    ElseIf оВидОтчета=8 Then
      ТЗ:=ТЗ+"Condition(зМрТип=4);";
    ElseIf оВидОтчета=9 Then
      ТЗ:=ТЗ+"Condition(зМрТип=5);";
    ElseIf оВидОтчета=10 Then
      ТЗ:=ТЗ+"Condition(зМрТип=6);";
    ElseIf оВидОтчета=11 Then
      ТЗ:=ТЗ+"Condition(зМрТип=7);";
    EndIf;
    
    If оТУТ=0 Then
      ТЗ:=ТЗ+_NEWLINE+"зМрТУ:=Storage.ДвижениеТМЦ.ТипУчета;Condition(зМрТУ=0);";
    EndIf;
    
    Переменные:=List.Create();
    Переменные.Add("зКл","зКл0:=Storage.ДвижениеТМЦ.Количество;#зКл0#зКл");//зКл:=Sum(?(зМрТип<2,зКл0,0));зКлП:=Sum(?(зМрТип>1,зКл0,0));");
    Переменные.Add("зКлЦел","зКф0:=Storage.ДвижениеТМЦ.Номенклатура.оснКоэффициент;#?(зКф0=0,зКл0,зКл0/зКф0)#зКлЦел");
    Переменные.Add("зО","зО0:=Storage.ДвижениеТМЦ.Номенклатура.ОбъемЛитров;#зКл0*зО0#зО");
    Переменные.Add("зСумма","зСумма0:=Storage.ДвижениеТМЦ.Сумма;#зСумма0#зСумма");
    Переменные.Add("зСеб","зСеб0:=Storage.ДвижениеТМЦ.Себестоимость;#зСеб0#зСеб");
    Переменные.Add("зКг","зКг0:=Storage.ДвижениеТМЦ.Номенклатура.базМассаНетто;#зКл0*зКг0#зКг");

    //Используется для ABC/XYZ анализов, где анализируются только элементы справочника
    спГруппировкиСправочников:=List.Create();
    оГруппы.Select();
    While оГруппы.Next() Do
      If оГруппы.Check(оГруппы.CurLine,"Группировка")=1 Then
        If Pos("(польз)",оГруппы.Группировка)=0 Then
          ИмяПер:=оГруппы.Путь;//<Путь>#<Переменная>
          СтрПуть:=TearStr(ИмяПер,"#");
        Else
          СтрПуть:=оГруппы.Путь;
          ИмяПер:="зТабПерем"+оГруппы.CurLine;
        EndIf;
        If Pos("Stor.ДвижениеТМЦ",СтрПуть)=0 Then
          СтрПуть:="Stor.ДвижениеТМЦ."+СтрПуть;
        EndIf;
        СтрТип:=глПолучитьТипДанныхИзПутиФильтра(СтрПуть);
        If Pos("REF.",СтрТип)>0 Then
          спГруппировкиСправочников.Add(Uppercase(ИмяПер));
        EndIf;
      EndIf;
    EndDo;

    //Добавление показателей в запрос
    СтрИмяСортировки:="";
    ГорПоказателей:=0;
    ФлПроцентыВИтогах:=0;
    ФлСложныеПоказатели:=0;
    For i:=1 To оПоказатели.Size() Do
      If оПоказатели.Check(i)=0 Then
        Continue;
      EndIf;
      ГорПоказателей:=ГорПоказателей+1;
      If Pos("(польз)",оПоказатели.GetName(i))=1 Then
        Стр:=оПоказатели.Get(i);
        ТЗ:=ТЗ+"зСм"+ГорПоказателей+":=SUM("+Стр+");"+_NEWLINE;        
        Continue;
      EndIf;
      //4#зКл@зО
      Стр:=оПоказатели.Get(i);
      Стр2:=TearStr(Стр,"#");
      If (Стр2="*A")or(Стр2="*X")or(Стр2="*Z") Then
        If СтрИмяСортировки="" Then
          СтрИмяСортировки:="зСм"+ГорПоказателей;
        EndIf;
        For i2:=1 To спГруппировкиСправочников.Size() Do
          ТЗ:=ТЗ+"зСм"+ГорПоказателей+"_"+спГруппировкиСправочников[i2]+":=MAX("""");"+_NEWLINE;
        EndDo;
        ФлСложныеПоказатели:=ФлСложныеПоказатели+1;
        If ФлСложныеПоказатели>2 Then
          Box("Запрещено выбирать более двух показателей ABC или XYZ анализов одновременно!",Q_STOP);
          Exit;
        EndIf;
      EndIf;
      If Стр="зСумма@зСеб" Then
        ФлПроцентыВИтогах:=1;
      EndIf;
      While Стр<>"" Do
        Стр2:=TearStr(Стр,"@");
        i2:=Переменные.Find(Стр2);
        Стр2:=Переменные.GetName(i2);
        Стр3:=TearStr(Стр2,"#");
        if Pos(Стр3,ТЗ)=0 Then
          ТЗ:=ТЗ+Стр3+_NEWLINE;
          Стр3:=TearStr(Стр2,"#");
          If оВидОтчета>1 Then
            If (оВидОтчета=4)Or(оВидОтчета=6) Then
              Стр3:="-"+Стр3;
            ElseIf оВидОтчета=7 Then
              Стр3:="?(зМрТип<2,"+Стр3+",-"+Стр3+")";
            EndIf;  
          EndIf;
          
          ТЗ:=ТЗ+Стр2+":=SUM("+Стр3+");"+_NEWLINE;
        EndIf;
      EndDo;
    EndDo;
    глСохранитьВМодуле("ФлПроцентыВИтогах",ФлПроцентыВИтогах);
    глСохранитьВМодуле("спГруппировкиСправочников",спГруппировкиСправочников);
    глСохранитьВМодуле("ФлСложныеПоказатели",ФлСложныеПоказатели);

    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,0,0,"","оПоля",спРезПеременные,-1);
  
    If оВидОтбора=2 Then
      If pos("зКл0:=",ТЗ)=0 Then
        ТЗ:=ТЗ+"зКл0:=Storage.ДвижениеТМЦ.Количество;";
      EndIf;
      ТЗ:=ТЗ+"Condition(зКл0>0);";
    ElseIf оВидОтбора=3 Then
      If pos("зКл0:=",ТЗ)=0 Then
        ТЗ:=ТЗ+"зКл0:=Storage.ДвижениеТМЦ.Количество;";
      EndIf;
      ТЗ:=ТЗ+"Condition(зКл0<0);";
    EndIf;
    
    З:=Query.Create();
    If ФлСложныеПоказатели=0 Then
      З.Execute(ТЗ);
    Else
      ТЗ2:=ТЗ;
      If оСортировкаСегменты Then
        //Собираем группировка постпроцесса, учитываем как Group, так и HorGroup
        Стр:="";
        оГруппы.Select();
        While оГруппы.Next() Do
          If оГруппы.Check(оГруппы.CurLine,"Группировка")=0 Then
            Continue;
          EndIf;
          If Pos("(польз)",оГруппы.Группировка)=0 Then
            СтрИмя:=Trim(оГруппы.Путь);
            TearStr(СтрИмя,"#");
          Else
            СтрИмя:="зТабПерем"+оГруппы.CurLine;
          EndIf;
          флПапки:=Pos("Group "+СтрИмя+" with folders",ТЗ2)>0;
          If спГруппировкиСправочников.Find(Uppercase(СтрИмя))>0 Then
            Стр:=Стр+"Sort "+СтрИмяСортировки+"_"+СтрИмя+";";
          EndIf;
          Стр:=Стр+"Group "+СтрИмя+?(флПапки," with folders")+";";
        EndDo;
        оГруппыГ.Select();
        While оГруппыГ.Next() Do
          If оГруппыГ.Check(оГруппыГ.CurLine,"Группировка")=0 Then
            Continue;
          EndIf;
          If Pos("(польз)",оГруппыГ.Группировка)=0 Then
            СтрИмя:=Trim(оГруппыГ.Путь);
            TearStr(СтрИмя,"#");
          Else
            СтрИмя:="зТабПерем"+(оГруппыГ.CurLine+оГруппы.Size());
          EndIf;
          флПапки:=Pos("HorGroup "+СтрИмя+" with folders",ТЗ2)>0;
          Стр:=Стр+"HorGroup "+СтрИмя+?(флПапки," with folders")+";";
        EndDo;
        ТЗ2:="("+ТЗ2+")"+_NEWLINE+"Postprocessing ("+_NEWLINE+"AllowIncompatibleSortPaths 1;"+Стр+")";
      EndIf;      
      
      aTab:=З.Execute(ТЗ2,0);
      Form.StatusText("Подсчет сегментов ABC и XYZ анализа...");
      
      ТабXYZ:=0;
      ФлXYZАнализ:=0;
      Фл:=0;
      For i:=1 To оПоказатели.Size() Do
        If оПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        Фл:=Фл+1;
        If Pos("(польз)",оПоказатели.GetName(i))=1 Then
          Continue;
        EndIf;
        //4#зКл@зО
        СтрРесурс:=оПоказатели.Get(i);
        Стр2:=TearStr(СтрРесурс,"#");
        While Pos("@",СтрРесурс)>0 Do
          TearStr(СтрРесурс,"@");
        EndDo;
        См0:=aTab.SUM(СтрРесурс);
        If См0<>0 Then
          If Стр2="*A" Then
            //ABC, СтрРесурс -- имя столбца ресурса
            For i2:=1 To спГруппировкиСправочников.Size() Do
              ИмяПоля:="зСм"+Фл+"_"+спГруппировкиСправочников[i2];
              ВыполнитьРасчетABC(ТабФорма,aTab,См0,СтрРесурс,спГруппировкиСправочников[i2],ИмяПоля);
            EndDo;
          ElseIf (Стр2="*X")Or(Стр2="*Z") Then
            If Стр2="*Z" Then
              For i2:=1 To спГруппировкиСправочников.Size() Do
                ИмяПоля:="зСм"+Фл+"_"+спГруппировкиСправочников[i2];
                ВыполнитьРасчетABC(ТабФорма,aTab,См0,СтрРесурс,спГруппировкиСправочников[i2],ИмяПоля);
              EndDo;
            EndIf;
            //XYZ?
            If Not ФлXYZАнализ Then
              ФлXYZАнализ:=1;
              ТабXYZ:=ПолучитьТаблицуXYZАнализа(ТабФорма,ТЗ,спГруппировкиСправочников);
              If ТабXYZ=0 Then
                Exit;
              EndIf;
            EndIf;
            For i2:=1 To спГруппировкиСправочников.Size() Do
              ИмяПоля:="зСм"+Фл+"_"+спГруппировкиСправочников[i2];
              ВыполнитьРасчетXYZ(ТабФорма,ТабXYZ,aTab,СтрРесурс,спГруппировкиСправочников[i2],ИмяПоля,Стр2="*Z");
            EndDo;
          EndIf;
        EndIf;
      EndDo;
      
      З.Postprocess();
    EndIf;
    
    флГоризонтальныеГруппы:=глКоличествоУровнейИзФильтров(оГруппыГ);
    СпПоля:=List.Create();
    If флГоризонтальныеГруппы>0 Then
      ГорПолей:=КоличествоГорПолей(З,глКоличествоУровнейИзФильтров(оГруппы),глКоличествоУровнейИзФильтров(оГруппыГ),,оБезИтого);
    Else
      ГорПолей:=1;
    EndIf;  
    З.First();
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы)+глКоличествоУровнейИзФильтров(оГруппыГ);
    ГорДопПолей:=0;
    For i:=1 To оПоля.Size() Do
      If оПоля.Check(i) Then
        ГорДопПолей:=ГорДопПолей+1;
      EndIf;
    EndDo;
    If ГорДопПолей=0 Then
      Box("Необходимо выбрать по крайней мере одно горизонтальное поле!",Q_STOP);
      Exit;
    EndIf;
    глСохранитьВМодуле("ГорДопПолей",ГорДопПолей);
    глСохранитьВМодуле("ГорПолей",ГорПолей);
    глСохранитьВМодуле("ГорПоказателей",ГорПоказателей);
    
    
    оВид:=глПолучитьУстановку(ТабФорма,"оВидОтчета");
    оЗагол:=оВид.GetName(оВид.SelectedLine);
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оМг,оК,оД,оСк,оТГ,оН,оНДС","Отбор@оВидОтбора","");
    
    ФлОсновноеПоле:=2;
    Сп:=СпУстановки;
    Т.CopyByX("v1|h1",1);
    j:=1;
    For i:=1 To оПоля.Size() Do
      If оПоля.Check(i) Then
        j:=j+1;
        Стр:=оПоля.Get(i);
        tearStr(Стр,"#");
        If Стр="!" Then //Основное поле
          ФлОсновноеПоле:=j;
        EndIf;
        If j=2 Then
          Т.CopyByX("v1|h2");
        Else
          Т.CopyByX("v1|h5");
        EndIf;
      EndIf;
    EndDo;
    НачЗнач:=Т.CurPutX;
    глСохранитьВМодуле("НачЗнач",НачЗнач);
    глСохранитьВМодуле("ФлОсновноеПоле",ФлОсновноеПоле);
    
    Чл:=ГорПолей*ГорПоказателей;
    For i:=1 To Чл Do
      Т.CopyByX("v1|h3");
    EndDo;
    Т.CopyByX("v1|h4");
    Т.Area(2,3,1+ГорДопПолей+Max(ГорПолей,1)*ГорПоказателей,3).Merge();
    
    //Вывод шапки
    If флГоризонтальныеГруппы>0 Then
      For iLoop:=1 To флГоризонтальныеГруппы Do
        Т.CopyByX("v4|h1",1);
        пПоказатель:="";
        Фл:=0;
        For i:=1 To оПоля.Size() Do
          If оПоля.Check(i) Then
            if iLoop=1 Then
              Фл:=Фл+1;
              пПоказатель:=оПоля.GetName(i);
              If (пПоказатель="Текущий элемент")And(Фл=1) Then
                пПоказатель:="Группировка";
              EndIf;
            EndIf;  
            Т.CopyByX("v4|h2");
          EndIf;
        EndDo;
        З.First();
        ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,1,1,глКоличествоУровнейИзФильтров(оГруппы)+iLoop-1,УрВсего,оГруппы,оГруппыГ,0);
        Т.CopyByX("v4|h4");
      EndDo;  
      Т.CopyByX("v5|h1",1);
      пПоказатель:="";
      For i:=1 To оПоля.Size() Do
        If оПоля.Check(i) Then
          Т.CopyByX("v4|h2");
          Т.Area(Т.CurPutX-1,Т.Height(),Т.CurPutX-1,Т.Height()-флГоризонтальныеГруппы).Merge();
        EndIf;
      EndDo;
      З.First();
      ВыводЗаголовковГоризонтальных(Т,ТабФорма,З,1,1,глКоличествоУровнейИзФильтров(оГруппы)+флГоризонтальныеГруппы-1,УрВсего,оГруппы,оГруппыГ,1);
      Т.CopyByX("v5|h4");
    Else
      Т.CopyByX("v5|h1",1);
      пПоказатель:="";
      Фл:=0;
      For i:=1 To оПоля.Size() Do
        If оПоля.Check(i) Then
          Фл:=Фл+1;
          пПоказатель:=оПоля.GetName(i);
          If (пПоказатель="Текущий элемент")And(Фл=1) Then
            пПоказатель:="Группировка";
          EndIf;
          Т.CopyByX("v5|h2");
        EndIf;
      EndDo;
      For i:=1 To оПоказатели.Size() Do
        If оПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        пКатегория:=оПоказатели.GetName(i);
        Т.CopyByX("v5|h3");
      EndDo;
      Т.CopyByX("v5|h4");
    EndIf;
    
    ТабИтогиОбщие:=Tab.Create("Выс");
    For i:=1 To ГорПолей*ГорПоказателей Do
      ТабИтогиОбщие.AddColumn("зСм"+i,,"Number");
    EndDo;
    For i:=1 To ГорПолей Do
      ТабИтогиОбщие.AddColumn("зСм"+i+"_0",,"Number"); //Себестоимость -- для вычисления итогов с %
      ТабИтогиОбщие.AddColumn("зСм"+i+"_1",,"Number"); //Сумма -- для вычисления итогов с %
    EndDo;  
    ТабИтогиОбщие.NewLine();
    
    //Исключительный случай -- без группировок
    If УрВсего=0 Then
      If З.ResultTable.Size()>0 Then
        If ФлПроцентыВИтогах Then
          ТабИтогиОбщие["зСм1_0"]:=ТабИтогиОбщие["зСм1_0"]+З.зСеб;
          ТабИтогиОбщие["зСм1_1"]:=ТабИтогиОбщие["зСм1_1"]+З.зСумма;
        EndIf;
      
        aTab:=З.ResultTable;
        aTab.CurLine:=1;
        Чл:=0;
        For i:=1 To оПоказатели.Size() Do
          If оПоказатели.Check(i)=0 Then
            Continue;
          EndIf;
          Чл:=Чл+1;
          Фл:=1;
          If Pos("(польз)",оПоказатели.GetName(i))=1 Then
            пЗнч:=З.Get("зСм"+Чл);
          Else
            Стр0:=оПоказатели.Get(i);
            Стр:=TearStr(Стр0,"#");
            If Стр="*A" Then
              пЗнч:=З.Get("зСм"+Чл);
              Фл:=0;
            ElseIf Стр="*X" Then
              пЗнч:=З.Get("зСм"+Чл);
              Фл:=0;
            Else
              пЗнч:=Eval(Стр);
            EndIf;
          EndIf;
          If Фл Then
            ТабИтогиОбщие["зСм"+Чл]:=ТабИтогиОбщие["зСм"+Чл]+пЗнч;
          EndIf;
        EndDo;
      EndIf;
    EndIf;
    
    Т.Options.FixedLine:=Т.Height();
    З.First();
    Группировка(З,ТабФорма,Т,1,1,оГруппы,оГруппыГ,УрВсего,флГоризонтальныеГруппы,ТабИтогиОбщие);
    
    ТабИтогиОбщие.CurLine:=1;
    ТабИтогиОбщие.Выс:=Т.Height()+1;
    
    Т.CopyByX("v3|h1",1);
    j:=1;
    For i:=1 To оПоля.Size() Do
      If оПоля.Check(i) Then
        Стр:=оПоля.Get(i);
        //Стр:=TearStr(Стр,"#");
        ФлУзкая:=(pos(".Code",Стр)>0)or(pos("!зТекКод",Стр)>0);
        If i=1 Then
          Т.CopyByX("v3|h2");
        Else
          Т.CopyByX("v3|h5");
        EndIf;  
        j:=j+1;
        If ФлУзкая Then
          Т.Area(j,1,j,1).ColWidth:=100;
        EndIf;
      EndIf;
    EndDo;
    НачЗнач:=Т.CurPutX;
    Чл:=ГорПолей*ГорПоказателей;
    For i:=1 To Чл Do
      Т.CopyByX("v3|h3");
    EndDo;
    Т.CopyByX("v3|h4");
    ВывестиСтрокуОбщихИтогов(Т,ТабИтогиОбщие,НачЗнач);
    
    If глЗагрузкаРезультатаОтчетаВМультиФильтр(Param,З,"зКл","зСумма") Then
      Form.Close(0);
      Exit;
    EndIf;
    
    If оУровни=1 Then
      Т.Levels(0).Close();
      Т.Levels(1).Close();
    EndIf;
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

Function OnAfterPeriodChange()
  ОбновитьПериодXYZ();
EndFunction
