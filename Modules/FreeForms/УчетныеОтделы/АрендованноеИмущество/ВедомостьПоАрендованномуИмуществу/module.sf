//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего);
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    пКод:="";
    If Pos("DB.REF",TypeStr(пЭлР))>0 Then
      пКод:=глПолучитьКод(пЭлР);
    EndIf;
    
    If IsEmpty(пЭл) Then
      If ИмяПер="Документ" Then  
        пЭл:="< Начальный остаток >";
      Else
        пЭл:="< Не выбран >";
      EndIf;
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    

    пНач:=З.зНачОст;
    пНачАванс:=глФРМ(?(пНач<0,-пНач,0));
    пНачДолг:=глФРМ(?(пНач>0,пНач,0));
    пПриход:=глФРМ(З.зПриход);
    пРасход:=глФРМ(З.зРасход);
    пКон:=З.зКонОст;
    пКонАванс:=глФРМ(?(пКон<0,-пКон,0));
    пКонДолг:=глФРМ(?(пКон>0,пКон,0));
    
    пНач:=З.зНачОстКол;
    пНачКолАванс:=глФРМЧл(?(пНач<0,-пНач,0));
    пНачКолДолг:=глФРМЧл(?(пНач>0,пНач,0));
    пПриходКол:=глФРМЧл(З.зПриходКол);
    пРасходКол:=глФРМЧл(З.зРасходКол);
    пКон:=З.зКонОстКол;
    пКонКолАванс:=глФРМЧл(?(пКон<0,-пКон,0));
    пКонКолДолг:=глФРМЧл(?(пКон>0,пКон,0));
    
    пНачКолАванс:=пНачКолАванс+?(пНачКолАванс="",""," шт.");
    пНачКолДолг:=пНачКолДолг+?(пНачКолДолг="",""," шт.");
    пПриходКол:=пПриходКол+?(пПриходКол="",""," шт.");
    пРасходКол:=пРасходКол+?(пРасходКол="",""," шт.");
    пКонКолАванс:=пКонКолАванс+?(пКонКолАванс="",""," шт.");
    пКонКолДолг:=пКонКолДолг+?(пКонКолДолг="",""," шт.");
    
    Т.CopyByX("v2",1);
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,2,3,Ур,УрВсего,2,9,пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего);
    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
EndFunction

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,0) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.КомиссионныеТМЦ";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@Договор.ЮрЛицо,оМг@зМг@Магазин,"+
      "оН@зН@Номенклатура,оК@зК@Договор.@Parent,оД@зД@Договор","оГруппы",спРезПеременные);
    
    ТЗ:=ТЗ+"зРасход:=Expense(Сумма);
      |зНачОст:=BegTotals(Сумма);
      |зПриход:=Income(Сумма);
      |зКонОст:=EndTotals(Сумма);
      |зРасходКол:=Expense(Количество);
      |зНачОстКол:=BegTotals(Количество);
      |зПриходКол:=Income(Количество);
      |зКонОстКол:=EndTotals(Количество);";
  
    З:=Query.Create();
    З.Execute(ТЗ);
    
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
  
    оЗагол:="Ведомость по арендованному имуществу";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оМг,оН,оК,оД","","");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    пНач:=З.BegTotals("зНачОст");
    пНачАванс:=глФРМ(?(пНач<0,-пНач,0));
    пНачДолг:=глФРМ(?(пНач>0,пНач,0));
    пПриход:=глФРМ(З.Compute("зПриход"));
    пРасход:=глФРМ(З.Compute("зРасход"));
    пКон:=З.EndTotals("зКонОст");
    пКонАванс:=глФРМ(?(пКон<0,-пКон,0));
    пКонДолг:=глФРМ(?(пКон>0,пКон,0));
    
    пНач:=З.BegTotals("зНачОстКол");
    пНачКолАванс:=глФРМЧл(?(пНач<0,-пНач,0));
    пНачКолДолг:=глФРМЧл(?(пНач>0,пНач,0));
    пПриходКол:=глФРМЧл(З.Compute("зПриходКол"));
    пРасходКол:=глФРМЧл(З.Compute("зРасходКол"));
    пКон:=З.EndTotals("зКонОстКол");
    пКонКолАванс:=глФРМЧл(?(пКон<0,-пКон,0));
    пКонКолДолг:=глФРМЧл(?(пКон>0,пКон,0));
    
    пНачКолАванс:=пНачКолАванс+?(пНачКолАванс="",""," шт.");
    пНачКолДолг:=пНачКолДолг+?(пНачКолДолг="",""," шт.");
    пПриходКол:=пПриходКол+?(пПриходКол="",""," шт.");
    пРасходКол:=пРасходКол+?(пРасходКол="",""," шт.");
    пКонКолАванс:=пКонКолАванс+?(пКонКолАванс="",""," шт.");
    пКонКолДолг:=пКонКолДолг+?(пКонКолДолг="",""," шт.");
    глСимулироватьСальдоПоДокументам(З,"Документ:зНачОст:зПриход:зРасход:зКонОст");
    глСимулироватьСальдоПоДокументам(З,"Документ:зНачОстКол:зПриходКол:зРасходКол:зКонОстКол");
    
    
    Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего);
    Т.CopyByX("v3",1);

    If not ФлЛок Then
      глФормированиеОтчетаДобавитьВСобытия(оЗагол,НачДата,КонДата,"оЮЛ,оМг,оК,оД,оН");
    EndIf;
        
    If глЗагрузкаРезультатаОтчетаВМультиФильтр(Param,З,"зКонОстКол","зКонОст") Then
      Form.Close(0);
      Exit;
    EndIf;
    
    If оУровни=1 Then
      Т.Levels(0).Close();
    EndIf;
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction


