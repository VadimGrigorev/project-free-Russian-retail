//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.


Function Расcчитать(З,зТара,ДНач,НачДата,КонДата,спОбщ)
  Взв:="ВозвратПоставщику";
  флТара:=not isEmpty(зТара);
  ТТ:=Tab.Create("Док,Сумма,Количество,ДЗ,ДП");
  
  If З.BegTotals("зСмНО")<>0 Then
    ТТ.AddLine("Док,Сумма,Количество,ДЗ,ДП","",З.BegTotals("зСмНО"),З.BegTotals("зКлНО"),ДНач-1,ДНач-1);
  EndIf;
  
  
  См:=Round(З.BegTotals("зСмНО")+З.Compute("зСмП")-З.Compute("зСмР"),2);
  Кл:=Round(З.EndTotals("зКлНО")+З.Compute("зКлП")-З.Compute("зКлР"),6);
  //Документы с коррекцией возвратов
  ТдВ:=Tab.Create("зДок,зСм,зКл,зДЗ,зДП");
  While З.Next(4) Do
    зДок:=З.зДок;
    If isEmpty(зДок) Then
      ТТ.AddLine("Док,Сумма,Количество,ДЗ,ДП","",З.зСмП-З.зСмР,З.зКлП-З.зКлР,ДНач-1,ДНач-1);
      Continue;
    EndIf;
    Вид:=зДок.DBName();
    If Вид<>Взв Then
      ТТ.AddLine("Док,Сумма,Количество,ДЗ,ДП",зДок,З.зСмП-З.зСмР,З.зКлП-З.зКлР,З.зДЗ,З.зДП);
    Else
      ТдВ.AddLine("зДок,зСм,зКл,зДЗ,зДП",зДок,З.зСмП-З.зСмР,З.зКлП-З.зКлР,З.зДЗ,З.зДП);
    EndIf;
  EndDo;
  
  ТдВ.Select();
  While ТдВ.Next() Do
    зРл:=ТдВ.зДок.ДокОснование;
    If ТТ.FindAndGoto(зРл,,"Док")=0 Then
      ТТ.AddLine("Док,Сумма,Количество,ДЗ,ДП",ТдВ.зДок,ТдВ.зСм,ТдВ.зКл,ТдВ.зДЗ,ТдВ.зДП);
    Else
      ТТ.Сумма:=Round(ТТ.Сумма+ТдВ.зСм,2);
      ТТ.Количество:=Round(ТТ.Количество+ТдВ.зКл,6);
      If ?(флТара,ТТ.Количество=0,ТТ.Сумма=0) Then
        ТТ.Remove(ТТ.CurLine);
      EndIf;
    EndIf;
  EndDo;
  ТдВ:=0;

  If ТТ.Size()>0 Then
    ТТ.Group("ДЗ,ДП,Док","Сумма,Количество");
  EndIf;
  
  If См>=0 Then
    ТТ.ClearLines();
  Else
    ТТ.Sort("ДЗ+,Док");
    
    //С учетом возвратов, даты задолженности которых соответствуют датам реализаций
    i:=1;
    While i<=ТТ.Size() Do
      Кл:=ТТ.Get(i,"Количество");
      См:=ТТ.Get(i,"Сумма");
      Тек:=?(флТара,Кл,См);
      If Тек>0 Then
        ТТ.Remove(i);
        //Вверх, отнимая
        i2:=i-1;
        While (i2>0)And(Round(Тек,6)>0) Do
          ТТ.CurLine:=i2;
          Тек2:=?(флТара,ТТ.Количество,ТТ.Сумма);
          If Тек2>-Тек Then
            Кл:=Кл+ТТ.Количество;
            См:=См+ТТ.Сумма;
            Тек:=Тек+Тек2;
            ТТ.Remove(i2);
            i:=i-1;
            i2:=i2-1;
          ElseIf Тек2=-Round(Тек,6) Then
            ТТ.Remove(i2);
            i:=i-1;
            Тек:=0;
          Else
            ТТ.Количество:=Round(ТТ.Количество+Кл,6);
            ТТ.Сумма:=Round(ТТ.Сумма+См,2);
            Тек:=0;
          EndIf;
        EndDo;
        //Вниз, отнимая
        i2:=i;
        While (i2<=ТТ.Size())And(Round(Тек,6)>0) Do
          ТТ.CurLine:=i2;
          Тек2:=?(флТара,ТТ.Количество,ТТ.Сумма);
          If Тек2>=0 Then
            i2:=i2+1;
          ElseIf Тек2>-Round(Тек,6) Then
            Кл:=Кл+ТТ.Количество;
            См:=См+ТТ.Сумма;
            Тек:=Тек+Тек2;
            ТТ.Remove(i2);
          ElseIf Тек2=-Round(Тек,6) Then
            ТТ.Remove(i2);
            Тек:=0;
          Else
            ТТ.Количество:=Round(ТТ.Количество+Кл,6);
            ТТ.Сумма:=Round(ТТ.Сумма+См,2);
            Тек:=0;
          EndIf;
        EndDo;
      ElseIf Round(Тек,6)=0 Then
        ТТ.Remove(i);
      Else
        i:=i+1;
      EndIf;
    EndDo;
  EndIf;
  
  //спОбщ (список по дням) -> ТТара (по таре) -> ТТ (таблица договоров) -> ТТ (таблица документов)
  зД:=З.зД;
  ТТ.Select();
  While ТТ.Next() Do
    
    пДата:=?(BegOfDay(ТТ.ДЗ)<НачДата,НачДата,BegOfDay(ТТ.ДЗ));
    пДата:=?(пДата>КонДата,КонДата+1,пДата);
    ТТара:=спОбщ.GetByName(""+пДата);
    If ТТара.FindAndGoto(зТара,,"зТара")=0 Then
      Т0:=Tab.Create("зДог,ТТ");
      ТТара.AddLine("зТара,ТТ",зТара,Т0);
    Else
      Т0:=ТТара.ТТ;
    EndIf;
    If Т0.FindAndGoto(зД,,"зДог")=0 Then
      ТТ2:=Tab.Create("Док,ДЗ,ДП");
      ТТ2.AddColumn("Сумма",,"Number");
      ТТ2.AddColumn("Количество",,"Number");
      ТТ2.AddColumn("СуммаПр",,"Number");
      ТТ2.AddColumn("КоличествоПр",,"Number");
      Т0.AddLine("зДог,ТТ",зД,ТТ2);
    Else
      ТТ2:=Т0.ТТ;
    EndIf;
    
    ТТ2.AddLine("Док,Сумма,СуммаПр,Количество,КоличествоПр,ДЗ,ДП",ТТ.Док,Round(ТТ.Сумма,2),?(BegOfDay(ТТ.ДЗ)>=НачДата,0,Round(ТТ.Сумма,2)),
        Round(ТТ.Количество,6),?(BegOfDay(ТТ.ДЗ)>=НачДата,0,Round(ТТ.Количество,6)),BegOfDay(ТТ.ДЗ),BegOfDay(ТТ.ДП));
  EndDo;
EndFunction

Function ВывестиГруппировкуПоДоговорам(Т,ТТ,ByRef пН,аДата,НачДата,оУровни)
  ТТ.Select();
  While ТТ.Next() Do
    ТТ2:=ТТ.ТТ;
    пСм2:=Round(ТТ2.Sum("СуммаПр"),2);
    пСм1:=Round(ТТ2.Sum("Сумма"),2);
    пКл:=Round(ТТ2.Sum("Количество"),6);
    пСр:=аДата;
    If (пСм2=0)And(пСм1=0)And(пКл=0) Then
      Continue;
    EndIf;
    пН:=пН+1;
    зД:=ТТ.зДог;
    пКод:=глПолучитьКод(зД.Parent());
    пК:=Trim(зД.Parent().Name)+" ("+Str(зД)+")";  
    пЭлР:=зД;
    пДата:=?(IsEmpty(зД.ДатаПоследнейСверки),зД.ДатаЗаключенияДоговора,зД.ДатаПоследнейСверки);
    пСм1:=глФРМ(-пСм1);
    пСм2:=глФРМ(-пСм2);
    пКл:=глФРМЧл(-пКл);
    ТТ2.Select();
    While ТТ2.Next() Do
      пСр:=Min(пСр,BegOfDay(ТТ2.ДЗ));
    EndDo;
    пСр:=?(пСр=НачДата,"Сегодня",?(пСр>НачДата,""+пСр+" (+"+Str(пСр-НачДата)+")",""+пСр+" (-"+Str(НачДата-пСр)+")"));
    Т.CopyByX("v5",1);
    НачВыс:=Т.Height();
    
    ТТ2.Select();
    While ТТ2.Next() Do
      Секц:="v6";
      If BegOfDay(ТТ2.ДЗ)>=НачДата Then
        Секц:="v7";
      EndIf;
      
      пДок:=?(isEmpty(ТТ2.Док),"Очень старый долг!",ТТ2.Док);
      пЭлР:=пДок;
      пСр:=?(BegOfDay(ТТ2.ДЗ)=НачДата,"Сегодня",?(BegOfDay(ТТ2.ДЗ)>НачДата,""+BegOfDay(ТТ2.ДЗ)+" (+"+Str(BegOfDay(ТТ2.ДЗ)-НачДата)+")",""+BegOfDay(ТТ2.ДЗ)+" (-"+Str(НачДата-BegOfDay(ТТ2.ДЗ))+")"));
      пСм2:=глФРМ(-ТТ2.СуммаПр);
      пСм1:=глФРМ(-ТТ2.Сумма);
      пКл:=глФРМЧл(-ТТ2.Количество);
      Т.CopyByX(Секц,1);
      Form.StatusText(Т.Height());
    EndDo;
    If оУровни=1 Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
EndFunction



Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  оТипУчета:=глПолучитьУстановку(ТабФорма,"оТипУчета").SelectedLine;
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,0,Form.НачДата.Value,1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    ДНач:=BegOfMonth(НачДата-365);
    ДКон:=КонДата;
    ВК:=глПолучитьУстановку(ТабФорма,"оТипАктива").SelectedLine;
    СтрВК:="";
    If ВК=2 Then
      СтрВК:="зТА:=Storage.Взаиморасчеты.Договор.@Parent.ТипАктива;Condition((зТА<>3)And(зТА<>0));"+_NEWLINE;
    ElseIf ВК=3 Then
      СтрВК:="зТА:=Storage.Взаиморасчеты.Договор.@Parent.ТипАктива;Condition(зТА=1);"+_NEWLINE;
    ElseIf ВК=4 Then
      СтрВК:="зТА:=Storage.Взаиморасчеты.Договор.@Parent.ТипАктива;Condition(зТА<>0);"+_NEWLINE;
    ElseIf ВК=5 Then
      СтрВК:="зТА:=Storage.Взаиморасчеты.Договор.@Parent.ТипАктива;Condition(зТА=4);"+_NEWLINE;
    EndIf;
    
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,"Storage.Взаиморасчеты",ДНач,ДКон,"оЮЛ@зЮЛ@Договор.ЮрЛицо,оК@зК@Договор.@Parent,"+
      "оД@зД@Договор,оН@зН@Тара","",спРезПеременные);
      
    ТЗ:=ТЗ+СтрВК+_NEWLINE;
    If Pos("зД:=",ТЗ)=0 Then
      ТЗ:=ТЗ+"зД:=Storage.Взаиморасчеты.Договор;"+_NEWLINE;
    EndIf;
    If Pos("зН:=",ТЗ)=0 Then
      ТЗ:=ТЗ+"зН:=Storage.Взаиморасчеты.Тара;"+_NEWLINE;
    EndIf;
    If оТипУчета=2 Then
      ТЗ:=ТЗ+"Condition(isEmpty(зН));"+_NEWLINE;
    ElseIf оТипУчета=3 Then
      ТЗ:=ТЗ+"Condition(NOT isEmpty(зН));"+_NEWLINE;
    EndIf;
    If pos("зК:=",ТЗ)=0 Then
      ТЗ:=ТЗ+"зК:=Storage.Взаиморасчеты.Договор.@Parent;"+_NEWLINE;
    EndIf;
    ТЗ:=ТЗ+"зДок:=Storage.Взаиморасчеты.@LINK;";
      
    ТЗ:=ТЗ+"зКлНО:=BegTotals(Количество);
      |зКлП:=Income(Количество);
      |зКлР:=Expense(Количество);
      |зДЗ:=Storage.Взаиморасчеты.ДатаЗадолженности;
      |зДП:=Storage.Взаиморасчеты.ДатаПродажи;
      |зСмНО:=BegTotals(Сумма);
      |зСмП:=Income(Сумма);
      |зСмР:=Expense(Сумма);
      |Group зК,зД,зН,зДок;";
  
    З:=Query.Create();
    З.Execute(ТЗ,2);

    
    оЗагол:="График оплаты поставщикам";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,0,КонДата,"оЮЛ,оБ,оК,оД,оН","Тип актива@оТипАктива");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();

    //спОбщ (список по дням) -> ТТара (по таре) -> ТТ (таблица договоров) -> ТТ (таблица документов)
    спОбщ:=List.Create();
    а:=BegOfDay(НачДата);
    While а<=BegOfDay(КонДата)+1 Do
      ТТара:=Tab.Create("зТара,ТТ");
      спОбщ.SetByName(""+а,ТТара);
      а:=а+1;
    EndDo;
    
    //Полный расчет таблицы 
    While З.Next(1) Do
      Form.StatusText("Расчет: "+З.зК);
      While З.Next(2) Do
        While З.Next(3) Do
          Расcчитать(З,З.зН,ДНач,НачДата,КонДата,спОбщ);
        EndDo;  
      EndDo;  
    EndDo;
    
    
    пСм10:=0;
    пСм20:=0;
    пКл0:=0;
    пСр0:=НачДата;
    //Вывод таблицы
    аДата:=НачДата-1;
    While аДата<КонДата+1 Do
      аДата:=аДата+1;
      пДень:=?(аДата=КонДата+1,"Будущие оплаты (за пределами отчета)",""+аДата+" ("+FormatDate(аДата,"NN")+")");
      ТТара:=спОбщ.GetByName(""+аДата);
      ТТара.Sort("зТара+");
      If ТТара.Size()=0 Then
        Continue;
      EndIf;
      
      пСм1:=0;
      пСм2:=0;
      пКл:=0;
      пСр:=аДата;
      ТТара.Select();
      While ТТара.Next() Do
        ТТ:=ТТара.ТТ;
        ТТ.Select();
        While ТТ.Next() Do
          пСм2:=пСм2+ТТ.ТТ.Sum("СуммаПр");
          пСм1:=пСм1+ТТ.ТТ.Sum("Сумма");
          пКл:=пКл+ТТ.ТТ.Sum("Количество");
          If аДата=НачДата Then
            ТТ2:=ТТ.ТТ;
            ТТ2.Select();
            While ТТ2.Next() Do
              пСр:=Min(пСр,BegOfDay(ТТ2.ДЗ));
            EndDo;
          EndIf;
        EndDo;
        пСм10:=пСм10+пСм1;
        пСм20:=пСм20+пСм2;
        пКл0:=пКл0+пКл;
        пСр0:=Min(пСр0,пСр);
      EndDo;
      
      If (Round(пСм1,2)=0)And(Round(пСм2,2)=0)And(Round(пКл,6)=0) Then
        Continue;
      EndIf;
      
      пСм1:=глФРМ(-пСм1);
      пСм2:=глФРМ(-пСм2);
      пКл:=глФРМЧл(-пКл);
      пСр:=?(пСр=НачДата,"Сегодня",?(пСр>НачДата,Str(пСр)+" (+"+Str(пСр-НачДата)+")",Str(пСр)+" (-"+Str(НачДата-пСр)+")"));
      Т.CopyByX("v4",1);
      НачВыс:=Т.Height();

      пН:=0;
      If оТипУчета=2 Then
        //Без группировки по таре (только товар)
        ТТара.CurLine:=1;
        ТТ:=ТТара.ТТ;
        ВывестиГруппировкуПоДоговорам(Т,ТТ,пН,аДата,НачДата,оУровни);
      Else
        //Группировка по таре
        ТТара.Select();
        While ТТара.Next() Do
          пСм1:=0;
          пСм2:=0;
          пКл:=0;
          пСр:=аДата;
          ТТ:=ТТара.ТТ;
          ТТ.Select();
          While ТТ.Next() Do
            пСм2:=пСм2+ТТ.ТТ.Sum("СуммаПр");
            пСм1:=пСм1+ТТ.ТТ.Sum("Сумма");
            пКл:=пКл+ТТ.ТТ.Sum("Количество");
            If аДата=НачДата Then
              ТТ2:=ТТ.ТТ;
              ТТ2.Select();
              While ТТ2.Next() Do
                пСр:=Min(пСр,BegOfDay(ТТ2.ДЗ));
              EndDo;
            EndIf;
          EndDo;
          пСр:=?(пСр=НачДата,"Сегодня",?(пСр>НачДата,Str(пСр)+" (+"+Str(пСр-НачДата)+")",Str(пСр)+" (-"+Str(НачДата-пСр)+")"));
          пСм1:=глФРМ(-пСм1);
          пСм2:=глФРМ(-пСм2);
          пКл:=глФРМЧл(-пКл);
          зТара:=ТТара.зТара;
          пТара:=?(isEmpty(зТара),"<Долг деньгами>",зТара);
          Т.CopyByX("v10",1);
          НачВыс2:=Т.Height();
          ВывестиГруппировкуПоДоговорам(Т,ТТ,пН,аДата,НачДата,оУровни);
          If оУровни=1 Then
            глДобавитьУровень(Т,НачВыс2,Т.Height());
          EndIf;
          
        EndDo;
      EndIf;
      If оУровни=1 Then
        глДобавитьУровень(Т,НачВыс,Т.Height());
      EndIf;
    EndDo;
    
    пСр:=?(пСр0=НачДата,"Сегодня",?(пСр0>НачДата,Str(пСр0)+" (+"+Str(пСр0-НачДата)+")",Str(пСр0)+" (-"+Str(НачДата-пСр0)+")"));
    пСм1:=глФРМ(-пСм10);
    пСм2:=глФРМ(-пСм20);
    пКл:=глФРМЧл(-пКл0);
    Т.CopyByX("v8",1);    
    
    
    If оУровни=1 Then
      Т.Levels().Close();
    EndIf;
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction


Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

