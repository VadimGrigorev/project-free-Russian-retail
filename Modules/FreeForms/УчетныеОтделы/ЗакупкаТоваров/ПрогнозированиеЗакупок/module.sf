//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function ОбновитьВидимость()
  оРасш:=Form.оРасш.Value;
  оСлСр:=Form.оСлСр.Value;
  Form.тНачДатаЗак.isDisabled:=1-оРасш;
  Form.НачДатаЗак.isDisabled:=1-оРасш;
  Form.тСклад.isDisabled:=1-оРасш;
  Form.зСк2.isDisabled:=1-оРасш;
  Form.тМинПродажи.isDisabled:=1-оСлСр;
  Form.оОткл.isDisabled:=1-оСлСр;
EndFunction

Function ВывестиИтоги(Т,ТИтоги,ТабФорма)
  оПоказатели:=глПолучитьУстановку(ТабФорма,"оПоказатели");
  РабочихДнейВПериоде:=глПолучитьИзМодуля("РабочихДнейВПериоде");
  ВсегоПолей:=глПолучитьИзМодуля("ВсегоПолей");
  ТИтоги.CurLine:=ТИтоги.Size();
  
  Выс:=ТИтоги.Выс;
  j:=0;
  For i:=1 to оПоказатели.Size() Do
    If оПоказатели.Check(i)=0 Then
      Continue;
    EndIf;
    j:=j+1;
    Т.Area(9+ВсегоПолей+(j-1)*4,Выс,9+ВсегоПолей+(j-1)*4,Выс).Text:=глФРМЧл(ТИтоги.Get(ТИтоги.CurLine,"зЗак"+i));
    Т.Area(10+ВсегоПолей+(j-1)*4,Выс,10+ВсегоПолей+(j-1)*4,Выс).Text:=глФРМЧл(ТИтоги.Get(ТИтоги.CurLine,"зОст"+i));
    Т.Area(11+ВсегоПолей+(j-1)*4,Выс,11+ВсегоПолей+(j-1)*4,Выс).Text:=глФРМЧл(ТИтоги.Get(ТИтоги.CurLine,"зПрод"+i));
    If ТИтоги.CurLine=1 Then
      //Для общего итого складываем только положительную потребность
      Т.Area(12+ВсегоПолей+(j-1)*4,Выс,12+ВсегоПолей+(j-1)*4,Выс).Text:=глФРМЧл(ТИтоги.Get(ТИтоги.CurLine,"зЗаказ"+i));
    Else
      Т.Area(12+ВсегоПолей+(j-1)*4,Выс,12+ВсегоПолей+(j-1)*4,Выс).Text:=глФРМЧл(РабочихДнейВПериоде*ТИтоги.Get(ТИтоги.CurLine,"зПрод"+i)-ТИтоги.Get(ТИтоги.CurLine,"зОст"+i));
    EndIf;  
  EndDo;
  ТИтоги.Size(ТИтоги.Size()-1);
EndFunction

Function OnPeriodHelp()
  Box("Продажи считаются за период с начальной даты по конечную, конечная дата принимается за дату закупки (обычно это текущий день).",Q_INFORMATION);
EndFunction

Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего,спПоз)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего,спПоз);
    Exit;
  EndIf;
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  оПоля:=глПолучитьУстановку(ТабФорма,"оПоля");
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  ФлПоказателей:=глПолучитьИзМодуля("ФлПоказателей");
  оПоказатели:=глПолучитьУстановку(ТабФорма,"оПоказатели");
  ТИтоги:=глПолучитьИзМодуля("ТИтоги");
  оСлСр:=глПолучитьУстановку(ТабФорма,"оСлСр");
  оОткл:=глПолучитьУстановку(ТабФорма,"оОткл");
  ПрошлоРабочихДней:=глПолучитьИзМодуля("ПрошлоРабочихДней");
  РабочихДнейВПериоде:=глПолучитьИзМодуля("РабочихДнейВПериоде");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата2"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата2"));
  ТабВЗаявку:=глПолучитьИзМодуля("ТабВЗаявку");
  оРасш:=глПолучитьУстановку(ТабФорма,"оРасш");
  ВсегоПолей:=глПолучитьИзМодуля("ВсегоПолей");
  
  ПозИмена:="";
  ПозЗначения:="";
  If УрВсего=Ур Then
    For i:=1 To спПоз.Size() Do
      ПозИмена:=ПозИмена+?(ПозИмена<>"",",")+спПоз.GetName(i);
      ПозЗначения:=ПозЗначения+?(ПозЗначения="","",",")+"спПоз["+i+"]";
    EndDo;
    ПозИмена:=ПозИмена+?(ПозИмена<>"",",")+ИмяПер;
    ПозЗначения:=ПозЗначения+?(ПозЗначения="","",",")+"спПоз["+(спПоз.Size()+1)+"]";
  EndIf;
  
  спГруппы:=List.Create();
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    пКод:=глПолучитьКод(пЭлР);
    спПоз.Add(пЭлР,ИмяПер);
    пПост:="";
    пЕд:="";
    пЦ:="";
    If ИмяПер="зН" Then
      If not пЭлР.IsFolder() Then
        пЕд:=Str(З.зН.базЕдиница)+" "+Str(З.зН.оснЕдиница)+" ("+З.зН.оснКоэффициент+")";
        пПост:=З.зН.Поставщик;
        If спПоз.Find("зСк")>0 Then
          Склад:=З.зСк;
        Else
          Склад:=глПользователь.Магазин.Склад;
        EndIf;
        пЦ:=глФРМ(глПолучитьОсновнуюЦену(З.зН,Склад,КонДата,1));
      EndIf;
    EndIf;
    
    ФлПапка:=0;
    If _And(pos("DB.REF.",TypeStr(пЭлР))>0,not isEmpty(пЭлР),пЭлР.isFolder()) Then
      //Завершить предыдущую папку?
      While спГруппы.Size()>0 Do
        пЭлПред:=спГруппы.Get(спГруппы.Size());
        if пЭлПред.Contains(пЭлР) Then
          Break;
        EndIf;
        ВывестиИтоги(Т,ТИтоги,ТабФорма);
        спГруппы.Remove(спГруппы.Size());
      EndDo;
    
      спГруппы.Add(пЭлР);
      ФлПапка:=1;
    EndIf;
    ТИтоги.AddLine("Выс",Т.Height()+1);
    
    Дней:=ПрошлоРабочихДней;
    З2:=0;
    З3:=0;
    З4:=0;
    If (УрВсего=Ур)Or(ИмяПер="зН") Then
      If (оСлСр=1)And(УрВсего=Ур) Then
        //Подсчет количества "продажных" дней в периоде для данной группировки
        Дней:=0;
        Кф1:=З.зКл/(КонДата-НачДата+1);
        Мин0:=Кф1*оОткл/100;
        While З.Next(Ур+1) Do
          If З.зКл>=Мин0 Then
            Дней:=Дней+1;
          EndIf;
        EndDo;
      EndIf;

      З2:=глПолучитьИзМодуля("З2");
      З2.First();
      If not Eval("З2.ResultTable.LocateAndGoto(""@LEVEL,"+?(оРасш=0,ПозИмена,Replace(ПозИмена,"зСк","зСк2"))+""",1,"+ПозЗначения+")>0") Then
        З2:=0;
      EndIf;
      
      З3:=глПолучитьИзМодуля("З3");
      З3.First();
      If not Eval("З3.ResultTable.LocateAndGoto(""@LEVEL,"+ПозИмена+""",1,"+ПозЗначения+")>0") Then
        З3:=0;
      EndIf;
      
      З4:=глПолучитьИзМодуля("З4");
      If З4<>0 Then
        З4.First();
        If not Eval("З4.ResultTable.LocateAndGoto(""@LEVEL,"+ПозИмена+""",1,"+ПозЗначения+")>0") Then
          З4:=0;
        EndIf;
      EndIf;  
    EndIf;
    Дней:=?(Дней=0,1,Дней);
    
    ФлНедостача:=0;
    пДП:=?((ИмяПер="зН")And(not ФлПапка),Дней,"");
    пДО:="";
    If (ИмяПер="зН")And(not ФлПапка) Then
      зОст:=?(З3<>0,З3.зКл,0)+?(З4<>0,З4.зКл,0);
      пДО:=?((З3=0)Or(З.зКл=0),"?",FormatNumber(Max(зОст/З.зКл*Дней,0),1,"",1));
      ФлНедостача:=РабочихДнейВПериоде*З.зКл/Дней-зОст;
      If ФлНедостача>0 Then
        ТабВЗаявку.AddLine("Номенклатура,Склад,Количество",З.зН,"",ФлНедостача);
      EndIf;  
    EndIf;
    
    Т.CopyByX("v2|h1",1);
    For i:=1 To оПоля.Size() Do
      If оПоля.Check(i)=0 Then
        Continue;
      EndIf;
      If (ИмяПер<>"зН")Or(ФлПапка) Then
        пПоле:="";
      Else  
        пПоле:=оПоля.Get(i);
        If pos("REF.ТМЦНОМЕНКЛАТУРА.",Uppercase(пПоле))=1 Then
          //Ref.тмцНоменклатура.сертПроизводитель
          TearStr(пПоле,".");
          TearStr(пПоле,".");
          пПоле:=З.зН.GetValue(пПоле);
        Else
          пПоле:=TearStr(пПоле,"#");//Номенклатура.ВнешнийТекстовыйКод
          TearStr(пПоле,".");
          пПоле:=З.зН.GetValue(пПоле);
        EndIf;
      EndIf;  
      Т.CopyByX("v2|h4");
    EndDo;
    Т.CopyByX("v2|h5");
    For i:=1 to оПоказатели.Size() Do
      If оПоказатели.Check(i)=0 Then
        Continue;
      EndIf;
      Стр:=оПоказатели.Get(i);
      Стр:=TearStr(Стр,"#");
      зПрод:=Eval(Стр);
      зПрод2:=?(З2<>0,Eval(Replace(Стр,"З.","З2.")),0);
      зОст:=?(З3<>0,Eval(Replace(Стр,"З.","З3.")),0);
      зОст:=зОст+?(З4<>0,Eval(Replace(Стр,"З.","З4.")),0);
      If (УрВсего=Ур)and(not ФлПапка) Then
        ТИтоги.Select();
        While ТИтоги.Next() Do
          ТИтоги.Set(ТИтоги.CurLine,"зПрод"+i,ТИтоги.Get(ТИтоги.CurLine,"зПрод"+i)+зПрод/Дней);
          ТИтоги.Set(ТИтоги.CurLine,"зЗак"+i,ТИтоги.Get(ТИтоги.CurLine,"зЗак"+i)+зПрод2);
          ТИтоги.Set(ТИтоги.CurLine,"зОст"+i,ТИтоги.Get(ТИтоги.CurLine,"зОст"+i)+зОст);
          If ТИтоги.CurLine=1 Then
            //Для общего итого складываем только положительную потребность
            зПотребность:=Max(РабочихДнейВПериоде*зПрод/Дней-зОст,0);
            ТИтоги.Set(ТИтоги.CurLine,"зЗаказ"+i,ТИтоги.Get(ТИтоги.CurLine,"зЗаказ"+i)+зПотребность);
          EndIf;
        EndDo;
      EndIf;
      Т.CopyByX("v2|h2");
    EndDo;
    Т.CopyByX("v2|h3");
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1,3,Ур,УрВсего,2,8+ФлПоказателей*4+ВсегоПолей,пЭлР);
    If (not ФлПапка)And(ИмяПер="зН")And(ФлНедостача>0) Then
      j:=0;
      For i:=1 to оПоказатели.Size() Do
        If оПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        j:=j+1;
        Т.Area(12+ВсегоПолей+(j-1)*4,НачВыс,12+ВсегоПолей+(j-1)*4,НачВыс).ColorProfile:=Min(УрВсего-Ур+28,37);
      EndDo;  
    EndIf;  
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего,спПоз);
    If not ФлПапка Then
      ВывестиИтоги(Т,ТИтоги,ТабФорма);
    EndIf;  

    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
    спПоз.Remove(спПоз.Size());
  EndDo;
  
  While спГруппы.Size()>0 Do
    ВывестиИтоги(Т,ТИтоги,ТабФорма);
    спГруппы.Remove(спГруппы.Size());
  EndDo;
EndFunction


Function ПодсчитатьЧислоРабочихДней(НачДата,КонДата,РабочихДнейВНеделе,СпНеделя)
  Чл:=0;
  а:=НачДата;
  While а<=КонДата Do
    If (а<>BegOfWeek(а))Or(EndOfWeek(а)>КонДата) Then
      а2:=EndOfWeek(а);
      While а<=а2 Do
        If а<=КонДата Then
          Чл:=Чл+1-СпНеделя.Get(DayOfWeek(а));
        EndIf;
        а:=а+1;
      EndDo;
    Else
      Чл:=Чл+РабочихДнейВНеделе;
      а:=EndOfWeek(а)+1;
    EndIf;
  EndDo;
  Exit Чл;
EndFunction

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  оПоля:=глПолучитьУстановку(ТабФорма,"оПоля");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата2"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата2"));
  НачЗакДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДатаЗак"));
  ДатаЗапаса:=BegOfDay(глПолучитьУстановку(ТабФорма,"ДатаЗапаса"));
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  оСлСр:=глПолучитьУстановку(ТабФорма,"оСлСр");
  оРасш:=глПолучитьУстановку(ТабФорма,"оРасш");
  оЮЛ:=глПолучитьУстановку(ТабФорма,"оЮЛ");
  оБезЗаявок:=глПолучитьУстановку(ТабФорма,"оБезЗаявок");
  оПродажиПоСтрокам:=глПолучитьУстановку(ТабФорма,"оПродажиПоСтрокам");
  оПоказатели:=глПолучитьУстановку(ТабФорма,"оПоказатели");
  СпНеделя:=List.Create(глПолучитьУстановку(ТабФорма,"оВ1"),глПолучитьУстановку(ТабФорма,"оВ2"),глПолучитьУстановку(ТабФорма,"оВ3"),
    глПолучитьУстановку(ТабФорма,"оВ4"),глПолучитьУстановку(ТабФорма,"оВ5"),глПолучитьУстановку(ТабФорма,"оВ6"),глПолучитьУстановку(ТабФорма,"оВ7"));
  РабочихДнейВНеделе:=7-(СпНеделя.Get(1)+СпНеделя.Get(2)+СпНеделя.Get(3)+СпНеделя.Get(4)+СпНеделя.Get(5)+СпНеделя.Get(6)+СпНеделя.Get(7));
  РабочихДнейВПериоде:=ПодсчитатьЧислоРабочихДней(КонДата,ДатаЗапаса,РабочихДнейВНеделе,СпНеделя);
  If РабочихДнейВПериоде<=0 Then
    Message("По текущим установках в периоде до следующей закупки нет ни одного рабочего дня!","!");
    Exit;
  EndIf;
  ПрошлоРабочихДней:=ПодсчитатьЧислоРабочихДней(НачДата,КонДата-1,РабочихДнейВНеделе,СпНеделя);
  ТабВЗаявку:=Tab.Create("Номенклатура,Склад,Количество");
  глСохранитьВМодуле("ТабВЗаявку",ТабВЗаявку);
  глСохранитьВМодуле("КонДата",КонДата);
  глСохранитьВМодуле("З2",0);
  глСохранитьВМодуле("З3",0);
  глСохранитьВМодуле("З4",0);
  
  
  оКф:=List.Create();
  оКф.Add("","зКл"); //зК00:=$.Количество;зКл:=SUM(зК00);
  оКф.Add("зК01:=#оснКоэффициент;зКлЦел:=SUM(зК00/зК01);","зКлЦел");
  оКф.Add("зК03:=#КоэффОсобойЕдиницы;зЮн:=SUM(зК00*зК03);","зЮн");
  оКф.Add("зК04:=#ОбъемЛитров;зО:=SUM(зК00*зК04);","зО");
  оКф.Add("зК05:=#базМассаНетто;зКг:=SUM(зК00*зК05);","зКг");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата2.Value,Form.КонДата2.Value,-1) Then
      Exit;
    EndIf;
    If not глПроверитьНаЛишниеФильтры(ТабФорма,"оЮЛ",,"складам") Then
      Exit;
    EndIf;    
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата2.Value);
    КонДата:=BegOfDay(Form.КонДата2.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.ДвижениеТМЦ";
    
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@Договор.ЮрЛицо,"+
      "оСк@зСк@Склад,оТГ@зТГ@Номенклатура.ТоварнаяГруппа,оН@зН@Номенклатура,оК@зК@Номенклатура.Поставщик","оГруппы",спРезПеременные);
    ТЗ0:=ТЗ;  
    
    ФлКолво:=0;
    ТЗ:=ТЗ+"зК00:="+Путь+".Количество;зКл:=SUM(зК00);"+_NEWLINE;
    Чл:=0;
    For i:=1 to оПоказатели.Size() Do
      If оПоказатели.Check(i)=0 Then
        Continue;
      EndIf;
      Чл:=Чл+1;
      Стр:=оПоказатели.Get(i);
      TearStr(Стр,"#");
      While Стр<>"" Do
        Стр1:=TearStr(Стр,"@");
        Стр2:=Replace(оКф.GetByName(Стр1),"#",Путь+".Номенклатура.");
        Стр2:=Replace(Стр2,"$",Путь);
        If Pos(Стр2,ТЗ)=0 Then
          ТЗ:=ТЗ+Стр2+_NEWLINE;
        EndIf;
      EndDo;
    EndDo;
    If Чл=0 Then
      Box("Необходимо выбрать по крайней мере один тип учетной единицы!",Q_WARNING);
      Exit;
    EndIf;
      
    ТЗПослеКоличества:=ТЗ;
    //Продажи
    If оПродажиПоСтрокам Then
      ТЗ1:=ТЗ+"зТипАкт:=Stor.ДвижениеТМЦ.Договор.@Parent.ТипАктива;Condition(зТипАкт<3);";
    Else
      ТЗ1:=ТЗ+"зМрТУ:=Stor.ДвижениеТМЦ.ТипУчета;Condition(зМрТУ=0);зМрТип:=Stor.ДвижениеТМЦ.ТипЗаписи;Condition((зМрТип<2)Or(зМрТип=5));зТипАкт:=Stor.ДвижениеТМЦ.Договор.@Parent.ТипАктива;Condition(зТипАкт<3);";
    EndIf;  
    If оСлСр=1 Then
      ТЗ1:=ТЗ1+"День:=Stor.ДвижениеТМЦ.@Day;Group День;";
    EndIf;
    
    //Закупки
    ТЗ2:=ТЗ+"зМрТУ:=Stor.ДвижениеТМЦ.ТипУчета;Condition(зМрТУ=0);зМрТип:=Stor.ДвижениеТМЦ.ТипЗаписи;Condition((зМрТип>1)And(зМрТип<4));зТипАкт:=Stor.ДвижениеТМЦ.Договор.@Parent.ТипАктива;Condition((зТипАкт<3)or(зТипАкт=4));";
    If оРасш=1 Then
      ТЗ2:=Replace(ТЗ2,"НачДата","НачЗакДата");
      ТЗ2:=Replace(ТЗ2,"зСк","зСк2");
    EndIf;
      
    //Остатки (+Резервы)
    Путь:="Stor.ОстаткиТМЦ";
    оКф2:=List.Create();
    оКф2.Add("","зКл"); //зКл:=EndTotals(Количество);
    оКф2.Add("зК01:=#оснКоэффициент;зКлЦел:=зКл/зК01;","зКлЦел");
    оКф2.Add("зК03:=#КоэффОсобойЕдиницы;зЮн:=зКл*зК03;","зЮн");
    оКф2.Add("зК04:=#ОбъемЛитров;зО:=зКл*зК04;","зО");
    оКф2.Add("зК05:=#базМассаНетто;зКг:=зКл*зК05;","зКг");
    
    //Добавляем строки, в которых есть остатки, однако, по которым не было движений
    ТЗ3:=Replace(ТЗПослеКоличества,"Stor.ДвижениеТМЦ","Stor.ОстаткиТМЦ");
    ТЗ3:=Replace(ТЗ3,"Договор.ЮрЛицо","ЮрЛицо");
    ТЗ3:=Replace(ТЗ3,"зК00:=Stor.ОстаткиТМЦ.Количество;","зК00а:=EndTotals(Количество);зК00:=0;");
    ТЗ3:=Replace(ТЗ3,"SUM(","(");
    
    If оПродажиПоСтрокам Then
      //Period from '01.03.2020' to '05.03.2020';
      TearStr(ТЗ1,_NEWLINE);
      ТЗ1:="зДата:=BegOfDay($$$.DocDate);Condition((зДата>=НачДата)And(зДата<=КонДата));зСтат:=$$$.@Status;Condition(зСтат>1);"+_NEWLINE+ТЗ1;
      ТЗ1:=Replace(ТЗ1,"Stor.ДвижениеТМЦ.Номенклатура","$$$.Номенклатура.Номенклатура");
      ТЗ1:=Replace(ТЗ1,"Stor.ДвижениеТМЦ.Количество","$$$.Номенклатура.Количество");
      ТЗ1:=Replace(ТЗ1,"Stor.ДвижениеТМЦ.Сумма","$$$.Номенклатура.Сумма");
      ТЗ1:=Replace(ТЗ1,"Stor.ДвижениеТМЦ","$$$");
      ТЗ1:=Replace(ТЗ1,"$$$.@Day","BegOfDay($$$.DocDate)");
      ТЗ1:=Replace(ТЗ1,"$$$.@Month","BegOfMonth($$$.DocDate)");
      ТЗ1:=Replace(ТЗ1,"$$$.@Year","BegOfYear($$$.DocDate)");
      ТЗ1:="("+Replace(ТЗ1,"$$$","Doc.Реализация")+") UNION ALL ("+Replace(Replace(ТЗ1,"$$$","Doc.ВозвратОтПокупателя"),"SUM(","SUM(-")+") UNION ALL"+
            "("+_NEWLINE+ТЗ3+_NEWLINE+");";
    Else
      ТЗ1:="("+_NEWLINE+ТЗ1+_NEWLINE+
        ") UNION ALL"+_NEWLINE+
        "("+_NEWLINE+ТЗ3+_NEWLINE+
        ")";
    EndIf;

    ТЗ3:=Replace(ТЗ0,"Stor.ДвижениеТМЦ","Stor.ОстаткиТМЦ");
    ТЗ3:=Replace(ТЗ3,"Договор.ЮрЛицо","ЮрЛицо");

    ТЗ3:=ТЗ3+"зКл:=EndTotals(Количество);"+_NEWLINE;
    СтрПП:="";
    For i:=1 to оПоказатели.Size() Do
      If оПоказатели.Check(i)=0 Then
        Continue;
      EndIf;
      Стр:=оПоказатели.Get(i);
      TearStr(Стр,"#");
      While Стр<>"" Do
        Стр1:=TearStr(Стр,"@");
        Стр2:=Replace(оКф2.GetByName(Стр1),"#",Путь+".Номенклатура.");
        If Pos(Стр2,ТЗ3)=0 Then
          ТЗ3:=ТЗ3+Стр2+_NEWLINE;
          If Стр1<>"зКл" Then
            TearStr(Стр2,";");
            tearStr(Стр2,":=");
            СтрПП:=СтрПП+"Aggregate1 "+Стр1+" As SUM("+Replace(Стр2,";","")+");"+_NEWLINE;
          EndIf;  
        EndIf;
      EndDo;
    EndDo;
    ТЗ4:=Replace(ТЗ3,"зКл:=EndTotals(Количество);","зКл:=-EndTotals(Количество);");
    
    If СтрПП<>"" Then
      ТЗ3:=ТЗ3+_NEWLINE+"Postprocessing ("+_NEWLINE+СтрПП+")";
    EndIf;    
    
    Form.StatusText("Запрос по продажам...");
    З1:=Query.Create();
    З1.Execute(ТЗ1);
    
    Form.StatusText("Запрос по закупкам...");
    З2:=Query.Create();
    З2.Execute(ТЗ2);
    
    Form.StatusText("Запрос по остаткам...");
    З3:=Query.Create();
    З3.Execute(ТЗ3);
    
    //Заявки поставщикам
    З4:=0;
    If оБезЗаявок=0 Then    
      Form.StatusText("Запрос по заявкам поставщикам...");
      оКО:=Enum.коПоступлениеТМЦ.ЗаявкаПоставщику;
      ТЗ4:="зСтатус:=Doc.ПоступлениеТМЦ.@Status;Condition(зСтатус>1);зДата:=BegOfDay(Doc.ПоступлениеТМЦ.DocDate);Condition((зДата>="+?(оРасш=0,"НачДата","НачЗакДата")+")And(зДата<=КонДата));"+_NEWLINE+
        "зКО:=Doc.ПоступлениеТМЦ.КодОперации;Condition(зКО=оКО);"+_NEWLINE+
        Replace(ТЗ0,"Stor.ДвижениеТМЦ","Doc.ПоступлениеТМЦ");
      ТЗ4:=Replace(ТЗ4,"Doc.ПоступлениеТМЦ.Номенклатура","Doc.ПоступлениеТМЦ.Номенклатура.Номенклатура");
      If оРасш=1 Then
        ТЗ4:=Replace(ТЗ4,"зСк","зСк2");
      EndIf;
      ТЗ4:=ТЗ4+"зК00:=Doc.ПоступлениеТМЦ.Номенклатура.Количество;зКл:=SUM(зК00);"+_NEWLINE;
      For i:=1 to оПоказатели.Size() Do
        If оПоказатели.Check(i)=0 Then
          Continue;
        EndIf;
        Стр:=оПоказатели.Get(i);
        TearStr(Стр,"#");
        While Стр<>"" Do
          Стр1:=TearStr(Стр,"@");
          Стр2:=Replace(оКф.GetByName(Стр1),"#","Doc.ПоступлениеТМЦ.Номенклатура.Номенклатура.");
          Стр2:=Replace(Стр2,"$","Doc.ПоступлениеТМЦ.Номенклатура");
          If Pos(Стр2,ТЗ4)=0 Then
            ТЗ4:=ТЗ4+Стр2+_NEWLINE;
          EndIf;
        EndDo;
      EndDo;
      //Убираем Period from XXXX to XXX;
      ТЗ5:=TearStr(ТЗ4,"Period from");
      TearStr(ТЗ4,";");
      ТЗ5:=ТЗ5+ТЗ4;
      З4:=Query.Create();
      З4.Execute(ТЗ5);
    EndIf;
      
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
  
    ВсегоПолей:=0;
    For i:=1 To оПоля.Size() Do
      If оПоля.Check(i)>0 Then
        ВсегоПолей:=ВсегоПолей+1;
      EndIf;
    EndDo;  
    глСохранитьВМодуле("ВсегоПолей",ВсегоПолей);
    
    
    оЗагол:="Прогнозирование закупок";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оСк,оН,оТГ,оК","");
    оСвойства:=оСвойства+_NEWLINE+"* Общие итоги по рекомендованному заказу включают только положительные строки.";
    
    Сп:=СпУстановки;
    Т.CopyByX("v1|h1",1);
    For i:=1 To оПоля.Size() Do
      If оПоля.Check(i)>0 Then
        пПоле:=оПоля.GetName(i);
        Т.CopyByX("v1|h4");
      EndIf;
    EndDo;
    Т.CopyByX("v1|h5");
    
    ТИтоги:=Tab.Create("Выс");
    ФлПоказателей:=0;
    For i:=1 to оПоказатели.Size() Do
      If оПоказатели.Check(i)=0 Then
        Continue;
      EndIf;
      ТИтоги.AddColumn("зЗак"+i,,"Number");
      ТИтоги.AddColumn("зОст"+i,,"Number");
      ТИтоги.AddColumn("зПрод"+i,,"Number");
      ТИтоги.AddColumn("зЗаказ"+i,,"Number"); //Только для общих итогов
      пЕд:=оПоказатели.GetName(i);
      Т.CopyByX("v1|h2");
      ФлПоказателей:=ФлПоказателей+1;
    EndDo;
    Т.CopyByX("v1|h3");    
    Т.Options.FixedLine:=Т.Height();
    глСохранитьВМодуле("ФлПоказателей",ФлПоказателей);
    глСохранитьВМодуле("РабочихДнейВПериоде",РабочихДнейВПериоде);
    глСохранитьВМодуле("ПрошлоРабочихДней",ПрошлоРабочихДней);
    глСохранитьВМодуле("ТИтоги",ТИтоги);
    глСохранитьВМодуле("З2",З2);
    глСохранитьВМодуле("З3",З3);
    глСохранитьВМодуле("З4",З4);
    
    ТИтоги.NewLine();
    Группировка(З1,ТабФорма,Т,1,1,оГруппы,УрВсего,List.Create());
    
    Т.CopyByX("v3|h1",1);
    For i:=1 To оПоля.Size() Do
      If оПоля.Check(i)>0 Then
        Т.CopyByX("v3|h4");
      EndIf;
    EndDo;
    Т.CopyByX("v3|h5");
    For i:=1 to оПоказатели.Size() Do
      If оПоказатели.Check(i)=0 Then
        Continue;
      EndIf;
      Т.CopyByX("v3|h2");
    EndDo;
    Т.CopyByX("v3|h3");
    ТИтоги.Set(1,"Выс",Т.Height()-3);
    ВывестиИтоги(Т,ТИтоги,ТабФорма);

    If оУровни=1 Then
      Т.Levels().Close();
    EndIf;
    глПечатнаяФормаОтчета(Т,Param,оЗагол,1);
  Finally
    глСохранитьВМодуле("З2",0);
    глСохранитьВМодуле("З3",0);
    глСохранитьВМодуле("З4",0);
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  
Function OnDoubleClick(Таб)
  Result:=0;
  If not глРаботаСОсобымиИконкамиТаблицы(Таб) Then
    if Таб.SelectionMode<1 then
      Exit 1;
    EndIf;  
    if Таб.SelectedObjects().Count()<1 Then
      Exit 1;
    EndIf;
    Obj:=Таб.SelectedObjects().Get(1);
    Сп:=Obj.Value;
    If Obj.Name="cOrder" Then
      ТабВЗаявку:=глПолучитьИзМодуля("ТабВЗаявку");
      КонДата:=глПолучитьИзМодуля("КонДата");
      ТабВЗаявку.Group("Номенклатура,Склад","Количество");
      If ТабВЗаявку.SUM("Количество")=0 Then
        Box("Нет ни одной позиции номенклатуры, требуемой для закупки!",Q_WARNING);
        Exit;
      EndIf;      
      
      аДок:=Doc.ПоступлениеТМЦ;
      аДок.New();
      аДок.DocDate:=КонДата;
      аДок.КодОперации:=Enum.коПоступлениеТМЦ.ЗаявкаПоставщику;
      aTab:=аДок.LineParts("Номенклатура");
      ТабВЗаявку.Select();
      While ТабВЗаявку.Next() Do
        If ТабВЗаявку.Количество>0 Then
          aTab.AddLine("Номенклатура,Количество",ТабВЗаявку.Номенклатура,Max(1,Round(ТабВЗаявку.Количество)));
          глПересчитатьСтроку(аДок,aTab,"Код@Количество2");
        EndIf;
      EndDo;
      OpenObject(аДок,0,1);
    EndIf;
  EndIf;
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction


