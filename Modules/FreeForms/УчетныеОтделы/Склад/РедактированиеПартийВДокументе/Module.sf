//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Var ТПартииКСРИзСправочника Export;
Var Документ Export;
Var ТРезультат Export;
Var спСклады Export;
Var ТПроводки Export;  //Используется только для расходных документов, содержит все партии документов-оснований
Var Т Export;
Var ИгнорироватьСклад Export;


Function ПолучитьОстаток(Номенклатура,Партия,Склад,ByRef ФлПропустить)
  ФлПропустить:=1;
  Чл:=Storage.ОстаткиТМЦ.Gross1("Количество",,0,"Склад,Номенклатура,Партия",Склад,Номенклатура,Партия);
  If ТПроводки.FindAndGoto(Номенклатура.Code+"@"+Склад.Code+"@"+Партия.Code,,"Индекс0")>0 Then
    Чл:=Чл+ТПроводки.тК;
    ФлПропустить:=0;
  EndIf;
  
  Exit Чл;
EndFunction


Function ОбработатьБухДокумент(Док)
  If Док.Status()>1 Then
    аПольз:="";аКомп:="";аДата:="";
    If not Док.Lock(аПольз,аКомп,аДата) Then
      Box("Невозможно получить доступ к подчиненному бухгалтерскому документу "+Док+"! В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")!",Q_STOP);
      Exit 0;
    EndIf;
    Док.Reload(); //бДок будет освобожден, когда удалится aList, его содержащий
    If not глОбработать(Док,1) Then
      Exit 0;
    EndIf;
  EndIf;
  Exit 1;
EndFunction          


Function СохранитьВДокумент(флТолькоЗаписать=0)

  аПольз:="";аКомп:="";аДата:="";
  If not Документ.Lock(аПольз,аКомп,аДата) Then
    Box("В документе "+Документ+" в данный момент работает пользователь "+аПольз+" (компьютер "+аКомп+")! Документ заблокирован!",Q_STOP);
    Exit 0;
  EndIf;  
  
  ФлТранзакцияОк:=0;
  Try
    Документ.Reload();
    If Документ.Status()>1 Then
      флТолькоЗаписать:=0;
    EndIf;
  
    ТАктПрош:=Tab.Create();
    aTab:=Документ.LineParts("Номенклатура");
    aTab.CopyTo(ТАктПрош);
    ТАктПрош.AddColumn("Индекс");
    ТАктПрош.Select();
    While ТАктПрош.Next() Do
      ТАктПрош.Индекс:=ТАктПрош.Номенклатура.Code+"@"+ТАктПрош.Партия.Code;
    EndDo;
    
    aTab.ClearLines();
    ТРезультат.Select();
    While ТРезультат.Next() Do
      If (ТРезультат.тК=0)And((Документ.КодОперации<>Enum.коАктПоСкладу.ИнвентаризацияПартий)) Then
        Continue;
      EndIf;
      
      К:=ТРезультат.тН.оснКоэффициент;
      К:=?(К=0,1,К);
      
      aTab.AddLine("Номенклатура,Партия,КоличествоФактическое",ТРезультат.тН,ТРезультат.тПартия,ТРезультат.тК);
      If Документ.КодОперации=Enum.коАктПоСкладу.ИнвентаризацияПартий Then
        aTab.Количество:=0;
        If ТАктПрош.FindAndGoto(aTab.Номенклатура.Code+"@"+aTab.Партия.Code,,"Индекс")>0 Then
          aTab.Количество:=ТАктПрош.Количество;
          aTab.Цена:=ТАктПрош.Цена;
          aTab.Сумма:=ТАктПрош.Сумма;
          ТАктПрош.Индекс:=0;
        Else
          Цена:=глНайтиЦену(ТРезультат.тН,Документ.ТипЦен,Документ.DocDate);
          aTab.Цена:=Цена;
          aTab.Сумма:=Цена*aTab.Количество;//=0
        EndIf;
        If (aTab.Количество=0)And(aTab.КоличествоФактическое=0) Then
          aTab.Remove(aTab.CurLine);
          Continue;
        EndIf;
        If К=1 Then
          aTab.КоличествоФактическоеВОсновных:=ТРезультат.тК;
          aTab.КоличествоФактическоеВБазовых:=0;
        Else
          aTab.КоличествоФактическоеВОсновных:=Trunc(ТРезультат.тК/К);
          aTab.КоличествоФактическоеВБазовых:=ТРезультат.тК-aTab.КоличествоФактическоеВОсновных*К;
        EndIf;
      Else
        aTab.Количество:=ТРезультат.тК;
      EndIf;
    EndDo;
    
    If Документ.КодОперации=Enum.коАктПоСкладу.ИнвентаризацияПартий Then
      ТАктПрош.Select();
      While ТАктПрош.Next() Do
        If ТАктПрош.Индекс<>0 Then
          К:=ТАктПрош.Номенклатура.оснКоэффициент;
          К:=?(К=0,1,К);
          
          aTab.AddLine("Номенклатура,Партия,Количество,Цена,Сумма",ТАктПрош.Номенклатура,ТАктПрош.Партия,ТАктПрош.Количество,ТАктПрош.Цена,ТАктПрош.Сумма);
          ТАктПрош.Индекс:=0;
        EndIf;
      EndDo;
      aTab.Sort("Номенклатура+,Партия+");
    EndIf;
    
    If флТолькоЗаписать=1 Then
      Документ.Save();
      Form.isChanged(0);
      Box("Документ успешно сохранен!",Q_INFORMATION);
      Exit 1;
    EndIf;  
    
    aTab:=Документ.LineParts("Номенклатура");
    If Документ.КодОперации=Enum.коАктПоСкладу.ИнвентаризацияПартий Then
      ТТ:=Tab.Create();
      aTab.CopyTo(ТТ);
      ТТ.Group("Номенклатура","Количество,КоличествоФактическое");
      ТТ.Select();
      While ТТ.Next() Do
        If Round(ТТ.Количество,6)<>Round(ТТ.КоличествоФактическое,6) Then
          Box("В документе инвентаризации партий нельзя изменять количество номенклатуры!"+_NEWLINE+
            "Для номенклатуры "+ТТ.Номенклатура+" вы пытаетесь изменить общее количество с "+ТТ.Количество+" ед. на "+ТТ.КоличествоФактическое+" ед.!"+
            " Этот документ содержит неверные движения и не будет обработан!",Q_STOP);
          Exit 0;
        EndIf;
      EndDo;
    EndIf;

    BeginTransaction();
    ФлТранзакцияОк:=1;
    Документ.Save();
    
    aList:=Документ.LoadLinkedDocuments(1);
    For i:=1 To aList.Size() Do 
      бДок:=aList.Get(i);
      If бДок.Status()<2 Then
        Continue;
      EndIf;
      If Pos(бДок.DBName()+",","Реализация,ВозвратОтПокупателя,ВозвратПоставщику,ПоступлениеТМЦ,")=0 Then
        Continue;
      EndIf;
      
      If not ОбработатьБухДокумент(бДок) Then
        Exit 0;
      EndIf;
    EndDo;

    aList:=List.Create();
    aList.SetByName("Тихо",1);
    If not глОбработать(Документ,aList) Then
      Exit 0;
    EndIf;    
    ФлТранзакцияОк:=2;
  Finally
    Документ.Unlock();
    If ФлТранзакцияОк=0 Then
      If Документ.Selected()=2 Then //Не был записан
        Документ:=Документ.Copy();
      EndIf;
    ElseIf ФлТранзакцияОк=1 Then
      RollbackTransaction();
      Документ:=Документ.Copy();
    ElseIf ФлТранзакцияОк=2 Then
      CommitTransaction();
      Form.isChanged(0);
    EndIf;
  EndTry  
  
  Box("Документ успешно сохранен и обработан!",Q_INFORMATION);
  Exit 1;
EndFunction

Function ПодготовитьПеременные()
  ТРезультат:=Tab.Create("Индекс,Индекс0,тН,тСкл");
  ТРезультат.AddColumn("тК",,"Number");
  ТРезультат.AddColumn("тПартия",,"Ref.тмцПартииТМЦ");
  
  спСклады:=List.Create();
  Инвент:=0;
  Акт:=0;
  ДокОснование:=Документ.ДокОснование;
  If Документ.DBName()="АктПоСкладу" Then
    Акт:=1;
    If Документ.КодОперации=Enum.коАктПоСкладу.ИнвентаризацияПартий Then
      Инвент:=1;
    EndIf;
  EndIf;
  If (ДокОснование.Selected()=0)And(not Акт) Then
    Box("Документ не имеет основания! Невозможно отредактировать партии!",Q_STOP);
    Form.Close(0);
    Exit;
  EndIf;
  aTab:=Документ.LineParts("Номенклатура").Copy();
  
  
  ТПроводки:=Tab.Create("Индекс0");
  ТПроводки.AddColumn("тК",,"Number");
  If ДокОснование.Status()>1 Then
    aTab:=ДокОснование.LoadStorage("ОстаткиТМЦ");
    aTab.Select();
    While aTab.Next() Do
      ТПроводки.AddLine("Индекс0,тК",aTab.Номенклатура.Code+"@"+aTab.Склад.Code+"@"+aTab.Партия.Code,aTab.Количество*?(aTab._Expense=1,1,-1));
    EndDo;
    ТПроводки.Group("Индекс0","тК");
  EndIf;
  
  Пер:=0;
  If ДокОснование.DBName()="ПеремещениеТМЦ" Then
    Пер:=?(ДокОснование.Склад.БезПартионногоУчета=0,ДокОснование.СкладПолучатель,ДокОснование.Склад);
  ElseIf ДокОснование.DBName()="ПоступлениеТМЦ" Then
    If ДокОснование.КодОперации=Enum.коПоступлениеТМЦ.ПоступлениеКонсигнация Then
      Пер:=?(ДокОснование.СкладКонсигнации.БезПартионногоУчета>0,ДокОснование.СкладКонсигнации,ДокОснование.Склад);
    EndIf;
  EndIf;
  ИгнорироватьСклад:=Пер;
  
  спН:=List.Create();
  If Документ.DBName()="АктПоСкладу" Then
    aTab:=Документ.LineParts("Номенклатура");
    If спСклады.Find(Документ.Склад)=0 Then
      спСклады.Add(Документ.Склад);
    EndIf;
  Else
    aTab:=Документ.LineParts("Содержание");
  EndIf;  
  aTab.Select();
  While aTab.Next() Do
    Склад:=Документ.Склад;
    If ТРезультат.FindAndGoto(aTab.Номенклатура.Code+"@"+Склад.Code+"@"+aTab.Партия.Code,,"Индекс0")=0 Then
      ТРезультат.AddLine("тН,тСкл,тПартия,Индекс,Индекс0",aTab.Номенклатура,Склад,aTab.Партия,aTab.Номенклатура.Code+"@"+Склад.Code,aTab.Номенклатура.Code+"@"+Склад.Code+"@"+aTab.Партия.Code);
    EndIf;
    
    If спН.Find(aTab.Номенклатура)=0 Then
      спН.Add(aTab.Номенклатура);
    EndIf;
    
    If Инвент Then
      ТРезультат.тК:=ТРезультат.тК+aTab.КоличествоФактическое;
    Else
      ТРезультат.тК:=ТРезультат.тК+aTab.Количество;
    EndIf;
  EndDo;
  
  ТЗ:="зСтатус:=Ref.тмцПартииТМЦ.@Status;
  |Condition(зСтатус=0);
  |зН:=Ref.тмцПартииТМЦ.@Parent;
  |зПартия:=Ref.тмцПартииТМЦ;
  |Condition(зН IN спН);
  |Group зН,зПартия;";
  
  З:=Query.Create();
  З.Execute(ТЗ,2);
  
  ТПартииКСРИзСправочника:=Tab.Create("зН,зПартия,Индекс");
  While З.Next(1) Do
    While З.Next(2) Do
      If not IsEmpty(З.зПартия.КСР) Then
        ТПартииКСРИзСправочника.AddLine("зН,зПартия,Индекс",З.зН,З.зПартия,З.зН.Code+"@"+З.зПартия.Code);
      EndIf;
    EndDo;
  EndDo;
  
  If ТРезультат.Size()=0 Then
    Box("Документ регистрации не имеет ни одной строки!",Q_WARNING);
    Form.Close(0);
    Exit;
  EndIf;
  Form.isChanged(0);
EndFunction

Function ВыбратьПартиюТМЦ(ByRef РезПартия,зН,зСклад)
  аЭл:=Ref.тмцПартииТМЦ;
  Сп:=List.Create();
  Сп.SetByName("ТекПартия",РезПартия);
  РезПартия:=SelectObject("Ref.тмцПартииТМЦ",зН,Сп,"Module","ДляВыбораСложных",РезПартия,,"Выберите требуемую партию номенклатуры",0);
  If isEmpty(РезПартия) Then
    Exit 0;
  EndIf;
  Exit 1;
EndFunction


Function ПолучитьСписок(пН,пПартия,Выс,Шир,Кмд,пСклад)
  Сп:=List.Create();
  Сп.SetByName("РедактированиеПартий",1);
  Сп.SetByName("Номенклатура",пН);
  Сп.SetByName("Партия",пПартия);
  Сп.SetByName("Выс",Выс);
  Сп.SetByName("Шир",Шир);
  Сп.SetByName("Склад",пСклад);
  Сп.SetByName("Документ",Документ);
  Сп.SetByName("Команда",Кмд);
  Exit Сп;
EndFunction

Function ПечатьТаблицы()
  Т:=Form.Таблица.Value;
  Т.Lock();
  Т.Clear();
  Т.SetSourceName("Table");
  
  Try
    //Вычисление количества столбиков
    Таб:=Tab.Create();
    ТРезультат.CopyTo(Таб);
    Таб.AddColumn("Один",,"Number");
    Таб.Select();
    While Таб.Next() Do
      Таб.Один:=1;
    EndDo;
    Таб.Group("Индекс","Один");
    КолСтл:=0;
    Таб.Select();
    While Таб.Next() Do
      КолСтл:=Max(КолСтл,Таб.Один);
    EndDo;
    КолСтл:=Max(КолСтл,3)+1;
    
    пИмя:="Редактирование сроков реализации в документе "+Документ;
    пИсхДок:="";
    If Документ.ДокОснование.Selected()<>0 Then
      пИсхДок:="Исходный документ: "+Документ.ДокОснование;
    EndIf;
    Т.CopyByX("v1|h1",1);
    For i:=1 to КолСтл Do
      Т.CopyByX("v1|h2");
    EndDo;
    Т.CopyByX("v1|h3");
    Т.Options.FixedLine:=Т.Height();    
    Т.Options.FixedColumn:=3;
    
    Таб:=Tab.Create();
    ТРезультат.CopyTo(Таб);
    
    //Сортировка номенклатуры
    ДокОснование:=Документ.ДокОснование;
    Таб.AddColumn("КСР",,"Date");
    Таб.Select();
    While Таб.Next() Do
      Таб.КСР:=Таб.тПартия.КСР;
    EndDo;
    Таб.Sort("тН+,КСР+");
    
    
    For i:=1 To спСклады.Size() Do
      пСклад:=спСклады.Get(i);
      пКод:=глПолучитьКод(пСклад);
      Т.CopyByX("v4|h1",1);
      For i2:=1 To КолСтл Do
        Т.CopyByX("v4|h2");
      EndDo;
      Т.CopyByX("v4|h3");
    
      While Таб.FindAndGoto(пСклад,,"тСкл") Do
        Инд:=Таб.Индекс;
        
        пКод:=глПолучитьКод(Таб.тН);
        пН:=Таб.тН;
        пНР:=пН;
        пЕд:=Trim(пН.базЕдиница);
        пВУ:=Trim(пН.оснЕдиница);
        пКФ:=Trim(пН.оснКоэффициент);
        
        //С пустым сроком хранения
        пЦл:="";
        пШт:="";
        If Таб.FindAndGoto(пН.Code+"@"+пСклад.Code+"@",,"Индекс0")>0 Then
          К:=?(пН.оснКоэффициент=0,1,пН.оснКоэффициент);
          If К=1 Then
            пЦл:=Trunc(Таб.тК);
            пШт:=0;
          Else
            пЦл:=Trunc(Таб.тК/К);
            пШт:=Trunc(Таб.тК-пЦл*К);
          EndIf;
          Таб.Индекс:=0;
          Таб.тСкл:=0;
        EndIf;
        пЦл:=?((Number(пЦл)=0)And(Number(пШт)=0),"",пЦл);
        пШт:=?((Number(пЦл)=0)And(Number(пШт)=0),"",пШт);
        Т.CopyByX("v2|h1",1);
        
        //С остальными сроками хранения
        Ном:=1;
        While Таб.FindAndGoto(Инд,,"Индекс")>0 Do
          Ном:=Ном+1;
          К:=?(пН.оснКоэффициент=0,1,пН.оснКоэффициент);
          If К=1 Then
            пЦл:=Trunc(Таб.тК);
            пШт:=0;
          Else
            пЦл:=Trunc(Таб.тК/К);
            пШт:=Trunc(Таб.тК-пЦл*К);
          EndIf;
          пПартия:=Таб.тПартия;
          пПартия:=?(пПартия.Selected()=0,"",""+пПартия.КСР+?(Trim(пПартия.НомерУдостоверения)="",""," ("+Trim(пПартия.НомерУдостоверения)+")"));
          Таб.Индекс:=0;
          Таб.тСкл:=0;
          пЦл:=?((Number(пЦл)=0)And(Number(пШт)=0),"",пЦл);
          пШт:=?((Number(пЦл)=0)And(Number(пШт)=0),"",пШт);
          
          спУпак:=ПолучитьСписок(пН,Таб.тПартия,Т.Height(),Ном,1,пСклад);
          спШт:=ПолучитьСписок(пН,Таб.тПартия,Т.Height(),Ном,2,пСклад);
          спПартия:=ПолучитьСписок(пН,Таб.тПартия,Т.Height(),Ном,3,пСклад);
          Т.CopyByX("v2|h2");
          Стр:=0;
        EndDo;
        
        i2:=Ном+1;
        For Ном:=i2 To КолСтл+1 Do
          пЦл:="";пШт:="";пПартия:="";
          
          спУпак:=ПолучитьСписок(пН,0,Т.Height(),Ном,1,пСклад);
          спШт:=ПолучитьСписок(пН,0,Т.Height(),Ном,2,пСклад);
          спПартия:=ПолучитьСписок(пН,0,Т.Height(),Ном,3,пСклад);
          Т.CopyByX("v2|h2");
        EndDo;
        Т.CopyByX("v2|h3");
        
        If (пН.ВидНоменклатуры<>Enum.ВидыНоменклатуры.Товар)Or(пСклад.БезПартионногоУчета>0) Then
          Ar:=Т.Area(2,Т.Height(),Т.Width()-1,Т.Height());
          Ar.FontColorRGB:=ToRGB(128,128,128);
          Ar.BackgroundColorRGB:=ToRGB(255,255,255);
        EndIf;
      EndDo;
    EndDo;
    
    Т.CopyByX("v3|h1",1);
    For i:=1 To КолСтл Do
      Т.CopyByX("v3|h2");
    EndDo;
    Т.CopyByX("v3|h3");
  Finally
    Т.Unlock();
    Т.EditorMode:=1;
  EndTry;  
EndFunction

