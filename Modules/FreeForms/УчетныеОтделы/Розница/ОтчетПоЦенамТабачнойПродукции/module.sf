//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function Группировка(З,ТабФорма,Т,Ном,Ур,спГруппы,ТабКасса)
  If Ном>спГруппы.Size() Then
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  ИмяПер:=спГруппы[Ном];
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    пДокК:=GetNothing();
    
    If ИмяПер="зДок" Then
      If ТабКасса.FindAndGoto(З.зДок,,"ДокОснование",1) Then
        пДокК:=ТабКасса.зДок;
      EndIf;
    EndIf;
    пСм3:=глФРМ(З.зСм1);
    пСм1:=глФРМ(З.зСм2);
    пСм2:=глФРМ(З.зСм1-З.зСм2);
    Т.CopyByX("v2",1);
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1,2,Ур,спГруппы.Size(),2,6,пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,спГруппы,ТабКасса);

    If (оУровни=1)and(Ур<спГруппы.Size()) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
EndFunction

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  оЮЛ:=глПолучитьУстановку(ТабФорма,"оЮЛ");
  оМг:=глПолучитьУстановку(ТабФорма,"оМг");
  оН:=глПолучитьУстановку(ТабФорма,"оН");
  оТГ:=глПолучитьУстановку(ТабФорма,"оТГ");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,,Form.НачДата.Value,0) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    ТЗ:="Period From НачДата To НачДата;
    |зМг:=Storage.ОстаткиТМЦ.Склад.Магазин;
    |Condition(зМг IN оМг.Get(1));
    |Condition(зМг NOT IN оМг.Get(2));
    |зЮЛ:=Storage.ОстаткиТМЦ.ЮрЛицо;
    |Condition(зЮЛ IN оЮЛ.Get(1));
    |Condition(зЮЛ NOT IN оЮЛ.Get(2));
    |зН:=Storage.ОстаткиТМЦ.Номенклатура;
    |Condition(зН IN оН.Get(1));
    |Condition(зН NOT IN оН.Get(2));
    |зТГ:=Storage.ОстаткиТМЦ.Номенклатура.ТоварнаяГруппа;
    |Condition(зТГ IN оТГ.Get(1));
    |Condition(зТГ NOT IN оТГ.Get(2));
    |Condition(Storage.ОстаткиТМЦ.Партия.ЦенаМаксимальнаяПродажная>0);
    |зП:=Storage.ОстаткиТМЦ.Партия;
    |зКл:=EndTotals(Количество);
    |Group зН,зП;";
    З:=Query.Create();
    З.Execute(ТЗ,2);
  
    оЗагол:="Цены на табачную продукцию";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,,"оЮЛ,оМг,оН,оТГ");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    While З.Next(1) Do
      зН:=З.зН;
      СпПартии:=List.Create();
      While З.Next(2) Do
        СпПартии.Add(З.зП.ЦенаМаксимальнаяПродажная);
      EndDo;
      СпПартии.Group();
      
      For i:=1 To СпПартии.Size() Do
        пЭлР:=зН;
        пЭл:=Str(зН)+" "+глФРМ(СпПартии[i])+" руб.";
        пЦ:=глФРМ(СпПартии[i]);
        пЕд:=Str(зН.базЕдиница)+" "+Str(зН.оснЕдиница)+" ("+зН.оснКоэффициент+")";
        Т.CopyByX("v2",1);
        
        НачВыс:=Т.Height();
        Form.StatusText(НачВыс);
        Form.UpdateProgress(-1,,""+Т.Height());
        глРаскраситьСтроку(Т,1,2,1,1,2,4,пЭлР);
      EndDo;
    EndDo;
    Т.CopyByX("v3",1);
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

