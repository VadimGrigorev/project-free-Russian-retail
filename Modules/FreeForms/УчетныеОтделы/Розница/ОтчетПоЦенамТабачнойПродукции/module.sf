//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  оЮЛ:=глПолучитьУстановку(ТабФорма,"оЮЛ");
  оМг:=глПолучитьУстановку(ТабФорма,"оМг");
  оН:=глПолучитьУстановку(ТабФорма,"оН");
  оТГ:=глПолучитьУстановку(ТабФорма,"оТГ");
  оВР:=глПолучитьУстановку(ТабФорма,"оВР");
  оМРЦ:=глПолучитьУстановку(ТабФорма,"оМРЦ");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,,Form.НачДата.Value,0) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try       
    ТЗ:="Period From НачДата To НачДата;
    |зМг:=Storage.ОстаткиТМЦ.Склад.Магазин;
    |Condition(зМг IN оМг.Get(1));
    |Condition(зМг NOT IN оМг.Get(2));
    |зЮЛ:=Storage.ОстаткиТМЦ.ЮрЛицо;
    |Condition(зЮЛ IN оЮЛ.Get(1));
    |Condition(зЮЛ NOT IN оЮЛ.Get(2));
    |зН:=Storage.ОстаткиТМЦ.Номенклатура;
    |зСк:=Storage.ОстаткиТМЦ.Склад;
    |Condition(зН IN оН.Get(1));
    |Condition(зН NOT IN оН.Get(2));
    |зНКл:=EndTotals(Количество);
    |зТГ:=Storage.ОстаткиТМЦ.Номенклатура.ТоварнаяГруппа;
    |Condition(зТГ IN оТГ.Get(1));
    |Condition(зТГ NOT IN оТГ.Get(2));
    |Condition(оМРЦ>0)Or(Storage.ОстаткиТМЦ.Партия.ЦенаМаксимальнаяПродажная>0);
    |зП:=Storage.ОстаткиТМЦ.Партия;
    |зКл:=EndTotals(Количество);
    |Group зН,зП,зСк;";
    З:=Query.Create();
    З.Execute(ТЗ,2);
  
    оЗагол:="Цены на табачную продукцию";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,,"оЮЛ,оМг,оН,оТГ");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    aTab:=Tab.Create("зН,зЦ");
    While З.Next(1) Do
      зН:=З.зН;
      If not зН.флПартионныйУчет Then 
        While З.Next(2) Do
          While З.Next(3) Do
            If З.зКл<=0 Then
              Continue;
            EndIf;
            aTab.AddLine("зН,зЦ",зН,глНайтиЦенуТипаЦен(зН,З.зСк.рзТипЦенРеализации,НачДата));
          EndDo;
        EndDo;
      Else
        СпПартии:=List.Create();
        While З.Next(2) Do
          If З.зКл<=0 Then
            Continue;
          EndIf;
          aTab.AddLine("зН,зЦ",зН,З.зП.ЦенаМаксимальнаяПродажная);
        EndDo;
      EndIf;     
    EndDo;
    
    aTab.Group("зН,зЦ");
    aTab.Select();
    While aTab.Next() Do
      If aTab.зЦ<=0 Then
        Continue;
      EndIf;

      пЭлР:=aTab.зН;
      пЭл:=?(оВР, UpperCase(Str(aTab.зН)+" "+глФРМ(aTab.зЦ)+" руб."),Str(aTab.зН)+" "+глФРМ(aTab.зЦ)+" руб.");
      пЦ:=глФРМ(aTab.зЦ);
      пЕд:=Str(aTab.зН.базЕдиница)+" "+Str(aTab.зН.оснЕдиница)+" ("+aTab.зН.оснКоэффициент+")";
      НачВыс:=Т.Height();
      
      Т.CopyByX("v2",1);
      Form.StatusText(НачВыс);
      Form.UpdateProgress(-1,,""+Т.Height());
      глРаскраситьСтроку(Т,1,2,1,1,2,4,пЭлР);
    EndDo;
    
    Т.CopyByX("v3",1);
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction



