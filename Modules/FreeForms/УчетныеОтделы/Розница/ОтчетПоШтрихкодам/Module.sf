//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  оН:=глПолучитьУстановку(ТабФорма,"оН");
  оТГ:=глПолучитьУстановку(ТабФорма,"оТГ");
  оГрп:=глПолучитьУстановку(ТабФорма,"оГрп");
  оВид:=глПолучитьУстановку(ТабФорма,"оВид").SelectedLine;
  оИсточник:=глПолучитьУстановку(ТабФорма,"оИсточник").SelectedLine;
  
  ФлЛок:=0;
  If Т=0 Then
    Т:=Table.Create();
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    ТЗ:="зЭл:=Ref.тмцШтрихкоды;
    |зПапка:=Ref.тмцШтрихкоды.@Parent..Ref.тмцНоменклатура.@isFolder;Condition(зПапка=0);
    |зН:=Ref.тмцШтрихкоды.@Parent..Ref.тмцНоменклатура;
    |зТГ:=Ref.тмцШтрихкоды.@Parent..Ref.тмцНоменклатура.ТоварнаяГруппа;
    |Condition(зН IN оН.Get(1));
    |Condition(зН NOT IN оН.Get(2));
    |Condition(зТГ IN оТГ.Get(1));
    |Condition(зТГ NOT IN оТГ.Get(2));
    |Group зН"+?(оГрп=1," with folders")+";"+
    ?(оИсточник=2,"зП:=Ref.тмцШтрихкоды.@Parent..Ref.тмцПартииТМЦ;Group зП;")+
    "Group зЭл;";
    
    If (оВид=1)or(оВид=2) Then
      //Все
      ТЗ:="("+ТЗ+") UNION ALL (
      |зН:=Ref.тмцНоменклатура;
      |зПапка:=Ref.тмцНоменклатура.@isFolder;Condition(зПапка=0);
      |зТГ:=Ref.тмцНоменклатура.ТоварнаяГруппа;
      |Condition(зН IN оН.Get(1));
      |Condition(зН NOT IN оН.Get(2));
      |Condition(зТГ IN оТГ.Get(1));
      |Condition(зТГ NOT IN оТГ.Get(2));
      |Group зН"+?(оГрп=1," with folders")+";"+
      ?(оИсточник=2,"зП:=Ref.тмцПартииТМЦ;Group зП;")+")";
    EndIf;
    If оИсточник=2 Then
      ТЗ:=Replace(ТЗ,"Ref.тмцНоменклатура","Ref.тмцПартииТМЦ.@Parent");
    EndIf;
    
    If оВид=2 Then
      //Только без штрихкодов
      З:=Query.Create();
      З.Execute(ТЗ,0);
      
      Сп:=List.Create();
      aTab:=З.ResultTable;
      aTab.Select();
      While aTab.Next() Do
        If not isEmpty(aTab.зЭл) Then
          Сп.Add(?(оИсточник=2,aTab.зП,aTab.зН));
        EndIf;
      EndDo;
      aNum:=0;
      While aNum<aTab.Size() Do
        aNum:=aNum+1;
        aTab.CurLine:=aNum;
        If Сп.Find(?(оИсточник=2,aTab.зП,aTab.зН))>0 Then
          aTab.Remove(aNum);
          aNum:=aNum-1;
        EndIf;
      EndDo;
      
      З.Postprocess();
    Else
      З:=Query.Create();
      З.Execute(ТЗ);
    EndIf;  
    
    оЗагол:="Отчет по штрихкодам"+?(оИсточник=2," партий ТМЦ");
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,,,"оН,оТГ");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    While З.Next(1) Do
      пЭл:=З.зН;
      пЭлР:=пЭл;
      If IsEmpty(пЭл) Then
        пЭл:="< Не выбран >";
      EndIf;
      пКод:=глПолучитьКод(пЭлР);
      глОбработатьВыводимоеЗначениеВОтчет(пЭл,"зН");
      пЕд:=Str(З.зН.базЕдиница)+" "+Str(З.зН.оснЕдиница)+" ("+З.зН.оснКоэффициент+")";
      пКф:="";
      пФлаг:="";
      Т.CopyByX("v2",1);
      
      НачВыс:=Т.Height();
      Form.StatusText(Т.Height());
      Form.UpdateProgress(-1,,""+Т.Height());
      глРаскраситьСтроку(Т,1,3,1,2+(оИсточник=2),2,6,пЭлР);
      
      While З.Next(2) Do
        If оИсточник=2 Then
          пЭл:=З.зП;
          пЭлР:=пЭл;
          If IsEmpty(пЭл) Then
            пЭл:="< Не выбрана >";
          EndIf;
          пКод:=глПолучитьКод(пЭлР);
          глОбработатьВыводимоеЗначениеВОтчет(пЭл,"зП");
          пЕд:="";
          пКф:="";
          пФлаг:="";
          Т.CopyByX("v2",1);
          НачВыс2:=Т.Height();
          Form.StatusText(Т.Height());
          Form.UpdateProgress(-1,,""+Т.Height());
          глРаскраситьСтроку(Т,1,3,2,3,2,6,пЭлР);
          
          While З.Next(3) Do
            пШтрихКод:=З.зЭл;
            If Trim(пШтрихКод)="" Then
              Continue;
            EndIf;
            пЭл:=З.зЭл;
            пЭлР:=З.зЭл;
            пКод:="";
            пКф:=глФРМ(З.зЭл.Коэффициент);
            пФлаг:=?(З.зЭл.флОсновной=0,"","ДА");
            Т.CopyByX("v2",1);
            глРаскраситьСтроку(Т,1,3,3,3,2,6,пЭлР);
          EndDo;
          If оУровни=1 Then
            глДобавитьУровень(Т,НачВыс2,Т.Height());
          EndIf;
        Else
          пШтрихКод:=З.зЭл;
          If Trim(пШтрихКод)="" Then
            Continue;
          EndIf;
          пЭл:=З.зЭл;
          пЭлР:=З.зЭл;
          пКод:="";
          пКф:=глФРМ(З.зЭл.Коэффициент);
          пФлаг:=?(З.зЭл.флОсновной=0,"","ДА");
          Т.CopyByX("v2",1);
          глРаскраситьСтроку(Т,1,3,2,2,2,6,пЭлР);
          Form.StatusText(Т.Height());
        EndIf;
      EndDo;
      
      If оУровни=1 Then
        глДобавитьУровень(Т,НачВыс,Т.Height());
      EndIf;
    EndDo;
    Т.CopyByX("v3",1);
    
    If оУровни=1 Then
      Т.Levels().Close();
    EndIf;
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction


