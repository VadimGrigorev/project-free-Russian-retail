//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var СтарыеСчета Export;

Function ОдинаковыеВидыСубконто(Сп,Тип=1)
  If Сп.Size()=0 Then
    Exit 0;
  EndIf;
  Сч:=Сп[1];
  For i:=2 To Сп.Size() Do
    If Сч.GetValue("ВидСубконто"+Тип)<>Сп[i].GetValue("ВидСубконто"+Тип) Then
      Exit 0;
    EndIf;
  EndDo;
  Exit 1;
EndFunction

Function ПолучитьТип(аНомер)

  Function ПолучитьТипРекв(ВС)
    If Trim(ВС.ТипЗначенияЛокальный)="" Then
      Exit "бухЗначенияСубконто";
    Else
      Exit Replace(Replace(Uppercase(ВС.ТипЗначенияЛокальный),"СПРАВОЧНИК.",""),"REF.","");
    EndIf;
  EndFunction
  
  оСч:=Form.оСч.Value;
  If (оСч.Get(1).Size()>0)And(ОдинаковыеВидыСубконто(оСч.Get(1))) Then
    аСчет:=оСч.Get(1).Get(1);
    Exit ПолучитьТипРекв(аСчет.GetValue("ВидСубконто"+аНомер));
  EndIf;

  Exit "";
EndFunction


Function ОбновитьТексты()
  оСч:=Form.оСч.Value;
  оСуб1:=Form.оСуб1.Value;
  оСуб2:=Form.оСуб2.Value;
  оСуб3:=Form.оСуб3.Value;
  
  Фл:=0;
  If оСч.Get(1).Size()>0 Then
    Фл:=1;
  Else
    оСуб1.Get(1).Clear();
    оСуб1.Get(2).Clear();
    оСуб2.Get(1).Clear();
    оСуб2.Get(2).Clear();
    оСуб3.Get(1).Clear();
    оСуб3.Get(2).Clear();
    
    Form.тС1.isDisabled:=1;
    Form.оСуб1.isDisabled:=1;
    Form.тСуб1.Caption:="";
    
    Form.тС2.isDisabled:=1;
    Form.оСуб2.isDisabled:=1;
    Form.тСуб2.Caption:="";
    
    Form.тС3.isDisabled:=1;
    Form.оСуб3.isDisabled:=1;
    Form.тСуб3.Caption:="";
  EndIf;

  If Фл Then
    Сч:=оСч.Get(1).Get(1);
    
    If _Or(Сч.ВидСубконто1.Selected()=0,not ОдинаковыеВидыСубконто(оСч.Get(1))) Then
      Form.тС1.isDisabled:=1;
      Form.оСуб1.isDisabled:=1;
      Form.тСуб1.Caption:="";
      оСуб1.Get(1).Clear();
      оСуб1.Get(2).Clear();
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто1<>Сч.ВидСубконто1) Then
        оСуб1.Get(1).Clear();
        оСуб1.Get(2).Clear();
      EndIf;
      Form.тСуб1.Caption:=Сч.ВидСубконто1.Name;
      Form.тС1.isDisabled:=0;
      Form.оСуб1.isDisabled:=0;
    EndIf;
    
    If _Or(Сч.ВидСубконто2.Selected()=0,not ОдинаковыеВидыСубконто(оСч.Get(1),2)) Then
      Form.тС2.isDisabled:=1;
      Form.оСуб2.isDisabled:=1;
      Form.тСуб2.Caption:="";
      оСуб2.Get(1).Clear();
      оСуб2.Get(2).Clear();
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто2<>Сч.ВидСубконто2) Then
        оСуб2.Get(1).Clear();
        оСуб2.Get(2).Clear();
      EndIf;
      Form.тСуб2.Caption:=Сч.ВидСубконто2.Name;
      Form.тС2.isDisabled:=0;
      Form.оСуб2.isDisabled:=0;
    EndIf;
    
    If _Or(Сч.ВидСубконто3.Selected()=0,not ОдинаковыеВидыСубконто(оСч.Get(1),3)) Then
      Form.тС3.isDisabled:=1;
      Form.оСуб3.isDisabled:=1;
      Form.тСуб3.Caption:="";
      оСуб3.Get(1).Clear();
      оСуб3.Get(2).Clear();
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто3<>Сч.ВидСубконто3) Then
        оСуб3.Get(1).Clear();
        оСуб3.Get(2).Clear();
      EndIf;
      Form.тСуб3.Caption:=Сч.ВидСубконто3.Name;
      Form.тС3.isDisabled:=0;
      Form.оСуб3.isDisabled:=0;
    EndIf;
    СтарыеСчета:=Сч;
  Else
    СтарыеСчета:=0;
  EndIf;
EndFunction;

Function OnAfterSettingsChange()
  ОбновитьТексты();
EndFunction;


Function ПроверитьСчет(оСч,оСчК,зСч,зСчКорр)
  If оСч.Get(2).Size()>0 Then
    If оСч.Get(2).Contains(зСч)>0 Then
      Exit 0;
    EndIf;
  EndIf;
  If оСч.Get(1).Size()>0 Then
    If оСч.Get(1).Contains(зСч)=0 Then
      Exit 0;
    EndIf;
  EndIf;
  If оСчК.Get(2).Size()>0 Then
    If оСчК.Get(2).Contains(зСчКорр)>0 Then
      Exit 0;
    EndIf;
  EndIf;
  If оСчК.Get(1).Size()>0 Then
    If оСчК.Get(1).Contains(зСчКорр)=0 Then
      Exit 0;
    EndIf;
  EndIf;
  Exit 1;
EndFunction        

Function ПроверитьСубконто(оСуб1,оСуб2,оСуб3,зСуб1,зСуб2,зСуб3)
  If оСуб1.Get(1).Size()>0 Then
    If оСуб1.Get(1).Contains(зСуб1)=0 Then
      Exit 0;
    EndIf;
  EndIf;
  If оСуб1.Get(2).Size()>0 Then
    If оСуб1.Get(2).Contains(зСуб1)>0 Then
      Exit 0;
    EndIf;
  EndIf;

  If оСуб2.Get(1).Size()>0 Then
    If оСуб2.Get(1).Contains(зСуб2)=0 Then
      Exit 0;
    EndIf;
  EndIf;
  If оСуб2.Get(2).Size()>0 Then
    If оСуб2.Get(2).Contains(зСуб2)>0 Then
      Exit 0;
    EndIf;
  EndIf;

  If оСуб3.Get(1).Size()>0 Then
    If оСуб3.Get(1).Contains(зСуб3)=0 Then
      Exit 0;
    EndIf;
  EndIf;
  If оСуб3.Get(2).Size()>0 Then
    If оСуб3.Get(2).Contains(зСуб3)>0 Then
      Exit 0;
    EndIf;
  EndIf;
  Exit 1;
EndFunction


Function Печать(СпУстановки)
  Function ПредставлениеСубконто(Эл,byRef флКнтНеБыл)
    If pos("DB.REF.",TypeStr(Эл))>0 Then
      If Эл.DBName()="кнтКонтрагенты" Then
        флКнтНеБыл:=0;
        Exit Эл.ПолнНаименование;
      EndIf;
    EndIf;
    Exit Эл;
  EndFunction

  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оДвиж:=глПолучитьУстановку(ТабФорма,"оДвиж").SelectedLine;
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  оСчК:=глПолучитьУстановку(ТабФорма,"оСчК");
  оСуб1:=глПолучитьУстановку(ТабФорма,"оСуб1");
  оСуб2:=глПолучитьУстановку(ТабФорма,"оСуб2");
  оСуб3:=глПолучитьУстановку(ТабФорма,"оСуб3");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.БухгалтерскиеСчета";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@ЮрЛицо,оСч@зСч@Счет,оСчК@зСчК@КоррСчет,оСуб1@зСуб1@Субконто1,оСуб2@зСуб2@Субконто2,оСуб3@зСуб3@Субконто3","",спРезПеременные);
    
    ТЗ:=ТЗ+"зРасход:=Expense(Сумма);
      |зПриход:=Income(Сумма);
      |зРасходКол:=Expense(Количество);
      |зПриходКол:=Income(Количество);
      |Документ:=Stor.БухгалтерскиеСчета.@LINK;
      |Group Документ;";
  
    З:=Query.Create();
    З.Execute(ТЗ);
    
    оЗагол:="Отчет по проводкам";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оСч,оСчК,оСуб1,оСуб2,оСуб3",?(оДвиж<2,"","Отбор движений@оДвиж"));
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();

    См0:=0;
    Кл0:=0;
    нН:=0;
    While З.Next(1) Do
      Д:=З.Документ;
      пДата:=Д.DocDate;
      пДок:=Д;
      пДокР:=Д;
      Ком0:=Trim(Д.Комментарий);
      Form.StatusText(""+пДата+":"+Т.Height());
      
      аСодержание:=0;
      If not isEmpty(Struct.Doc(Д.DBName()).LineParts("Содержание")) Then
        аСодержание:=Д.LineParts("Содержание");
        if аСодержание.Size()>0 Then
          аСодержание.Select();
          аСодержание.Next();
        Else
          аСодержание:=0;
        EndIf;
      Endif;
      
      aTab:=Д.LoadStorage("БухгалтерскиеСчета");
      aTab.Select();
      While aTab.Next() Do
        Расход:=aTab._Expense;
        ФлКнт:=(Pos(aTab.Счет.Code+",","51,50.1,")>0)or(Pos(aTab.КоррСчет.Code+",","51,50.1,")>0);
        пЮЛ:=aTab.ЮрЛицо;
        
        Фл2:=1;
        зСуб1:="";
        зСуб2:="";
        зСуб3:="";
        зСуб1К:="";
        зСуб2К:="";
        зСуб3К:="";
        If Расход=0 Then
          зСч:=aTab.Счет;
          зСчКорр:=aTab.КоррСчет;
          зСуб1:=aTab.Субконто1;
          зСуб2:=aTab.Субконто2;
          зСуб3:=aTab.Субконто3;
          зПриходКол:=aTab.Количество;
          If зСчКорр.Selected()<>0 Then
            If not aTab.Next() Then
              Message("Документ имеет неверные движения по бух. учету, обратитесь к администратору!","!");
            EndIf;
            зСуб1К:=aTab.Субконто1;
            зСуб2К:=aTab.Субконто2;
            зСуб3К:=aTab.Субконто3;
          Else
            Фл2:=0;
          EndIf;
          зПриход:=aTab.Сумма;
          зПриходКол:=?(зПриходКол=0,aTab.Количество,зПриходКол);
          зРасход:=0;
          зРасходКол:=0;
          
          ФлПриход:=1-Расход;
          ФлПриходКор:=1-ФлПриход;
        Else
          зСчКорр:=aTab.Счет;
          зСч:=aTab.КоррСчет;
          зСуб1К:=aTab.Субконто1;
          зСуб2К:=aTab.Субконто2;
          зСуб3К:=aTab.Субконто3;
          зПриходКол:=aTab.Количество;
          If зСч.Selected()<>0 Then
            If not aTab.Next() Then
              Message("Документ имеет неверные движения по бух. учету, обратитесь к администратору!","!");
            EndIf;
            зСуб1:=aTab.Субконто1;
            зСуб2:=aTab.Субконто2;
            зСуб3:=aTab.Субконто3;
          Else
            Фл2:=0;
          EndIf;
          зПриход:=aTab.Сумма;
          зПриходКол:=?(зПриходКол=0,aTab.Количество,зПриходКол);
          зРасход:=0;
          зРасходКол:=0;
          
          ФлПриход:=Расход;
          ФлПриходКор:=1-ФлПриход;
        EndIf;
              
        Фл1:=ПроверитьСчет(оСч,оСчК,зСч,зСчКорр);
        If Фл2 Then
          Фл2:=ПроверитьСчет(оСч,оСчК,зСчКорр,зСч);
        EndIf;
        
        If Фл1+Фл2=0 Then
          Continue;
        EndIf;

        If Фл1 Then
          Фл1:=ПроверитьСубконто(оСуб1,оСуб2,оСуб3,зСуб1,зСуб2,зСуб3);
        EndIf;
        
        If Фл2 Then
          Фл2:=ПроверитьСубконто(оСуб1,оСуб2,оСуб3,зСуб1К,зСуб2К,зСуб3К);
        EndIf;
        
        If Фл1 Then
          If (оДвиж=2)And(ФлПриход=0) Then //Только дебет
            Фл1:=0;
          ElseIf (оДвиж=3)And(ФлПриход=1) Then //Только кредит
            Фл1:=0;
          EndIf;
        EndIf;  
          
        If Фл1 Then
          флКнтНеБыл:=1;
          пСумма:=глФРМ(зПриход-зРасход);
          пКолВо:=глФРМЧл(зПриходКол-зРасходКол);
          пСчД:=зСч;
          пСчК:=зСчКорр;
          пКоммД:=?(not IsEmpty(зСуб1),Trim(ПредставлениеСубконто(зСуб1,флКнтНеБыл)),"");
          пКоммД:=пКоммД+?(not IsEmpty(зСуб2),?(пКоммД="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб2,флКнтНеБыл)),"");
          пКоммД:=пКоммД+?(not IsEmpty(зСуб3),?(пКоммД="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб3,флКнтНеБыл)),"");
          
          пКоммК:=?(not IsEmpty(зСуб1К),Trim(ПредставлениеСубконто(зСуб1К,флКнтНеБыл)),"");
          пКоммК:=пКоммК+?(not IsEmpty(зСуб2К),?(пКоммК="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб2К,флКнтНеБыл)),"");
          пКоммК:=пКоммК+?(not IsEmpty(зСуб3К),?(пКоммК="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб3К,флКнтНеБыл)),"");
          
          If not isEmpty(аСодержание) Then
            пКоммД:=пКоммД+?(not IsEmpty(аСодержание.Содержание),?(пКоммД="","",_NEWLINE)+Trim(аСодержание.Содержание),"");
          EndIf;
          If ФлКнт*флКнтНеБыл>0 Then
            If глЕстьРеквизитДокумента("Контрагент",Д.DBName()) Then
              пКоммД:=пКоммД+?(not IsEmpty(Д.Контрагент),?(пКоммД="","",_NEWLINE)+Trim(Д.Контрагент.ПолнНаименование),"");
            EndIf;
          EndIf;
          
          См0:=См0+зПриход-зРасход;
          Кл0:=Кл0+зПриходКол-зРасходКол;
          
          Т.CopyByX("v2",1);
        EndIf;
        
        If Фл2 Then
          If (оДвиж=2)And(ФлПриходКор=0) Then //Только дебет
            Фл2:=0;
          ElseIf (оДвиж=3)And(ФлПриходКор=1) Then //Только кредит
            Фл2:=0;
          EndIf;
        EndIf;  
                
        If Фл2 Then
          флКнтНеБыл:=1;
          пСумма:=глФРМ(зПриход-зРасход);
          пКолВо:=глФРМЧл(зПриходКол-зРасходКол);
          пСчД:=зСч;
          пСчК:=зСчКорр;
          пКоммД:=?(not IsEmpty(зСуб1К),Trim(ПредставлениеСубконто(зСуб1К,флКнтНеБыл)),"");
          пКоммД:=пКоммД+?(not IsEmpty(зСуб2К),?(пКоммД="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб2К,флКнтНеБыл)),"");
          пКоммД:=пКоммД+?(not IsEmpty(зСуб3К),?(пКоммД="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб3К,флКнтНеБыл)),"");
          
          пКоммК:=?(not IsEmpty(зСуб1),Trim(ПредставлениеСубконто(зСуб1,флКнтНеБыл)),"");
          пКоммК:=пКоммК+?(not IsEmpty(зСуб2),?(пКоммК="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб2,флКнтНеБыл)),"");
          пКоммК:=пКоммК+?(not IsEmpty(зСуб3),?(пКоммК="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб3,флКнтНеБыл)),"");
          
          If not isEmpty(аСодержание) Then
            пКоммД:=пКоммД+?(not IsEmpty(аСодержание.Содержание),?(пКоммД="","",_NEWLINE)+Trim(аСодержание.Содержание),"");
          EndIf;
          If ФлКнт*флКнтНеБыл>0 Then
            If глЕстьРеквизитДокумента("Контрагент",Д.DBName()) Then
              пКоммД:=пКоммД+?(not IsEmpty(Д.Контрагент),?(пКоммД="","",_NEWLINE)+Trim(Д.Контрагент.ПолнНаименование),"");
            EndIf;
          EndIf;
          
          См0:=См0+зПриход-зРасход;
          Кл0:=Кл0+зПриходКол-зРасходКол;
          
          Т.CopyByX("v2",1);
        EndIf;        
      EndDo;
    EndDo;  
    пСумма:=глФРМ(См0);
    пКолВо:=глФРМ(Кл0);
    Т.CopyByX("v3",1);
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction



