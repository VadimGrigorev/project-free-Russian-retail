//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var ТабПоступления Export;
Var КолНеОтпрРеализаций Export,КолОтклоненныхРеализаций Export;
Var ПрефиксЗапроса Export;
Var МьютексПрефикса Export;
Var флСтатусыРеализацийОбновлены Export;
Var Т Export;
Var оТипРеализаций Export;
Var НакопленноеСообщение Export;

Var пПропуск Export; //Используется в подч. формах
Var зДокОприходование Export; //Используется в подч. формах
Var ОприходованиеСтараяСтрока Export; //Используется в подч. формах
Var ОприходованиеИмяФайла Export; //Используется в подч. формах
Var ТабОтклонения Export; //Используется в подч. формах
Var ОприходованиеТабФайл Export; //Используется в подч. формах

Var спТекущиеЗапросы Export; //Использовать lock для обращения, каждый элемент -- список
Var флПроцесс Export;

Var ПроверкаИконкаПапка Export,ПроверкаИконкаПапка2 Export,ПроверкаИконкаМарка Export,ПроверкаИконкаПапкаПроверена Export,ПроверкаИконкаМаркаПроверена Export,ПроверкаИконкаПапкаВозврат Export,ПроверкаИконкаМаркаВозврат Export;
Var ПроверкаСпПроверенные Export, ПроверкаСпВозвраты Export;

Var СтрФСохранениеФайлаЗапросаПоОстаткам Export, СтрФЗакреплениеМарокЗаПартией Export;
Var оЮЛВнеш Export, оМагазинВнеш Export;

//TODO: ОШИБКА: при принятии утерянной отмены закрытия документа, если сервер возвратит ошибку (отмены не было),
//              документ примет вид "!", вместо "=", возврат также изменится, хотя его изменять нельзя.


//УникальныйИдентификатор2 -- хранит ГУИД временного запроса
//УникальныйИдентификатор3 -- хранит номер реального документа ЕГАИС
//                            префиксы: ! --              реализации: документ не закрыт, ожидает акта/ответа и пр.
//                                                        поступления: акт отказа от документа отправлен, ожидается его принятие на сервере
//                                      = -- документ закрыт успешно
//                                      # -- документ не принят на другой стороне (отклонен)
//                                      % -- (временный): поступления: акт расхождений отправлен, ожидается подтверждение от сервера, что он принят
//                                                        реализации: отказ от акта расхождения отправлен, ожидается квитанция от сервера, что он принят
//                                                                    отказ от ТТН за клиента отправлен, ожидается квитанция от сервера, что он принят
//                                                                    (Repeal) подтверждение на акт отказа от закрытого документа отправлено, ожидается квитанция от сервера, что оно принято
//                                      + -- (временный): реализации: подтверждение на акт расхождения отправлено, ожидается квитанция от сервера, что оно принято
//                                                                    (Repeal) отказ на акт отказа от закрытого документа отправлен, ожидается квитанция от сервера, что он принят
//                                                        поступления: акт расхождений принят сервером, ожидается подтверждение или отказ клиента
//                                      * -- (временный): поступления: акт отказа на закрытую накладную отправлен и принят сервером, ожидается подтверждение или отказ клиента
//                                                                         при подтверждении поставщиком, накладная приобретает флаг !
//                                                                         при отказе поставщиком, накладная приобретает флаг =
//                                                        реализации: (Repeal) отказ от акта отказа от отмененного документа отправлен, ожидается квитанция от сервера, что он принят
//                                      - -- (временный): поступления: акт отказа на отказанную накладную отправлен и принят сервером, ожидается подтверждение или отказ клиента
//                                                                         при подтверждении поставщиком, накладная приобретает флаг !
//                                                                         при отказе поставщиком, накладная приобретает флаг #
//                                                        реализации: (Repeal) подтверждение на акт отказа от отмененного документа отправлено, ожидается квитанция от сервера, что оно принято
//
//Ошибки ЕГАИС:
//Repeal: квитанция ответа на запрос repeal содержит неверный тег <tc:RegID>? Вместо корректного номера накладной TTN-??.., содержит неизвестный номер...
//

Function ВывестиОтчетОстаткам(Файл1,Файл2,флТип,Склад=0,флУстановки=0) Forward;
Function ВыгрузитьДокументы(Тб,флПакетная,ФлНаЭкран=0) Forward;
Function ЗаписатьВРеализацию(тТекст2,тТекст3=0,аДок=0,флФорсВозвраты=0,ФлПослеЗапроса=1,ТБлокировка=0) Forward;
Function ЦиклОжиданияОтветаНаЗапрос(аКодОтвета,ByRef СтрРезультат,ByRef Индекс) Forward;

Function ПроверкаМарокПринятьСканирование(Стр)
  If Trim(Стр)="" Then
    Exit;
  EndIf;
  MainTab:=Form.MainTab.Value;
  aBranch:=MainTab.Find(Стр,1);
  If IsEmpty(aBranch) Then
    Box("Сканируемый штрихкод "+Стр+" не найден в таблице проверки! Убедитесь, что вы сканируете марку, а не штрихкод бутылки!",Q_STOP);
    Exit;
  EndIf;
  ТСтроки:=Param["ТСтроки"];
  
  aBranch.IsSelected:=1;
  If IsEmpty(aBranch.Parent) Then
    If aBranch.Icon=ПроверкаИконкаПапкаПроверена Then
      Box("Этот ящик уже проверялся!",Q_INFORMATION);
      Exit;
    ElseIf aBranch.Icon=ПроверкаИконкаПапкаВозврат Then
      ПроверкаСпВозвраты.RemoveValue(aBranch.Value,1);
    EndIf;
  
    //Ящик
    aBranch.Icon:=ПроверкаИконкаПапкаПроверена;
    aBranch.FontStyle:=1;
    aBranch.FontColor:=_CLR_GREEN;
    ПроверкаСпПроверенные.Add(aBranch.Value,,,1);
    
    aBranch2:=aBranch.FirstChild();
    While not isEmpty(aBranch2) Do
      If aBranch2.Icon=ПроверкаИконкаМаркаВозврат Then
        aBranch2.Icon:=ПроверкаИконкаМарка;
        aBranch2.FontStyle:=0;
        aBranch2.FontColor:=_CLR_WINDOWTEXT;
        ПроверкаСпВозвраты.RemoveValue(aBranch2.Value,1);
      EndIf;
      aBranch2:=aBranch2.Next();
    EndDo;
  Else
    If aBranch.Icon=ПроверкаИконкаМаркаПроверена Then
      Box("Эта марка уже проверялась!",Q_INFORMATION);
      Exit;
    ElseIf aBranch.Icon=ПроверкаИконкаМаркаВозврат Then
      ПроверкаСпВозвраты.RemoveValue(aBranch.Value,1);
    EndIf;
  
    aBranch.Icon:=ПроверкаИконкаМаркаПроверена;
    aBranch.FontStyle:=1;
    aBranch.FontColor:=_CLR_GREEN;
    ПроверкаСпПроверенные.Add(aBranch.Value,,,1);
  EndIf;
EndFunction

Function НайтиИлиСоздатьПроизводителя(прзКодЕГАИС,прзНаименование,прзИНН,прзКПП,прзАдрес)
  аПр:=Ref.кнтКонтрагенты;
  If not аПр.Find("КодТочкиЕГАИС,@IsFolder,@Status,ТипАктива",прзКодЕГАИС,0,0,2) Then
    //Создание производителя
    аПапка:=0;
    If аПр.Find("~(ТипАктива=2)And(@IsFolder=0)And(@Status=0)And(@Folder.Name=""Производители"")") Then
      аПапка:=аПр.Folder();
    ElseIf аПр.Find("~(ТипАктива=2)And(@IsFolder=0)And(@Status=0)") Then
      аПапка:=аПр.Folder();
    Else
      аПапка:=Ref.кнтКонтрагенты;
      аПапка.New(1);
      аПапка.Name:="Производители";
      аПапка.ТипАктива:=2;
      If not глЗаписать(аПапка) Then
        Exit;
      EndIf;
    EndIf;
    аПр.New();
    аПр.Folder(аПапка);
    аПр.ТипАктива:=2;
    аПр.Name:=прзНаименование;
    аПр.ПолнНаименование:=прзНаименование;
    аПр.ВидКонтрагента:=?(Length(прзИНН)>10,Enum.ВидыКонтрагентов.ФизЛицо,Enum.ВидыКонтрагентов.ЮрЛицо);
    аПр.ИНН:=прзИНН+?(прзКПП<>"","/"+прзКПП);
    аПр.КодТочкиЕГАИС:=прзКодЕГАИС;
    аПр.ЮрАдрес:=прзАдрес;
    аПр.ФактАдрес:=прзАдрес;
    If not глЗаписать(аПр) Then
      Exit;
    EndIf;
  EndIf;
  Exit аПр;        
EndFunction

Function НайтиИлиСоздатьПоставщика(КодЕГАИС,Наименование,ИНН,КПП,Адрес)
  аПр:=Ref.кнтКонтрагенты;
  If not аПр.Find("КодТочкиЕГАИС,@IsFolder,@Status,ТипАктива",КодЕГАИС,0,0,1) Then
    //Создание поставщика
    аПапка:=0;
    If аПр.Find("~(ТипАктива=1)And(@IsFolder=0)And(@Status=0)And(@Folder.Name=""Поставщики"")") Then
      аПапка:=аПр.Folder();
    ElseIf аПр.Find("~(ТипАктива=1)And(@IsFolder=0)And(@Status=0)") Then
      аПапка:=аПр.Folder();
    Else
      аПапка:=Ref.кнтКонтрагенты;
      аПапка.New(1);
      аПапка.Name:="Поставщики";
      аПапка.ТипАктива:=1;
      If not глЗаписать(аПапка) Then
        Exit;
      EndIf;
    EndIf;
    аПр.New();
    аПр.Folder(аПапка);
    аПр.ТипАктива:=1;
    аПр.Name:=Наименование;
    аПр.ПолнНаименование:=Наименование;
    аПр.ВидКонтрагента:=?(Length(ИНН)>10,Enum.ВидыКонтрагентов.ФизЛицо,Enum.ВидыКонтрагентов.ЮрЛицо);
    аПр.ИНН:=ИНН+?(КПП<>"","/"+КПП);
    аПр.КодТочкиЕГАИС:=КодЕГАИС;
    аПр.ЮрАдрес:=Адрес;
    аПр.ФактАдрес:=Адрес;
    If not глЗаписать(аПр) Then
      Exit;
    EndIf;
  EndIf;
  Exit аПр;        
EndFunction

Function СозданиеПоступленияОбновитьШрихкод(ТСтроки)
  If not IsEmpty(ТСтроки.Партия) Then
    аШК:=Ref.тмцШтрихкоды;
    If аШК.Find("@Parent,@Status,<>Name",ТСтроки.Партия,0,"") Then
      ТСтроки.оШтрихкод:=аШК.Name;
      Exit;
    EndIf;
  EndIf;
  If not IsEmpty(ТСтроки.Номенклатура) Then
    аШК:=Ref.тмцШтрихкоды;
    If аШК.Find("@Parent,@Status,<>Name",ТСтроки.Номенклатура,0,"") Then
      ТСтроки.оШтрихкод:=аШК.Name;
    EndIf;
  EndIf;
EndFunction

Function ОбновитьИнформацию()
  оМагазин:=Form.оМагазин.Value;
  If оМагазин.Selected()=0 Then
    Form.пТекущийRegID.Caption:="";
  Else
    Form.пТекущийRegID.Caption:=оМагазин.КодТочкиЕГАИС+" / "+оМагазин.КПП+" / "+глРазделитьАдресИПрокси(оМагазин.АдресЕГАИС);
  EndIf;
EndFunction

Function ИконкаРеализации(оРеализации,Ид2,Ид3,ФлБезОбновленияВсего=0)
  оРеализации.Icon(оРеализации.CurLine,"Иконка",глПолучитьНомерИконкиДокументаЕГАИС(Ид2,Ид3));
  If (Left(Ид3,1)="#")Or(Trim(Ид3)="") Then
    оРеализации.BackgroundColor(оРеализации.CurLine,0,MixColors(_CLR_WINDOW,_CLR_RED,20));
  ElseIf Left(Ид3,1)="=" Then
    оРеализации.BackgroundColor(оРеализации.CurLine,0,MixColors(_CLR_WINDOW,_CLR_GREEN,10));
  ElseIf оРеализации.BackgroundColor(оРеализации.CurLine)<>0 Then
    оРеализации.BackgroundColor(оРеализации.CurLine,0,0);
  EndIf;
  If not ФлБезОбновленияВсего Then
    Стр:="";
    If КолНеОтпрРеализаций=0 Then
      Стр:=?(Стр="","",Стр+", ")+?(КолОтклоненныхРеализаций=0,"","Отклоненных: "+КолОтклоненныхРеализаций);
    Else
      Стр:=?(Стр="","",Стр+", ")+"Не выгруженных: "+КолНеОтпрРеализаций+?(КолОтклоненныхРеализаций=0,"",", Отклоненных: "+КолОтклоненныхРеализаций);
    EndIf;  
    If Form.пИнформация.Caption<>Стр Then
      Form.пИнформация.Caption:=Стр;
    EndIf;
  EndIf;
EndFunction  

Function СтатусРеализации(Ид2,Ид3)
  If Ид2<>"" Then
    Exit "Отправлен на сервер";
  ElseIf Left(Ид3,1)="!" Then
    Exit "Ожидаем акт клиента";
  ElseIf Left(Ид3,1)="=" Then
    Exit "Документ закрыт";
  ElseIf Left(Ид3,1)="#" Then
    Exit "Документ отклонен";
  ElseIf Left(Ид3,1)="+" Then
    Exit "Ожидает ответа сервера";
  ElseIf Left(Ид3,1)="%" Then
    Exit "Ожидает ответа сервера";
  Else
    Exit "НЕ ОТПРАВЛЕН";
  EndIf;
EndFunction


Function ОчиститьВходящиеПоступления()
  ТабПоступления.ClearLines();
  Form.оВхПоступления.Value.ClearLines();
EndFunction

Function ПодготовитьКаталог()
  Каталог:=AddBackSlash(GetTempDirectory())+"ЕГАИС\";
  File.CreateDirectory(Каталог);
  Exit Каталог;
EndFunction

Function пДата2(зДата)
  //2015-02-16
  Exit FormatDate(зДата,"YYYY-mm-dd");
EndFunction

Function ВДату2(пДата)
  //2015-02-16
  Exit Date(Mid(пДата,9,2)+"."+Mid(пДата,6,2)+"."+Left(пДата,4));
EndFunction

Function ЕслиОшибка(Имя,Текст="")
  If File.DoesFileExist(Имя+".error") Then
    Тч:=Text.Create();
    Тч.Load(Имя+".error",0);
    Тч.Show(?(Текст="","Ошибка запроса!",Текст),,1);
    File.DeleteFile(Имя+".error");
    Exit 1;
  EndIf;
  Exit 0;
EndFunction

Function ВыполнитьОчисткуСпискаЗапросов(ФлВыход=0)
  If спТекущиеЗапросы.Size()=0 Then
    Exit 1;
  EndIf;
  Фл:=0;
  LockObject(спТекущиеЗапросы);
  Try
    For i:=1 To спТекущиеЗапросы.Size() Do
      спЗапрос:=спТекущиеЗапросы.Get(i);
      аПоток:=спЗапрос.GetByName("Поток");
      If аПоток.IsThreadActive() Then
        Фл:=Фл Or 1;
        If спЗапрос.GetByName("Критический")=1 Then
          Фл:=Фл Or 4;
        EndIf;
      Else
        Фл:=Фл Or 2;
      EndIf;
    EndDo;
    ФлОчистка:=0;
    If ФлВыход Then
      If Фл and 4<>0 Then
        Box("В настоящее время выполняются критические запросы в ЕГАИС, выход из обработки невозможен до окончания выполнения этих запросов!",Q_STOP);
        Exit 0;
      ElseIf Фл and 1<>0 Then
        If AskQuestion("В настоящее время выполняются запросы в ЕГАИС. Если выйти из обработки, результаты этих запросов будут утеряны! Вы действительно хотите выйти?",Q_WARNING+Q_YESNO)<>R_YES Then
          Exit 0;
        EndIf;
      ElseIf Фл and 2<>0 Then
        If AskQuestion("Существуют выполненные запросы, которые ожидают вывод на экран. Если выйти из обработки, результаты этих запросов будут утеряны! Вы действительно хотите выйти?",Q_WARNING+Q_YESNO)<>R_YES Then
          Exit 0;
        EndIf;
      EndIf;
      Exit 1;
    EndIf;
    Exit Фл=0;
  Finally
    UnlockObject(спТекущиеЗапросы);
  EndTry;
EndFunction


//ТипЗапроса: 1 -- GET
//            2 -- POST с ожиданием ответа
//            3 -- Очистить ящик от запросов
//            4 -- Запрос по поступлениям
//            5 -- POST без ожидания ответа (отдает в стрФункция GUID запроса, стрФункция должна быть списком)
//            7 -- Получение статусов документов
//            8 -- Удаление квитанций и входящих документов
//            9 -- Удалить URL по списку в тексте
//            14 -- Удалить все данные
Function ВыполнитьЗапросЕГАИС(ТекстЗапроса,СсылкаЗапроса,ТипЗапроса=0,флЖдатьОтвета=0,стрФункция="",стрИмяЗапроса="") Export
  оМагазин:=Form.оМагазин.Value;
  оСервер:=оМагазин.АдресЕГАИС;//+

  If оСервер="" Then
    Message("Для магазина "+оМагазин+" не указан адрес сервера (должен быть в форме 192.168.1.1:8080! Обратитесь к администратору!","!");
    Exit 0;
  EndIf;
  
  If ТипЗапроса<2 Then
    ТипЗапроса:=?(ТипЗапроса=0,1,2);
  EndIf;
  
  спЗапрос:=List.Create();
  SetMultiThreaded(спЗапрос);
  спЗапрос.SetByName("Текст",ТекстЗапроса);
  спЗапрос.SetByName("ТипЗапроса",ТипЗапроса);
  спЗапрос.SetByName("Магазин",оМагазин);
  спЗапрос.SetByName("ЮрЛицо",оМагазин.ЮрЛицо);
  Прокси:="";
  спЗапрос.SetByName("Ссылка",глРазделитьАдресИПрокси(оСервер,Прокси)+"/"+СсылкаЗапроса);
  спЗапрос.SetByName("Прокси",Прокси);
  спЗапрос.SetByName("Функция",стрФункция);
  спЗапрос.SetByName("ИмяЗапроса",стрИмяЗапроса);
  спЗапрос.SetByName("оРегИд",оМагазин.КодТочкиЕГАИС);
  ФлУдалить:=0;
  If флЖдатьОтвета Then
    If not глФункцияОдногоЗапросаЕГАИС(спЗапрос,1) Then
      If TypeStr(стрФункция)="LIST" Then
        стрФункция["Ошибка"]:=спЗапрос["Ошибка"];
      EndIf;
      If _Or(TypeStr(стрФункция)<>"LIST",стрФункция["ФлНеВыводитьНаЭкран"]<>1) Then
        Тч:=Text.Create(1);
        Тч.AddString(спЗапрос.GetByName("Ошибка"));
        Тч.Show("Ошибка запроса!",,1);
      EndIf;
      Exit 0;
    EndIf;
    Exit 1;
  Else
    LockObject(спТекущиеЗапросы);
    Try
      спТекущиеЗапросы.Add(спЗапрос);
      ФлУдалить:=1;
      аПоток:=Mutex.ExecuteFunctionInSeparateThread("глФункцияОдногоЗапросаЕГАИС",0,спЗапрос,0);
      спЗапрос.SetByName("Поток",аПоток);
      ФлУдалить:=0;
    Finally
      If ФлУдалить Then
        спТекущиеЗапросы.Remove(спТекущиеЗапросы.Size());
      EndIf;
      UnlockObject(спТекущиеЗапросы);
    EndTry;
  EndIf;  
EndFunction

Function ЗаписатьВДокумент(оТаблица,тТекст2,тТекст3=0,аДок=0)
  ФлБлок:=0;
  Фл:=0;
  If аДок=0 Then
    аДок:=оТаблица.зДок.Copy();
    Фл:=1;
  EndIf;
  If аДок.isLocked()<>1 Then
    ФлБлок:=1;
    аПольз:="";аКомп:="";аДата:="";
    If not аДок.Lock(аПольз,аКомп,аДата) Then
      Message("Документ "+аДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выполнить операцию!","!");
      Exit 0;
    EndIf;
    аДок.Reload();
  EndIf;
  Try
    аДок.УникальныйИдентификатор2:=тТекст2;
    If аДок.ФлагОбмена<9 Then
      аДок.ФлагОбмена:=?(аДок.Status()>1,0,1);
    EndIf;  
    If тТекст3<>0 Then
      аДок.УникальныйИдентификатор3:=тТекст3;
    EndIf;
    If not глЗаписать(аДок,0,1) Then
      Message("Невозможно изменить документ "+аДок+". Выполните операцию заново!","!");
      Exit 0;
    EndIf;
    If Фл Then
      оТаблица.зДок:=аДок;
    ElseIf оТаблица.FindAndGoto(аДок,,"зДок")>0 Then
      оТаблица.зДок:=аДок;
    EndIf;  
  Finally
    If ФлБлок Then
      аДок.Unlock();
    EndIf;  
  EndTry;  
  Exit 1;
EndFunction

Function ЗавершитьВыполнениеЗапросаПоОстаткам(спУстановки)
  If TypeStr(спУстановки.GetByName("Функция"))="LIST" Then
    спУстановки:=спУстановки.GetByName("Функция");
  EndIf;  
  ФлТип:=Number(спУстановки.GetByName("ТипОперацииОстатков"));
  If ФлТип=1 Then
    ВывестиОтчетОстаткам(спУстановки.GetByName("ФайлОстатков"),спУстановки.GetByName("ФайлОстатков2"),Number(спУстановки.GetByName("ТипОтчета"))-1,0,Number(спУстановки.GetByName("флУстановки")));
  EndIf;
EndFunction

Function НайтиСуществующийЗапрос(Стр)
  LockObject(спТекущиеЗапросы);
  Try
    For i:=1 To спТекущиеЗапросы.Size() Do
      спЗапрос:=спТекущиеЗапросы.Get(i);
      If Pos(Стр,спЗапрос.GetByName("Ссылка"))>0 Then
        Exit 1;
      EndIf;
    EndDo;  
  Finally
    UnlockObject(спТекущиеЗапросы);
  EndTry;
  Exit 0;
EndFunction


Function ВыполнитьЗапросПоОстаткам(спУстановки,флФорсироватьНовый=0,флЖдатьОтвета=0)
  оМагазин:=Form.оМагазин.Value;
  оРегИд:=оМагазин.КодТочкиЕГАИС;
  оСервер:=оМагазин.АдресЕГАИС;//+
  Прокси:="";
  оСервер:=глРазделитьАдресИПрокси(оСервер,Прокси);
  ТипОтчета:=спУстановки["ТипОтчета"];
  ФлТолькоРегистр2:=ТипОтчета=4;
  
  Каталог:="Temp\ЕГАИС\";
  File.CreateDirectory(Каталог);
  Имя:=Каталог+"QueryRests_"+оРегИд+".xml";
  Имя2:=Каталог+"QueryRests2_"+оРегИд+".xml";
  ФлСтарый:=0;
  If (File.DoesFileExist(Имя))And(File.DoesFileExist(Имя2))And(not флФорсироватьНовый) Then
    ВремяСоздания:=0;
    File.GetFileTimes(Имя,,,ВремяСоздания);
    If GetPeriod(ВремяСоздания,Date(),4)<3601 Then //1 часа
      If AskQuestion("Во временной папке обнаружен существующий файл ответа на запрос по остаткам, сформированный не ранее, чем час назад. Использовать существующий файл (ДА), или создать запрос заново (НЕТ)? Внимание! "+
          "Если запрос будет создан заново, ЕГАИС скорее всего отвергнет его, так как он не позволяет запрашивать остатки чаще, чем раз в час!",Q_WARNING+Q_YESNO)=R_YES Then
        ФлСтарый:=1;
      EndIf;
    ElseIf GetPeriod(ВремяСоздания,Date(),4)<7201 Then //2 часа
      If AskQuestion("Во временной папке обнаружен существующий файл ответа на запрос по остаткам, сформированный не ранее, чем два часа назад. Использовать существующий файл, что быстрее (ДА), или создать запрос заново (НЕТ)?",Q_QUESTION+Q_YESNO)=R_YES Then
        ФлСтарый:=1;
      EndIf;
    EndIf;
  EndIf;
  
  //Запросы по регистру 2 в цепочке
  спЦепочкаЗапросов:=List.Create(List.Create());
  спЗапрос2:=спЦепочкаЗапросов[1];
  Стр:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
    "<ns:Documents Version=""1.0"""+_NEWLINE+
    "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""+_NEWLINE+
    "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
    "xmlns:qp=""http://fsrar.ru/WEGAIS/QueryParameters"">"+_NEWLINE+
    "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner><ns:Document><ns:QueryRestsShop_v2>"+_NEWLINE+
    "</ns:QueryRestsShop_v2></ns:Document></ns:Documents>";
  спЗапрос2["Текст"]:=Стр;
  спЗапрос2["Ссылка"]:=оСервер+"/opt/in/QueryRestsShop_v2";

  //Запросы по основным остаткам ЕГАИС
  Стр:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
    "<ns:Documents Version=""1.0"""+_NEWLINE+
    "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""+_NEWLINE+
    "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
    "xmlns:qp=""http://fsrar.ru/WEGAIS/QueryParameters"">"+_NEWLINE+
    "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner><ns:Document><ns:QueryRests_v2>"+_NEWLINE+
    "</ns:QueryRests_v2></ns:Document></ns:Documents>";
  
  спУстановки.SetByName("ФайлОстатков",Имя);
  спУстановки.SetByName("ФайлОстатков2",Имя2);
  спУстановки.SetByName("спЦепочкаЗапросов",спЦепочкаЗапросов);
  спУстановки.SetByName("Прокси",Прокси);
  If not ФлСтарый Then
    If _Or(НайтиСуществующийЗапрос(оСервер+"/opt/in/QueryRests_v2"),НайтиСуществующийЗапрос(оСервер+"/opt/in/QueryRestsShop_v2")) Then
      Box("Запрос по остаткам по этому юр. лицу уже выполняется, дождитесь его окончания!",Q_STOP);
      Exit 0;
    EndIf;
    спУстановки.SetByName("УсловиеУспеха","Pos(""<Conclusion>Rejected</Conclusion>"",Стр0)=0");
    спУстановки.SetByName("ТекстПриОшибке","В ответе на запрос по остаткам ЕГАИС вернул развернутую ошибку! Вероятнее всего, вам нужно попробовать сделать запрос позже!");
    спУстановки.SetByName("ВыполнитьПослеПолученияРезультата",СтрФСохранениеФайлаЗапросаПоОстаткам);
    If not флЖдатьОтвета Then
      спУстановки.SetByName("Функция","ЗавершитьВыполнениеЗапросаПоОстаткам(спЗапрос)");
    EndIf;  
    
    If not ВыполнитьЗапросЕГАИС(Стр,"opt/in/QueryRests_v2",2,флЖдатьОтвета,спУстановки,спУстановки.GetByName("ОписаниеОперацииОстатков")+" (регистр 2)") Then
      Exit 0;
    EndIf;
  ElseIf not флЖдатьОтвета Then
    ЗавершитьВыполнениеЗапросаПоОстаткам(спУстановки);
  EndIf;  
  
  Exit 1;
EndFunction
  
Function ВывестиОтчетПоНепринятымНакладным(Стр,оМагазин);
  Тч:=Text.Create(1);
  Тч.AddString(Стр);
  aTab:=Tab.Create("ТТН,ВхНомер,ВхДата,КодЕГАИС,Док,Кнт");
  СпНомера:=List.Create();
  СпКнт:=List.Create();
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Тч.GetLine(i);
    If Pos("<NoAnswer>",Стр)<>1 Then
      Continue;
    EndIf;
    
    пТТН:="";
    пВхНомер:="";
    пВхДата:="";
    пКодЕГАИС:="";
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Тч.GetLine(i);
      If Стр="</NoAnswer>" Then
        Break;
      ElseIf Pos("<WbRegID>",Стр)=1 Then
        TearStr(Стр,">");
        пТТН:=TearStr(Стр,"<");
        СпНомера.Add(пТТН);
      ElseIf Pos("<ttnNumber>",Стр)=1 Then
        TearStr(Стр,">");
        пВхНомер:=TearStr(Стр,"<");
      ElseIf Pos("<ttnDate>",Стр)=1 Then
        TearStr(Стр,">");
        пВхДата:=TearStr(Стр,"<");
      ElseIf Pos("<Shipper>",Стр)=1 Then
        TearStr(Стр,">");
        пКодЕГАИС:=TearStr(Стр,"<");
        СпКнт.Add(пКодЕГАИС);
      EndIf;
    EndDo;
    aTab.AddLine("ТТН,ВхНомер,ВхДата,КодЕГАИС",пТТН,пВхНомер,пВхДата,пКодЕГАИС);
  EndDo;
  aTab.Sort("ВхДата+,ТТН+");
  
  If СпНомера.Size()>0 Then
    НачДата:=BegOfDay(Date())-365;
    ТЗ:="зСтатус:=Doc.ПоступлениеТМЦ.@Status;Condition(зСтатус>1);зДата:=Doc.ПоступлениеТМЦ.DocDate;Condition(зДата>=НачДата);
    |зДок:=Doc.ПоступлениеТМЦ;
    |зИд3:=Doc.ПоступлениеТМЦ.УникальныйИдентификатор3;
    |Condition(Mid(зИд3,2) IN СпНомера);
    |зЮЛ:=Doc.ПоступлениеТМЦ.ЮрЛицо;
    |Condition(зЮЛ=оЮЛ);
    |Group зДок;";
    
    З:=Query.Create();
    З.Execute(ТЗ,0);
    bTab:=З.ResultTable;
    bTab.Select();
    While bTab.Next() Do
      зДок:=bTab.зДок;
      зИд3:=Mid(зДок.УникальныйИдентификатор3,2);
      If aTab.FindAndGoto(зИд3,,"ТТН")>0 Then
        aTab.Док:=зДок;
      EndIf;
    EndDo;
  EndIf;  
  
  If СпКнт.Size()>0 Then
    ТЗ:="зК:=Ref.кнтКонтрагенты;
    |зИд:=Ref.кнтКонтрагенты.КодТочкиЕГАИС;
    |Condition(зИд IN СпКнт);
    |Group зК;";
    
    З:=Query.Create();
    З.Execute(ТЗ,0);
    bTab:=З.ResultTable;
    bTab.Select();
    While bTab.Next() Do
      зК:=bTab.зК;
      зИд:=зК.КодТочкиЕГАИС;
      Стр:=0;
      While aTab.FindAndGoto(зИд,Стр,"КодЕГАИС")>0 Do
        aTab.Кнт:=зК;
        aNum:=СпКнт.Find(зИд);
        if aNum>0 Then
          СпКнт.Remove(aNum);
        EndIf;
        Стр:=aTab.CurLine+1;
      EndDo;
    EndDo;
  EndIf;
  
  If СпКнт.Size()>0 Then
    ТЗ:="зАд:=Ref.адАдресаДоставки;
    |зИд:=Ref.адАдресаДоставки.УникальныйИдентификатор2;
    |Condition(зИд IN СпКнт);
    |Group зАд;";
    
    З:=Query.Create();
    З.Execute(ТЗ,0);
    bTab:=З.ResultTable;
    bTab.Select();
    While bTab.Next() Do
      зАд:=bTab.зАд;
      зИд:=зАд.УникальныйИдентификатор2;
      Стр:=0;
      While aTab.FindAndGoto(зИд,Стр,"КодЕГАИС")>0 Do
        aTab.Кнт:=зАд.Parent();
        Стр:=aTab.CurLine+1;
      EndDo;
    EndDo;
  EndIf;
  
  Т:=Table.Create();
  Т.SetSourceName("НезакрытыеДокументы");
  оЗагол:="Отчет по незакрытым входящим документам ЕГАИС для "+оМагазин;
  оСвойства:=глСвойстваПечатиПростые();
  Т.CopyByX("v1",1);
  
  aTab.Select();
  While aTab.Next() Do
    пТТН:=aTab.ТТН;
    пНомерВх:=aTab.ВхНомер;
    пДата:=aTab.ВхДата;
    пКодКнт:=aTab.КодЕГАИС;
    пДок:=aTab.Док;
    пКонтрагент:=aTab.Кнт;
    Т.CopyByX("v2",1);
  EndDo;
  Т.CopyByX("v3",1);
  глПечатнаяФормаОтчета(Т,Param,оЗагол);
EndFunction


//флБезРасхождений -- 1 акт принятия без расхождений
//                    2 акт отказа
//                    0 ошибка
Function ВывестиИлиПроверитьАктРасхождений(флПроверка,ByRef флБезРасхождений=0,ByRef ТМаркиВозврата=0)

  Function СложитьМарки(ТМаркиВозврата,Партия)
    Стр:="";
    If ТМаркиВозврата.FindAndGoto(Партия,,"Партия")=0 Then
      Exit "";
    EndIf;
    Repeat
      If ТМаркиВозврата.Партия=Партия Then
        AppendStringToBufferedString(Стр,?(Стр="","",Chr(1))+ТМаркиВозврата.Ящик+Chr(2)+ТМаркиВозврата.Марка);
      EndIf;
    Until not ТМаркиВозврата.Next();
    Exit Стр;
  EndFunction

  оРеализации:=Form.оРеализации.Value;
  зДок:=оРеализации.зДок.Copy();
  ТСтроки:=оРеализации.АктСтроки;
  флБезРасхождений:=1;
  ТМаркиВозврата:=Tab.Create("Партия,Марка,Ящик");
  
  If флПроверка=0 Then
    Т:=Table.Create();
    Т.SetSourceName("Акт");
    оЗагол:="Акт расхождения по документу "+зДок;
    пКонтрагент:=зДок.Контрагент;
    пИННКПП:=Trim(зДок.Контрагент.ИНН);
    пАдрес:=зДок.АдресДоставки.адСсылка;
    пКодЕГАИС:=зДок.АдресДоставки.адСсылка.УникальныйИдентификатор2;
    пРегИД:=Mid(зДок.УникальныйИдентификатор3,2);
    Т.CopyByX("v1",1);
  EndIf;
  
  ТабДок:=Tab.Create("Номенклатура,Партия,Количество,Количество0,Справки");
  ТМарки:=глМаркиЗагрузитьДокумент(зДок,,1);
    
  аНомер:=0;
  aTab:=зДок.LoadStorage("ОстаткиТМЦ");
  aTab.Select();
  While aTab.Next() Do
    If aTab.Номенклатура.флАлкогольнаяПродукция=0 Then
      Continue;
    EndIf;
    If aTab.Партия.Selected()=0 Then
      Message("Для номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") не заполнена партия в "+зДок+"!","!");
      Exit 0;
    EndIf;
    аНомер:=аНомер+1;
    Справки:=aTab.Партия.ЕГАИСКодСправок;
    If ТабДок.FindAndGoto(Справки,,"Справки")>0 Then
      ТабДок.Количество:=ТабДок.Количество+aTab.Количество;
      ТабДок.Количество0:=ТабДок.Количество0+aTab.Количество;
      Continue;
    EndIf;
    ТабДок.AddLine("Номенклатура,Партия,Количество,Количество0,Справки",aTab.Номенклатура,aTab.Партия,aTab.Количество,aTab.Количество,Справки);
  EndDo;
  
  //Отнимаем возвраты
  ТМаркиВозврата:=Tab.Create("Партия,Марка,Ящик");
  aList:=зДок.LoadLinkedDocuments(1);
  For i:=1 To aList.Size() Do 
    бДок:=aList.Get(i);
    If бДок.DBName()<>"ВозвратОтПокупателя" Then
      Continue;
    EndIf;
    If бДок.Status()<2 Then
      Continue;
    EndIf;

    ТМарки2:=глМаркиЗагрузитьДокумент(бДок,,1);
    ТМаркиВозврата.Combine(ТМарки2,"Партия,Марка","ADD");
    ТМарки2.Combine(ТМарки,"Партия,Марка","SUB");
    If ТМарки2.Size()>0 Then
      Стр:="Документ возврата "+бДок+" содержит маркировку продукции, которая отсутствовала в оригинальном документе (к примеру, "+ТМарки2["Марка",1]+"!";
      Message(Стр,"!");
      Exit 0;
    EndIf;
    
    aTab:=бДок.LoadStorage("ОстаткиТМЦ");
    aTab.Select();
    While aTab.Next() Do
      If aTab.Номенклатура.флАлкогольнаяПродукция=0 Then
        Continue;
      EndIf;
      If aTab.Партия.Selected()=0 Then
        Message("Для номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") не заполнена партия в "+бДок+"!","!");
        Exit 0;
      EndIf;
      Справки:=aTab.Партия.ЕГАИСКодСправок;
      If ТабДок.FindAndGoto(Справки,,"Справки")=0 Then
        ТабДок.AddLine("Номенклатура,Партия,Количество,Справки",aTab.Номенклатура,aTab.Партия,Min(-aTab.Количество,aTab.Количество),Справки);
      Else
        ТабДок.Количество:=ТабДок.Количество+Min(-aTab.Количество,aTab.Количество);
      EndIf;
    EndDo;
  EndDo;
  ТМаркиВозврата.Sort("Партия,Ящик,Марка");
  ТМарки.Sort("Партия,Ящик,Марка");
  ТабКлиент:=ТСтроки.Copy();
  
  флПустойАкт:=1;
  флПроблемы:=0;
  пН:=0;
  ТабДок.Select();
  While ТабДок.Next() Do
    пН:=пН+1;
    Партия:=ТабДок.Партия;
    пНоменклатура:=ТабДок.Номенклатура;
    пОбъем:=ТабДок.Номенклатура.ОбъемЛитров;
    пКрепость:=ТабДок.Номенклатура.сертКрепость;
    пКодЕГАИС:=Trim(Партия.ЕГАИСКодНоменклатуры);
    пАПКод:=Trim(Партия.ЕГАИСКодАП);
    аКолВо:=Round(ТабДок.Количество,5);
    аКолВо0:=ТабДок.Количество0;
    пКолВо:=глФРМЧл(ТабДок.Количество);
    пКолВо0:=глФРМЧл(ТабДок.Количество0);
    пПроизводитель:=Партия.Производитель;
    пПроизводительКод:=Trim(Партия.Производитель.КодТочкиЕГАИС);
    пСправки:=Trim(ТабДок.Справки);
    пКолВо2:=глФРМЧл(0);
    аКолВо2:=0;
    
    пМарки:="";
    спМарки:=GetNothing();
    If ТабКлиент.FindAndGoto(Str(пН),,"Номер") Then
      аКолВо2:=Round(ТабКлиент.Количество,5);
      If (аКолВо2<>ТабДок.Количество0)And(Партия.флМарочныйУчет=1) Then
        If ТМарки.FindAndGoto(Партия,,"Партия")=0 Then
          Message("Внутренняя ошибка при поиске справок в акте (1). Обратитесь к администратору!","!");
          Exit 0;
        EndIf;
              
        СтрМарки0:=СложитьМарки(ТМарки,Партия);
        If isEmpty(ТабКлиент.Марки) Then
          //В акте клиента не указаны марки
          СтрМарки:=СложитьМарки(ТМаркиВозврата,Партия);
          If аКолВо2=0 Then
            //Если клиент возвращает всю строку полностью, ЕГАИС позволяет не указывать марки, в этом случае, нам необходимо найти самим, какие марки были в реализации
            ТабКлиент.Марки:=СтрМарки;
          Else
            If (аКолВо2<>ТабДок.Количество)Or(СтрМарки="") Then //Разрешить документы, которые были отправлены клиенту за минусом возврата, затем клиент прислал акт расхождения.
              Message("В акте клиента для номенклатуры "+пНоменклатура+", партии "+Партия+" не указаны марки возврата. Акт неверен!","!");
              Exit 0;
            Else
              //ТМарки.Марки - ТабДок.МаркиВозврата
              ТабКлиент.Марки:=JoinStringValues(СтрМарки0,СтрМарки,chr(1),"SUB",chr(2));
            EndIf;
          EndIf;  
        EndIf;
        //Проверяем, были ли такие же марки в реализации:
        Try
          AssertStringValues(СтрМарки0,ТабКлиент.Марки,chr(1),0,chr(2));
        Except
          Message("А акте клиента указаны марки, отсутствовавшие в реализации! Внутренняя ошибка! Обратитесь к администратору!","!");
          Exit 0;
        EndTry;
      EndIf;
      If Партия.флБезУпаковки=1 Then
        аКолВо2:=аКолВо2/ТабДок.Номенклатура.ОбъемЛитров*10;
      EndIf;
      пКолВо2:=глФРМЧл(аКолВо2);
      If Trim(ТабКлиент.Марки)<>"" Then
        спМарки:=List.Create();
        спМарки.SetByName("ЕГАИС",1);
        спМарки.SetByName("ПоказатьМарки",1);
        спМарки.SetByName("Марки",Replace(Replace(ТабКлиент.Марки,chr(1),_NEWLINE),chr(2),_TAB));
        спМарки.SetByName("Ящики","");
        пМарки:=StrCount(chr(1),ТабКлиент.Марки)+1;
      EndIf;
      ТабКлиент.Remove(ТабКлиент.CurLine);
    EndIf;
    
    If флПроверка=0 Then
      Т.CopyByX(?(аКолВо2=аКолВо,"v2","v3"),1);
    EndIf;
    
    If аКолВо2<>аКолВо Then
      флПроблемы:=1;
    EndIf;
    If аКолВо2<>аКолВо0 Then
      флБезРасхождений:=0;
    EndIf;
    If аКолВо2<>0 Then
      флПустойАкт:=0;
    EndIf;
  EndDo;

  ТабКлиент.Select();
  While ТабКлиент.Next() Do
    пН:=пН+1;
    пНоменклатура:="?";
    пОбъем:="?";
    пКрепость:="?";
    пКодЕГАИС:="?";
    пАПКод:="?";
    пКолВо:=глФРМЧл(0);
    пПроизводитель:="?";
    пПроизводительКод:="?";
    пСправки:="?";//Trim(ТабКлиент.СправкаБ);
    пКолВо2:=глФРМЧл(ТабКлиент.Количество);
    If ТабКлиент.Количество<>0 Then
      флПустойАкт:=0;
    EndIf;
    
    If флПроверка=0 Then
      Т.CopyByX("v3",1);
    EndIf;
    флПроблемы:=1;
  EndDo;
  
  If флПроверка=0 Then
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  EndIf;
  If флПустойАкт=1 Then
    флБезРасхождений:=2;
  EndIf;
  
  Exit 1-флПроблемы;
EndFunction


Function ОтправкаРеализаций()
  КонДата:=BegOfDay(Form.КонДата.Value);
  НачДата:=BegOfDay(Form.НачДата.Value);
  оРеализации:=Form.оРеализации.Value;
  
  If not глПользователь.общиеКорректировкаСкладскихОстатков Then
    Box("Вы не имеете полномочий для работы с этой функцией!",Q_STOP);
    Exit;
  EndIf;
  If КонДата<>НачДата Then
    Box("Эта фукция может быть использована только если период выгрузки равен одному дню!",Q_STOP);
    Exit;
  EndIf;
   
  If AskQuestion("Выгрузить все новые реализации из текущего списка? Вы уверены?",Q_QUESTION+Q_YESNO)<>R_YES Then
    Exit;
  EndIf;
  
  ЧлВсегоДокументов:=0;
  Тб:=Tab.Create("Документ");
  Тб.AddColumn("Статус",,"Number");
  оРеализации.Select();
  While оРеализации.Next() Do
    If isEmpty(оРеализации.зДок) Then
      Continue;
    EndIf;
    зДок:=оРеализации.зДок.Copy();
    If зДок.DBName()<>"Реализация" Then
      Continue;
    EndIf;
    Ид2:=Trim(зДок.УникальныйИдентификатор2);
    Ид3:=Trim(зДок.УникальныйИдентификатор3);
    If (Ид2="")And(Ид3="") Then
      Тб.AddLine("Документ",зДок);
      ЧлВсегоДокументов:=ЧлВсегоДокументов+1;
    EndIf;
  EndDo;
  If ЧлВсегоДокументов=0 Then
    Box("В выбранном списке отсутствуют реализации, ожидающие выгрузки!",Q_WARNING);
    Exit;
  EndIf;
  ЧлВсегоВыгружено:=ВыгрузитьДокументы(Тб,1);
  If ЧлВсегоВыгружено=0 Then
    Box("Не было выгружено ни одного документа!",Q_WARNING);
  EndIf;
EndFunction



Function ОсобыеОперацииОтказа(зДок,ТУдалить,ByRef ПолныйОтказ,ByRef НеПринятоНаСервере,Ид3,Ид2,СтрТекст0)
  Result:=0;
  оРеализации:=Form.оРеализации.Value;
  ФлТекущий:=оРеализации.FindAndGoto(зДок,,"зДок")>0;
  пДок:=зДок;
  пДокР:=зДок;
  пК:=зДок.Контрагент;
  пКР:=пК;
  
  //Отказ на акт отправлен, получаем квитанцию
  If _And(Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0,Pos("<DocType>WayBillTicket</DocType>",СтрТекст0)>0,
             Pos("<OperationName>UnConfirm</OperationName>",СтрТекст0)>0,Pos("<OperationResult>Accepted</OperationResult>",СтрТекст0)>0) Then
    If ЗаписатьВРеализацию("","#"+Ид3,зДок,,0) Then
      Logs.Write("Сервер отклонил документ(3): "+зДок+", ID: "+Ид3+", GUID: "+Ид2,зДок,"ЕГАИС",0);
      If ФлТекущий Then
        оРеализации.Статус:="Документ отклонен";
        ИконкаРеализации(оРеализации,"","#"+Ид3);
      EndIf;  
      ТУдалить.AddString(Ид3);
      If Ид2<>"" Then
        ТУдалить.AddString(Ид2);
      EndIf;
      ПолныйОтказ:=ПолныйОтказ+1;
      пСтатус:="Клиент отклонил документ";
      Т.CopyByX("v4",1);
    Else
      пСтатус:="Ошибка записи в документ!";
      Т.CopyByX("v4",1);
      If ФлТекущий Then
        оРеализации.тОшибка:="Ошибка при обновлении реализации";
      EndIf;  
    EndIf;
  //Отказ по ТТН за клиента принят
  ElseIf _And(Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0,(Pos("<DocType>WayBillAct_v3</DocType>",СтрТекст0)>0)or(Pos("<DocType>WayBillAct_v4</DocType>",СтрТекст0)>0), //Ticket: WayBillAct
              Pos("<OperationName>UnConfirm</OperationName>",СтрТекст0)>0,Pos("<OperationResult>Accepted</OperationResult>",СтрТекст0)>0, //Ticket: WAYBILL
              Pos("<IsAccept>Rejected</IsAccept>",СтрТекст0)>0) Then //WayBillAct (возвращается свой же документ)
    Result:=1;
    If ЗаписатьВРеализацию("","#"+Ид3,зДок,,0) Then
      Logs.Write("Сервер отклонил документ(4): "+зДок+", ID: "+Ид3+", GUID: "+Ид2,зДок,"ЕГАИС",0);
      If ФлТекущий Then
        оРеализации.Статус:="Документ отклонен";
        ИконкаРеализации(оРеализации,"","#"+Ид3);
      EndIf;  
      ТУдалить.AddString(Ид3);
      If Ид2<>"" Then
        ТУдалить.AddString(Ид2);
      EndIf;
      ПолныйОтказ:=ПолныйОтказ+1;
      пСтатус:="Клиент отклонил документ";
      Т.CopyByX("v4",1);
    Else
      пСтатус:="Ошибка записи в документ!";
      Т.CopyByX("v4",1);
      If ФлТекущий Then
        оРеализации.тОшибка:="Ошибка при обновлении реализации";
      EndIf;  
    EndIf;
  //(Repeal) Принято принятие отказа от закрытого документа, отказ прислал клиент
         //К сожалению, либо RequestRepealWB либо ConfirmRepealWB может потеряться или выделиться в отдельный блок из-за некорректного номера TTN внутри ConfirmRepealWB (bug ЕГАИС) 
         //             поэтому, для нас достаточно либо той, либо другой квитанции
  ElseIf _And(Ид3<>"",((Pos("<RequestRepealWB>",СтрТекст0)>0)And(Pos("<WBRegId>",СтрТекст0)>0))or((Pos("<DocType>ConfirmRepealWB</DocType>",СтрТекст0)>0)And(Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0)),  
              Pos("<OperationName>UnConfirm</OperationName>",СтрТекст0)>0,Pos("<OperationResult>Accepted</OperationResult>",СтрТекст0)>0) Then //Ticket: UnConfirm
    Result:=1;
    
    //Из-за ошибки в ЕГАИС квитанция "Ticket: ConfirmRepealWB" приходит с неверным неизвестным номером (пример <RegID>116912</RegID>), поэтому Ид3 может содержать неверную информацию.
    //Нам необходимо обновить Ид3 из квитанции "Ticket: UnConfirm"
    Стр:=СтрТекст0;
    If pos("TTN-",Ид3)=0 Then
      TearStr(Стр,"<RegID>");
      Ид3:=TearStr(Стр,"</RegID>");
      If pos("TTN-",Ид3)=0 Then
        TearStr(Стр,"<RegID>");
        Ид3:=TearStr(Стр,"</RegID>");
      EndIf;
    EndIf;
    If pos("TTN-",Ид3)=0 Then
      Message("Ошибка нахождения RegID для документа "+зДок+"! Обратитесь к администратору!","!");
      Exit;
    EndIf;
    
    If ЗаписатьВРеализацию("","!"+Ид3,зДок,,0) Then
      Logs.Write("Сервер отклонил принятый ранее документ: "+зДок+", ID: "+Ид3+", GUID: "+Ид2,зДок,"ЕГАИС",0);
      If ФлТекущий Then
        оРеализации.Статус:="Документ отклонен";
        ИконкаРеализации(оРеализации,"","!"+Ид3);
      EndIf;
      ТУдалить.AddString(Ид3);
      ТУдалить.AddString("$$$"+Ид3);
      If Ид2<>"" Then
        ТУдалить.AddString(Ид2);
      EndIf;
      ПолныйОтказ:=ПолныйОтказ+1;
      пСтатус:="Клиент отклонил принятый ранее документ";
      Т.CopyByX("v4",1);
    Else
      пСтатус:="Ошибка записи в документ!";
      Т.CopyByX("v4",1);
      If ФлТекущий Then
        оРеализации.тОшибка:="Ошибка при обновлении реализации";
      EndIf;  
    EndIf;
  //(Repeal) ЕГАИС не принял принятие отказа от закрытого документа, отказ прислал клиент. Это возможно, если за время до того, как оператор принял отказ клиент успел продать часть товара.
         //Комментарии: см. выше...
  ElseIf _And(Ид3<>"",((Pos("<RequestRepealWB>",СтрТекст0)>0)And(Pos("<WBRegId>",СтрТекст0)>0))or((Pos("<DocType>ConfirmRepealWB</DocType>",СтрТекст0)>0)And(Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0)),  
              Pos("<OperationName>UnConfirm</OperationName>",СтрТекст0)>0,Pos("<OperationResult>Rejected</OperationResult>",СтрТекст0)>0) Then //Ticket: UnConfirm
              
    //Из-за ошибки в ЕГАИС квитанция "Ticket: ConfirmRepealWB" приходит с неверным неизвестным номером (пример <RegID>116912</RegID>), поэтому Ид3 может содержать неверную информацию.
    //Нам необходимо обновить Ид3 из квитанции "Ticket: UnConfirm"
    Стр:=СтрТекст0;
    If pos("TTN-",Ид3)=0 Then
      TearStr(Стр,"<RegID>");
      Ид3:=TearStr(Стр,"</RegID>");
      If pos("TTN-",Ид3)=0 Then
        TearStr(Стр,"<RegID>");
        Ид3:=TearStr(Стр,"</RegID>");
      EndIf;
    EndIf;
    If pos("TTN-",Ид3)=0 Then
      Message("Ошибка нахождения RegID для документа "+зДок+"! Обратитесь к администратору!","!");
      Exit;
    EndIf;
    
    //Возвращаем документ в закрытое состояние
    If ЗаписатьВРеализацию("","="+Ид3,зДок,,0) Then
      Logs.Write("Сервер отклонил попытку отклонить принятый ранее документ: "+зДок+", ID: "+Ид3+", GUID: "+Ид2,зДок,"ЕГАИС",0);
      If ФлТекущий Then
        оРеализации.Статус:="Документ закрыт";
        ИконкаРеализации(оРеализации,"","="+Ид3);
      EndIf;
      ТУдалить.AddString(Ид3);
      ТУдалить.AddString("$$$"+Ид3);
      If Ид2<>"" Then
        ТУдалить.AddString(Ид2);
      EndIf;
      ПолныйОтказ:=ПолныйОтказ+1;
      пСтатус:="Сервер не разрешил отклонить принятый ранее документ";
      Т.CopyByX("v4",1);
    Else
      пСтатус:="Ошибка записи в документ!";
      Т.CopyByX("v4",1);
      If ФлТекущий Then
        оРеализации.тОшибка:="Ошибка при обновлении реализации";
      EndIf;  
    EndIf;
  ElseIf Pos("<Conclusion>Rejected</Conclusion>",СтрТекст0)>0 Then //Сервер не принял акт по каким-то причинам, возвращаем оригинальный статус документа.
                                                                   //Пример: попытка отклонить документ возвратила "Акт для данной накладной уже зарегистрирован", так как клиент успел прислать акт расхождений
    Result:=1;
    //отказ от акта расхождения отправлен, ожидается квитанция от сервера, что он принят: ! -> !
    //отказ от ТТН за клиента отправлен, ожидается квитанция от сервера, что он принят: ! -> !
    //(Repeal) подтверждение на акт отказа от закрытого документа отправлено, ожидается квитанция от сервера, что оно принято: = -> =
    If ФлТекущий Then
      оРеализации.тОшибка:="Ошибка сервера, нажмите для просмотра";
    EndIf;
    локИд3_0:=Mid(UpperCase(Trim(зДок.УникальныйИдентификатор3)),2);
    if Pos("<OperationName>UnConfirm</OperationName>",СтрТекст0)=0 then
      локИд3_0:="!"+локИд3_0;
    Else
      локИд3_0:="="+локИд3_0;
    EndIf;
    If ЗаписатьВРеализацию("",локИд3_0,зДок,,0) Then
      Logs.Write("Сервер отклонил акт на отклонение ("+Left(локИд3_0,1)+") (возвращен статус "+?(Left(локИд3_0,1)="=","закрыт","в ожидании")+"): "+зДок+", ID: "+Ид3+", GUID: "+Ид2,зДок,"ЕГАИС",0);
      If ФлТекущий Then
        ИконкаРеализации(оРеализации,"",локИд3_0);
        оРеализации.Статус:=СтатусРеализации("",локИд3_0);
      EndIf;  
      ТУдалить.AddString(Ид2);
      пСтатус:="Сервер отклонил акт на отклонение";
      Т.CopyByX("v4",1);
      НеПринятоНаСервере:=НеПринятоНаСервере+1;
    Else
      Message("Ошибка записи в документ "+зДок+"!","!");
    EndIf;
  EndIf;  
EndFunction

Function ОтмененныйПодтвержениеОтправленоЖдемКвитанцию(зДок,локИд2,локИд3,ФлТекущий,ТУдалить,ByRef ОтправленоНаСервер)
  оРеализации:=Form.оРеализации.Value;
  пДок:=зДок;
  пДокР:=зДок;
  пК:=зДок.Контрагент;
  пКР:=пК;
  
  //Принят акт подтверждения на акт отказа клиента от отмененной ранее накладной, вернем накладной статус "!"
  If ЗаписатьВРеализацию("","!"+локИд3,зДок,,0) Then
    Logs.Write("Акт подтверждения на акт отказа отмененного документа принят сервером: "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
    If ФлТекущий Then
      оРеализации.Статус:="Ожидаем акт клиента";
      ИконкаРеализации(оРеализации,"","!"+локИд3);
      оРеализации.АктСтроки:="";
      оРеализации.тАкт:="";
    EndIf;  
    ТУдалить.AddString(локИд2);
    ТУдалить.AddString(локИд3);
    ТУдалить.AddString("$$$"+локИд3);
    ОтправленоНаСервер:=ОтправленоНаСервер+1;
    пСтатус:="Мы подтвердили попытку клиента вернуть документ";
    Т.CopyByX("v2",1);
  Else
    пСтатус:="Ошибка записи в документ!";
    Т.CopyByX("v4",1);
    If ФлТекущий Then
      оРеализации.тОшибка:="Ошибка при обновлении реализации";
    EndIf;  
  EndIf;
EndFunction        


Function ОбновитьСтатусыРеализаций()
  оМагазин:=Form.оМагазин.Value;
  оРегИд:=оМагазин.КодТочкиЕГАИС;
  глОчиститьСтарыеПакетыЕГАИС(оРегИд);
  
  оРеализации:=Form.оРеализации.Value;
  ТУдалить:=Text.Create(1);
  флСтатусыРеализацийОбновлены:=0;
  
//Проблемы:
//1. Мы выслали отказ на накладную (Ид2,Ид3 заполнены, тип "+")
//   Клиент в это время выслал акт расхождений
//   В ЕГАИС: 1. квитанция отказа от отказа от накладной (Ид2)
//            2. waybillact с расхождениями (Ид3)
  
  СпОтвет:=List.Create();  
  If not ВыполнитьЗапросЕГАИС("","",7,1,СпОтвет) Then
    Exit 0;
  EndIf;
  Стр:=СпОтвет.GetByName("Результат");
  Тч:=Text.Create(1);
  Тч.AddString(Стр);
  
  If Тч.Size()=0 Then
    флСтатусыРеализацийОбновлены:=1;
    Exit;
  EndIf;
  
  Form.StatusText("Первичная обработка результата...");
  aListID2:=List.Create();
  aListID3:=List.Create();
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Тч.GetLine(i);
    If Pos("=====================",Стр)<>1 Then
      Continue;
    EndIf;
    i:=i+1;
    Ид3:=Uppercase(Тч.GetLine(i));
    i:=i+1;
    Ид2:=Uppercase(Тч.GetLine(i));
    If not IsEmpty(Ид3) Then
      aListID3.Add(Ид3);
    EndIf;  
    If not IsEmpty(Ид2) Then
      aListID2.Add(Ид2);
    EndIf;  
  EndDo;
  If aListID2.Size()+aListID3.Size()=0 Then
    флСтатусыРеализацийОбновлены:=1;
    Exit;
  EndIf;
  
  Form.StatusText("Выполнение запроса по реализациям...");
  НачДата:=BegOfDay(Date())-365;
  ТЗ:="зСтатус:=Doc.Реализация.@Status;Condition(зСтатус>1);зДата:=Doc.Реализация.DocDate;Condition(зДата>=НачДата);
  |зДок:=Doc.Реализация;
  |зИд2:=Doc.Реализация.УникальныйИдентификатор2;
  |зИд3:=Doc.Реализация.УникальныйИдентификатор3;"+
  ?((aListID2.Size()>0)And(aListID3.Size()>0),"Condition((Mid(зИд3,2) IN aListID3)or(зИд2 IN aListID2));",?(aListID2.Size()>0,"Condition(зИд2 IN aListID2);","Condition(Mid(зИд3,2) IN aListID3);"))+
  "зЮЛ:=Doc.Реализация.ЮрЛицо;
  |Condition(зЮЛ=оЮЛ);
  |Group зДок;";
  
  З:=Query.Create();
  З.Execute(ТЗ,0);
  ТбДокументы:=З.ResultTable;
  ТбДокументы.Select();
  While ТбДокументы.Next() Do
    зДок:=ТбДокументы.зДок;
    ТбДокументы.зИд3:=Mid(зДок.УникальныйИдентификатор3,2);
  EndDo;
  
  ОтправленоНаСервер:=0;
  ПринятоКлиентами:=0;
  АктРасхождений:=0;
  ПолныйОтказ:=0;
  ОшибочныхДокументов:=0;
  ОтклоняемыхДокументов:=0;
  НеПринятоНаСервере:=0;
  
  ТабОтклон:=Tab.Create("Документ,НомерЕГАИС");
  ТабОтклон.AddColumn("Принять",,"Number");//1 -- принять, -1 -- отклонить  
  
  флОк:=0;
  Т:=Table.Create();
  Т.SetSourceName("ОтчетПоОбновлению");
  оЗагол:="Отчет по обновлениям реализаций";
  оСвойства:=глСвойстваПечатиПростые();
  Т.CopyByX("v1",1);
  Try
    i:=0;
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Тч.GetLine(i);
      If Pos("=====================",Стр)<>1 Then
        Continue;
      EndIf;
      i:=i+1;
      Ид3:=Тч.GetLine(i);
      ВИд3:=UpperCase(Ид3);
      i:=i+1;
      Ид2:=Тч.GetLine(i);
      ВИд2:=UpperCase(Ид2);
      
      Form.StatusText("Обработка результата и обновление документов "+i+" из "+Тч.Size()+"...");
      
      //Загрузка текста пакета
      СтрТекст:="";
      СтрТекст0:="";
      While i<Тч.Size() Do
        i:=i+1;
        Стр:=Тч.GetLine(i);
        
        If Pos("=====================",Стр)=1 Then
          i:=i-1;
          Break;
        EndIf;
        If _And(pos(_NEWLINE,Стр)=0,pos(chr(10),Стр)>0) Then
          Стр:=Replace(Стр,Chr(10),_NEWLINE);
        EndIf;
        AppendStringToBufferedString(СтрТекст0,Стр+_NEWLINE);
        //Делим длинные строки для удобства пользователя, защита от результата с остатками...
        If Length(СтрТекст)<250000 Then
          While Стр<>"" Do
            Стр2:=TearStr(Стр,_NEWLINE);
            If (Length(Стр2)<250000)And(Length(СтрТекст)<250000) Then
              While Length(Стр2)>250 Do
                AppendStringToBufferedString(СтрТекст,Left(Стр2,250)+_NEWLINE);
                Стр2:=Mid(Стр2,251);
              EndDo;
            EndIf;  
            AppendStringToBufferedString(СтрТекст,Стр2+_NEWLINE);
          EndDo;
        Else
          AppendStringToBufferedString(СтрТекст,Стр+_NEWLINE);
        EndIf;  
      EndDo;

//Поиск по GUID//Поиск по GUID//Поиск по GUID//Поиск по GUID//Поиск по GUID//Поиск по GUID//Поиск по GUID
      ФлПродолжитьПоискПоИД3:=0;
      ФлДокументНайден:=0;
      If _And(ВИд2<>"",ТбДокументы.FindAndGoto(ВИд2,,"зИд2")>0) Then
        ФлДокументНайден:=1;
        зДок:=ТбДокументы.зДок.Copy();
        пДок:=зДок;
        пДокР:=зДок;
        пК:=зДок.Контрагент;
        пКР:=пК;
        ФлТекущий:=оРеализации.FindAndGoto(зДок,,"зДок")>0;
  
        локИд2:=UpperCase(Trim(зДок.УникальныйИдентификатор2));
        локИд3_0:=UpperCase(Trim(зДок.УникальныйИдентификатор3));
        ФлПодтвержениеОтправленоЖдемКвитанцию:=Left(локИд3_0,1)="+";
        ФлОсобыеОперации:=Left(локИд3_0,1)="%";
        ФлОтмененныйПодтвержениеОтправленоЖдемКвитанцию:=Left(локИд3_0,1)="-";
        ФлОтмененныйОтменаОтправленаЖдемКвитанцию:=Left(локИд3_0,1)="*";
        локИд3:=Mid(локИд3_0,2);
        
        If локИд2<>ВИд2 Then
          пСтатус:="Внутренняя ошибка при обновлении реализаций (1), пожалуйста обратитесь к разработчику!";
          Т.CopyByX("v4",1);
          Continue;
        EndIf;
        
        If ФлТекущий Then
          оРеализации.ТекстОтвета:=СтрТекст;
          оРеализации.тОшибка:="Доступно входящее сообщение";
        EndIf;  
        
        If _And(ФлПодтвержениеОтправленоЖдемКвитанцию,Pos("<DocType>ConfirmRepealWB</DocType>",СтрТекст0)>0,Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0) Then
          //Принят акт отказа на акт отказа клиента от закрытой накладной, вернем накладной статус "="
          If ЗаписатьВРеализацию("","="+локИд3,зДок,,0) Then
            Logs.Write("Акт отказа от акта отказа принят сервером: "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
            If ФлТекущий Then
              оРеализации.Статус:="Документ закрыт";
              ИконкаРеализации(оРеализации,"","="+локИд3);
              оРеализации.АктСтроки:="";
              оРеализации.тАкт:="";
            EndIf;  
            ТУдалить.AddString(локИд2);
            ТУдалить.AddString(локИд3);
            ТУдалить.AddString("$$$"+локИд3);
            ПринятоКлиентами:=ПринятоКлиентами+1;
            пСтатус:="Мы отказались от попытки клиента отменить закрытие накладной";
            Т.CopyByX("v2",1);
          Else
            пСтатус:="Ошибка записи в документ!";
            Т.CopyByX("v4",1);
            If ФлТекущий Then
              оРеализации.тОшибка:="Ошибка при обновлении реализации";
            EndIf;  
          EndIf;
        ElseIf _And(ФлОтмененныйОтменаОтправленаЖдемКвитанцию,Pos("<DocType>ConfirmRepealWB</DocType>",СтрТекст0)>0,Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0) Then
          //Принят акт отказа на акт отказа клиента от отмененной ранее накладной, вернем накладной статус "#"
          If ЗаписатьВРеализацию("","#"+локИд3,зДок,,0) Then
            Logs.Write("Акт отказа от акта отказа отмененного документа принят сервером: "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
            If ФлТекущий Then
              КолОтклоненныхРеализаций:=КолОтклоненныхРеализаций+1;
              оРеализации.Статус:="Документ отклонен";
              ИконкаРеализации(оРеализации,"","#"+локИд3);
              оРеализации.АктСтроки:="";
              оРеализации.тАкт:="";
            EndIf;  
            ТУдалить.AddString(локИд2);
            ТУдалить.AddString(локИд3);
            ТУдалить.AddString("$$$"+локИд3);
            ПолныйОтказ:=ПолныйОтказ+1;
            пСтатус:="Мы отказались от попытки клиента отменить отмену документа";
            Т.CopyByX("v2",1);
          Else
            пСтатус:="Ошибка записи в документ!";
            Т.CopyByX("v4",1);
            If ФлТекущий Then
              оРеализации.тОшибка:="Ошибка при обновлении реализации";
            EndIf;  
          EndIf;
        ElseIf _And(ФлОтмененныйПодтвержениеОтправленоЖдемКвитанцию,Pos("<DocType>ConfirmRepealWB</DocType>",СтрТекст0)>0,Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0) Then
          ОтмененныйПодтвержениеОтправленоЖдемКвитанцию(зДок,локИд2,локИд3,ФлТекущий,ТУдалить,ОтправленоНаСервер);
        ElseIf ФлОсобыеОперации Then
          If (not ОсобыеОперацииОтказа(зДок,ТУдалить,ПолныйОтказ,НеПринятоНаСервере,Ид3,локИд2,СтрТекст0))And(Pos("<Conclusion>Rejected</Conclusion>",СтрТекст0)=0) Then
            ФлДокументНайден:=0;//Особые операции могут быть найдены по GUID и по RegID, создадим возможность поиска по RegID
          EndIf;
        ElseIf (Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0)And(Pos("<WBRegId>",СтрТекст0)>0)And(Pos("<OperationResult>Accepted</OperationResult>",СтрТекст0)>0) Then
          СтрТекст0Копия:=СтрТекст0;
          //Принята новая реализация
          флТип2:=Pos("<TTNInformF2Reg>",СтрТекст0)>0;
          TearStr(СтрТекст0,"<WBRegId>");
          СтрИД:=UpperCase(TearStr(СтрТекст0,"</WBRegId>"));
          If _And(Pos("<Content>",СтрТекст0)=0,Pos("<Content />",СтрТекст0)=0) Then
            If ФлТекущий Then
              оРеализации.тОшибка:="Отсутствует тег <Content>";
            EndIf;  
            пСтатус:="Ошибка формата входящего сообщения";
            Message("Для документа "+зДок+" ошибка формата: отсутствует тег <Content>!","!");
            Т.CopyByX("v4",1);
            Continue;
          EndIf;
          //Создание таблицы движений
          аПольз:="";аКомп:="";аДата:="";
          If not зДок.Lock(аПольз,аКомп,аДата) Then
            Message("Документ "+зДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выполнить операцию!","!");
          Else
            зДок.Reload();
            Try
              ТДок:=зДок.LineParts("Номенклатура").Copy();
              
              Фл:=1;
              ТабСтроки:=Tab.Create("Номенклатура,Партия");
              ТабСтроки.AddColumn("НомерСтрокиДокумента",,"Number");
              aTab:=зДок.LoadStorage("ОстаткиТМЦ");
              aTab.Select();
              While aTab.Next() Do
                ТабСтроки.AddLine("Номенклатура,Партия,НомерСтрокиДокумента",aTab.Номенклатура,aTab.Партия,0);
                If aTab.Партия.Selected()<>0 Then
                  If ТДок.FindAndGoto(aTab.Партия,,"Партия")>0 Then
                    ТабСтроки.НомерСтрокиДокумента:=ТДок.CurLine;
                  ElseIf ТДок.FindAndGoto(aTab.Номенклатура,,"Номенклатура")>0 Then
                    ТабСтроки.НомерСтрокиДокумента:=ТДок.CurLine;
                  Else
                    пСтатус:="В движениях документа присутствует номенклатура (4) "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") отсутвующая в строках документа, документ не обновлен "+зДок+"!";
                    Т.CopyByX("v4",1);
                    Фл:=0;
                    Break;
                  EndIf;
                ElseIf ТДок.FindAndGoto(aTab.Номенклатура,,"Номенклатура")>0 Then
                  ТабСтроки.НомерСтрокиДокумента:=ТДок.CurLine;
                Else
                  пСтатус:="В движениях документа присутствует номенклатура (5) "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") отсутвующая в строках документа, документ не обновлен "+зДок+"!";
                  Т.CopyByX("v4",1);
                  Фл:=0;
                  Break;
                EndIf;
              EndDo;
              If not Фл Then
                Message(пСтатус+" Обратитесь к администратору!","!");
                Continue;
              EndIf;
              
              
              aTab:=зДок.LineParts("Номенклатура");
              If Pos("<Content>",СтрТекст0)>0 Then
                //Заполнение номеров исходящих справок Б
                Фл:=1;
                TearStr(СтрТекст0,"<Content>");
                While Pos("<Position>",СтрТекст0)>0 Do
                  TearStr(СтрТекст0,"<Position>");
                  Стр2:=TearStr(СтрТекст0,"</Position>");
                  If (Pos("<Identity>",Стр2)>0)And((Pos("<InformBRegId>",Стр2)>0)Or(Pos("<InformF2RegId>",Стр2)>0)) Then
                    Стр3:=Стр2;
                    TearStr(Стр3,"<Identity>");
                    Стр3:=Number(TearStr(Стр3,"</Identity>"));
                    If (Стр3<1)Or(Стр3>ТабСтроки.Size()) Then
                      пСтатус:="Входящая регистрация содержит ошибочную (2) позицию, документ не обновлен "+зДок+"!";
                      Т.CopyByX("v4",1);
                      Фл:=0;
                      Break;
                    EndIf;
                    ТабСтроки.CurLine:=Стр3;
                    If ТабСтроки.НомерСтрокиДокумента=0 Then
                      пСтатус:="Входящая регистрация содержит ошибочную (6) позицию, документ не обновлен "+зДок+"!";
                      Т.CopyByX("v4",1);
                      Фл:=0;
                      Break;
                    EndIf;
                    aTab.CurLine:=ТабСтроки.НомерСтрокиДокумента;
                    
                    Стр3:=Стр2;
                    If not флТип2 Then
                      TearStr(Стр3,"<InformBRegId>");
                      Стр3:=Trim(TearStr(Стр3,"</InformBRegId>"));
                    Else
                      TearStr(Стр3,"<InformF2RegId>");
                      Стр3:=Trim(TearStr(Стр3,"</InformF2RegId>"));
                    EndIf;
                    If Стр3="" Then
                      пСтатус:="Входящая регистрация содержит ошибочную (3) позицию, документ не обновлен "+зДок+"!";
                      Т.CopyByX("v4",1);
                      Фл:=0;
                      Break;
                    EndIf;
                  Else
                    пСтатус:="Входящая регистрация содержит ошибочную (1) позицию, документ не обновлен "+зДок+"!";
                    Т.CopyByX("v4",1);
                    Фл:=0;
                    Break;
                  EndIf;
                EndDo;
              EndIf;
              
              If not Фл Then
                If глРаботаетРобот Then
                  If AskQuestion("Произошли критические ошибки при загрузке реализации, реализация была изменена после отправки! Вы можете игнорировать ошибки, но возможны дальнейшие проблемы "+
                      "при работе с этим документом. Вы должны точно знать, что делаете. Продолжить?",Q_QUESTION+Q_YESNO)=R_YES Then
                    Фл:=1;
                  EndIf;
                EndIf;
                If not Фл Then
                  If ФлТекущий Then
                    оРеализации.тОшибка:="Ошибка при обновлении реализации";
                  EndIf;  
                  Continue;
                EndIf;
              EndIf;
              
              If ЗаписатьВРеализацию("","!"+СтрИД,зДок,,0) Then
                Logs.Write("Сервер принял документ: "+зДок+", ID: "+СтрИД+?(локИд3="",""," ("+локИд3+")")+", GUID: "+локИд2,зДок,"ЕГАИС",0);
                ОтправленоНаСервер:=ОтправленоНаСервер+1;
                If ФлТекущий Then
                  КолНеОтпрРеализаций:=Max(0,КолНеОтпрРеализаций-1);
                  оРеализации.Статус:="Ожидаем акт клиента";
                  оРеализации.тОшибка:="Нажмите для просмотра результата";
                  ИконкаРеализации(оРеализации,"","!"+СтрИД);
                EndIf;  
                ТУдалить.AddString(Ид2);
                //Если клиент успел ответить на запрос до того, как оператор забрал ответ сервера, что документ отправлен, этот ответ тоже содержится в этом пакете
                //     поэтому мы продолжим работу с этим эе пакетом в сл. блоке, который ищет по Ид3
                ФлПродолжитьПоискПоИД3:=1;
                ТбДокументы.AddLine("зДок,зИд3",зДок,СтрИД);
                СтрТекст0:=СтрТекст0Копия;
                ВИд3:=СтрИД;
                Ид3:=СтрИД;
                пСтатус:="Сервер принял документ";
                Т.CopyByX("v2",1);
              Else
                пСтатус:="Ошибка записи в документ!";
                Т.CopyByX("v4",1);
                If ФлТекущий Then
                  оРеализации.тОшибка:="Ошибка при обновлении реализации";
                EndIf;  
              EndIf;
            Finally
              зДок.Unlock();
            EndTry;
          EndIf;
        ElseIf (Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0)And(Pos("<OperationResult>Rejected</OperationResult>",СтрТекст0)>0) Then
          //Отрицательные остатки и прочее
          If ФлТекущий Then
            оРеализации.тОшибка:="Ошибка сервера, нажмите для просмотра";
          EndIf;  
          //Ид:=?(ФлОсобыеОперации,"#"+локИд3,0);
          If ЗаписатьВРеализацию("",,зДок,,0) Then
            Logs.Write("Сервер отклонил документ(2): "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
            If ФлТекущий Then
              ИконкаРеализации(оРеализации,"",локИд3_0);
              оРеализации.Статус:=СтатусРеализации("",локИд3_0);
            EndIf;  
            ТУдалить.AddString(Ид2);
            пСтатус:="Сервер отклонил документ";
            Т.CopyByX("v2",1);
            НеПринятоНаСервере:=НеПринятоНаСервере+1;
          Else
            Message("Ошибка записи в документ "+зДок+"!","!");
          EndIf;
        ElseIf Pos("<Conclusion>Rejected</Conclusion>",СтрТекст0)>0 Then
          If ФлТекущий Then
            оРеализации.тОшибка:="Ошибка сервера, нажмите для просмотра";
          EndIf;
          локИд3_0:=?(ФлОсобыеОперации,"!"+локИд3,0);
          If ФлПодтвержениеОтправленоЖдемКвитанцию Then
            локИд3_0:="="+локИд3;//Возвращает статус "закрыт"
          EndIf;
          If ЗаписатьВРеализацию("",локИд3_0,зДок,,0) Then
            If ФлОсобыеОперации Then
              Logs.Write("Сервер отклонил акт на отклонение ("+?(ФлПодтвержениеОтправленоЖдемКвитанцию,"возвращен статус закрыт","возвращен статус в ожидании")+"): "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
            Else
              Logs.Write("Сервер отклонил документ(1): "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
            EndIf;  
            If ФлТекущий Then
              ИконкаРеализации(оРеализации,"",локИд3_0);
              оРеализации.Статус:=СтатусРеализации("",локИд3_0);
            EndIf;  
            ТУдалить.AddString(Ид2);
            If ФлОсобыеОперации Then
              пСтатус:="Сервер отклонил акт на отклонение";
            Else
              пСтатус:="Сервер отклонил документ";
            EndIf;  
            Т.CopyByX("v4",1);
            НеПринятоНаСервере:=НеПринятоНаСервере+1;
          Else
            Message("Ошибка записи в документ "+зДок+"!","!");
          EndIf;
        Else
          пСтатус:="Неизвестный ответ сервера";
          Т.CopyByX("v4",1);
          If ФлТекущий Then
            оРеализации.тОшибка:="Неопознанный ответ сервера, нажмите для просмотра";
          EndIf;
        EndIf;
      EndIf;
      
//Поиск по RegID//Поиск по RegID//Поиск по RegID//Поиск по RegID//Поиск по RegID//Поиск по RegID//Поиск по RegID
      If _And(ВИд3<>"",not ФлДокументНайден,ТбДокументы.FindAndGoto(ВИд3,,"зИд3")>0) Then
        ФлДокументНайден:=1;
        зДок:=ТбДокументы.зДок;
        пДок:=зДок;
        пДокР:=зДок;
        пК:=зДок.Контрагент;
        пКР:=пК;
        ФлТекущий:=оРеализации.FindAndGoto(зДок,,"зДок")>0;
        
        локИд2:=UpperCase(Trim(зДок.УникальныйИдентификатор2));
        локИд3:=UpperCase(Trim(зДок.УникальныйИдентификатор3));
        ФлПодтвержениеОтправленоЖдемКвитанцию:=Left(локИд3,1)="+";
        ФлОсобыеОперации:=Left(локИд3,1)="%";
        ФлОтмененныйПодтвержениеОтправленоЖдемКвитанцию:=Left(локИд3,1)="-";
        ФлОтказОтЗакрытой:=Left(локИд3,1)="=";
        ФлОтказОтОтклоненной:=Left(локИд3,1)="#";
        локИд3:=Mid(локИд3,2);
        
        If локИд3<>ВИд3 Then
          пСтатус:="Внутренняя ошибка при обновлении реализаций (2), пожалуйста обратитесь к разработчику!";
          Т.CopyByX("v4",1);
          Continue;
        EndIf;
        
        If ФлТекущий Then
          оРеализации.ТекстОтвета:=СтрТекст;
          оРеализации.тОшибка:="Доступно входящее сообщение";
        EndIf;  


        //Ответ сервера при отсылке реализации
        If _Or(ФлОтказОтЗакрытой,ФлОтказОтОтклоненной) Then
          //RequestRepealWB
          //<qp:RequestNumber>ОМ00030803</qp:RequestNumber>
          //<qp:RequestDate>2016-07-28T12:00:00</qp:RequestDate>
          //<qp:WBRegId>TTN-0048644872</qp:WBRegId>
          If (Pos("<RequestNumber>",СтрТекст0)>0)And(Pos("<RequestDate>",СтрТекст0)>0)And(Pos("<WBRegId>",СтрТекст0)>0)And(Pos("RequestRepealWB",СтрТекст0)>0) Then
            ТабОтклон.AddLine("Документ,НомерЕГАИС,Принять",зДок,ВИд3,0);
            ОтклоняемыхДокументов:=ОтклоняемыхДокументов+1;
          Else
            пСтатус:="Неизвестный ответ сервера";
            Т.CopyByX("v4",1);
            If ФлТекущий Then
              оРеализации.тОшибка:="Неопознанный ответ сервера, нажмите для просмотра";
            EndIf;  
          EndIf;
        ElseIf _And(ФлОтмененныйПодтвержениеОтправленоЖдемКвитанцию,Pos("<DocType>ConfirmRepealWB</DocType>",СтрТекст0)>0,Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0) Then
          ОтмененныйПодтвержениеОтправленоЖдемКвитанцию(зДок,локИд2,локИд3,ФлТекущий,ТУдалить,ОтправленоНаСервер);
        ElseIf ФлОсобыеОперации Then
          If not ОсобыеОперацииОтказа(зДок,ТУдалить,ПолныйОтказ,НеПринятоНаСервере,Ид3,локИд2,СтрТекст0) Then
            пСтатус:="Неизвестный ответ сервера";
            Т.CopyByX("v4",1);
            If ФлТекущий Then
              оРеализации.тОшибка:="Неопознанный ответ сервера, нажмите для просмотра";
            EndIf;  
          EndIf;  
        ElseIf ФлПодтвержениеОтправленоЖдемКвитанцию Then
          If (Pos("<Conclusion>Accepted</Conclusion>",СтрТекст0)>0)And(Pos("<DocType>WayBillTicket</DocType>",СтрТекст0)>0) Then
            //Подтвержение того, что подтверждение на акт расхождения принято
            If ЗаписатьВРеализацию("","="+Ид3,зДок,,0) Then
              Logs.Write("Клиент принял документ: "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
              If ФлТекущий Then
                оРеализации.Статус:="Документ закрыт";
                ИконкаРеализации(оРеализации,"","="+Ид3);
                оРеализации.АктСтроки:="";
                оРеализации.тАкт:="";
              EndIf;  
              ТУдалить.AddString(Ид3);
              ТУдалить.AddString(локИд2);
              ПринятоКлиентами:=ПринятоКлиентами+1;
              пСтатус:="Клиент принял документ";
              Т.CopyByX("v2",1);
            Else
              пСтатус:="Ошибка записи в документ!";
              Т.CopyByX("v4",1);
              If ФлТекущий Then
                оРеализации.тОшибка:="Ошибка при обновлении реализации";
              EndIf;  
            EndIf;
          EndIf;
        //<wa:IsAccept>Accepted</wa:IsAccept> -- двоякий стандатр не дает проверять нормально
        //<wa:IsAccept> -- не обязательный реквизит
        //Pos("<IsAccept>Accepted</",СтрТекст0)>0
        ElseIf ((Pos("<WayBillAct_v3>",СтрТекст0)>0)Or(Pos("<WayBillAct_v4>",СтрТекст0)>0)Or(Pos("<WayBillAct_v2>",СтрТекст0)>0))And
            (Pos("<ACTNUMBER>",СтрТекст0)>0)And(Pos("<IsAccept>Rejected</IsAccept>",СтрТекст0)=0) Then
          //Ответный акт клиента -- акт расхождения или принятия
          СтрТекст1:=СтрТекст0;
          TearStr(СтрТекст1,"opt/out/WayBillAct");//Иногда в ЕГАИС дублируются накладные прихода, после чего клиент может прислать акт.
          //Предусмотреть эту проблему ЕГАИС можно только удалив лишнее из связки
          If СтрТекст1<>"" Then
            СтрТекст0:=СтрТекст1;
          EndIf;
          
          ФлАкт:=Pos("<RealQuantity>",СтрТекст0)>0;
          ФлПустой:=Pos("<Content/>",СтрТекст0)+Pos("<Content />",СтрТекст0)>0;
          
          //TearStr(СтрТекст0,"<Content");
          //Стр1:=TearStr(СтрТекст0,">")+">";
          //ФлПустой:=Pos("/>",Стр1)>0;
          
          СтрТекст0:=Trim(TearStr(СтрТекст0,"</Content>"));
          If (СтрТекст0="")Or(ФлПустой)Or(Pos("<RealQuantity>",СтрТекст0)=0) Then
            If ФлАкт Then
              пСтатус:="Неверно составленный акт!";
              Т.CopyByX("v4",1);
              If ФлТекущий Then
                оРеализации.тОшибка:="Ошибка при принятии документа";
              EndIf;  
            ElseIf ЗаписатьВРеализацию("","="+Ид3,зДок,,0) Then
              //Принято без изменений
              Logs.Write("Клиент принял документ: "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
              If ФлТекущий Then
                оРеализации.Статус:="Документ закрыт";
                ИконкаРеализации(оРеализации,"","="+Ид3);
                оРеализации.АктСтроки:="";
                оРеализации.тАкт:="";
              EndIf;
              ТУдалить.AddString(Ид3);
              ПринятоКлиентами:=ПринятоКлиентами+1;
              пСтатус:="Клиент принял документ";
              Т.CopyByX("v2",1);
            Else
              пСтатус:="Ошибка записи в документ!";
              Т.CopyByX("v4",1);
              If ФлТекущий Then
                оРеализации.тОшибка:="Ошибка при обновлении реализации";
              EndIf;  
            EndIf;
          Else
            //Загрузка акта
            ТабСтроки:=Tab.Create("Номер,СправкаБ,Марки");
            ТабСтроки.AddColumn("Количество",,"Number");
            While Pos("<Position>",СтрТекст0)>0 Do
              TearStr(СтрТекст0,"<Position>");
              Стр:=TearStr(СтрТекст0,"</Position>");
              If (Pos("<Identity>",Стр)>0)And(Pos("<RealQuantity>",Стр)>0)And(Pos("<InformF2RegId>",Стр)>0) Then
                Стр2:=Стр;
                TearStr(Стр2,"<Identity>");
                Стр2:=TearStr(Стр2,"</Identity>");
                ТабСтроки.AddLine("Номер",Стр2);
                
                Стр2:=Стр;
                TearStr(Стр2,"<RealQuantity>");
                Стр2:=TearStr(Стр2,"</RealQuantity>");
                ТабСтроки.Количество:=Number(Trim(Стр2));
                
                Стр2:=Стр;
                TearStr(Стр2,"<InformF2RegId>");
                Стр2:=TearStr(Стр2,"</InformF2RegId");
                ТабСтроки.СправкаБ:=Стр2;
                
                If Pos("<MarkInfo>",Стр)>0 Then
                  Стр2:=Стр;
                  TearStr(Стр2,"<MarkInfo>");
                  Стр2:=Trim(TearStr(Стр2,"</MarkInfo>"));
                  Стр3:="";
                  While Pos("<amc>",Стр2)>0 Do
                    TearStr(Стр2,"<amc>");
                    Стр4:=Trim(TearStr(Стр2,"</amc>"));
                    AppendStringToBufferedString(Стр3,?(Стр3="","",Chr(1))+Стр4);
                  EndDo;
                  ТабСтроки.Марки:=Стр3;
                EndIf;
              Else
                пСтатус:="Пропущена ошибочная строка акта расхождения!";
                Т.CopyByX("v4",1);
              EndIf;
            EndDo;
            If ФлТекущий Then
              оРеализации.АктСтроки:=ТабСтроки;
              оРеализации.тАкт:="Клиент прислал акт расхождений";
            EndIf;  
            АктРасхождений:=АктРасхождений+1;
            пСтатус:="Клиент прислал акт расхождений!";
            Т.CopyByX("v4",1);
          EndIf;
          
        ElseIf ((Pos("<WayBillAct_v3>",СтрТекст0)>0)Or(Pos("<WayBillAct_v2>",СтрТекст0)>0)Or(Pos("<WayBillAct_v4>",СтрТекст0)>0))And
            (Pos("<IsAccept>Rejected</IsAccept>",СтрТекст0)>0)And(Pos("<OperationResult>Accepted</OperationResult>",СтрТекст0)>0) Then
          //<OperationResult>Accepted</OperationResult> -- удаляет также ticket
          If ЗаписатьВРеализацию("","#"+Ид3,зДок,,0) Then
            Logs.Write("Клиент отклонил документ: "+зДок+", ID: "+локИд3+", GUID: "+локИд2,зДок,"ЕГАИС",0);
            If ФлТекущий Then
              КолОтклоненныхРеализаций:=КолОтклоненныхРеализаций+1;
              оРеализации.Статус:="Клиент отклонил документ";
              ИконкаРеализации(оРеализации,"","#"+Ид3);
              оРеализации.тОшибка:="Получить текст сообщения";
            EndIf;  
            ТУдалить.AddString(Ид3);
            ПолныйОтказ:=ПолныйОтказ+1;
            пСтатус:="Клиент отклонил документ!";
            Т.CopyByX("v4",1);
          Else
            пСтатус:="Ошибка записи в документ!";
            Т.CopyByX("v4",1);
            If ФлТекущий Then
              оРеализации.тОшибка:="Ошибка при обновлении реализации";
            EndIf;  
          EndIf;
        Else
          пСтатус:="Неизвестный ответ сервера";
          Т.CopyByX("v4",1);
          If ФлТекущий Then
            оРеализации.тОшибка:="Неопознанный ответ сервера, нажмите для просмотра";
          EndIf;  
        EndIf;
      EndIf;  
      If not ФлДокументНайден Then
        пК:=GetNothing();
        пКР:=пК;
        ТипДок:="";
        If pos("<DocType>",СтрТекст0)>0 Then
          Стр:=СтрТекст0;
          tearStr(Стр,"<DocType>");
          ТипДок:=tearStr(Стр,"</DocType>");
        EndIf;
        If pos(",QueryRests,",","+ТипДок+",")=0 Then
          пДок:=?(ТипДок<>"",ТипДок+":","")+ВИд3+?(ВИд3<>"",", ")+ВИд2;
          пДокР:=GetNothing();
          пСтатус:="Документ ЕГАИС не найден в базе! Обратитесь к администратору системы!";
          ОшибочныхДокументов:=ОшибочныхДокументов+1;
          Т.CopyByX("v4",1);
        EndIf;
      EndIf;
    EndDo;//Цикл по строкам полученного файла
  
    флОк:=1;
  Finally
    If not флОк Then
      глПечатнаяФормаОтчета(Т,Param,оЗагол);
    EndIf;  
    If ТУдалить.Size()>0 Then
      ВыполнитьЗапросЕГАИС(ТУдалить,"opt/in/",8,1);
    EndIf;
  EndTry;  
  флСтатусыРеализацийОбновлены:=1;
  
  If ОтправленоНаСервер+ПринятоКлиентами+АктРасхождений+ПолныйОтказ+ОшибочныхДокументов+ОтклоняемыхДокументов+НеПринятоНаСервере>0 Then
    Т.CopyByX("v3",1);
    Стр:="Обновление прошло успешно!";
    If ОтправленоНаСервер>0 Then
      Стр:=Стр+" Сервер принял "+ОтправленоНаСервер+" накладных!";
    EndIf;
    If НеПринятоНаСервере>0 Then
      Стр:=Стр+" Сервер отклонил "+НеПринятоНаСервере+" накладных!";
    EndIf;
    If ПринятоКлиентами>0 Then
      Стр:=Стр+" Клиенты приняли "+ПринятоКлиентами+" накладных!";
    EndIf;
    If АктРасхождений>0 Then
      Стр:=Стр+" Клиенты прислали "+АктРасхождений+" актов расхождений!";
    EndIf;
    If ПолныйОтказ>0 Then
      Стр:=Стр+" Клиенты отказались от "+ПолныйОтказ+" накладных!";
    EndIf;    
    If ОтклоняемыхДокументов>0 Then
      Стр:=Стр+" Ожидают подтвержения или отклонения "+ОтклоняемыхДокументов+" накладных!";
    EndIf;
    If АктРасхождений+ПолныйОтказ+ОтклоняемыхДокументов+НеПринятоНаСервере=0 Then
      Box(Стр,Q_INFORMATION);
    Else
      Box(Стр,Q_WARNING);
    EndIf;  
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Else
    Box("Обновление прошло успешно, новых данных на сервере не найдено!",Q_INFORMATION);
  EndIf;
  
  If ТабОтклон.Size()>0 Then
    aList:=List.Create();
    aList.SetByName("Таб",ТабОтклон);
    LoadModule(0,"Modules\FreeForms\УчетныеОтделы\Бухгалтерия\Отчетность\ОбработкаЕГАИС",aList,0,"Module","ПринятиеЗапросовНаОтклонение");
    If aList.GetByName("Ответ")<>1 Then
      Exit 0;
    EndIf;
  
    Фл:=0;
    Каталог:=ПодготовитьКаталог();
    ТабОтклон.Select();
    While ТабОтклон.Next() Do
      If ТабОтклон.Принять=0 Then
        Continue;
      EndIf;
      зДок:=ТабОтклон.Документ.Copy();
      ФлОтклоненныйДокумент:=Left(UpperCase(Trim(зДок.УникальныйИдентификатор3)),1)="#";
      If ТабОтклон.Принять=1 Then
        If ФлОтклоненныйДокумент Then
          Message("Приняли запрос на отмену отклонения документа "+ТабОтклон.Документ+"!","I");
        Else
          Message("Приняли запрос на отклонение документа "+ТабОтклон.Документ+"!","I");
        EndIf;
      Else
        If ФлОтклоненныйДокумент Then
          Message("Отклонили запрос на отмену отклонения документа "+ТабОтклон.Документ+"!","I");
        Else
          Message("Отклонили запрос на отклонение документа "+ТабОтклон.Документ+"!","I");
        EndIf;
      EndIf;
      Ид3:=Mid(Trim(зДок.УникальныйИдентификатор3),2);
      //зДок.DocDate
      Стр:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
        "<ns:Documents Version=""1.0"""+_NEWLINE+
        "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
        "xmlns:wt=""http://fsrar.ru/WEGAIS/ConfirmRepealWB"">"+_NEWLINE+
        "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner><ns:Document><ns:ConfirmRepealWB><wt:Header>"+_NEWLINE+
        "<wt:IsConfirm>"+?(ТабОтклон.Принять=1,"Accepted","Rejected")+"</wt:IsConfirm><wt:ConfirmNumber>"+зДок.DocNum+"_"+GetYear(зДок.DocDate)+"</wt:ConfirmNumber><wt:ConfirmDate>"+пДата2(Date())+
        "</wt:ConfirmDate><wt:WBRegId>"+Ид3+"</wt:WBRegId><wt:Note></wt:Note>"+_NEWLINE+
        "</wt:Header></ns:ConfirmRepealWB></ns:Document></ns:Documents>";
          
      аПольз:="";аКомп:="";аДата:="";
      If not зДок.Lock(аПольз,аКомп,аДата) Then
        Message("Документ "+зДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выполнить операцию!","!");
        Continue;
      EndIf;
      Try
        СпОтвет:=List.Create();
        If not ВыполнитьЗапросЕГАИС(Стр,"opt/in/ConfirmRepealWB",5,1,СпОтвет) Then
          Exit 0;
        EndIf;
        аКодОтвета:=СпОтвет.GetByName("Результат");
        аКодОтвета:=UpperCase(Replace(аКодОтвета,"-",""));
      
        Тип:=?(ТабОтклон.Принять=1,"%","+");
        If ФлОтклоненныйДокумент Then
          Тип:=?(ТабОтклон.Принять=1,"-","*");
        EndIf;
        If ЗаписатьВРеализацию(аКодОтвета,Тип+Ид3,зДок,2,1) Then
          Logs.Write("Отправлен запрос на "+?(ТабОтклон.Принять=1,"принятие","отказ от")+" акта "+?(ФлОтклоненныйДокумент,"отмены отклонения","отклонения")+" ТТН: "+зДок+", ID: "+Ид3+", GUID: "+аКодОтвета,зДок,"ЕГАИС",0);
          If оРеализации.FindAndGoto(зДок,,"зДок")>0 Then
            оРеализации.Статус:="Отправлен на сервер";
          EndIf;  
          Фл:=1;
        EndIf;
      Finally  
        зДок.Unlock();
      EndTry;  
    EndDo;
    If Фл Then
      Box("Были сделаны операции над документами, рекомендуется обновить таблицу документов!",Q_INFORMATION);
    EndIf;  
  EndIf;
EndFunction

Function ОтчетПоРеализациям()
  aList:=List.Create();
  aList.SetByName("оЮЛ",List.Create(Form.оМагазин.Value.ЮрЛицо));
  aList.SetByName("НачДата",Form.НачДата.Value);
  aList.SetByName("КонДата",Form.КонДата.Value);
  LoadModule(0,"Modules\FreeForms\УчетныеОтделы\Бухгалтерия\Отчетность\ОбработкаЕГАИС",aList,0,"ОтчетПоРеализациям","ОтчетПоРеализациям");
EndFunction

Function ЗаблокироватьВозвратыРеализации(зДок,флПакетная=0,ФлТакжеСамДокумент=0)
  ТБлокировка:=Tab.Create("зДок,Номер");
  If ФлТакжеСамДокумент Then
    аПольз:="";аКомп:="";аДата:="";
    If not зДок.Lock(аПольз,аКомп,аДата) Then
      If флПакетная=0 Then
        Box("Документ "+зДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выгрузить его в ЕГАИС!",Q_STOP);
      Else
        Message("Документ "+зДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выгрузить его в ЕГАИС!","!");
      EndIf;
      Exit 0;
    EndIf;
    ТБлокировка.AddLine("зДок,Номер",зДок,зДок.DocNum+"@"+зДок.DocDate);
    зДок.Reload();
  EndIf;  
  aList:=зДок.LoadLinkedDocuments(1);
  For i:=1 To aList.Size() Do 
    бДок:=aList.Get(i);
    If бДок.DBName()<>"ВозвратОтПокупателя" Then
      Continue;
    EndIf;
    If бДок.Status()<2 Then
      Continue;
    EndIf;
    аПольз:="";аКомп:="";аДата:="";
    If not бДок.Lock(аПольз,аКомп,аДата) Then
      If флПакетная=0 Then
        Box("Документ "+бДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выгрузить его реализацию в ЕГАИС!",Q_STOP);
      Else
        Message("Документ "+бДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выгрузить его реализацию в ЕГАИС!","!");
      EndIf;
      If ФлТакжеСамДокумент Then
        зДок.Unlock();
      EndIf;      
      Exit 0;
    EndIf;
    бДок.Reload();
    ТБлокировка.AddLine("зДок,Номер",бДок,бДок.DocNum+"@"+бДок.DocDate);
  EndDo;  
  
  Exit ТБлокировка;
EndFunction

Function ОтформатироватьМарки(СтрМарки,ByRef спИспЯщики)
  //СтрМарки: <Ящик>Chr(2)<Марка>Chr(1)<Ящик>Chr(2)<Марка>...
  //Выход: <ce:boxpos><ce:boxnumber>...</ce:boxnumber><ce:amclist><ce:amc>...</ce:amc><ce:amc>...</ce:amc></ce:amclist></ce:boxpos><ce:boxpos>...</ce:boxpos>
  СтрМарки:=SortStringValues(СтрМарки,Chr(1));
  aList:=List.Create();
  aList.FromString(СтрМарки,Chr(1));
  Стр:="";
  Ящики:="";
  Ящик:="";
  For i:=1 To aList.Size() Do
    Марка:=aList.Get(i);
    Ящик2:="";
    If Pos(Chr(2),Марка)>0 Then
      Ящик2:=TearStr(Марка,Chr(2));
    EndIf;  
    if (Ящик<>Ящик2)Or(i=1) Then
      If i<>1 Then
        Стр:=Стр+"</ce:amclist></ce:boxpos>";
      EndIf;
      Стр:=Стр+"<ce:boxpos>"+?(Ящик2="","","<ce:boxnumber>"+Ящик2+"</ce:boxnumber>")+"<ce:amclist>";
    EndIf;
    Ящик:=Ящик2;
    Ящики:=Ящики+?(Ящики<>"",Chr(1))+Ящик;
    Стр:=Стр+"<ce:amc>"+Марка+"</ce:amc>";
  EndDo;
  If Стр<>"" Then
    Стр:=Стр+"</ce:amclist></ce:boxpos>";
  EndIf;
  Ящики:=GroupStringValues(Ящики,Chr(1));
  спИспЯщики:=List.Create();
  спИспЯщики.FromString(Ящики,Chr(1));
  Exit Стр;
EndFunction

Function ОтформатироватьМарки2(СтрМарки)
  //СтрМарки: <Ящик>Chr(2)<Марка>Chr(1)<Ящик>Chr(2)<Марка>...
  //Выход: <ce:amc>...</ce:amc><ce:amc>...</ce:amc>
  aList:=List.Create();
  aList.FromString(СтрМарки,Chr(1));
  Стр:="";
  For i:=1 To aList.Size() Do
    Марка:=aList.Get(i);
    If Pos(Chr(2),Марка)>0 Then
      TearStr(Марка,Chr(2));
    EndIf;  
    AppendStringToBufferedString(Стр,"<ce:amc>"+Марка+"</ce:amc>");
    //Стр:=Стр+"<ce:amc>"+Марка+"</ce:amc>";
  EndDo;
  Exit Стр;
EndFunction

Function ОтформатироватьЯщики(СтрЯщики,спИспЯщики)
  //СтрЯщики: <ЯщикРодитель>Chr(2)<Ящик>Chr(1)<ЯщикРодитель>Chr(2)<Ящик>...
  //Выход: <ce:boxnum>...</ce:boxnum><ce:bl><ce:boxnum>...</ce:boxnum><ce:boxnum>...</ce:boxnum></ce:bl>
  //Возвращаем только двухуровневую систему
  aList:=List.Create();
  aList.FromString(СтрЯщики,Chr(1));
  СпРодители:=List.Create();
  For i:=1 To aList.Size() Do
    Ящик:=aList.Get(i);
    ЯщикРод:=TearStr(Ящик,Chr(2));
    If спИспЯщики.Find(Ящик)=0 Then
      Continue;
    EndIf;
    СпРодители.Add(ЯщикРод,Ящик);
  EndDo;
  СпРодители.Sort();
  
  ФлРодитель:=0;
  Стр:="";
  Род:="";
  For i:=1 To СпРодители.Size() Do
    Род2:=СпРодители.Get(i);
    Ящик:=СпРодители.GetName(i);
    if (Род<>Род2)Or(i=1) Then
      If (i<>1)And(ФлРодитель) Then
        Стр:=Стр+"</ce:bl>";
      Endif;
      If Род2<>"" Then
        ФлРодитель:=1;
        Стр:=Стр+"<ce:boxnum>"+Род2+"</ce:boxnum><ce:bl>";
      Else
        ФлРодитель:=0;
      EndIf;  
    EndIf;
    Род:=Род2;
    If Ящик<>"" Then
      Стр:=Стр+"<ce:boxnum>"+Ящик+"</ce:boxnum>";
    EndIf;  
  EndDo;
  If (Стр<>"")And(ФлРодитель) Then
    Стр:=Стр+"</ce:bl>";
  EndIf;
  
  Exit Стр;
EndFunction


//Если функция возвращает ноль, ТБлокировка содержит неверные (измененные) файлы, таблицу необходимо удалить! ()
//флФорсВозвраты=0 -- не трогать возвраты, если ТипЕГАИС возврата отличается от типаЕГАИС реализации и присваемый тип не "отправлен" и не "удален" и номер не удаляется
//               1 -- трогать возвраты в любом случае
//               2 -- не трогать возвраты, если ТипЕГАИС возврата отличается от типаЕГАИС реализации (без исключений)
//ФлПослеЗапроса=0 -- не изменяет возвраты, если была ошибка
//               1 -- если не может изменить какой-нибудь из документов, записывает в журнал, однако изменение производит
Function ЗаписатьВРеализацию(тТекст2,тТекст3=0,аДок=0,флФорсВозвраты=0,ФлПослеЗапроса=1,ТБлокировка=0)
  оРеализации:=Form.оРеализации.Value;
  ФлБлок:=0;
  If аДок=0 Then
    аДок:=оРеализации.зДок.Copy();
    ФлБлок:=1;
    аПольз:="";аКомп:="";аДата:="";
    If not аДок.Lock(аПольз,аКомп,аДата) Then
      Message("Документ "+аДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выполнить операцию!","!");
      If ФлПослеЗапроса Then
        Logs.Write("Ошибка блокировки документа "+аДок+" часть данных утеряна!",аДок,"ЕГАИС",0);
      EndIf;  
      Exit 0;
    EndIf;
    аДок.Reload();
  ElseIf аДок.isLocked()<>1 Then
    ФлБлок:=1;
    аПольз:="";аКомп:="";аДата:="";
    If not аДок.Lock(аПольз,аКомп,аДата) Then
      Message("Документ "+аДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выполнить операцию!","!");
      If ФлПослеЗапроса Then
        Logs.Write("Ошибка блокировки документа "+аДок+" часть данных утеряна!",аДок,"ЕГАИС",0);
      EndIf;  
      Exit 0;
    EndIf;
    аДок.Reload();
  EndIf;
  
  флОк:=0;
  If not ФлПослеЗапроса Then
    BeginTransaction();
  EndIf;  
  Try
    If Trim(аДок.УникальныйИдентификатор2)<>"" Then
      If тТекст2<>"" Then
        Logs.Write("Ошибка несовпадения GUID документа "+аДок+", GUID: "+тТекст2+", новый GUID: "+Trim(аДок.УникальныйИдентификатор2),аДок,"ЕГАИС",0);
        Message("Ошибка несовпадения номера запроса документа "+аДок+", документу уже задан другой номер запроса! Обратитесь к администратору!","!");
        //Exit 0;
      EndIf;
    EndIf;
  
    аДок.УникальныйИдентификатор2:=тТекст2;
    If тТекст3<>0 Then
      аСтр:=Mid(Trim(аДок.УникальныйИдентификатор3),2);
      If (аСтр<>"")And((тТекст3="")Or(Mid(тТекст3,2)<>аСтр)) Then
        If (Left(Trim(аДок.УникальныйИдентификатор3),1)="#")And(Left(тТекст3,1)="!") Then
          //разрешить: # -> !  (документ с отказом был послан заново, ЕГАИС генерирует новый номер)
        Else
          Logs.Write("Ошибка несовпадения ID документа "+аДок+", ID: "+Trim(аДок.УникальныйИдентификатор3)+", новый ID: "+тТекст3,аДок,"ЕГАИС",0);
          Message("Ошибка несовпадения номера документа "+аДок+", документу уже задан другой номер! Обратитесь к администратору!","!");
          Message("Старый номер "+Trim(аДок.УникальныйИдентификатор3)+", новый номер "+тТекст3+"!","!");
          //Exit 0;
        EndIf;
      EndIf;
      СтарЗнач:=Trim(аДок.УникальныйИдентификатор3);
      аДок.УникальныйИдентификатор3:=тТекст3;
      
      If аДок.DBName()="Реализация" Then
        aList:=аДок.LoadLinkedDocuments(1);
        For i:=1 To aList.Size() Do 
          бДок:=aList.Get(i);
          If бДок.DBName()<>"ВозвратОтПокупателя" Then
            Continue;
          EndIf;
          If бДок.Status()<2 Then
            Continue;
          EndIf;
          
          //Особые случаи:
          //1. Документ отослан (!), затем введен возврат (), затем документ принят клиентом (=) -- не менять (!<>"")
          //2. Введен возврат (), Документ отослан (!+!), затем документ принят клиентом (=) -- менять (!=!)
          //3. Документ отослан (!), затем введен возврат (), пришел акт расхождения, отправлена квит. принятия акта (+) -- ФОРСИРОВАТЬ на +
          //   3.1. акт принятия принят (=) -- менять (+=+)
          //   3.2. акт принятия отклонен (!) -- ОШИБКА! ОДНАКО, В ЭТОМ СЛУЧАЕ ПРОГРАММА НЕ ПРИНИМАЕТ АКТ, НУЖНО РАЗБИРАТЬСЯ РУКАМИ
          //4. Документ отослан (!), затем введен возврат (), пришел акт расхождения, отправлена квит. отказа от акта (%) -- не менять (!<>"")
          //   4.1. акт отказа принят (#) -- менять (# исключение)
          //   4.2. акт отказа отклонен (!) -- ОШИБКА! ОДНАКО, В ЭТОМ СЛУЧАЕ ПРОГРАММА НЕ ПРИНИМАЕТ АКТ, НУЖНО РАЗБИРАТЬСЯ РУКАМИ
          //5. Документ принят (=), введен возврат, клиент прислал отказ от принятия, оператор принял этот отказ (%) -- возврат не менять, так как большая вероятность, 
          //        что ЕГАИС откажет в принятии и возврат превратится в "=", хотя он не был отправлен.
          
          //Разрешать изменять на ! и # и " " в любом случае
          Тип:=Left(тТекст3,1);
          If (Trim(бДок.УникальныйИдентификатор3)<>СтарЗнач)And(Тип<>"!")And(Тип<>"#")And(тТекст3<>"")And(флФорсВозвраты=0) Then
            Continue;
          EndIf;
          If (Trim(бДок.УникальныйИдентификатор3)<>СтарЗнач)And(флФорсВозвраты=2) Then
            Continue;
          EndIf;
          If ТБлокировка<>0 Then
            If ТБлокировка.FindAndGoto(бДок,,"зДок")=0 Then
              Message("Возврат "+бДок+" введен после отправки документа "+аДок+"! Проверьте корректность отправки исходного документа!","!");
              Logs.Write("Ошибка обновления документа возврата (2) "+бДок+", попытка записать состояние GUID: "+Trim(тТекст3),аДок,"ЕГАИС",0);
              If not ФлПослеЗапроса Then
                Exit 0;
              EndIf;
              Continue;
            EndIf;
            бДок:=ТБлокировка.зДок;
          EndIf;
          бДок.УникальныйИдентификатор3:=тТекст3;
          If бДок.ФлагОбмена<9 Then
            бДок.ФлагОбмена:=?(бДок.Status()>1,0,1);
          EndIf;  
          If not глЗаписать(бДок,0,1) Then
            Message("Невозможно изменить документ "+бДок+". Выполните операцию заново!","!");
            If not ФлПослеЗапроса Then
              Exit 0;
            EndIf;  
            Logs.Write("Ошибка обновления документа возврата "+бДок+", попытка записать состояние GUID: "+Trim(тТекст3),аДок,"ЕГАИС",0);
          EndIf;
        EndDo;
      EndIf;
    EndIf;
    If аДок.ФлагОбмена<9 Then
      аДок.ФлагОбмена:=?(аДок.Status()>1,0,1);
    EndIf;  
    If not глЗаписать(аДок,0,1) Then
      Message("Невозможно изменить документ "+аДок+". Выполните операцию заново!","!");
      If not ФлПослеЗапроса Then
        Exit 0;
      EndIf;  
      Logs.Write("Ошибка записи документа "+аДок+" часть данных утеряна!",аДок,"ЕГАИС",0);
    EndIf;
    флОк:=1;
  Finally
    If not ФлПослеЗапроса Then
      If флОк Then
        CommitTransaction();
      Else
        RollbackTransaction();
      EndIf;
    EndIf;  
    If ФлБлок Then
      аДок.Unlock();
    EndIf;
  EndTry  
    
  Exit 1;
EndFunction


Function ВыгрузитьВсеПеремещения()
  оПеремещения:=Form.оПеремещения.Value;
  оМагазин:=Form.оМагазин.Value;
  If оПеремещения.Size()>1 Then
    Message("Удерживайте Ctrl+S, чтобы остановить выгрузку до ее завершения...","I");
  EndIf;
  aNum:=0;
  оПеремещения.Select();
  While оПеремещения.Next() Do
    If IsKeyComboActive("Ctrl+S") Then
      Message("Выгрузка остановлена!","!");
      Break;
    EndIf;
  
    зДок:=оПеремещения.зДок.Copy();
    Ид2:=Trim(зДок.УникальныйИдентификатор2);
    Ид3:=Trim(зДок.УникальныйИдентификатор3);
    If (Ид2="")And(Ид3="") Then
      aNum:=aNum+1;
      глВыгрузитьДокументПеремещенияВЕГАИС(оМагазин,зДок,оПеремещения);
    EndIf;
  EndDo;
  If aNum>0 Then
    Message("Выгрузка окончена!","!");
  EndIf;
EndFunction

Function ВыгрузитьДокументы(Тб,флПакетная,ФлНаЭкран=0)
  оРеализации:=Form.оРеализации.Value;
  оМагазин:=Form.оМагазин.Value;
  оРегИд:=оМагазин.КодТочкиЕГАИС;
  
  флВерсия4:=Form.оДругаяВерсия.Value=0;
  ЧлКоличествоВыгруженных:=0;
  ФлБылиДокументы:=0;
  If (флПакетная=1)And(Тб.Size()>1) Then
    Message("Удерживайте Ctrl+S, чтобы остановить выгрузку до ее завершения...","I");
  EndIf;
  
  Тб.Select();
  While Тб.Next() Do
    If IsKeyComboActive("Ctrl+S") Then
      Message("Выгрузка остановлена!","!");
      Break;
    EndIf;
  
    If Тб.Статус=1 Then
      Continue;
    EndIf;
    зДок:=Тб.Документ.Copy();
    
    ТБлокировка:=Tab.Create("зДок");
    Try
      аПольз:="";аКомп:="";аДата:="";
      If not зДок.Lock(аПольз,аКомп,аДата) Then
        If флПакетная=0 Then
          Box("Документ "+зДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выгрузить его в ЕГАИС!",Q_STOP);
        Else
          Message("Документ "+зДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выгрузить его в ЕГАИС!","!");
        EndIf;
        Continue;
      EndIf;
      ТБлокировка.AddLine("зДок",зДок);
      зДок.Reload();
      
      If зДок.ЮрЛицо<>оМагазин.ЮрЛицо Then
        Message("В документе "+зДок+" указано юр. лицо, не совпадающее с текущим рабочим юр. лицом! Документ был изменен!","!");
        Continue;
      EndIf;
      If оРегИд="" Then
        Message("Для магазина "+оМагазин+" не указан регистрационный код ЕГАИС! Обратитесь к администратору!","!");
        Continue;
      EndIf;
      Ид2:=Trim(зДок.УникальныйИдентификатор2);
      Ид3:=Trim(зДок.УникальныйИдентификатор3);
      If ((Ид2<>"")Or(Ид3<>""))And(флПакетная=1) Then
        Message("Документ "+зДок+" уже был отправлен в ЕГАИС, такой документ можно выгрузить только в ручном режиме. Документ пропущен!","!");
        Continue;
      EndIf;
      
      зАД:=зДок.АдресДоставки.адСсылка;
      зК:=зДок.Контрагент;
      
      If Trim(зАД.УникальныйИдентификатор2)="" Then
        Message("Для адреса "+зАД+" контрагента "+зК+" ("+зК.Code+") не указан регистрационный код ЕГАИС! Проставьте уникальный код, чтобы продолжить выгрузку!","!");
        Continue;
      EndIf;
      //ТС
      If Trim(зДок.ТранспортноеСредство)="" Then
        Message("В документе "+зДок+" не указано транспортное средство! Проставьте корректное т.с. чтобы продолжить выгрузку!","!");
        Continue;
      EndIf;
      
      ТабДок:=Tab.Create("Справки,Количество");//Таблица возвратов
      ФлЭтоВозврат:=зДок.DBName()="ВозвратПоставщику";
      ФлБылВозврат:=0;
      ТВыгружаемыеМарки:=глМаркиЗагрузитьДокумент(зДок,,1);
      
      //Учитываем возвраты
      If not ФлЭтоВозврат Then
        Фл:=1;
        aList:=зДок.LoadLinkedDocuments(1);
        For i:=1 To aList.Size() Do 
          бДок:=aList.Get(i);
          If бДок.DBName()<>"ВозвратОтПокупателя" Then
            Continue;
          EndIf;
          If бДок.Status()<2 Then
            Continue;
          EndIf;
          аПольз:="";аКомп:="";аДата:="";
          If not бДок.Lock(аПольз,аКомп,аДата) Then
            If флПакетная=0 Then
              Box("Документ "+бДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выгрузить его реализацию в ЕГАИС!",Q_STOP);
            Else
              Message("Документ "+бДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выгрузить его реализацию в ЕГАИС!","!");
            EndIf;
            Continue 2;
          EndIf;
          //ТВыгружаемыеМарки:"Партия,Ящик,Марка"
          
          //Отнимаем марки возврата, если какие-то марки есть в возврате, но нет в реализации, останавливаемся с ошибкой
          ТМаркиВозврата:=глМаркиЗагрузитьДокумент(зДок,,1);
          ТМаркиВозврата2:=ТМаркиВозврата.Copy();
          ТМаркиВозврата2.Combine(ТВыгружаемыеМарки,"Партия,Марка","SUB");
          If ТМаркиВозврата2.Size()>0 Then
            Стр:="Документ возврата "+бДок+" содержит маркировку продукции, которая отсутствовала в оригинальном документе (к примеру, "+ТМаркиВозврата2["Марка",1]+"!";
            If флПакетная=0 Then
              Box(Стр,Q_STOP);
            Else
              Message(Стр,"!");
            EndIf;
            Continue 2;
          EndIf;
          ТВыгружаемыеМарки.Combine(ТМаркиВозврата,"Партия,Марка","SUB");
          
          ТБлокировка.AddLine("зДок",бДок);
          //бДок.Reload(); -- не имеет смысла, так как мы будем использовать только движения
      
          aTab:=бДок.LoadStorage("ОстаткиТМЦ");
          If aTab.Size()=0 Then
            If флПакетная=0 Then
              Box("Документ "+бДок+" имеет некорректные движения. Обратитесь к администратору!",Q_STOP);
            Else
              Message("Документ "+бДок+" имеет некорректные движения. Обратитесь к администратору!","!");
            EndIf;
            Continue 2;
          EndIf;
          
          aTab.Select();
          While aTab.Next() Do
            If aTab.Номенклатура.флАлкогольнаяПродукция=0 Then
              Continue;
            EndIf;
            Справки:=Trim(aTab.Партия.ЕГАИСКодСправок);
            If ТабДок.FindAndGoto(Справки,,"Справки")=0 Then
              ТабДок.AddLine("Количество,Справки",Min(-aTab.Количество,aTab.Количество),Справки);
            Else
              ТабДок.Количество:=Round(ТабДок.Количество+Min(-aTab.Количество,aTab.Количество),6);
            EndIf;
            If aTab.Партия.Selected()=0 Then
              Message("Для номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") не заполнена партия в "+бДок+"!","!");
              Фл:=0;
            EndIf;
            If Справки="" Then
              Message("Для номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") в партии "+aTab.Партия+" ("+aTab.Партия.Code+") не заполнена связь с ЕГАИС в "+бДок+"!","!");
              Фл:=0;
            EndIf;
          EndDo;
        EndDo;
        ТабДок.Group("Справки","Количество");
        If not Фл Then
          Message("Документ "+зДок+" пропущен из-за указанных ошибок!","!");
          Continue;
        EndIf;
      EndIf;
      If зДок.DBName()="Реализация" Then
        If зДок.Контрагент.ТипАктива=1 Then
          ФлЭтоВозврат:=1;
        EndIf;
      EndIf;
      
      //Водитель, экспедитор, перевозчик
      зК2:=зДок.ЮрЛицо.Контрагент;
      Вод:=зК2;
      Экп:=зК2;
      
      пКПП:=Trim(зДок.ЮрЛицо.ИНН);
      пИНН:=TearStr(пКПП,"/");
      пКПП:=оМагазин.КПП;
      
      пКПП2:=Trim(зК.ИНН);
      пИНН2:=TearStr(пКПП2,"/");
      If Trim(зАД.КПП)<>"" Then
        пКПП2:=Trim(зАД.КПП);
      EndIf;
      If (Trim(пКПП2)<>"")And(Length(Trim(пКПП2))<>9) Then
        Message("Неверный КПП покупателя для документа "+зДок+"!","!");
        Continue;
      EndIf;
      
      //Проверка строк
      Tx:=0;
      аСегодня:=BegOfDay(Date())+1;
      ФлНеПак:=-1;
      ФлПропустить:=0;
      СтрНом:="";
      aTabDoc:=зДок.LoadStorage("ОстаткиТМЦ");
      aTabDoc.Select();
      While aTabDoc.Next() Do
        зН:=aTabDoc.Номенклатура;
        If зН.флАлкогольнаяПродукция=0 Then
          Continue;
        EndIf;
        If aTabDoc.Партия.Selected()=0 Then
          Message("В документе "+зДок+" не указана партия для номенклатуры "+зН+" ("+зН.Code+")! Зарегистрируйте все документы, прежде чем продолжать выгрузку!","!");
          Continue 2;
        EndIf;
        аПартия:=aTabDoc.Партия;
        If аПартия.КСР<>аПартия.Дата Then
          If аПартия.КСР<=аСегодня Then
            Message("В документе "+зДок+" партия "+аПартия+" для номенклатуры "+зН+" ("+зН.Code+") имеет истекший к.с.р.! Такие партии выгружать нельзя!","!");
            ФлПропустить:=1;
          EndIf;
        EndIf;
      EndDo;
      If ФлПропустить Then
        Continue;
      EndIf;
      
      
      ДатаДокумента:=BegOfDay(зДок.DocDate);
      If BegOfDay(ДатаДокумента)<BegOfDay(Date()) Then
        Message("Внимание! Документ "+зДок+" выгружается текущей датой, так как прошел срок давности его выгрузки в ЕГАИС!","!");
      EndIf;
      ДатаДокумента:=BegOfDay(Date());
      ДатаВыгрузки:=ДатаДокумента;
      
      Стр:=FormatDate(Date(),"YYYYmmddhhttss");
      Идент:=?(ФлЭтоВозврат,"ВЗВ_","")+зДок.DocNum+"_"+GetYear(ДатаДокумента)+"_"+Стр;
      СтрАдрес:=Trim(зДок.АдресДоставки.адСсылка.Грузополучатель);
      СтрАдрес:=?(СтрАдрес="",Str(зДок.АдресДоставки.адСсылка),СтрАдрес);      
      
      флЮрЛицо:=пКПП<>"";
      флЮрЛицо2:=пКПП2<>"";
      If флВерсия4 Then
        Стр:="<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>"+_NEWLINE+
          "<ns:Documents xmlns:ce=""http://fsrar.ru/WEGAIS/CommonV3"" xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"" xmlns:oref=""http://fsrar.ru/WEGAIS/ClientRef_v2"" "+
          "xmlns:pref=""http://fsrar.ru/WEGAIS/ProductRef_v2"" xmlns:wb=""http://fsrar.ru/WEGAIS/TTNSingle_v4"" xmlns:xsi=""http://www.w3.org/2001/XMLSchemainstance"" Version=""1.0"">"+_NEWLINE+
          "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner>"+_NEWLINE+
          "<ns:Document><ns:WayBill_v4><wb:Identity>"+Идент+"</wb:Identity><wb:Header><wb:NUMBER>"+зДок.DocNum+"</wb:NUMBER><wb:Date>"+пДата2(ДатаВыгрузки)+"</wb:Date>"+_NEWLINE+
          "<wb:ShippingDate>"+пДата2(ДатаДокумента)+"</wb:ShippingDate><wb:Type>"+?(not ФлЭтоВозврат,"WBInvoiceFromMe","WBReturnFromMe")+"</wb:Type>"+_NEWLINE+
          
          "<wb:Shipper>"+?(флЮрЛицо,"<oref:UL>","<oref:FL>")+"<oref:INN>"+пИНН+"</oref:INN>"+?(пКПП="","","<oref:KPP>"+пКПП+"</oref:KPP>")+"<oref:ClientRegId>"+оРегИд+"</oref:ClientRegId>"+_NEWLINE+
          "<oref:FullName>"+EncodeXMLString(зДок.ЮрЛицо.ПолнНаименование)+"</oref:FullName>"+_NEWLINE+
          "<oref:ShortName>"+EncodeXMLString(Left(зДок.ЮрЛицо.Name,64))+"</oref:ShortName>"+_NEWLINE+
          "<oref:address><oref:Country>643</oref:Country><oref:RegionCode>"+Left(пИНН,2)+"</oref:RegionCode><oref:description>"+EncodeXMLString(зДок.ЮрЛицо.ФактАдрес)+"</oref:description></oref:address>"+?(флЮрЛицо,"</oref:UL>","</oref:FL>")+"</wb:Shipper>"+_NEWLINE+
          
          "<wb:Consignee>"+?(флЮрЛицо2,"<oref:UL>","<oref:FL>")+"<oref:INN>"+пИНН2+"</oref:INN>"+?(пКПП2="","","<oref:KPP>"+пКПП2+"</oref:KPP>")+"<oref:ClientRegId>"+Trim(зАД.УникальныйИдентификатор2)+"</oref:ClientRegId>"+_NEWLINE+
          "<oref:FullName>"+EncodeXMLString(зК.ПолнНаименование)+"</oref:FullName>"+_NEWLINE+
          "<oref:ShortName>"+EncodeXMLString(Left(зК.ПолнНаименование,64))+"</oref:ShortName>"+_NEWLINE+
          "<oref:address><oref:Country>643</oref:Country><oref:RegionCode>"+Left(пИНН2,2)+"</oref:RegionCode><oref:description>"+EncodeXMLString(зК.ФактАдрес)+"</oref:description></oref:address>"+?(флЮрЛицо2,"</oref:UL>","</oref:FL>")+"</wb:Consignee>"+_NEWLINE+
          
          //TRAN_TYPE (тип перевозки): строка в TTN4
          //TRANSPORT_TYPE (тран. средство): car,ship,railway,aircraft,other
          //ChangeOwnership: IsChange или NotChange -- здесь всегда IsChange
          "<wb:Transport><wb:TRAN_TYPE>Автомобиль</wb:TRAN_TYPE><wb:ChangeOwnership>IsChange</wb:ChangeOwnership><wb:TRANSPORT_TYPE>car</wb:TRANSPORT_TYPE>"+_NEWLINE+
          "<wb:TRAN_COMPANY>"+EncodeXMLString(зК2.ПолнНаименование)+"</wb:TRAN_COMPANY><wb:TRAN_TRAILER></wb:TRAN_TRAILER>"+_NEWLINE+
          "<wb:TRAN_CUSTOMER>"+EncodeXMLString(зДок.ЮрЛицо.ПолнНаименование)+"</wb:TRAN_CUSTOMER><wb:TRAN_DRIVER>"+EncodeXMLString(Вод.ПолнНаименование)+"</wb:TRAN_DRIVER>"+_NEWLINE+
          "<wb:TRAN_LOADPOINT>"+EncodeXMLString(зДок.ЮрЛицо.ФактАдрес)+"</wb:TRAN_LOADPOINT><wb:TRAN_UNLOADPOINT>"+EncodeXMLString(СтрАдрес)+"</wb:TRAN_UNLOADPOINT><wb:TRAN_REDIRECT></wb:TRAN_REDIRECT>"+_NEWLINE+
          "<wb:TRAN_FORWARDER>"+EncodeXMLString(Экп.ПолнНаименование)+"</wb:TRAN_FORWARDER></wb:Transport>"+_NEWLINE+
          "<wb:Base></wb:Base><wb:Note></wb:Note></wb:Header><wb:Content>";
      Else
        Стр:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
          "<ns:Documents Version=""1.0"""+_NEWLINE+
          "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""+_NEWLINE+
          "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
          "xmlns:c=""http://fsrar.ru/WEGAIS/Common"""+_NEWLINE+
          "xmlns:oref=""http://fsrar.ru/WEGAIS/ClientRef_v2"""+_NEWLINE+
          "xmlns:pref=""http://fsrar.ru/WEGAIS/ProductRef_v2"""+_NEWLINE+
          "xmlns:wb=""http://fsrar.ru/WEGAIS/TTNSingle_v3"""+_NEWLINE+
          "xmlns:ce=""http://fsrar.ru/WEGAIS/CommonV3"">"+_NEWLINE+
          "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner>"+_NEWLINE+
          "<ns:Document><ns:WayBill_v3><wb:Identity>"+Идент+"</wb:Identity><wb:Header><wb:NUMBER>"+зДок.DocNum+"</wb:NUMBER><wb:Date>"+пДата2(ДатаВыгрузки)+"</wb:Date>"+_NEWLINE+
          "<wb:ShippingDate>"+пДата2(ДатаДокумента)+"</wb:ShippingDate><wb:Type>"+?(not ФлЭтоВозврат,"WBInvoiceFromMe","WBReturnFromMe")+"</wb:Type>"+_NEWLINE+
          
          "<wb:Shipper>"+?(флЮрЛицо,"<oref:UL>","<oref:FL>")+"<oref:INN>"+пИНН+"</oref:INN>"+?(пКПП="","","<oref:KPP>"+пКПП+"</oref:KPP>")+"<oref:ClientRegId>"+оРегИд+"</oref:ClientRegId>"+_NEWLINE+
          "<oref:FullName>"+EncodeXMLString(зДок.ЮрЛицо.ПолнНаименование)+"</oref:FullName>"+_NEWLINE+
          "<oref:ShortName>"+EncodeXMLString(Left(зДок.ЮрЛицо.Name,64))+"</oref:ShortName>"+_NEWLINE+
          "<oref:address><oref:Country>643</oref:Country><oref:RegionCode>"+Left(пИНН,2)+"</oref:RegionCode><oref:description>"+EncodeXMLString(зДок.ЮрЛицо.ФактАдрес)+"</oref:description></oref:address>"+?(флЮрЛицо,"</oref:UL>","</oref:FL>")+"</wb:Shipper>"+_NEWLINE+
          
          "<wb:Consignee>"+?(флЮрЛицо2,"<oref:UL>","<oref:FL>")+"<oref:INN>"+пИНН2+"</oref:INN>"+?(пКПП2="","","<oref:KPP>"+пКПП2+"</oref:KPP>")+"<oref:ClientRegId>"+Trim(зАД.УникальныйИдентификатор2)+"</oref:ClientRegId>"+_NEWLINE+
          "<oref:FullName>"+EncodeXMLString(зК.ПолнНаименование)+"</oref:FullName>"+_NEWLINE+
          "<oref:ShortName>"+EncodeXMLString(Left(зК.ПолнНаименование,64))+"</oref:ShortName>"+_NEWLINE+
          "<oref:address><oref:Country>643</oref:Country><oref:RegionCode>"+Left(пИНН2,2)+"</oref:RegionCode><oref:description>"+EncodeXMLString(зК.ФактАдрес)+"</oref:description></oref:address>"+?(флЮрЛицо2,"</oref:UL>","</oref:FL>")+"</wb:Consignee>"+_NEWLINE+
    
          //пропускаем wb:Supplier
          
          //410  Воздушный транспорт 
          //411  Водный транспорт 
          //412  Железнодорожный транспорт 
          //413  Автомобильный транспорт 
          //419  Иные транспортные средства     
          
          "<wb:Transport><wb:TRAN_TYPE>413</wb:TRAN_TYPE><wb:TRAN_COMPANY>"+EncodeXMLString(зК2.ПолнНаименование)+"</wb:TRAN_COMPANY>"+_NEWLINE+
          "<wb:TRAN_CAR>"+EncodeXMLString(зДок.ТранспортноеСредство)+"</wb:TRAN_CAR><wb:TRAN_TRAILER></wb:TRAN_TRAILER>"+_NEWLINE+
          "<wb:TRAN_CUSTOMER>"+EncodeXMLString(зДок.ЮрЛицо.ПолнНаименование)+"</wb:TRAN_CUSTOMER><wb:TRAN_DRIVER>"+EncodeXMLString(Вод.ПолнНаименование)+"</wb:TRAN_DRIVER>"+_NEWLINE+
          //"<wb:TRAN_CUSTOMER>"+EncodeXMLString(зДок.Контрагент.ПолнНаименование)+"</wb:TRAN_CUSTOMER><wb:TRAN_DRIVER>"+EncodeXMLString(Вод.ПолнНаименование)+"</wb:TRAN_DRIVER>"+_NEWLINE+
          "<wb:TRAN_LOADPOINT>"+EncodeXMLString(зДок.ЮрЛицо.ФактАдрес)+"</wb:TRAN_LOADPOINT><wb:TRAN_UNLOADPOINT>"+EncodeXMLString(СтрАдрес)+"</wb:TRAN_UNLOADPOINT><wb:TRAN_REDIRECT></wb:TRAN_REDIRECT>"+_NEWLINE+
          "<wb:TRAN_FORWARDER>"+EncodeXMLString(Экп.ПолнНаименование)+"</wb:TRAN_FORWARDER></wb:Transport>"+_NEWLINE+
          "<wb:Base></wb:Base><wb:Note></wb:Note></wb:Header><wb:Content>";
      EndIf;  
  
      аВыгруженоСтрок:=0;
      ТДок:=aTab.Copy();
      ТДок.Group("Номенклатура","Количество,Сумма");
      аСтр:=0;
      
      //Из-за возможных дублей в партиях (бонусы и пр.), нужно сначала свернуть таблицу
      ТОст:=Tab.Create("Номенклатура,Партия,Справки");
      ТОст.AddColumn("Количество",,"Number");
      aTabDoc.Select();
      While aTabDoc.Next() Do
        зН:=aTabDoc.Номенклатура;
        If зН.флАлкогольнаяПродукция=0 Then
          Continue;
        EndIf;
        Справки:=Trim(aTabDoc.Партия.ЕГАИСКодСправок);
        
        //ЕГАИС не принимает две строки с одинаковыми справками Б
        If ТОст.FindAndGoto(Справки,,"Справки")=0 Then
          ТОст.AddLine("Номенклатура,Партия,Справки,Количество",aTabDoc.Номенклатура,aTabDoc.Партия,Справки,aTabDoc.Количество);
        Else
          ТОст.Количество:=ТОст.Количество+aTabDoc.Количество;
        EndIf
      EndDo;
      ТОст.Group("Номенклатура,Партия","Количество");
      
      Фл:=1;
      ТОст.Select();
      While ТОст.Next() Do
        аСтр:=аСтр+1;
        зН:=ТОст.Номенклатура;
        If зН.флАлкогольнаяПродукция=0 Then
          Continue;
        EndIf;
        зПрт:=ТОст.Партия;
        If Trim(зПрт.ЕГАИСКодНоменклатуры)="" Then
          Message("В документе "+зДок+" в партии "+зПрт+" для номенклатуры "+зН+" ("+зН.Code+") не указан код ЕГАИС (внешний код 2)! Укажите код, прежде чем производить выгрузку!","!");
          Фл:=0;
          Break;
        EndIf;
        If Length(Trim(зПрт.ЕГАИСКодНоменклатуры))<16 Then
          Message("В документе "+зДок+" в партии "+зПрт+" для номенклатуры "+зН+" ("+зН.Code+") указан НЕВЕРНЫЙ код ЕГАИС (внешний код 2)! Укажите код, прежде чем производить выгрузку!","!");
          Фл:=0;
          Break;
        EndIf;
        If Trim(зПрт.ЕГАИСКодСправок)="" Then
          Message("В документе "+зДок+" в партии "+зПрт+" для номенклатуры "+зН+" ("+зН.Code+") не указаны коды справок А и Б (внешний код 3)! Укажите коды, прежде чем производить выгрузку!","!");
          Фл:=0;
          Break;
        EndIf;
        If Pos("###",Trim(зПрт.ЕГАИСКодСправок))=0 Then
          Message("В документе "+зДок+" в партии "+зПрт+" для номенклатуры "+зН+" ("+зН.Code+") указаны НЕВЕРНЫЕ коды справок А и Б (внешний код 3)! Укажите коды, прежде чем производить выгрузку!","!");
          Фл:=0;
          Break;
        EndIf;
        ФлНеПак:=?(зПрт.флБезУпаковки<>0,1,0);
        
        Справки:=Trim(зПрт.ЕГАИСКодСправок);
        аКоличество:=ТОст.Количество;
        If ТабДок.FindAndGoto(Справки,,"Справки")>0 Then
          аКоличество:=аКоличество+ТабДок.Количество;
          ФлБылВозврат:=1;
          If Round(аКоличество,6)<0 Then
            Message("Для документа "+зДок+" в партии "+зПрт+" для номенклатуры "+зН+" ("+зН.Code+") количество в возврате покупателя больше, чем количество в реализации!","!");
            Фл:=0;
            Break;
          EndIf;
          ТабДок.Remove(ТабДок.CurLine);
        EndIf;
        If Round(аКоличество,6)=0 Then
          Continue;
        EndIf;
        
        пЦ:=0;
        If ТДок.FindAndGoto(зН,,"Номенклатура")>0 Then
          пЦ:=ТДок.Сумма/ТДок.Количество;
        EndIf;
        
        аКоличество:=Round(аКоличество,6);
        If ФлНеПак=1 Then
          аКоличество:=аКоличество*зН.ОбъемЛитров/10;
          пЦ:=пЦ/зН.ОбъемЛитров*10;
        EndIf;
        пЦ:=Round(пЦ,2);
        
        
        Стр0:=Trim(зПрт.ЕГАИСКодСправок);
        Справки:=Стр0;
        пСправкаА:=TearStr(Стр0,"###");
        While Pos("###",Стр0)>0 Do
          TearStr(Стр0,"###");
        EndDo;
        пСправкаБ:=Стр0;
        
        зАПКОД:=Trim(зН.ЕГАИСКодАП);
        If Trim(зПрт.ЕГАИСКодАП)<>"" Then
          зАПКОД:=Trim(зПрт.ЕГАИСКодАП);
        EndIf;
        If зАПКОД="" Then
          Message("В документе "+зДок+" в партии "+зПрт+" для номенклатуры "+зН+" ("+зН.Code+") не указан код АП (в партии внешний код, в ТМЦ - подсорт, 200 - водка)! Укажите код, прежде чем производить выгрузку!","!");
          Фл:=0;
          Break;
        EndIf;
        If Str(Number(зАПКОД))<>зАПКОД Then
          Message("В документе "+зДок+" в партии "+зПрт+" для номенклатуры "+зН+" ("+зН.Code+") указан НЕВЕРНЫЙ код АП (в партии внешний код, в ТМЦ - подсорт, 200 - водка)! Укажите код, прежде чем производить выгрузку!","!");
          Фл:=0;
          Break;
        EndIf;
        If зПрт.Производитель.Selected()=0 Then
          Message("В документе "+зДок+" в партии "+зПрт+" для номенклатуры "+зН+" ("+зН.Code+") не указан производитель! Укажите код, прежде чем производить выгрузку!","!");
          Фл:=0;
          Break;
        EndIf;
        If Trim(зПрт.Производитель.КодТочкиЕГАИС)="" Then
          Message("Для контрагента "+зПрт.Производитель+" ("+зПрт.Производитель.Code+") не указан рег. код ЕГАИС! Проставьте уникальный код, чтобы продолжить выгрузку!","!");
          Фл:=0;
          Break;
        EndIf;
        
        //<oref:Index>121471</oref:Index> 
        //<oref:RegionCode>77</oref:RegionCode> 
        //<oref:area></oref:area> 
        //<oref:city></oref:city> 
        //<oref:place></oref:place> 
        //<oref:street>ул. Рябиновая</oref:street> 
        //<oref:house>63</oref:house> 
        //<oref:building></oref:building> 
        //<oref:liter></oref:liter> 
        //<oref:description></oref:description> 
        
        пКПП3:=Trim(зПрт.Производитель.ИНН);
        пИНН3:=TearStr(пКПП3,"/");
        пПрКодЕГАИС:=Trim(зПрт.Производитель.КодТочкиЕГАИС);
        пЛ:=зН.ОбъемЛитров;
        
        If пЛ=0 Then
          Message("Для номенклатуры "+зН+" ("+зН.Code+") не указан объем!","!");
          Фл:=0;
          Break;
        EndIf;
        пКреп:=зН.сертКрепость;
        If пКреп=0 Then
          Message("Для номенклатуры "+зН+" ("+зН.Code+") не указана крепость!","!");
          Фл:=0;
          Break;
        EndIf;
        
        пЛ:="<pref:Capacity>"+Trim(FormatNumber(пЛ,0,"",4))+"</pref:Capacity>";
        If ФлНеПак=1 Then
          пЛ:="";
        EndIf;
        
        
        If Trim(зПрт.ЕГАИСКодПроизводителя)<>"" Then
          //КодПрЕГАИС@ИНН/КПП
          If Pos("@",зПрт.ЕГАИСКодПроизводителя)>0 Then
            пКПП3:=Trim(зПрт.ЕГАИСКодПроизводителя);
            пПрКодЕГАИС:=TearStr(пКПП3,"@");
            пИНН3:=TearStr(пКПП3,"/");
          Else
            пПрКодЕГАИС:=Trim(зПрт.ЕГАИСКодПроизводителя);
          EndIf;
        EndIf;
        
        //<wb:Pack_ID>Паллета</wb:Pack_ID> 
        //<wb:Party>партия № 8</wb:Party>
        If зПрт.флИмпортнаяПродукция=0 Then
          пПроизводитель:="<pref:Producer>"+?(пКПП3<>"","<oref:UL>","<oref:FL>")+"<oref:INN>"+пИНН3+"</oref:INN>"+?(пКПП3<>"","<oref:KPP>"+пКПП3+"</oref:KPP>")+"<oref:ClientRegId>"+пПрКодЕГАИС+"</oref:ClientRegId>"+_NEWLINE+
              "<oref:FullName>"+EncodeXMLString(зПрт.Производитель.ПолнНаименование)+"</oref:FullName>"+
              "<oref:ShortName>"+EncodeXMLString(Left(зПрт.Производитель.ПолнНаименование,64))+"</oref:ShortName>"+
              "<oref:address><oref:Country>643</oref:Country><oref:RegionCode>"+Left(пИНН3,2)+"</oref:RegionCode><oref:description>"+EncodeXMLString(зПрт.Производитель.ФактАдрес)+"</oref:description></oref:address>"+?(пКПП3<>"","</oref:UL>","</oref:FL>")+"</pref:Producer>"+_NEWLINE;
        ElseIf зПрт.флИмпортнаяПродукция=1 Then
          //TODO: 643
          пПроизводитель:="<pref:Producer><oref:FO><oref:ClientRegId>"+пПрКодЕГАИС+"</oref:ClientRegId>"+_NEWLINE+
              "<oref:FullName>"+EncodeXMLString(зПрт.Производитель.ПолнНаименование)+"</oref:FullName>"+
              "<oref:ShortName>"+EncodeXMLString(Left(зПрт.Производитель.ПолнНаименование,64))+"</oref:ShortName>"+
              "<oref:address><oref:Country>643</oref:Country><oref:description>"+EncodeXMLString(зПрт.Производитель.ФактАдрес)+"</oref:description></oref:address></oref:FO></pref:Producer>"+_NEWLINE;
        Else
          //TODO: 643
          пПроизводитель:="<pref:Producer><oref:TS><oref:ClientRegId>"+пПрКодЕГАИС+"</oref:ClientRegId>"+_NEWLINE+
              "<oref:FullName>"+EncodeXMLString(зПрт.Производитель.ПолнНаименование)+"</oref:FullName>"+
              "<oref:ShortName>"+EncodeXMLString(Left(зПрт.Производитель.ПолнНаименование,64))+"</oref:ShortName>"+ //<oref:TSNUM></oref:TSNUM>
              "<oref:address><oref:Country>643</oref:Country><oref:description>"+EncodeXMLString(зПрт.Производитель.ФактАдрес)+"</oref:description></oref:address></oref:TS></pref:Producer>"+_NEWLINE;
        EndIf;
        
        стрМарки:="";
        стрЯщики:="";
        If _And(ТВыгружаемыеМарки<>0,ТВыгружаемыеМарки.FindAndGoto(Справки,,"Справки")>0,зПрт.флМарочныйУчет=1) Then
          спИспЯщики:="";
          стрМарки:="<ce:MarkInfo>"+ОтформатироватьМарки(ТВыгружаемыеМарки.Марки,спИспЯщики)+"</ce:MarkInfo>";
          стрЯщики:=ОтформатироватьЯщики(ТВыгружаемыеМарки.Ящики,спИспЯщики);
          If стрЯщики<>"" Then
            стрЯщики:="<wb:boxInfo><wb:boxtree>"+стрЯщики+"</wb:boxtree></wb:boxInfo>"+_NEWLINE;
          EndIf;  
        EndIf;
        
        аВыгруженоСтрок:=аВыгруженоСтрок+1;
        Стр:=Стр+"<wb:Position><wb:Identity>"+аСтр+"</wb:Identity><wb:Product><pref:Type>АП</pref:Type>"+_NEWLINE+
          "<pref:FullName>"+EncodeXMLString(зН.ПолнНаименование)+"</pref:FullName><pref:ShortName>"+EncodeXMLString(Left(зН.Name,64))+"</pref:ShortName>"+_NEWLINE+
          "<pref:AlcCode>"+Trim(зПрт.ЕГАИСКодНоменклатуры)+"</pref:AlcCode>"+пЛ+"<pref:AlcVolume>"+Trim(FormatNumber(пКреп,0,"",3))+"</pref:AlcVolume>"+_NEWLINE+
          "<pref:ProductVCode>"+зАПКОД+"</pref:ProductVCode><pref:UnitType>"+?(ФлНеПак=0,"Packed","Unpacked")+"</pref:UnitType>"+_NEWLINE+
          пПроизводитель+"</wb:Product><wb:Quantity>"+аКоличество+"</wb:Quantity><wb:Price>"+Trim(FormatNumber(пЦ,0,"",2))+"</wb:Price>"+_NEWLINE+
          "<wb:FARegId>"+пСправкаА+"</wb:FARegId><wb:InformF2><ce:F2RegId>"+пСправкаБ+"</ce:F2RegId>"+стрМарки+"</wb:InformF2>"+_NEWLINE+стрЯщики+
          "</wb:Position>";
          
      EndDo; //Цикл по партиям документа
      
      If ТабДок.Size()>0 Then
        Message("Для документа "+зДок+" выписан(ы) возврат(ы), в которых присутствуют партии, отсутствовавшие в оригинальном документе! Исправьте возвраты прежде чем выгружать документ!","!");
        Фл:=0;
      EndIf;
  
      If not Фл Then
        Message("Документ пропущен: "+зДок,"!");
        Continue;
      EndIf;
      If аВыгруженоСтрок=0 Then
        Message("Документ: "+зДок+", нечего выгружать! Возможно, был полный возврат!","!");
        Continue;
      EndIf;
      Стр:=Стр+"</wb:Content></ns:WayBill"+?(флВерсия4,"_v4","_v3")+"></ns:Document></ns:Documents>";
      
      If ФлНаЭкран Then
        Тч:=Text.Create(1);
        Тч.AddString(Стр);
        Тч.Show("Пакет ЕГАИС по документу "+зДок,,1);
        ФлБылиДокументы:=1;
      Else
        СпОтвет:=List.Create();
        СпОтвет.SetByName("ФлНеВыводитьНаЭкран",1);
        If not ВыполнитьЗапросЕГАИС(Стр,"opt/in/WayBill"+?(флВерсия4,"_v4","_v3"),5,1,СпОтвет) Then
          Message("Ошибка при выгрузке документа "+зДок+"! Документ пропущен!","!");
          If оРеализации.FindAndGoto(зДок,,"зДок")>0 Then
            оРеализации.Статус:="Ошибка при отправке";
            оРеализации.тОшибка:="Доступно входящее сообщение";
            оРеализации.текстОшибка:=СпОтвет.GetByName("Ошибка");
          EndIf;
          Continue;
        EndIf;
        аКодОтвета:=СпОтвет.GetByName("Результат");
        аКодОтвета:=UpperCase(Replace(аКодОтвета,"-",""));
        ФлБылиДокументы:=1;
      
        стрПост:="";
        If ФлБылВозврат Then
          стрПост:=" (-возврат)";
        EndIf;
        Logs.Write("Отправлен документ"+стрПост+": "+зДок+", ID: "+Trim(зДок.УникальныйИдентификатор3)+", GUID: "+аКодОтвета,зДок,"ЕГАИС",0);
        If ЗаписатьВРеализацию(аКодОтвета,0,зДок,,1,ТБлокировка) Then
          //Обновляем таблицу оРеализации
          If оРеализации.FindAndGoto(зДок,,"зДок")>0 Then
            оРеализации.Статус:="Отправлен на сервер";
            ИконкаРеализации(оРеализации,аКодОтвета,Trim(зДок.УникальныйИдентификатор3));
            ЧлКоличествоВыгруженных:=ЧлКоличествоВыгруженных+1;
          EndIf;
        EndIf;
        If (флПакетная=1)And(Тб.Size()>1) Then
          Message("  Выгрузили документ "+зДок+", ("+Тб.CurLine+" из "+Тб.Size()+")","I");
        EndIf;
      EndIf;  
      
    Finally
      ТБлокировка.Select();
      While ТБлокировка.Next() Do
        зДок:=ТБлокировка.зДок;
        зДок.Unlock();
      EndDo;
      ТБлокировка:=0;
    EndTry;  
  EndDo;//По документам
  
  If флПакетная=0 Then
    If not ФлБылиДокументы Then
      Box("Документ не был выгружен!",Q_STOP);
    EndIf;
  Else
    Message("Выгрузка завершена!","I");
  EndIf;
  
  Exit ЧлКоличествоВыгруженных;
EndFunction


Function ЗагрузитьТаблицуВходящихПоступлений(ТабПост)
  оМагазин:=Form.оМагазин.Value;
  
  СпОтвет:=List.Create();
  If not ВыполнитьЗапросЕГАИС("","opt/in/",4,1,СпОтвет) Then
    Exit 0;
  EndIf;
  Тч:=Text.Create(1);
  Тч.AddString(СпОтвет.GetByName("Результат"));
  
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Тч.GetLine(i);
    If Pos("=====================",Стр)<>1 Then
      Continue;
    EndIf;
    
    ТСтроки:=Tab.Create("Наименование,Номер,Справки,КодЕГАИС,Объем,Крепость,АПКод,прзКодЕГАИС,прзИНН,прзКПП,прзНаименование,прзАдрес,зН,зПартия,ДатаРазлива");
    ТСтроки.AddColumn("Количество",,"Number");
    ТСтроки.AddColumn("Цена",,"Number");
    ТСтроки.AddColumn("флБезУпаковки",,"Number");
    ТСтроки.AddColumn("флИмпорт",,"Number");//0 -- нет, 1 -- FO (иностранная организация), 2 -- TS (таможенный союз)
    ТСтроки.AddColumn("Марки");//Разделены _NEWLINE, <Ящик>Chr(9)<Марка>
    ТСтроки.AddColumn("Ящики");//Разделены _NEWLINE, <ЯщикРодитель>Chr(9)<Ящик>
    
    ТабПост.AddLine("флВозврат,ФлТип4",0,0);
    i:=i+1;
    ТабПост.ПутьТТН:=Тч.GetLine(i);
    i:=i+1;
    ТабПост.ПутьСправки:=Тч.GetLine(i);
    ФлКонтр:=0;
    ТабПост.ТСтроки:=ТСтроки;
    Form.StatusText("Загружено документов: "+ТабПост.Size());
    стрПакет:="";    
    
    
    флИмяДоб:=0;
    флБезУпаковки:=0;
    //Загрузка ТТН
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Тч.GetLine(i);
      If Pos("---------------------",Стр)=1 Then
        Break;
      EndIf;
      AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
      If Pos("<WayBill_v4>",Стр)>0 Then
        ТабПост.ФлТип4:=1;
      EndIf;
      
      If Pos("<NUMBER>",Стр)=1 Then
        TearStr(Стр,">");
        ТабПост.Номер:=TearStr(Стр,"<");
      ElseIf Pos("<Type>",Стр)=1 Then
        TearStr(Стр,">");
        ТабПост.флВозврат:=?(UpperCase(TearStr(Стр,"<"))="WBRETURNFROMME",1,0);
      ElseIf Pos("<UnitType>",Стр)=1 Then
        TearStr(Стр,">");
        флБезУпаковки:=?(UpperCase(TearStr(Стр,"<"))="UNPACKED",1,0);
      ElseIf Pos("<Date>",Стр)=1 Then
        TearStr(Стр,">");
        ТабПост.Дата:=ВДату2(TearStr(Стр,"<"));
      ElseIf Pos("<ShippingDate>",Стр)=1 Then
        TearStr(Стр,">");
        ТабПост.ДатаДоставки:=ВДату2(TearStr(Стр,"<"));
      ElseIf Pos("<Shipper>",Стр)=1 Then
        ФлКонтр:=1;
      ElseIf Pos("<Consignee>",Стр)=1 Then
        ФлКонтр:=0;
      ElseIf _And(Pos("<INN>",Стр)>0,ФлКонтр=1) Then
        TearStr(Стр,">");
        ТабПост.ИНН:=TearStr(Стр,"<");
      ElseIf _And(Pos("<KPP>",Стр)>0,ФлКонтр=1) Then
        TearStr(Стр,">");
        ТабПост.КПП:=TearStr(Стр,"<");
      ElseIf _And(Pos("<ClientRegId>",Стр)>0,ФлКонтр=1) Then
        TearStr(Стр,">");
        ТабПост.КодЕГАИС:=TearStr(Стр,"<");
      ElseIf _And(Pos("<ShortName>",Стр)>0,ФлКонтр=1) Then
        TearStr(Стр,">");
        ТабПост.Наименование:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf _And(isEmpty(ТабПост.Наименование),Pos("<FullName>",Стр)>0,ФлКонтр=1) Then
        TearStr(Стр,">");
        ТабПост.Наименование:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf _And(Pos("<description>",Стр)>0,ФлКонтр=1) Then
        TearStr(Стр,">");
        ТабПост.Адрес:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<Content>",Стр)=1 Then
        Break;
      EndIf;
    EndDo;
    
    ФлПропустить:=0;
    //Загрузка строк
    Стр:=Тч.GetLine(i);
    AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
    If Pos("<Content>",Стр)=1 Then
      While i<Тч.Size() Do
        i:=i+1;
        Стр:=Тч.GetLine(i);
        AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
        If Pos("---------------------",Стр)=1 Then
          Break;
        EndIf;
        
        If Pos("<Position>",Стр)=1 Then
          //Загрузка строки
          ФлКонтр:=0;
          ТСтроки.AddLine("Справки,флБезУпаковки,флИмпорт","",флБезУпаковки,0);
          While i<Тч.Size() Do
            i:=i+1;
            Стр:=Тч.GetLine(i);
            AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
            If (Pos("---------------------",Стр)=1)Or(Pos("</Position>",Стр)=1) Then
              i:=i-1;
              Break;
            EndIf;
            If Pos("<Quantity>",Стр)=1 Then
              TearStr(Стр,">");
              ТСтроки.Количество:=Number(Trim(TearStr(Стр,"<")));
            ElseIf Pos("<Price>",Стр)=1 Then
              TearStr(Стр,">");
              ТСтроки.Цена:=Number(Trim(TearStr(Стр,"<")));
            ElseIf Pos("<Identity>",Стр)=1 Then
              TearStr(Стр,">");
              ТСтроки.Номер:=TearStr(Стр,"<");
            ElseIf Pos("<RegId>",Стр)>0 Then //NOTE: из этого документа нужна только справка 1
              TearStr(Стр,">");
              Стр:=TearStr(Стр,"<");
              If Стр<>"" Then
                ТСтроки.Справки:=Стр;
              EndIf;
            ElseIf Pos("<FARegId>",Стр)>0 Then //NOTE: из этого документа нужна только справка 1
              TearStr(Стр,">");
              Стр:=TearStr(Стр,"<");
              If Стр<>"" Then
                ТСтроки.Справки:=Стр;
              EndIf;
            ElseIf Pos("<MarkInfo>",Стр)>0 Then //NOTE: используется для извлечения кодов марок
              //<MarkInfo><boxpos><boxnumber>box-00112</boxnumber><amclist><amc>...<amc><amc>...<amc><amclist><boxpos><boxpos><boxnumber>box-00113</boxnumber>...</MarkInfo>
              //   </InformF2><boxInfo><boxtree><boxnum>box-01-001</boxnum><bl><boxnum>box-00112</boxnum><boxnum>box-00113</boxnum></bl></boxtree></boxInfo></Position>...
              //Пример марки: 101100261679680118001D5CCFC794963898C1B13E41231CKY42T7UDIJJY2AWLHS7HPGINLMY7PQPDNJALVS42WNCHYRCO257SPCSCF4ASM37BZNTLIASYRVGFUTCXDXDJPML5MMVLEEHZWPWJVI
              Марки:="";
              Ящик:="";
              While i<Тч.Size() Do
                i:=i+1;
                Стр:=Тч.GetLine(i);
                AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
                If Pos("---------------------",Стр)=1 Then
                  i:=i-1;
                  Break;
                EndIf;
                If _Or(Pos("</MarkInfo>",Стр)>0,Pos("</InformF2>",Стр)>0) Then
                  Break;
                EndIf;
                If Pos("<amc>",Стр)>0 Then
                  TearStr(Стр,">");
                  Стр:=TearStr(Стр,"<");
                  If Стр<>"" Then
                    AppendStringToBufferedString(Марки,?(Марки="","",_NEWLINE)+Ящик+Chr(9)+Стр);
                    //Марки:=?(Марки="","",Марки+_NEWLINE)+Ящик+Chr(9)+Стр;
                  EndIf;
                ElseIf Pos("<boxnumber>",Стр)>0 Then
                  TearStr(Стр,">");
                  Ящик:=TearStr(Стр,"<");
                EndIf;
              EndDo;
              ТСтроки.Марки:=Марки;
            ElseIf Pos("<boxInfo>",Стр)>0 Then //NOTE: используется для извлечения кодов ящиков
              //<boxtree><boxnum>...</boxnum><bl>
              //                                 <boxnum>...</boxnum>
              //                                                     <bl><boxnum>...</boxnum><boxnum>...</boxnum>...
              //                                                     </bl>
              //                                 ..
              //                             </bl>
              //</boxtree>
              //
              //<ЯщикРодитель>chr(9)<Ящик>...
              Ящики:="";
              ТекЯщик:="";
              Родители:=List.Create();
              While i<Тч.Size() Do
                i:=i+1;
                Стр:=Тч.GetLine(i);
                AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
                If Pos("---------------------",Стр)=1 Then
                  i:=i-1;
                  Break;
                EndIf;
                If Pos("</boxInfo>",Стр)>0 Then
                  Break;
                EndIf;
                If Pos("<boxnum>",Стр)>0 Then
                  TearStr(Стр,">");
                  ТекЯщик:=TearStr(Стр,"<");
                  If ТекЯщик<>"" Then
                    If Родители.Size()>0 Then
                      AppendStringToBufferedString(Ящики,?(Ящики="","",_NEWLINE)+Родители.Get(Родители.Size())+Chr(9)+ТекЯщик);
                      //Ящики:=?(Ящики="","",Ящики+_NEWLINE)+Родители.Get(Родители.Size())+Chr(9)+ТекЯщик;
                    Else
                      AppendStringToBufferedString(Ящики,?(Ящики="","",_NEWLINE)+Chr(9)+ТекЯщик);
                      //Ящики:=?(Ящики="","",Ящики+_NEWLINE)+Chr(9)+ТекЯщик;
                    EndIf;
                  EndIf;
                ElseIf Pos("<bl>",Стр)>0 Then
                  If ТекЯщик<>"" Then
                    Родители.Add(ТекЯщик);
                  Else
                    Message("Внутренняя ошибка (ящики). Входящий документ "+ТабПост.Номер+" от "+ТабПост.Дата+" пропущен! Обратитесь к администратору!","!");
                    ТабПост.Remove(ТабПост.Size());
                    ФлПропустить:=1;
                    Break 3;
                  EndIf;
                  ТекЯщик:="";
                ElseIf Pos("</bl>",Стр)>0 Then
                  If Родители.Size()>0 Then
                    ТекЯщик:=Родители.Get(Родители.Size());
                    Родители.Remove(Родители.Size());
                  EndIf;
                EndIf;
              EndDo;
              ТСтроки.Ящики:=Ящики;
            ElseIf _And(Pos("<FullName>",Стр)>0,ФлКонтр=0) Then
              TearStr(Стр,">");
              ТСтроки.Наименование:=DecodeXMLString(TearStr(Стр,"<"));
            ElseIf _And(isEmpty(ТСтроки.Наименование),Pos("<ShortName>",Стр)>0,ФлКонтр=0) Then
              TearStr(Стр,">");
              ТСтроки.Наименование:=DecodeXMLString(TearStr(Стр,"<"));
            ElseIf Pos("<AlcCode>",Стр)>0 Then
              TearStr(Стр,">");
              ТСтроки.КодЕГАИС:=TearStr(Стр,"<");
            ElseIf Pos("<Capacity>",Стр)>0 Then
              TearStr(Стр,">");
              ТСтроки.Объем:=TearStr(Стр,"<");
            ElseIf Pos("<UnitType>",Стр)>0 Then
              TearStr(Стр,">");
              ТСтроки.флБезУпаковки:=?(UpperCase(TearStr(Стр,"<"))="UNPACKED",1,0);
            ElseIf Pos("<AlcVolume>",Стр)>0 Then
              TearStr(Стр,">");
              ТСтроки.Крепость:=TearStr(Стр,"<");
            ElseIf Pos("<ProductVCode>",Стр)>0 Then
              TearStr(Стр,">");
              ТСтроки.АПКод:=TearStr(Стр,"<");
            ElseIf Pos("<ClientRegId>",Стр)>0 Then
              TearStr(Стр,">");
              ТСтроки.прзКодЕГАИС:=TearStr(Стр,"<");
            ElseIf Pos("<FO>",Стр)>0 Then
              ТСтроки.флИмпорт:=1;
              ФлКонтр:=1;
            ElseIf Pos("<TS>",Стр)>0 Then
              ТСтроки.флИмпорт:=2;
              ФлКонтр:=1;
            ElseIf Pos("<Importer>",Стр)>0 Then
              ТСтроки.флИмпорт:=1;
              ФлКонтр:=1;
            ElseIf Pos("<Producer>",Стр)>0 Then
              ФлКонтр:=1;
            ElseIf _And(Pos("<FullName>",Стр)>0,ФлКонтр=1) Then
              TearStr(Стр,">");
              ТСтроки.прзНаименование:=DecodeXMLString(TearStr(Стр,"<"));
            ElseIf _And(isEmpty(ТСтроки.прзНаименование),Pos("<ShortName>",Стр)>0,ФлКонтр=1) Then
              TearStr(Стр,">");
              ТСтроки.прзНаименование:=DecodeXMLString(TearStr(Стр,"<"));
            ElseIf _And(Pos("<INN>",Стр)>0,ФлКонтр=1) Then
              TearStr(Стр,">");
              ТСтроки.прзИНН:=TearStr(Стр,"<");
            ElseIf _And(Pos("<KPP>",Стр)>0,ФлКонтр=1) Then
              TearStr(Стр,">");
              ТСтроки.прзКПП:=TearStr(Стр,"<");
            ElseIf _And(Pos("<description>",Стр)>0,ФлКонтр=1) Then
              TearStr(Стр,">");
              ТСтроки.прзАдрес:=DecodeXMLString(TearStr(Стр,"<"));
            EndIf;
          EndDo;
        ElseIf Pos("<NUMBER>",Стр)=1 Then
          Message("Входящий документ "+ТабПост.Номер+" от "+ТабПост.Дата+" пропущен, так как состоит из более чем одного документа!","!");
          Message("Пути ТТН: "+Replace(ТабПост.ПутьТТН,Chr(1),", "));
          Message("Пути справок: "+Replace(ТабПост.ПутьСправки,Chr(1),", "));
          Message("Обратитесь к администратору!","!");
          ТабПост.Remove(ТабПост.Size());
          ФлПропустить:=1;
          Break;
        EndIf;
      EndDo;
    EndIf;
    
    If ФлПропустить=1 Then
      Continue;
    EndIf;
    
    //Загрузка формы-2
    If i<Тч.Size() Then
      Стр:=Тч.GetLine(i);
      AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
      If Pos("---------------------",Стр)=1 Then
        While i<Тч.Size() Do
          i:=i+1;
          Стр:=Тч.GetLine(i);
          AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
          If Pos("=====================",Стр)=1 Then
            i:=i-1;
            Break;
          EndIf;
          If Pos("<WBRegId>",Стр)=1 Then
            TearStr(Стр,">");
            ТабПост.РегИДСправки:=TearStr(Стр,"<");
          ElseIf Pos("<Content>",Стр)=1 Then
            Break;
          EndIf;
        EndDo;
        
        //Загрузка строк
        Стр:=Тч.GetLine(i);
        AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
        If Pos("<Content>",Стр)=1 Then
          While i<Тч.Size() Do
            i:=i+1;
            Стр:=Тч.GetLine(i);
            AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
            If Pos("=====================",Стр)=1 Then
              i:=i-1;
              Break;
            EndIf;
            If Pos("<Position>",Стр)=1 Then
              Номер:="";
              СправкаБ:="";
              ДатаРазлива:="";
              //Загрузка строки, необходимы два параметра: Номер и СправкаБ
              While i<Тч.Size() Do
                i:=i+1;
                Стр:=Тч.GetLine(i);
                AppendStringToBufferedString(стрПакет,Стр+_NEWLINE);
                If (Pos("=====================",Стр)=1)Or(Pos("</Position>",Стр)=1) Then
                  i:=i-1;
                  Break;
                EndIf;
                If Pos("<Identity>",Стр)=1 Then
                  TearStr(Стр,">");
                  Номер:=TearStr(Стр,"<");
                ElseIf Pos("<InformBRegId>",Стр)=1 Then
                  TearStr(Стр,">");
                  СправкаБ:=TearStr(Стр,"<");
                ElseIf Pos("<InformF2RegId>",Стр)=1 Then
                  TearStr(Стр,">");
                  СправкаБ:=TearStr(Стр,"<");
                ElseIf Pos("<BottlingDate>",Стр)=1 Then
                  TearStr(Стр,">");
                  ДатаРазлива:=TearStr(Стр,"<");
                  //2020-06-04
                  ДатаРазлива:=Date(Mid(ДатаРазлива,9,2)+"."+Mid(ДатаРазлива,6,2)+"."+Mid(ДатаРазлива,1,4));
                  ДатаРазлива:=?(IsEmpty(ДатаРазлива),GetNothing(),ДатаРазлива);
                EndIf;
              EndDo;
              
              If (Номер<>"")And(СправкаБ<>"") Then
                Фл:=0;
                ТСтроки.Select();
                While ТСтроки.Next() Do
                  If ТСтроки.Номер=Номер Then
                    ТСтроки.Справки:=?(ТСтроки.Справки="","",ТСтроки.Справки+"###")+СправкаБ;
                    ТСтроки.ДатаРазлива:=ДатаРазлива;
                    Фл:=1;
                    Break;
                  EndIf;
                EndDo;
                If not Фл Then
                  Message("Во входящем документе "+ТабПост.Номер+" от "+ТабПост.Дата+" не найдена строка с идентификатором "+Номер+"! Обратитесь к администратору!","!");
                EndIf;
              Else
                Message("Пустая позиция в документе, обратитесь к администратору!","!");
              EndIf;
              
            EndIf;
          EndDo;
        EndIf;
        
        
      EndIf;
    EndIf;
    ТабПост.Пакет:=стрПакет;
  EndDo;
  
  ТабПост.Sort("КодЕГАИС+,Дата+,Номер+");
  Exit 1;
EndFunction  

Function ПолучитьТекстСтатусаПоступления(зДок)
  Ид2:=Trim(зДок.УникальныйИдентификатор2);
  Ид3:=Trim(зДок.УникальныйИдентификатор3);
  If Ид2<>"" Then
    Exit "Ожидает ответа";
  ElseIf Left(Ид3,1)="" Then
    Exit "Локальный создан";
  ElseIf Left(Ид3,1)="!" Then
    Exit "Локальный создан";
  ElseIf Left(Ид3,1)="%" Then
    Exit "Акт отправлен";
  ElseIf Left(Ид3,1)="+" Then
    Exit "Ожид. ответа поставщика";
  ElseIf Left(Ид3,1)="-" Then
    Exit "Ожид. ответа поставщика";
  ElseIf Left(Ид3,1)="*" Then
    Exit "Ожид. ответа поставщика";
  ElseIf Left(Ид3,1)="#" Then
    Exit "Документ отклонен";
  ElseIf Left(Ид3,1)="=" Then
    Exit "Обработан";
  EndIf;
  Exit "";
EndFunction

Function ОбновитьТаблицуПоступлений()

  Function ЗаполнитьВозвраты(оВхПоступления,aTab2,зДок)
    СпВозвраты:=List.Create();
    While aTab2.FindAndGoto(зДок,,"зДО")>0 Do
      СпВозвраты.Add(aTab2.зДок,""+aTab2.зДок+?(aTab2.зДок.Status()>1," (Обработан)",""));
      aTab2.зДО:=0;
    EndDo;
    СпВозвраты.Sort();
    СтрВзв:="";
    For i:=1 To СпВозвраты.Size() Do
      If СпВозвраты[i].Status()>1 Then
        СтрВзв:=?(СтрВзв="","",СтрВзв+",")+СпВозвраты[i].DocNum+" от "+СпВозвраты[i].DocDate;
      EndIf;
    EndDo;
    оВхПоступления.зВзв:=СтрВзв;
    оВхПоступления.спВозвраты:=СпВозвраты;
  EndFunction          

  Function ЗаполнитьПеремещения2(оВхПоступления,aTab3,зДок)
    Стр:="";
    While aTab3.FindAndGoto(зДок,,"зДО")>0 Do
      If aTab3.зКО=Enum.коРегистр2ЕГАИС.ПеремещениеНаРегистр2 Then
        зУИ:=aTab3.зДок.УникальныйИдентификатор3;
        aTab3.зДО:=0;
        If aTab3.зДок.Status()<1 Then
          Стр:="Не обработан!";
        ElseIf зУИ="" Then
          Стр:="Не отправлен";
        ElseIf Left(зУИ,1)<>"=" Then
          Стр:="Ожидание...";
        Else
          Стр:="Закрыт";
        EndIf;
      EndIf;
    EndDo;
    Exit Стр;
  EndFunction          
  
  If Form.оМагазин.Value.Selected()=0 Then
    Box("Необходимо выбрать магазин!",Q_STOP);
    Exit 0;
  EndIf;
  НачДата:=BegOfDay(Form.НачДата.Value);
  КонДата:=BegOfDay(Form.КонДата.Value);
  оВхПоступления:=Form.оВхПоступления.Value;
  оПеремещения:=Form.оПеремещения.Value;
  оЮЛ:=Form.оМагазин.Value.ЮрЛицо;
  оМагазин:=Form.оМагазин.Value;
    
  КДата:=Max(КонДата+7,BegOfDay(Date())+7);
  НДата:=Min(НачДата-7,BegOfDay(Date())-7);
  ТабПоступления.Select();
  While ТабПоступления.Next() Do
    НДата:=Min(НДата,ТабПоступления.Дата-7);
    КДата:=Max(КДата,ТабПоступления.Дата+7);
  EndDo;
  
  ТЗ:="зДата:=BegOfDay(Doc.ПоступлениеТМЦ.DocDate);Condition((зДата>=НДата)And(зДата<КДата));
  |зДок:=Doc.ПоступлениеТМЦ;
  |зАлк:=Doc.ПоступлениеТМЦ.Номенклатура.Номенклатура.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |зМагазин:=Doc.ПоступлениеТМЦ.Склад.Магазин;
  |Condition(зМагазин=оМагазин);
  |зЮЛ:=Doc.ПоступлениеТМЦ.ЮрЛицо;
  |Condition(зЮЛ=оЮЛ);
  |зУИ:=Doc.ПоступлениеТМЦ.УникальныйИдентификатор3;
  |зСтатус:=Doc.ПоступлениеТМЦ.@Status;Condition(зСтатус<>1)Or(Left(зУИ,1)=""="");
  |зИНН:=Doc.ПоступлениеТМЦ.Контрагент.ИНН;
  |зНомерВх:=Doc.ПоступлениеТМЦ.НомерДокВходящий;
  |зДатаВх:=Doc.ПоступлениеТМЦ.ДатаДокВходящий;
  |зНомер:=Doc.ПоступлениеТМЦ.DocNum;
  |Group зДок;";
  З:=Query.Create();
  З.Execute(ТЗ,0);
  aTab:=З.ResultTable;
  aTab.AddColumn("УдаленныйИндекс");
  aTab.Sort("зДата+,зНомер+");
  aTab.Select();
  While aTab.Next() Do
    aTab.зИНН:=TearStr((aTab.зИНН),"/");
    aTab.зУИ:=Mid(aTab.зУИ,2);
    aTab.УдаленныйИндекс:=-1;
  EndDo;
  З:=0;
  
  //Привязанные документы "возврат поставщику"
  КДата:=Max(КДата+7,BegOfDay(Date())+14);
  ТЗ:="зСтатус:=Doc.ВозвратПоставщику.@Status;Condition(зСтатус<>1);зДата:=Doc.ВозвратПоставщику.DocDate;Condition((зДата>=НДата)And(зДата<КДата));
  |зДок:=Doc.ВозвратПоставщику;
  |зАлк:=Doc.ВозвратПоставщику.Номенклатура.Номенклатура.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |зДО:=Doc.ВозвратПоставщику.ДокОснование;
  |Condition(not IsEmpty(зДО));
  |зМагазин:=Doc.ВозвратПоставщику.Склад.Магазин;
  |Condition(зМагазин=оМагазин);  
  |зЮЛ:=Doc.ВозвратПоставщику.ЮрЛицо;
  |Condition(зЮЛ=оЮЛ);
  |Group зДок;";
  
  З:=Query.Create();
  З.Execute(ТЗ,0);
  aTab2:=З.ResultTable;
  З:=0;
  
  //Привязанные документы "Регистр2ЕГАИС"
  КДата:=Max(КДата+7,BegOfDay(Date())+14);
  ТЗ:="зСтатус:=Doc.Регистр2ЕГАИС.@Status;Condition(зСтатус<>1);зДата:=Doc.Регистр2ЕГАИС.DocDate;Condition((зДата>=НДата)And(зДата<КДата));
  |зДок:=Doc.Регистр2ЕГАИС;
  |зДО:=Doc.Регистр2ЕГАИС.ДокОснование;
  |зКО:=Doc.Регистр2ЕГАИС.КодОперации;
  |//Condition(not IsEmpty(зДО));
  |зМг:=Doc.Регистр2ЕГАИС.Магазин;
  |Condition(зМг=оМагазин);
  |Group зДок;";
  
  З:=Query.Create();
  aTab3:=З.Execute(ТЗ,0);
  З:=0;

  //Документы "Комплектация товара"
  КДата:=Max(КДата+7,BegOfDay(Date())+14);
  ТЗ:="зСтатус:=Doc.КомплектацияТовара.@Status;Condition(зСтатус<>1);зДата:=Doc.КомплектацияТовара.DocDate;Condition((зДата>=НДата)And(зДата<КДата));
  |зДок:=Doc.КомплектацияТовара;
  |зКО:=Doc.КомплектацияТовара.КодОперации;
  |зМг:=Doc.КомплектацияТовара.Магазин;
  |Condition(зМг=оМагазин);
  |зАлк:=Doc.КомплектацияТовара.ИсходящаяНоменклатура.Номенклатура.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |Group зДок;";
  
  З:=Query.Create();
  aTab4:=З.Execute(ТЗ,0);
  З:=0;
    
  оВхПоступления.Lock();
  Try
    If ТабПоступления.Size()>0 Then
      оВхПоступления.AddLine("зСтатус,зДокЛок,зДок,зКонтрагент,Адрес,Локальный","    <Входящие документы>","","","","",-1);
    EndIf;
  
    //Входящие поступления, для которых нет сопоставления или обмен не закрыт
    ТабПоступления.Select();
    While ТабПоступления.Next() Do
      Form.StatusText("Входящие поступления: "+ТабПоступления.CurLine);
      
      Фл:=1;
      aTab.CurLine:=0;
      If aTab.FindAndGoto(ТабПоступления.РегИДСправки,,"зУИ") Then //Поиск по ТТН
        aTab.УдаленныйИндекс:=ТабПоступления.CurLine;
      ElseIf aTab.LocateAndGoto("зНомерВх,зИНН",ТабПоступления.Номер,ТабПоступления.ИНН)>0 Then //Поиск по вх. номеру и ИНН контагента
        aTab.УдаленныйИндекс:=ТабПоступления.CurLine;
      ElseIf aTab.LocateAndGoto("зНомерВх,зДатаВх",ТабПоступления.Номер,ТабПоступления.Дата)>0 Then //Поиск по вх. номеру и дате
        aTab.УдаленныйИндекс:=ТабПоступления.CurLine;
      Else
        оВхПоступления.AddLine("зСтатус,зДокЛок,зДок,зКонтрагент,Адрес,УдаленныйИндекс","Новый","",?(ТабПоступления.флВозврат=0,"","(ВОЗВРАТ) ")+ТабПоступления.Номер+" от "+ТабПоступления.Дата,
          ТабПоступления.Наименование,ТабПоступления.Адрес,ТабПоступления.CurLine);
        оВхПоступления.Icon(оВхПоступления.CurLine,"Иконка",?(ТабПоступления.флВозврат=0,122,218));  
        Фл:=0;
      EndIf;
      If Фл Then
        If Left(aTab.зДок.УникальныйИдентификатор3,1)<>"=" Then
          aTab.УдаленныйИндекс:=0;
          зДокЛок:=aTab.зДок.Copy();
          //Обмен не закрыт
          оВхПоступления.AddLine("зСтатус,зДокЛок,зДок,зКонтрагент,Адрес,УдаленныйИндекс,Локальный",ПолучитьТекстСтатусаПоступления(aTab.зДок.Copy()),зДокЛок.DocNum+" от "+зДокЛок.DocDate,
            ?(ТабПоступления.флВозврат=0,"","(ВОЗВРАТ) ")+ТабПоступления.Номер+" от "+ТабПоступления.Дата,
            ТабПоступления.Наименование,ТабПоступления.Адрес,ТабПоступления.CurLine,зДокЛок);
          оВхПоступления.Icon(оВхПоступления.CurLine,"Иконка",150);  
          ЗаполнитьВозвраты(оВхПоступления,aTab2,зДокЛок);
          оВхПоступления.Регистр2:=ЗаполнитьПеремещения2(оВхПоступления,aTab3,зДокЛок);
        EndIf;
      EndIf;
    EndDo;
    
    Фл=0;
    //Все остальные поступления по датам
    aTab.Select();
    While aTab.Next() Do
      Form.StatusText("Локальные поступления: "+aTab.CurLine);
      If Number(aTab.УдаленныйИндекс)=0 Then
        Continue;
      EndIf;
      зДокЛок:=aTab.зДок.Copy();
      зДата:=BegOfDay(зДокЛок.DocDate);
      If (зДата<НачДата)or(зДата>КонДата) Then
        Continue;
      EndIf;
      
      If not Фл Then
        оВхПоступления.AddLine("зСтатус,зДокЛок,зДок,зКонтрагент,Адрес,Локальный","    <Локальные документы>","","","","",-1);
      EndIf;
      Фл:=1;
    
      оВхПоступления.AddLine("зСтатус,зДокЛок,зДок,зКонтрагент,Адрес,Локальный",?(aTab.зУИ="","Новый",ПолучитьТекстСтатусаПоступления(зДокЛок)),
        зДокЛок.DocNum+" от "+зДокЛок.DocDate,aTab.зНомерВх+" от "+aTab.зДатаВх,зДокЛок.Контрагент,зДокЛок.АдресДоставки,зДокЛок);
      оВхПоступления.Icon(оВхПоступления.CurLine,"Иконка",?(зДокЛок.Status()=0,230,?(зДокЛок.Status()=1,231,232)));  
      ЗаполнитьВозвраты(оВхПоступления,aTab2,зДокЛок);
      оВхПоступления.Регистр2:=ЗаполнитьПеремещения2(оВхПоступления,aTab3,зДокЛок);
      
      зУИ:=aTab.зДок.УникальныйИдентификатор3;
      If _And(зУИ<>"",Left(зУИ,1)<>"#",зДокЛок.Status()=1) Then
        оВхПоступления.зСтатус:="ОШИБКА!";
        Message("Внимание! Документ "+зДокЛок+" был удален, это вызовет расхождения с ЕГАИС!","!");
      EndIf;
    EndDo;
    Form.оВхПоступления.InvokeEvent("OnInitLine","IndexFrom,IndexTo",1,оВхПоступления.Size());
  Finally
    оВхПоступления.UnLock();
  EndTry;  
  
  
  оПеремещения.Lock();
  Try
    оПеремещения.ClearLines();
    
    If aTab4.Size()>0 Then
      aTab4.CopyTo(aTab3,1,aTab4.Size(),"зДок,зКО");
      aTab3.Sort("зДок");
    EndIf;
    aTab3.Select();
    While aTab3.Next() Do
      зДок:=aTab3.зДок;
      If (BegOfDay(зДок.DocDate)>=НачДата)And(BegOfDay(зДок.DocDate)<=КонДата) Then
        If aTab3.зКО=Enum.коРегистр2ЕГАИС.ПеремещениеНаРегистр2 Then
          оПеремещения.AddLine("ДокТип,зДок","на регистр 2",зДок);
        ElseIf aTab3.зКО=Enum.коРегистр2ЕГАИС.ВозвратНаРегистр1 Then
          оПеремещения.AddLine("ДокТип,зДок","на регистр 1",зДок);
        ElseIf aTab3.зКО=Enum.коРегистр2ЕГАИС.СписаниеСРегистра2 Then
          оПеремещения.AddLine("ДокТип,зДок","списание с рег. 2",зДок);
        ElseIf aTab3.зКО=Enum.коРегистр2ЕГАИС.ПересортНаРегистре2 Then
          оПеремещения.AddLine("ДокТип,зДок","пересорт. на рег. 2"+?(Pos("-",зДок.УникальныйИдентификатор)=0," (спис)"," (оприх)"),зДок);
        ElseIf aTab3.зКО=Enum.коКомплектацияТовара.КомплектацияТовара Then
          оПеремещения.AddLine("ДокТип,зДок","комплектация",зДок);
        Else
          оПеремещения.AddLine("ДокТип,зДок","?",зДок);
        EndIf;
        Ид2:=Trim(зДок.УникальныйИдентификатор2);
        Ид3:=Trim(зДок.УникальныйИдентификатор3);
        If aTab3.зДок.Status()<1 Then
          Стр:="Не обработан!";
        ElseIf (Ид2="")And(Ид3="") Then
          If aTab3.зКО<>Enum.коРегистр2ЕГАИС.ПересортНаРегистре2 Then
            Стр:="Не отправлен";
          Else
            Стр:="Не отправлен"+?(Pos("-",зДок.УникальныйИдентификатор)=0," (списание)"," (оприходование)");
          EndIf;
        ElseIf Ид3="" Then
          Стр:="Отправлен на сервер";
        ElseIf Left(Ид3,1)="#" Then
          Стр:="Ошибка ЕГАИС";
        ElseIf Left(Ид3,1)<>"=" Then
          Стр:="Ожидает ответа";
        Else
          Стр:="Закрыт";
        EndIf;
        оПеремещения.Статус:=Стр;
        оПеремещения.Icon(оПеремещения.CurLine,"Иконка",глПолучитьНомерИконкиДокументаЕГАИС(Ид2,Ид3));
      EndIf;
    EndDo;
  Finally
    оПеремещения.UnLock();
  EndTry;  
  
  Exit 1;
EndFunction

Function ОбновитьВходящиеПоступления()
  оВхПоступления:=Form.оВхПоступления.Value;
  оМагазин:=Form.оМагазин.Value;
  
  ТабПоступления.ClearLines();
  оВхПоступления.ClearLines();
  
  If not ЗагрузитьТаблицуВходящихПоступлений(ТабПоступления) Then
    Exit;
  EndIf;
    
  ОбновитьТаблицуПоступлений();
EndFunction


Function ОбновитьТаблицы(флФорс=0)
  оМагазин:=Form.оМагазин.Value;
  оРеализации:=Form.оРеализации.Value;
  оСписания:=Form.оСписания.Value;
  НачДата:=BegOfDay(Form.НачДата.Value);
  КонДата:=BegOfDay(Form.КонДата.Value);
  Form.пИнформация.Caption:="";
  
  If оМагазин.Selected()=0 Then
    If флФорс=1 Then
      Box("Необходимо выбрать магазин!",Q_STOP);
    EndIf;
    Exit 0;
  EndIf;
  
  Фл:=0;
  оРеализации.Select();
  While оРеализации.Next() Do
    If Trim(оРеализации.текстОшибка)<>"" Then
      Фл:=1;
      Break;
    EndIf;
  EndDo;
  If (Фл)And(not флФорс) Then
    If AskQuestion("Таблица реализаций содержит текст ответов, полученных с сервера. Если обновить таблицы документов эти ошибки будут утеряны. Продолжить?",Q_QUESTION+Q_YESNO)<>R_YES Then
      Exit 0;
    EndIf;
  EndIf;
  
  ОбновитьВходящиеПоступления();
  
  оРеализации.ClearLines();
  КолНеОтпрРеализаций:=0;
  КолОтклоненныхРеализаций:=0;
  флСтатусыРеализацийОбновлены:=0;
  ObjC:=ObjectCollector.Create();


  КДата:=КонДата+1;
  спТип:=List.Create(Enum.коРеализация.Реализация,Enum.коРеализация.ВнутреннееПеремещение);  
  ТЗ:="зСтатус:=Doc.Реализация.@Status;Condition(зСтатус>1);зДата:=Doc.Реализация.DocDate;Condition((зДата>=НачДата)And(зДата<КДата));
  |зДок:=Doc.Реализация;
  |зКО:=Doc.Реализация.КодОперации;
  |Condition(зКО IN спТип);  
  |зАлк:=Doc.Реализация.Номенклатура.Номенклатура.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |зМагазин:=Doc.Реализация.Склад.Магазин;
  |Condition(зМагазин=оМагазин);
  |зЮЛ:=Doc.Реализация.ЮрЛицо;
  |Condition(зЮЛ=оМагазин.ЮрЛицо);
  |Group зДок;";
  
  З:=Query.Create();
  З.Execute(ТЗ,0);
  Тб:=З.ResultTable;
  Тб.AddColumn("зЗО");
  Тб.AddColumn("Контрагент");
  Тб.AddColumn("Ид2");
  Тб.AddColumn("Ид3");
  Тб.AddColumn("пДок");
  Тб.Column("зДок").ForbidMassLoad:=1;                //Не загружая полные таблицы документов, мы экономим память,
  оРеализации.Column("зДок").ForbidMassLoad:=1;       //большое количество загруженных документов может быстро ее истратить

  ФлТипРеализаций:=Number(оТипРеализаций.Get(оТипРеализаций.SelectedLine));
  Ном:=0;
  While Ном<Тб.Size() Do
    Ном:=Ном+1;
    If Ном%100=0 Then
      Form.StatusText("Обработка реализаций: "+Ном+" из "+Тб.Size());
    EndIf;  
    
    Тб.CurLine:=Ном;
    зДок:=Тб.зДок.Copy();//Экономия памяти, в таблице Тб должны храниться только не загруженные объекты
    Ид2:=Trim(зДок.УникальныйИдентификатор2);
    Ид3:=Trim(зДок.УникальныйИдентификатор3);
    Фл:=1;
    If ФлТипРеализаций>0 Then
      If ФлТипРеализаций=1 Then
        If Ид3<>"" Then
          Фл:=0;
        EndIf;
      ElseIf ФлТипРеализаций=2 Then
        If Left(Ид3,1)<>"#" Then
          Фл:=0;
        EndIf;
      ElseIf ФлТипРеализаций=3 Then
        If Left(Ид3,1)<>"!" Then
          Фл:=0;
        EndIf;
      ElseIf ФлТипРеализаций=4 Then
        If Ид2="" Then
          Фл:=0;
        EndIf;
      ElseIf ФлТипРеализаций=5 Then
        If Left(Ид3,1)<>"=" Then
          Фл:=0;
        EndIf;
      EndIf;
    EndIf;
    If not Фл Then
      Тб.Remove(Ном);
      Ном:=Ном-1;
      Continue;
    EndIf;
    
    Тб.Ид2:=Ид2;
    Тб.Ид3:=Ид3;
    Тб.Контрагент:=ObjC.Get(зДок.Контрагент);
    Тб.пДок:=""+зДок;
  EndDo;
  
  
  //Проверка не привязанных документов "возврат поставщику"
  КДата:=КонДата+7;
  ТЗ:="зСтатус:=Doc.ВозвратПоставщику.@Status;Condition(зСтатус<>1);зДата:=Doc.ВозвратПоставщику.DocDate;Condition((зДата>=НачДата)And(зДата<КДата));
  |зДок:=Doc.ВозвратПоставщику;
  |зАлк:=Doc.ВозвратПоставщику.Номенклатура.Номенклатура.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |зМагазин:=Doc.ВозвратПоставщику.Склад.Магазин;
  |Condition(зМагазин=оМагазин);
  |зЮЛ:=Doc.ВозвратПоставщику.ЮрЛицо;
  |Condition(зЮЛ=оМагазин.ЮрЛицо);
  |Group зДок;";
  
  З:=Query.Create();
  З.Execute(ТЗ,0);
  ТабВозвраты:=Tab.Create("зДок,Основание");
  aTab:=З.ResultTable;
  aTab.Select();
  While aTab.Next() Do
    зДок:=aTab.зДок;
    зДО:=зДок.ДокОснование;
    ТабВозвраты.AddLine("зДок,Основание",зДок,зДО);
    //Добавляем некоторые возвраты
    Фл:=0;
    If (зДО.Selected()=0)And(зДок.Status()>1) Then
      Фл:=1;
    ElseIf зДО.Selected()<>0 Then
      If зДО.DBName()="ПоступлениеТМЦ" Then
        If (Trim(зДО.УникальныйИдентификатор3)<>Trim(зДок.УникальныйИдентификатор3))And(Trim(зДок.УникальныйИдентификатор3)<>"") Then
          Фл:=1;
        EndIf;
      Else
        Фл:=1;
      EndIf;
    EndIf;
    If not Фл Then
      Continue;
    EndIf;
    Ид2:=Trim(зДок.УникальныйИдентификатор2);
    Ид3:=Trim(зДок.УникальныйИдентификатор3);
    
    If ФлТипРеализаций>0 Then
      If ФлТипРеализаций=1 Then
        If Ид3<>"" Then
          Continue;
        EndIf;
      ElseIf ФлТипРеализаций=2 Then
        If Left(Ид3,1)<>"#" Then
          Continue;
        EndIf;
      ElseIf ФлТипРеализаций=3 Then
        If Left(Ид3,1)<>"!" Then
          Continue;
        EndIf;
      ElseIf ФлТипРеализаций=4 Then
        If Ид2="" Then
          Continue;
        EndIf;
      ElseIf ФлТипРеализаций=5 Then
        If Left(Ид3,1)<>"=" Then
          Continue;
        EndIf;
      EndIf;
    EndIf;
    
    Тб.AddLine("зЗО,зДата,зДок,пДок,Контрагент,Ид2,Ид3",зДО,зДок.DocDate,зДок.Copy(),""+зДок,ObjC.Get(зДок.Контрагент),Ид2,Ид3);
  EndDo;
  З:=0;
  
  
  Тб.Sort("зЗО,зДата+");//Без упоминания реализаций
  оРеализации.Lock();
  Try
    Ном:=0;
    пЗО:=0;
    Тб.Select();
    While Тб.Next() Do
      Ном:=Ном+1;
      Form.StatusText("Заполнение таблицы: "+Ном+" из "+Тб.Size());
      If пЗО<>Тб.зЗО Then
        оРеализации.AddLine("зДок,пДок",Тб.зЗО,?(IsEmpty(Тб.зЗО),"   < Без заданий >","   "+Тб.зЗО));
        пЗО:=Тб.зЗО;
      EndIf;
      оРеализации.AddLine("зДок,пДок,зКонтрагент,Ид2,Ид3,Статус",Тб.зДок,Тб.пДок,Тб.Контрагент,Тб.Ид2,Тб.Ид3,СтатусРеализации(Тб.Ид2,Тб.Ид3));
      
      If Тб.Ид3="" Then
        КолНеОтпрРеализаций:=КолНеОтпрРеализаций+1;
      ElseIf Left(Тб.Ид3,1)="#" Then
        КолОтклоненныхРеализаций:=КолОтклоненныхРеализаций+1;
      EndIf;
      
      ИконкаРеализации(оРеализации,Тб.Ид2,Тб.Ид3,1);
    EndDo;  
  Finally  
    Тб:=0;
    оРеализации.UnLock();
  EndTry;  
  Стр:="";
  If оТипРеализаций.SelectedLine>1 Then
    Стр:=оТипРеализаций.GetName(оТипРеализаций.SelectedLine);
  EndIf;
  If КолНеОтпрРеализаций=0 Then
    Стр:=?(Стр="","",Стр+", ")+?(КолОтклоненныхРеализаций=0,"","Отклоненных: "+КолОтклоненныхРеализаций);
  Else
    Стр:=?(Стр="","",Стр+", ")+"Не выгруженных: "+КолНеОтпрРеализаций+?(КолОтклоненныхРеализаций=0,"",", Отклоненных: "+КолОтклоненныхРеализаций);
  EndIf;  
  Form.пИнформация.Caption:=Стр;
  
  
  //Списания, оприходования
  спТип:=List.Create(Enum.коРегистрацияТМЦ.ОприходованиеТМЦ,Enum.коРегистрацияТМЦ.СписаниеТМЦ);
  КДата:=КонДата+1;
  ТЗ:="зДата:=Doc.РегистрацияТМЦ.DocDate;Condition((зДата>=НачДата)And(зДата<КДата));
  |зДок:=Doc.РегистрацияТМЦ;
  |зАлк:=Doc.РегистрацияТМЦ.Номенклатура.Номенклатура.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |зКО:=Doc.РегистрацияТМЦ.КодОперации;
  |Condition(зКО IN спТип);
  |зМагазин:=Doc.РегистрацияТМЦ.Склад.Магазин;
  |Condition(зМагазин=оМагазин);
  |зЮЛ:=Doc.РегистрацияТМЦ.ЮрЛицо;
  |Condition(зЮЛ=оМагазин.ЮрЛицо);
  |Group зДок;";  
  
  З:=Query.Create();
  З.Execute(ТЗ,0);
  aTab:=З.ResultTable;
  
  Ном:=0;
  оСписания.ClearLines();
  aTab.Select();
  While aTab.Next() Do
    Ном:=Ном+1;
    Form.StatusText(""+Ном);
    зДок:=aTab.зДок;
    
    Ошибка:=0;
    Ид2:=Trim(зДок.УникальныйИдентификатор2);
    Ид3:=Trim(зДок.УникальныйИдентификатор3);
    If зДок.Status()<2 Then
      If (Ид3="")And(Ид2="") Then
        Continue;
      EndIf;
      Ошибка:=1;
    EndIf;
    
    If (Ошибка>0)And(Ид3<>"") Then
      Статус:="ОШИБКА!";
      Continue;
    EndIf;
    
    оСписания.AddLine("зДок",зДок);
    оСписания.ДокТип:=?(зДок.КодОперации=Enum.коРегистрацияТМЦ.ОприходованиеТМЦ,"Оприходование","Списание");
    
    Статус:="Не отправлен";
    флТип:=глПолучитьНомерИконкиДокументаЕГАИС(Ид2,Ид3);
    If Ид2<>"" Then
      Статус:="Ожидает ответа";
    ElseIf Left(Ид3,1)="=" Then
      Статус:="Обработан";
    EndIf;
    ИмяФайла:="Temp\ЕГАИС\Оприходования\"+GetYear(зДок.DocDate)+зДок.DocNum+".bin";
    оСписания.ВнешнийФайл:=ИмяФайла;
    If File.DoesFileExist(ИмяФайла) Then
      оСписания.тЗаполнен:="Да";
    EndIf;

    оСписания.Icon(оСписания.CurLine,"Иконка",флТип);
    оСписания.Статус:=Статус;
  EndDo;
  
  Form.bPanelClose.SetFocus();
  Exit 1;
EndFunction



Function ОтчетПоВходящимПоступлениям()
  Т:=Table.Create();
  Т.SetSourceName("ВходящиеПоступления");
  оЗагол:="Отчет по входящим поступлениям ЕГАИС для магазина "+Form.оМагазин.Value;
  оСвойства:=глСвойстваПечатиПростые();
  Т.CopyByX("v1",1);
  ТабПоступления.Select();
  While ТабПоступления.Next() Do
    пТип:=?(ТабПоступления.ФлВозврат=1,"ВОЗВРАТ","");
    пНомер:=ТабПоступления.Номер;
    пДата:=ТабПоступления.Дата;
    пИНН:=ТабПоступления.ИНН;
    пКПП:=ТабПоступления.КПП;
    пКодЕГАИС:=ТабПоступления.КодЕГАИС;
    пКонтрагент:=ТабПоступления.Наименование;
    пАдрес:=ТабПоступления.Адрес;
    пТТН:=ТабПоступления.ПутьТТН;
    пЕГАИСТТН:=ТабПоступления.РегИДСправки;
    пСправки:=ТабПоступления.ПутьСправки;
    пМарки:="";
    ТСтроки:=ТабПоступления.ТСтроки;
    ТСтроки.Select();
    While ТСтроки.Next() Do
      If Trim(ТСтроки.Марки)<>"" Then
        пМарки:="Да";
        Break;
      EndIf;
    EndDo;
    Т.CopyByX("v2",1);
  EndDo;
  Т.CopyByX("v3",1);
  глПечатнаяФормаОтчета(Т,0,оЗагол);
EndFunction



Function ВывестиОтчетПоДокументу();
  Т:=Table.Create();
  Т.SetSourceName("Документ");
  оЗагол:="Входящий документ № "+ТабПоступления.Номер+" от "+ТабПоступления.Дата;
  пДатаДоставки:=ТабПоступления.ДатаДоставки;
  пКонтрагент:=ТабПоступления.Наименование;
  пИННКПП:=ТабПоступления.ИНН+"/"+ТабПоступления.КПП;
  пАдрес:=ТабПоступления.Адрес;
  пКодЕГАИС:=ТабПоступления.КодЕГАИС;
  пРегИД:=ТабПоступления.РегИДСправки;
  Т.CopyByX("v1",1);
  
  пН:=0;
  ТСтроки:=ТабПоступления.ТСтроки;
  ТСтроки.Select();
  While ТСтроки.Next() Do
    пН:=пН+1;
    пНоменклатура:=ТСтроки.Наименование;
    пКодЕГАИС:=ТСтроки.КодЕГАИС;
    пОбъем:=ТСтроки.Объем;
    пКрепость:=ТСтроки.Крепость;
    пАПКод:=ТСтроки.АПКод;
    пКолВо:=""+ТСтроки.Количество+?(ТСтроки.флБезУпаковки=1," дал","");
    пЦена:=ТСтроки.Цена;
    пТип:=?(ТСтроки.флБезУпаковки=1,"Без упаковки","");
    пИмпорт:=?(ТСтроки.флИмпорт=1,"ДА",?(ТСтроки.флИмпорт=2,"ТС",""));
    пПроизводитель:=ТСтроки.прзНаименование;
    пПроизводительКод:=ТСтроки.прзКодЕГАИС;
    пСправки:=ТСтроки.Справки;
    пДатаР:=ТСтроки.ДатаРазлива;
    пМарки:="";
    спМарки:=GetNothing();
    If Trim(ТСтроки.Марки)<>"" Then
      спМарки:=List.Create();
      спМарки.SetByName("ЕГАИС",1);
      спМарки.SetByName("ПоказатьМарки",1);
      спМарки.SetByName("Марки",ТСтроки.Марки);
      спМарки.SetByName("Ящики",ТСтроки.Ящики);
      пМарки:=StrCount(_NEWLINE,ТСтроки.Марки)+1;
    EndIf;
    Т.CopyByX("v2",1);
  EndDo;
  глПечатнаяФормаОтчета(Т,0,оЗагол);
EndFunction



Function ВывестиОтчетПоСправке2(Стр,СправкаБ)
  Тч:=Text.Create(1);
  Тч.AddString(Стр);
  If Pos("<Conclusion>Rejected</Conclusion>",Стр)>0 Then
    Box("ЕГАИС вернул развернутую ошибку при запросе! Вероятнее всего, вам нужно попробовать сделать запрос позже!",Q_STOP);
    Тч.Show("Ошибка",,1);
    Exit;
  EndIf;

  aTab:=Tab.Create("ПродавецИД,ПокупательИД,Кл,Справка2,ТТН");
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Trim(Тч.GetLine(i));
    If Pos("<step>",Стр)<>1 Then
      Continue;
    EndIf;
    
    Справка2:="";
    ПродавецИД:="";
    ПокупательИД:="";
    ТТН:="";
    Кл:=0;
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Trim(Тч.GetLine(i));
      If Стр="</step>" Then
        Break;
      ElseIf Pos("<Form2>",Стр)=1 Then
        TearStr(Стр,">");
        Справка2:=TearStr(Стр,"<");
      ElseIf Pos("<Shipper>",Стр)=1 Then
        TearStr(Стр,">");
        ПродавецИД:=TearStr(Стр,"<");
      ElseIf Pos("<Consignee>",Стр)=1 Then
        TearStr(Стр,">");
        ПокупательИД:=TearStr(Стр,"<");
      ElseIf Pos("<WBRegId>",Стр)=1 Then
        TearStr(Стр,">");
        ТТН:=TearStr(Стр,"<");
      ElseIf Pos("<amount>",Стр)=1 Then
        TearStr(Стр,">");
        Кл:=Number(TearStr(Стр,"<"));
      EndIf;
    EndDo;
    aTab.AddLine("ПродавецИД,ПокупательИД,Кл,Справка2,ТТН",ПродавецИД,ПокупательИД,Кл,Справка2,ТТН);
  EndDo;
  aTab.Sort("ТТН+,ПокупательИД+");
  
  Т:=Table.Create();
  Т.SetSourceName("ДвиженияПоСправке2");
  оЗагол:="Отчет по движениям в ЕГАИС по справке 2";
  оСвойства:=глСвойстваПечатиПростые();
  Т.CopyByX("v1",1);
  
  aTab.Select();
  While aTab.Next() Do
    пТТН:=aTab.ТТН;
    пПродавецИД:=aTab.ПродавецИД;
    пПокупательИД:=aTab.ПокупательИД;
    пКл:=глФРМ(aTab.Кл,"");
    пСправка2:=aTab.Справка2;
    Т.CopyByX("v2",1);
  EndDo;
  Т.CopyByX("v3",1);
  глПечатнаяФормаОтчета(Т,Param,оЗагол);    
EndFunction  


Function ВывестиОтчетПоНоменклатуре(Стр,пКодЕГАИС)
  Тч:=Text.Create(1);
  Тч.AddString(Стр);
  Т:=Table.Create();
  Т.SetSourceName("Номенклатура");
  оЗагол:="Список номенклатуры по коду ЕГАИС или ИНН "+пКодЕГАИС;
  оСвойства:=глСвойстваПечатиПростые();
  Т.CopyByX("v1",1);
  
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Тч.GetLine(i);
    If Pos("<Product>",Стр)<>1 Then
      Continue;
    EndIf;
    
    пИмпорт:="";
    пНоменклатура:="";
    пКодЕГАИС:="";
    пЕмкость:="";
    пКрепость:="";
    пКодАП:="";
    пУпаковка:="?";
    пКонтрагент:="";
    пКодЕГАИСКонтрагент:="";
    пИНН:="";
    пКПП:="";
    ФлКонтрагент:=0;
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Тч.GetLine(i);
      If Стр="<Product>" Then
        i:=i-1;
        Break;
      ElseIf (Pos("<FullName>",Стр)=1)And(not ФлКонтрагент) Then
        TearStr(Стр,">");
        пНоменклатура:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<AlcCode>",Стр)=1 Then
        TearStr(Стр,">");
        пКодЕГАИС:=TearStr(Стр,"<");
      ElseIf Pos("<Capacity>",Стр)=1 Then
        TearStr(Стр,">");
        пЕмкость:=TearStr(Стр,"<");
      ElseIf Pos("<UnitType>",Стр)=1 Then
        TearStr(Стр,">");
        пУпаковка:=?(Uppercase(TearStr(Стр,"<"))="UNPACKED","ДА","");
      ElseIf Pos("<AlcVolume>",Стр)=1 Then
        TearStr(Стр,">");
        пКрепость:=TearStr(Стр,"<");
      ElseIf Pos("<ProductVCode>",Стр)=1 Then
        TearStr(Стр,">");
        пКодАП:=TearStr(Стр,"<");
      ElseIf Pos("<FullName>",Стр)=1 Then
        TearStr(Стр,">");
        пКонтрагент:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<ClientRegId>",Стр)=1 Then
        TearStr(Стр,">");
        пКодЕГАИСКнт:=TearStr(Стр,"<");
      ElseIf Pos("<UL>",Стр)=1 Then
        ФлКонтрагент:=1;
      ElseIf Pos("<FO>",Стр)=1 Then
        ФлКонтрагент:=1;
        пИмпорт:="ДА";
      ElseIf Pos("<TS>",Стр)=1 Then
        ФлКонтрагент:=1;
        пИмпорт:="ТС";
      ElseIf Pos("<INN>",Стр)=1 Then
        TearStr(Стр,">");
        пИНН:=TearStr(Стр,"<");
      ElseIf Pos("<KPP>",Стр)=1 Then
        TearStr(Стр,">");
        пКПП:=TearStr(Стр,"<");
      EndIf;
    EndDo;
    Т.CopyByX("v2",1);
  EndDo;
  Т.CopyByX("v3",1);
  глПечатнаяФормаОтчета(Т,Param,оЗагол);
EndFunction


Function ВывестиОтчетПоКонтрагенту(Стр,пИНН)
  Тч:=Text.Create(1);
  Тч.AddString(Стр);
  //Тч.Load(Имя,0);
  Т:=Table.Create();
  Т.SetSourceName("Контрагент");
  оЗагол:="Список адресов по ИНН или FSRAR ID "+пИНН;
  оСвойства:=глСвойстваПечатиПростые();
  Т.CopyByX("v1",1);
  
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Тч.GetLine(i);
    If Pos("<Client>",Стр)<>1 Then
      Continue;
    EndIf;
    
    пКонтрагент:="";
    пКодЕГАИС:="";
    пАдрес:="";
    пИНН:="";
    пКПП:="";
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Тч.GetLine(i);
      If Стр="</Client>" Then
        Break;
      ElseIf Pos("<FullName>",Стр)=1 Then
        TearStr(Стр,">");
        пКонтрагент:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<ClientRegId>",Стр)=1 Then
        TearStr(Стр,">");
        пКодЕГАИС:=TearStr(Стр,"<");
      ElseIf Pos("<description>",Стр)=1 Then
        TearStr(Стр,">");
        пАдрес:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<INN>",Стр)=1 Then
        TearStr(Стр,">");
        пИНН:=TearStr(Стр,"<");
      ElseIf Pos("<KPP>",Стр)=1 Then
        TearStr(Стр,">");
        пКПП:=TearStr(Стр,"<");
      EndIf;
    EndDo;
    Т.CopyByX("v2",1);
  EndDo;
  Т.CopyByX("v3",1);
  глПечатнаяФормаОтчета(Т,Param,оЗагол);
EndFunction


Function ПоказатьПростойОтвет(Имя,Текст)
  Тч:=Text.Create();
  If File.DoesFileExist(Имя+".answer") Then
    Тч.Load(Имя+".answer",0);
  ElseIf File.DoesFileExist(Имя+".answer.error") Then
    Тч.Load(Имя+".answer.error",0);
    File.DeleteFile(Имя+".answer.error");
  Else
    Box("Ответ не найден!",Q_WARNING);
    Exit;
  EndIf;
  Тч.Show(Текст,,1);
EndFunction


Function ВыполнитьСписаниеПоТаблицеСписания(Тб,флПоказатьОтвет=1,ByRef РегИдСписания="")
  оМагазин:=Form.оМагазин.Value;
  оРегИд:=оМагазин.КодТочкиЕГАИС;
  Идент:="СПИСАНИЕ_"+FormatDate(Date(),"YYYYmmddhhttss");
  пДата:=пДата2(Date());
  
  Стр:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
    "<ns:Documents Version=""1.0"""+_NEWLINE+
    "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""+_NEWLINE+
    "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
    "xmlns:pref=""http://fsrar.ru/WEGAIS/ProductRef_v2"""+_NEWLINE+
    "xmlns:awr=""http://fsrar.ru/WEGAIS/ActWriteOff_v3"""+_NEWLINE+
    "xmlns:ce=""http://fsrar.ru/WEGAIS/CommonV3"">"+_NEWLINE+
    "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner>"+_NEWLINE+
    "<ns:Document><ns:ActWriteOff_v3><awr:Identity>"+Идент+"</awr:Identity><awr:Header><awr:ActNumber>"+Идент+"</awr:ActNumber><awr:ActDate>"+пДата+"</awr:ActDate>"+_NEWLINE+
    "<awr:TypeWriteOff>Недостача</awr:TypeWriteOff><awr:Note></awr:Note></awr:Header><awr:Content>"+_NEWLINE;
  
  аСтр:=0;
  Тб.Select();
  While Тб.Next() Do
    аСтр:=аСтр+1;
    Индекс:=Тб.Партия;//пСправкаА+"###"+пСправкаБ
    TearStr(Индекс,"###");
    СтрМарки:="";
    If Trim(Тб.Марки)<>"" Then
      СтрМарки:="<awr:MarkCodeInfo>"+ОтформатироватьМарки2(Тб.Марки)+"</awr:MarkCodeInfo>";
    EndIf;
    Стр:=Стр+"<awr:Position><awr:Identity>"+аСтр+"</awr:Identity><awr:Quantity>"+Тб.Списать+"</awr:Quantity><awr:InformF1F2><awr:InformF2>"+ //<awr:InformB>
      "<pref:F2RegId>"+Индекс+"</pref:F2RegId></awr:InformF2></awr:InformF1F2>"+СтрМарки+"</awr:Position>";
  EndDo;
  Стр:=Стр+"</awr:Content></ns:ActWriteOff_v3></ns:Document></ns:Documents>";
  Logs.Write("Отправлен запрос на списание "+Тб.Size()+" партий из ЕГАИС, документ "+Идент+" от "+пДата,"","ЕГАИС",0);
  
  СпОтвет:=List.Create();
  If not ВыполнитьЗапросЕГАИС(Стр,"opt/in/ActWriteOff_v3",5,1,СпОтвет) Then
    Exit 0;
  EndIf;
  аКодОтвета:=СпОтвет.GetByName("Результат");
  аКодОтвета:=UpperCase(Replace(аКодОтвета,"-",""));
  If аКодОтвета="" Then
    Message("Внутренняя ошибка ответа (ответ пустой) (3)!","!");
    Exit 0;
  EndIf;
  
  //Ожидаем ответ сервера
  Result:=1;
  стрУдалить:="";
  Try
    СтрРезультат:="";
    Индекс:=0;
    Фл:=0;
    While 1 Do
      Фл:=ЦиклОжиданияОтветаНаЗапрос(аКодОтвета,СтрРезультат,Индекс);
      If not Фл Then
        Continue;
      EndIf;
      
      If Pos("<Conclusion>Rejected</Conclusion>",СтрРезультат)>0 Then
        Message("Сервер отклонил документ списания!","!");
        Тч:=Text.Create();
        Тч.AddString(СтрРезультат);
        Тч.Show("Результат",,1);
        стрУдалить:=аКодОтвета;
        Result:=0;
        Exit;
      ElseIf (Pos("<Conclusion>Accepted</Conclusion>",СтрРезультат)>0)And(Pos("<OperationResult>Rejected</OperationResult>",СтрРезультат)>0) Then  
        If флПоказатьОтвет Then
          Тч:=Text.Create();
          Тч.AddString(СтрРезультат);
          Тч.Show("Результат - Ошибка",,1);
        EndIf;
        РегИдСписания:="";
        If Pos("<RegID>",СтрРезультат)>0 Then
          TearStr(СтрРезультат,"<RegID>");
          РегИдСписания:=TearStr(СтрРезультат,"</RegID>");
        EndIf;
        стрУдалить:=аКодОтвета;
        Break;
      ElseIf (Pos("<Conclusion>Accepted</Conclusion>",СтрРезультат)>0)And(Pos("<OperationResult>Accepted</OperationResult>",СтрРезультат)>0) Then  
      
        Тб.Select();
        While Тб.Next() Do
          If Trim(Тб.Марки)<>"" Then
            СтрМарки:=Тб.Марки;
            While СтрМарки<>"" Do
              Стр:=Trim(TearStr(СтрМарки,Chr(2)));
              aEl:=Ref.тмцМаркировкаПозиций;
              If aEl.FindEx(3,,"~(КодМарки=Стр)And(@Status=0)And(@IsFolder=0)") Then
                Try
                  aEl.Mark(1,,aEl.Parent());
                Except
                  Message("Не удалось списать из системы марку "+Стр+", выполните удаление вручную!","!");
                EndTry;
              EndIf;
            EndDo;
          EndIf;
        EndDo;
      
        If флПоказатьОтвет Then
          Тч:=Text.Create();
          Тч.AddString(СтрРезультат);
          Тч.Show("Результат - Успешно",,1);
        EndIf;
        РегИдСписания:="";
        If Pos("<RegID>",СтрРезультат)>0 Then
          TearStr(СтрРезультат,"<RegID>");
          РегИдСписания:=TearStr(СтрРезультат,"</RegID>");
        EndIf;
        стрУдалить:=аКодОтвета;
        Break;
      EndIf;
      Фл:=0;
    EndDo;  
  Finally
    If not ВыполнитьЗапросЕГАИС(стрУдалить,"opt/in/",8,1) Then
      Exit;
    EndIf;
  EndTry;  
    
  If not Фл Then
    Message("Не удалось получить ответ сервера или внутренняя ошибка (3)!","!");
    Exit 0;
  EndIf;
  
  Exit 1;
EndFunction




//флУстановки: бит 0: не использовать корректировку остатков
//             бит 1: показывать отчет по корректировке остатков
Function ПолучитьТаблицуКорректировки(оМагазин,флУстановки=0)
  Form.StatusText("Нахождение реализаций, не выгруженных в ЕГАИС...");
  КДата:=BegOfDay(Date()+14);
  НДата:=BegOfDay(Date())-90;//365
  
  ТЗ:="Period From НДата to КДата;
  |зЮЛ:=Storage.ОстаткиТМЦ.ЮрЛицо;
  |зМагазин:=Storage.ОстаткиТМЦ.Склад.Магазин;
  |зПартия:=Storage.ОстаткиТМЦ.Партия;
  |Документ:=Storage.ОстаткиТМЦ.@LINK;
  |зИд3Р:=Storage.ОстаткиТМЦ.@LINK..Doc.Реализация.УникальныйИдентификатор3;
  |зИд3В:=Storage.ОстаткиТМЦ.@LINK..Doc.ВозвратОтПокупателя.УникальныйИдентификатор3;
  |Condition((isType(Документ,Doc.Реализация))And((зИд3Р="""")or(Left(зИд3Р,1)=""#""))Or
  |          (isType(Документ,Doc.ВозвратОтПокупателя))And((зИд3В="""")or(Left(зИд3В,1)=""#"")));
  |зАлк:=Storage.ОстаткиТМЦ.Номенклатура.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |зСкЕГАИС:=Storage.ОстаткиТМЦ.Склад.флУчаствуетВЕГАИС;
  |Condition(зСкЕГАИС=1);
  |Condition(зЮЛ=оМагазин.ЮрЛицо);
  |Condition(зМагазин=оМагазин);
  |зКлОПр:=Income(Количество);
  |зКлОРс:=Expense(Количество);
  |Group Документ,зПартия;";
  З:=Query.Create();
  З.Execute(ТЗ,0,1,"Документ,зПартия");
  
  aTab:=З.ResultTable;
  aTab.Sort("Документ,зПартия");
  i:=0;
  While i<aTab.Size() Do
    i:=i+1;
    aTab.CurLine:=i;
    зДок:=aTab.Документ;
    If зДок.DBName()="ВозвратОтПокупателя" Then
      зДок:=зДок.Copy();
      If зДок.КодОперации=Enum.коВозвратОтПокупателя.ВозвратСторнирование Then
        If зДок.УникальныйИдентификатор3="" Then
          aTab.CurLine:=i-1;
          aTab.RemoveLocated("Документ",зДок,1);
          i:=i-1;
          Continue;//Исключаем возвраты-сторнирования, не выгруженные в ЕГАИС
        EndIf;  
      EndIf;
      If (Trim(зДок.УникальныйИдентификатор3)<>"")And(Left(зДок.УникальныйИдентификатор3,1)<>"#") Then
        aTab.CurLine:=i-1;
        aTab.RemoveLocated("Документ",зДок,1);
        i:=i-1;
        Continue;
      EndIf;
    ElseIf зДок.DBName()="Реализация" Then
      If (Trim(aTab.зИд3Р)<>"")And(Left(aTab.зИд3Р,1)<>"#") Then
        aTab.CurLine:=i-1;
        aTab.RemoveLocated("Документ",зДок,1);
        i:=i-1;
        Continue;
      EndIf;
    Else
      aTab.CurLine:=i-1;
      aTab.RemoveLocated("Документ",зДок,1);
      i:=i-1;
      Continue;
    EndIf;
  EndDo;
  З.PostprocessLinear();
  
  If флУстановки and 2<>0 Then
    Т:=Table.Create();
    Т.SetSourceName("Реализации");
    оЗагол:="Отчет по документам корректировки остатков";
    оСвойства:=глСвойстваПечатиПростые();
    Т.CopyByX("v1",1);
  EndIf;  
  
  ТКоррекция:=Tab.Create("зПартия,Количество");
  While З.Next(1) Do
  
    If флУстановки and 2<>0 Then
      пКонтрагент:=З.Документ.Контрагент;
      пАдрес:=З.Документ.АдресДоставки;
      пДокумент:=З.Документ;
      зДок:=З.Документ.Copy();
      пНомерЕГАИС:=Mid(Trim(зДок.УникальныйИдентификатор3),2);
      пСтатус:=СтатусРеализации(Trim(зДок.УникальныйИдентификатор2),Trim(зДок.УникальныйИдентификатор3));
      Ид2:=Trim(зДок.УникальныйИдентификатор2);
      пГУИД:="";
      If Ид2<>"" Then
        //cd1ea33a-9ed6-4780-a373-86f525ef4603    
        пГУИД:=LowerCase(Mid(Ид2,1,8)+"-"+Mid(Ид2,9,4)+"-"+Mid(Ид2,13,4)+"-"+Mid(Ид2,17,4)+"-"+Mid(Ид2,21,12));
      EndIf;
      
      Form.StatusText(Т.Height());
      Т.CopyByX("v2",1);
    EndIf;  
  
    While З.Next(2) Do
      If З.зПартия.Selected()=0 Then
        Continue;
      EndIf;
      аКоличество:=З.Compute("зКлОПр")-З.Compute("зКлОРс");
      If Round(аКоличество,3)=0 Then
        Continue;
      EndIf;
      If З.зПартия.флБезУпаковки=1 Then
        зН:=З.зПартия.Parent();
        аКоличество:=аКоличество*зН.ОбъемЛитров/10;
      EndIf;
      ТКоррекция.AddLine("зПартия,Количество",З.зПартия.Copy(),аКоличество);
    EndDo;
  EndDo;
  ТКоррекция.Group("зПартия","Количество");
  
  If флУстановки and 2<>0 Then
    Т.CopyByX("v3",1);
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  EndIf;  
  
  Exit ТКоррекция;
EndFunction

Function ПолучитьТаблицуПереводаКодовЕГАИСВЭлементы(ТаблицаОстатков=0)
  ТЗ:="зПартия:=Ref.тмцПартииТМЦ;
  |зН:=Ref.тмцПартииТМЦ.@Parent;
  |зСправки:=Ref.тмцПартииТМЦ.ЕГАИСКодСправок;
  |зКодЕГАИС:=Ref.тмцПартииТМЦ.ЕГАИСКодНоменклатуры;
  |зАлк:=Ref.тмцПартииТМЦ.@Parent.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |Group зПартия;";
  З:=Query.Create();
  aTab:=З.Execute(ТЗ,0);
  
  ТабКодЕГАИСВНоменклатуру:=Tab.Create("КодЕГАИС,Номенклатура");
  
  aTab.Select();
  While aTab.Next() Do
    КодЕГАИС:=Trim(aTab.зКодЕГАИС);
    If ТаблицаОстатков<>0 Then
      ТаблицаОстатков.AddLine("зН,зПартия,зКСР,Справки,КодЕГАИС",aTab.зН,aTab.зПартия,aTab.зПартия.КСР,Trim(aTab.зСправки),КодЕГАИС);
    EndIf;
    If КодЕГАИС<>"" Then
      If ТабКодЕГАИСВНоменклатуру.FindAndGoto(КодЕГАИС,,"КодЕГАИС")=0 Then
        ТабКодЕГАИСВНоменклатуру.AddLine("Номенклатура,КодЕГАИС",aTab.зН,КодЕГАИС);
      EndIf;
    EndIf;
  EndDo;
  Exit ТабКодЕГАИСВНоменклатуру;
EndFunction

Function ЗаполнитьТаблицуОстатков(оМагазин,ByRef ТабКодЕГАИСВНоменклатуру,СпСклады=0)
  Form.StatusText("Обработка партий ТМЦ...");
  
  Таб:=Tab.Create("зН,зПартия,зКСР,Справки,КодЕГАИС,НоменклатураЕГАИС,ЕмкостьКрепостьКодАП,КонтрагентИННКодЕГАИС");
  Таб.AddColumn("Остаток",,"Number");       //Остаток БД
  Таб.AddColumn("Остаток2",,"Number");      //Остаток ЕГАИС, регистр 2
  Таб.AddColumn("ОстатокЕГАИС",,"Number");  //Остаток ЕГАИС, регистр 1
  ТабКодЕГАИСВНоменклатуру:=ПолучитьТаблицуПереводаКодовЕГАИСВЭлементы(Таб);
  
  Form.StatusText("Получение остатков по партиям ТМЦ...");
  КДата:=BegOfDay(Date()+14);
  ТЗ:="Period From КДата to КДата;
  |зЮЛ:=Storage.ОстаткиТМЦ.ЮрЛицо;
  |зМагазин:=Storage.ОстаткиТМЦ.Склад.Магазин;
  |зН:=Storage.ОстаткиТМЦ.Партия.@Parent;
  |зПартия:=Storage.ОстаткиТМЦ.Партия;
  |зАлк:=Storage.ОстаткиТМЦ.Номенклатура.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |зСк:=Storage.ОстаткиТМЦ.Склад;
  |зСкЕГАИС:=Storage.ОстаткиТМЦ.Склад.флУчаствуетВЕГАИС;"+
  ?(СпСклады=0,"Condition(зСкЕГАИС=1);","Condition(зСк IN СпСклады);")+
  "Condition(зЮЛ=оМагазин.ЮрЛицо);
  |Condition(зМагазин=оМагазин);  
  |зКл:=EndTotals(Количество);
  |Group зПартия;";
  З:=Query.Create();
  З.Execute(ТЗ,0);
  
  aTab:=З.ResultTable;
  aTab.Select();
  While aTab.Next() Do
    If Таб.FindAndGoto(aTab.зПартия,,"зПартия")>0 Then
      Таб.Остаток:=aTab.зКл;
      //Приводим к цифрам ЕГАИС
      зН:=aTab.зН;
      зПартия:=Таб.зПартия.Copy();
      If Таб.зПартия.флБезУпаковки=1 Then
        Таб.Остаток:=Таб.Остаток*зН.ОбъемЛитров/10;
      EndIf;
    EndIf;
  EndDo;
  
  Exit Таб;
EndFunction
  

        
Function ПолучитьТаблицуРегистра2(Тч,оМагазин,Таб=0,ByRef ТабКодЕГАИСВНоменклатуру,СпСклады=0,ФлИзИнвентаризации=0)
  If Таб=0 Then
    Таб:=ЗаполнитьТаблицуОстатков(оМагазин,ТабКодЕГАИСВНоменклатуру,СпСклады);
  EndIf;
  
  Таб.Sort("КодЕГАИС+,зКСР+");
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Тч.GetLine(i);
    If Pos("<ShopPosition>",Стр)<>1 Then
      Continue;
    EndIf;
    Form.StatusText("Загружено "+i+" из "+Тч.Size());
  
    флИмпорт:=0;//0 -- нет, 1 -- FO (иностранная организация), 2 -- TS (таможенный союз)
    пОст:=0;
    пНоменклатура:="";
    пУпаковка:=1;
    пКодЕГАИС:="";
    пЕмкость:="";
    пКрепость:="";
    пКодАП:="";
    пКонтрагент:="";
    пКодЕГАИСКонтрагент:="";
    пИНН:="";
    пКПП:="";
    пСправки:="";
    ФлКонтрагент:=0;
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Тч.GetLine(i);
      If Стр="</ShopPosition>" Then
        Break;
      ElseIf _And(not ФлКонтрагент,Pos("<FullName>",Стр)=1) Then
        TearStr(Стр,">");
        пНоменклатура:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<Quantity>",Стр)=1 Then
        TearStr(Стр,">");
        пОст:=Number(TearStr(Стр,"<"));
      ElseIf Pos("<AlcCode>",Стр)=1 Then
        TearStr(Стр,">");
        пКодЕГАИС:=TearStr(Стр,"<");
      ElseIf Pos("<Capacity>",Стр)=1 Then
        TearStr(Стр,">");
        пЕмкость:=TearStr(Стр,"<");
      ElseIf Pos("<UnitType>",Стр)=1 Then
        TearStr(Стр,">");
        пУпаковка:=Uppercase(TearStr(Стр,"<"))<>"UNPACKED";
      ElseIf Pos("<AlcVolume>",Стр)=1 Then
        TearStr(Стр,">");
        пКрепость:=TearStr(Стр,"<");
      ElseIf Pos("<ProductVCode>",Стр)=1 Then
        TearStr(Стр,">");
        пКодАП:=TearStr(Стр,"<");
      ElseIf _And(ФлКонтрагент,Pos("<FullName>",Стр)=1) Then
        TearStr(Стр,">");
        пКонтрагент:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<ClientRegId>",Стр)=1 Then
        TearStr(Стр,">");
        пКодЕГАИСКонтрагент:=TearStr(Стр,"<");
      ElseIf Pos("<UL>",Стр)=1 Then
        ФлКонтрагент:=1;
      ElseIf Pos("<FO>",Стр)=1 Then
        флИмпорт:=1;
        ФлКонтрагент:=1;
      ElseIf Pos("<TS>",Стр)=1 Then
        флИмпорт:=2;
        ФлКонтрагент:=1;
      ElseIf Pos("<INN>",Стр)=1 Then
        TearStr(Стр,">");
        пИНН:=TearStr(Стр,"<");
      ElseIf Pos("<KPP>",Стр)=1 Then
        TearStr(Стр,">");
        пКПП:=TearStr(Стр,"<");
      EndIf;
    EndDo;
    
    If Таб.FindAndGoto(пКодЕГАИС,,"КодЕГАИС",1)=0 Then
      зН:="< "+пНоменклатура+" >";
      If ТабКодЕГАИСВНоменклатуру.FindAndGoto(пКодЕГАИС,,"КодЕГАИС")>0 Then
        зН:=ТабКодЕГАИСВНоменклатуру.Номенклатура;
      EndIf;
      Таб.AddLineSorted("КодЕГАИС,зКСР","зН,зПартия,КодЕГАИС,зКСР",зН,"< "+пКодЕГАИС+" >",пКодЕГАИС,'31.12.2099');
    EndIf;
    Таб.ЕмкостьКрепостьКодАП:=пЕмкость+"@"+пКрепость+"@"+пКодАП+"@"+флИмпорт+"@"+пУпаковка;
    Таб.КонтрагентИННКодЕГАИС:=пИНН+"@"+пКПП+"@"+пКодЕГАИСКонтрагент+"@"+пКонтрагент;
    Таб.НоменклатураЕГАИС:=пНоменклатура;
    //Распределяем остаток
    If ФлИзИнвентаризации Then
      Таб.Остаток2:=пОст;
    Else
      While пОст>0 Do
        ФлСлед:=_And(Таб.CurLine<Таб.Size(),Таб["КодЕГАИС",Таб.CurLine+1]=пКодЕГАИС);
        Чл:=Round(Таб.Остаток-Таб.ОстатокЕГАИС,6);
        If _Or(Чл>0,not ФлСлед) Then
          Таб.Остаток2:=?(ФлСлед,Min(Чл,пОст),пОст);
          пОст:=Round(пОст-Таб.Остаток2,6);
        EndIf;
        If not ФлСлед Then
          Break;
        EndIf;
        Таб.CurLine:=Таб.CurLine+1;
      EndDo;
    EndIf;
  EndDo;
  Exit Таб;
EndFunction

//флУстановки: бит 0: не использовать корректировку остатков
//             бит 1: показывать отчет по корректировке остатков
Function ПолучитьТаблицуСравненияОстатков(Тч,оМагазин,ByRef ТабКодЕГАИСВНоменклатуру,СпСклады=0,флДопДанные=0,флУстановки=0);
  Таб:=ЗаполнитьТаблицуОстатков(оМагазин,ТабКодЕГАИСВНоменклатуру,СпСклады);

  If флУстановки and 1<>0 Then
    ТКоррекция:=Tab.Create("зПартия,Количество");
  Else
    ТКоррекция:=ПолучитьТаблицуКорректировки(оМагазин,флУстановки);
    If ТКоррекция=0 Then
      Exit 0;
    EndIf;
  EndIf;  

  Таб.Sort("зПартия+");
  ТКоррекция.Select();
  While ТКоррекция.Next() Do
    зН:=ТКоррекция.зПартия.Parent();
    КодЕГАИС:=Trim(ТКоррекция.зПартия.ЕГАИСКодНоменклатуры);
    зКл:=ТКоррекция.Количество;
    If ТКоррекция.зПартия.флБезУпаковки=1 Then
      зКл:=зКл*зН.ОбъемЛитров/10;
    EndIf;
    If Таб.FindAndGoto(ТКоррекция.зПартия,,"зПартия",1)>0 Then
      Таб.Остаток:=Таб.Остаток-зКл;
    Else
      Таб.AddLineSorted("зПартия","зН,зПартия,зКСР,Справки,КодЕГАИС,Остаток",зН,ТКоррекция.зПартия,ТКоррекция.зПартия.КСР,Trim(ТКоррекция.зПартия.ЕГАИСКодСправок),КодЕГАИС,-зКл);
    EndIf;  
    If КодЕГАИС<>"" Then
      If ТабКодЕГАИСВНоменклатуру.FindAndGoto(КодЕГАИС,,"КодЕГАИС")=0 Then
        ТабКодЕГАИСВНоменклатуру.AddLine("Номенклатура,КодЕГАИС",зН,КодЕГАИС);
      EndIf;
    EndIf;
  EndDo;
  aTab:=0;
  З:=0;
  
  Таб.Sort("Справки+");
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Тч.GetLine(i);
    If Pos("<StockPosition>",Стр)<>1 Then
      Continue;
    EndIf;
    Form.StatusText("Загружено "+i+" из "+Тч.Size());
  
    флИмпорт:=0;//0 -- нет, 1 -- FO (иностранная организация), 2 -- TS (таможенный союз)
    пОст:=0;
    пОст2:=0;
    пНоменклатура:="";
    пУпаковка:=1;
    пКодЕГАИС:="";
    пЕмкость:="";
    пКрепость:="";
    пКодАП:="";
    пКонтрагент:="";
    пКодЕГАИСКонтрагент:="";
    пИНН:="";
    пКПП:="";
    пСправки:="";
    пСправкаА:="";
    пСправкаБ:="";
    ФлКонтрагент:=0;
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Тч.GetLine(i);
      If Стр="</StockPosition>" Then
        Break;
      ElseIf _And(not ФлКонтрагент,Pos("<FullName>",Стр)=1) Then
        TearStr(Стр,">");
        пНоменклатура:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<Quantity>",Стр)=1 Then
        TearStr(Стр,">");
        пОст:=Number(TearStr(Стр,"<"));
      ElseIf Pos("<AlcCode>",Стр)=1 Then
        TearStr(Стр,">");
        пКодЕГАИС:=TearStr(Стр,"<");
      ElseIf Pos("<Capacity>",Стр)=1 Then
        TearStr(Стр,">");
        пЕмкость:=TearStr(Стр,"<");
      ElseIf Pos("<UnitType>",Стр)=1 Then
        TearStr(Стр,">");
        пУпаковка:=Uppercase(TearStr(Стр,"<"))<>"UNPACKED";
      ElseIf Pos("<AlcVolume>",Стр)=1 Then
        TearStr(Стр,">");
        пКрепость:=TearStr(Стр,"<");
      ElseIf Pos("<ProductVCode>",Стр)=1 Then
        TearStr(Стр,">");
        пКодАП:=TearStr(Стр,"<");
      ElseIf _And(ФлКонтрагент,Pos("<FullName>",Стр)=1) Then
        TearStr(Стр,">");
        пКонтрагент:=DecodeXMLString(TearStr(Стр,"<"));
      ElseIf Pos("<ClientRegId>",Стр)=1 Then
        TearStr(Стр,">");
        пКодЕГАИСКонтрагент:=TearStr(Стр,"<");
      ElseIf Pos("<UL>",Стр)=1 Then
        ФлКонтрагент:=1;
      ElseIf Pos("<FO>",Стр)=1 Then
        флИмпорт:=1;
        ФлКонтрагент:=1;
      ElseIf Pos("<TS>",Стр)=1 Then
        флИмпорт:=2;
        ФлКонтрагент:=1;
      ElseIf Pos("<INN>",Стр)=1 Then
        TearStr(Стр,">");
        пИНН:=TearStr(Стр,"<");
      ElseIf Pos("<KPP>",Стр)=1 Then
        TearStr(Стр,">");
        пКПП:=TearStr(Стр,"<");
      ElseIf Pos("<InformF1RegId>",Стр)=1 Then
        TearStr(Стр,">");
        пСправкаА:=TearStr(Стр,"<");
      ElseIf Pos("<InformF2RegId>",Стр)=1 Then
        TearStr(Стр,">");
        пСправкаБ:=TearStr(Стр,"<");
      EndIf;
    EndDo;
    пСправки:=пСправкаА+"###"+пСправкаБ;
    
    If Таб.FindAndGoto(пСправки,,"Справки",1)=0 Then
      зН:="< "+пНоменклатура+" >";
      If ТабКодЕГАИСВНоменклатуру.FindAndGoto(пКодЕГАИС,,"КодЕГАИС")>0 Then
        зН:=ТабКодЕГАИСВНоменклатуру.Номенклатура;
      EndIf;
      Таб.AddLineSorted("Справки","зН,зПартия,зКСР,Справки,КодЕГАИС",зН,"< "+пСправки+" >",'31.12.2099',пСправки,пКодЕГАИС);
    EndIf;
    Таб.ОстатокЕГАИС:=пОст;
    If флДопДанные Then
      Таб.ЕмкостьКрепостьКодАП:=пЕмкость+"@"+пКрепость+"@"+пКодАП+"@"+флИмпорт+"@"+пУпаковка;
      Таб.КонтрагентИННКодЕГАИС:=пИНН+"@"+пКПП+"@"+пКодЕГАИСКонтрагент+"@"+пКонтрагент;
      Таб.НоменклатураЕГАИС:=пНоменклатура;
    EndIf;  
  EndDo;
  
  Exit Таб;
EndFunction


//флТип: 0 -- полные остатки
//       1 -- вызов отчета по списанию партий
//       2 -- отчет по регистру 2 без сравнения
//флУстановки: бит 0: не использовать корректировку остатков
//             бит 1: показывать отчет по корректировке остатков
Function ВывестиОтчетОстаткам(Файл1,Файл2,флТип,Склад=0,флУстановки=0)
  Var Таб Export;

  Function _Coalesce(Стл)
    aNum:=Таб.CurLine;
    Справки:=Таб.Справки;
    Стр:=Таб.Get(aNum,Стл);
    While IsEmpty(Стр) Do
      If _Or(aNum=Таб.Size(),Таб.Get(aNum+1,"Справки")<>Справки) Then
        Exit Стр;
      EndIf;
      aNum:=aNum+1;
      Стр:=Таб.Get(aNum,Стл);
    EndDo;
    Exit Стр;
  EndFunction

  Form.StatusText("Обработка партий ТМЦ...");
  оМагазин:=Form.оМагазин.Value;
  
  СпСклады:=0;
  If флТип>0 Then
    СпСклады:=List.Create();
    СпСклады.Add(Склад);
    ТЗ:="зСк:=Ref.общСклады;зСкЕГАИС:=Ref.общСклады.флУчаствуетВЕГАИС;Condition(зСкЕГАИС=1);Group зСк;";
    З:=Query.Create();
    З.Execute(ТЗ,2);
    While З.Next(1) Do
      СпСклады.Add(З.зСк);
    EndDo;
  EndIf;
  ТабКодЕГАИСВНоменклатуру:=0;
  
  //Отчет только по регистру 2
  If флТип=2 Then
    Тч:=Text.Create();
    Тч.Load(Файл2,0);
    Таб2:=ПолучитьТаблицуРегистра2(Тч,оМагазин,0,ТабКодЕГАИСВНоменклатуру,СпСклады);
    If Таб2=0 Then
      Exit;
    EndIf;
    Form.StatusText("Вывод результата...");
    Т:=Table.Create();
    Т.SetSourceName("ОстаткиРегистр2");
    оЗагол:="Отчет по сверке остатков с регистром 2 ЕГАИС (без учета обычных остатков ЕГАИС), магазин: "+оМагазин;
    оСвойства:=глСвойстваПечатиПростые()+_NEWLINE+"Рекомендуется отправить все списания на регистре 2 до формирования отчета!";
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();  

    Строк:=0;
    аРазницаОбщая:=0;
    аОстОбщие:=0;
    аОстОбщие2:=0;
    аОстОбъем:=0;
    аОстОбъем2:=0;
    ПрошКодЕГАИС:="";
    
    Таб.Sort("КодЕГАИС+,зН+");
    Таб.Select();
    While Таб.Next() Do
      If (Round(Таб.Остаток2,3)=0)And(Round(Таб.Остаток,3)=0) Then
        Continue;
      EndIf;
      аПартия:=?(IsDBObject(Таб.зПартия),Таб.зПартия.Copy(),GetNothing());
      If _And(IsDBObject(Таб.зПартия),Таб.зПартия.флМарочныйУчет,Round(Таб.Остаток2,3)=0) Then
        Continue;
      EndIf;
      
      If ПрошКодЕГАИС<>Таб.КодЕГАИС Then
        If Строк>1 Then
          Т.Area(11,Т.Height()-Строк+1,11,Т.Height()-Строк+1).Text:=глФРМЧл(аРазницаОбщая);
          Т.Area(2,Т.Height(),2,Т.Height()-Строк+1).Merge();
          Т.Area(5,Т.Height(),5,Т.Height()-Строк+1).Merge();
          Т.Area(11,Т.Height(),11,Т.Height()-Строк+1).Merge();
          Т.Area(12,Т.Height(),12,Т.Height()-Строк+1).Merge();
          Т.Area(13,Т.Height(),13,Т.Height()-Строк+1).Merge();
          Т.Area(14,Т.Height(),14,Т.Height()-Строк+1).Merge();
          Т.Area(15,Т.Height(),15,Т.Height()-Строк+1).Merge();
          Т.Area(16,Т.Height(),16,Т.Height()-Строк+1).Merge();
          Т.Area(17,Т.Height(),17,Т.Height()-Строк+1).Merge();
        EndIf;
        ПрошКодЕГАИС:=Таб.КодЕГАИС;
        аРазницаОбщая:=0;
        Строк:=0;
      EndIf;
      
      пНоменклатура:=?(Строк=0,_Coalesce("НоменклатураЕГАИС"),Таб.НоменклатураЕГАИС);
      пКод:=глПолучитьКод(Таб.зН);
      пТМЦПартия:=?(isEmpty(Таб.зН),"",""+Таб.зН+_NEWLINE)+аПартия;
      пКодЕГАИС:=Таб.КодЕГАИС;
      Стр:=?(Строк=0,_Coalesce("ЕмкостьКрепостьКодАП"),Таб.ЕмкостьКрепостьКодАП);
      пЕмкость:=TearStr(Стр,"@");
      пКрепость:=TearStr(Стр,"@");
      пКодАП:=TearStr(Стр,"@");
      флИмпорт:=Number(TearStr(Стр,"@"));
      Стр:=?(Строк=0,_Coalesce("КонтрагентИННКодЕГАИС"),Таб.КонтрагентИННКодЕГАИС);
      пИНН:=TearStr(Стр,"@");
      пКПП:=TearStr(Стр,"@");
      пКодЕГАИСКонтрагент:=TearStr(Стр,"@");
      пКонтрагент:=Стр;
      пСправки:=Таб.Справки;
      
      пДней:="";
      пТип:="Неизвестно!";
      пИмпорт:=?(флИмпорт=1,"ДА",?(флИмпорт=2,"ТС",""));
      If not isEmpty(аПартия) Then
        пДней:=?(_Or(IsEmpty(аПартия.КСР)+IsEmpty(аПартия.Дата)>0,аПартия.КСР<=аПартия.Дата),"",аПартия.КСР-BegOfDay(Date()));
        пТип:=?(аПартия.флБезУпаковки=1,"Без упаковки (дал)","");
        If аПартия.флИмпортнаяПродукция<>флИмпорт Then
          пИмпорт:=?(аПартия.флИмпортнаяПродукция=1,"ДА",?(аПартия.флИмпортнаяПродукция=2,"ТС","НЕТ"))+?(флИмпорт=1,"+ ДА",?(флИмпорт=2,"+ ТС","+ НЕТ"));
        Else
          пИмпорт:=?(аПартия.флИмпортнаяПродукция=1,"ДА",?(аПартия.флИмпортнаяПродукция=2,"ТС",""))+?(флИмпорт=1,"+ ДА",?(флИмпорт=2,"+ ТС",""));
        EndIf;
        зКл:=Таб.Остаток2;
        зКл2:=Таб.Остаток;
        If аПартия.флБезУпаковки=0 Then
          зКл2:=зКл2*Таб.зН.ОбъемЛитров/10;
          зКл:=зКл*Таб.зН.ОбъемЛитров/10;
        EndIf;
        аОстОбъем2:=аОстОбъем2+зКл2;
        аОстОбъем:=аОстОбъем+зКл;
      EndIf;  
      аОст:=Таб.Остаток2;
      аОст2:=Таб.Остаток;
      аОстОбщие:=аОстОбщие+аОст;
      аОстОбщие2:=аОстОбщие2+аОст2;
      
      пРазница:=аОст-аОст2;
      аРазницаОбщая:=аРазницаОбщая+пРазница;
      пОст:=глФРМЧл(аОст);
      пОст2:=глФРМЧл(аОст2);
      пРазница:=глФРМЧл(пРазница);
      Строк:=Строк+1;
      Т.CopyByX("v2",1);
    EndDo;
    If Строк>1 Then
      Т.Area(10,Т.Height()-Строк+1,10,Т.Height()-Строк+1).Text:=глФРМЧл(аРазницаОбщая);
      Т.Area(2,Т.Height(),2,Т.Height()-Строк+1).Merge();
      Т.Area(5,Т.Height(),5,Т.Height()-Строк+1).Merge();
      Т.Area(11,Т.Height(),11,Т.Height()-Строк+1).Merge();
      Т.Area(12,Т.Height(),12,Т.Height()-Строк+1).Merge();
      Т.Area(13,Т.Height(),13,Т.Height()-Строк+1).Merge();
      Т.Area(14,Т.Height(),14,Т.Height()-Строк+1).Merge();
      Т.Area(15,Т.Height(),15,Т.Height()-Строк+1).Merge();
      Т.Area(16,Т.Height(),16,Т.Height()-Строк+1).Merge();
      Т.Area(17,Т.Height(),17,Т.Height()-Строк+1).Merge();
    EndIf;
    
    пОст:=глФРМЧл(аОстОбщие);
    пОст2:=глФРМЧл(аОстОбщие2);
    Т.CopyByX("v3",1);
    Form.StatusText(Т.Height());
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
    Exit;
  EndIf;
  
  
  Тч:=Text.Create();
  Тч.Load(Файл1,0);
  Таб:=ПолучитьТаблицуСравненияОстатков(Тч,оМагазин,ТабКодЕГАИСВНоменклатуру,СпСклады,флТип=0,флУстановки);
  If Таб=0 Then
    Exit;
  EndIf;
  
  Тч:=Text.Create();
  Тч.Load(Файл2,0);
  If ПолучитьТаблицуРегистра2(Тч,оМагазин,Таб,ТабКодЕГАИСВНоменклатуру,СпСклады)=0 Then
    Exit;
  EndIf;
  
  Form.StatusText("Вывод результата...");
  Т:=Table.Create();
  Т.SetSourceName("Остатки");
  оЗагол:="Отчет по сверке остатков с ЕГАИС, магазин: "+оМагазин;
  оСвойства:=глСвойстваПечатиПростые()+_NEWLINE+"Рекомендуется отправить все списания на регистре 2 до формирования отчета!";
  Т.CopyByX("v1",1);
  Т.Options.FixedLine:=Т.Height();  
  
  //Вывод простого отчета
  If флТип=0 Then
  
    Строк:=0;
    аРазницаОбщая:=0;
    аОстОбщие:=0;
    аОстОбщие2:=0;
    аОстОбщие3:=0;
    аОстОбъем:=0;
    аОстОбъем2:=0;
    ПрошСправки:="";
    
    Таб.Sort("Справки+,зН+");
    Таб.Select();
    While Таб.Next() Do
      If (Round(Таб.Остаток,3)=0)And(Round(Таб.Остаток2,3)=0)And(Round(Таб.ОстатокЕГАИС,3)=0) Then
        Continue;
      EndIf;
      If ПрошСправки<>Таб.Справки Then
        If Строк>1 Then
          Т.Area(11,Т.Height()-Строк+1,11,Т.Height()-Строк+1).Text:=глФРМЧл(аРазницаОбщая);
          Т.Area(2,Т.Height(),2,Т.Height()-Строк+1).Merge();
          Т.Area(6,Т.Height(),6,Т.Height()-Строк+1).Merge();
          Т.Area(9,Т.Height(),9,Т.Height()-Строк+1).Merge();
          Т.Area(12,Т.Height(),12,Т.Height()-Строк+1).Merge();
          Т.Area(13,Т.Height(),13,Т.Height()-Строк+1).Merge();
          Т.Area(14,Т.Height(),14,Т.Height()-Строк+1).Merge();
          Т.Area(15,Т.Height(),15,Т.Height()-Строк+1).Merge();
          Т.Area(16,Т.Height(),16,Т.Height()-Строк+1).Merge();
          Т.Area(17,Т.Height(),17,Т.Height()-Строк+1).Merge();
          Т.Area(18,Т.Height(),18,Т.Height()-Строк+1).Merge();
          Т.Area(19,Т.Height(),19,Т.Height()-Строк+1).Merge();
          Т.Area(20,Т.Height(),20,Т.Height()-Строк+1).Merge();
        EndIf;
        ПрошСправки:=Таб.Справки;
        аРазницаОбщая:=0;
        Строк:=0;
      EndIf;
      
      аПартия:=?(IsDBObject(Таб.зПартия),Таб.зПартия.Copy(),GetNothing());
      пНоменклатура:=?(Строк=0,_Coalesce("НоменклатураЕГАИС"),Таб.НоменклатураЕГАИС);
      пКод:=глПолучитьКод(Таб.зН);
      пТМЦПартия:=?(isEmpty(Таб.зН),"",""+Таб.зН+_NEWLINE)+аПартия;
      пКодЕГАИС:=Таб.КодЕГАИС;
      Стр:=?(Строк=0,_Coalesce("ЕмкостьКрепостьКодАП"),Таб.ЕмкостьКрепостьКодАП);
      пЕмкость:=TearStr(Стр,"@");
      пКрепость:=TearStr(Стр,"@");
      пКодАП:=TearStr(Стр,"@");
      флИмпорт:=Number(TearStr(Стр,"@"));
      Стр:=?(Строк=0,_Coalesce("КонтрагентИННКодЕГАИС"),Таб.КонтрагентИННКодЕГАИС);
      пИНН:=TearStr(Стр,"@");
      пКПП:=TearStr(Стр,"@");
      пКодЕГАИСКонтрагент:=TearStr(Стр,"@");
      пКонтрагент:=Стр;
      пСправки:=Таб.Справки;
      
      пДней:="";
      пТип:="Неизвестно!";
      пИмпорт:=?(флИмпорт=1,"ДА",?(флИмпорт=2,"ТС",""));
      If not isEmpty(аПартия) Then
        пДней:=?(_Or(IsEmpty(аПартия.КСР)+IsEmpty(аПартия.Дата)>0,аПартия.КСР<=аПартия.Дата),"",аПартия.КСР-BegOfDay(Date()));
        пТип:=?(аПартия.флБезУпаковки=1,"Без упаковки (дал)","");
        If аПартия.флИмпортнаяПродукция<>флИмпорт Then
          пИмпорт:=?(аПартия.флИмпортнаяПродукция=1,"ДА",?(аПартия.флИмпортнаяПродукция=2,"ТС","НЕТ"))+?(флИмпорт=1,"+ ДА",?(флИмпорт=2,"+ ТС","+ НЕТ"));
        Else
          пИмпорт:=?(аПартия.флИмпортнаяПродукция=1,"ДА",?(аПартия.флИмпортнаяПродукция=2,"ТС",""))+?(флИмпорт=1,"+ ДА",?(флИмпорт=2,"+ ТС",""));
        EndIf;
        зКл:=Таб.ОстатокЕГАИС+Таб.Остаток2;
        зКл2:=Таб.Остаток;
        If аПартия.флБезУпаковки=0 Then
          зКл2:=зКл2*Таб.зН.ОбъемЛитров/10;
          зКл:=зКл*Таб.зН.ОбъемЛитров/10;
        EndIf;
        аОстОбъем2:=аОстОбъем2+зКл2;
        аОстОбъем:=аОстОбъем+зКл;
      EndIf;  
      аОст:=Таб.ОстатокЕГАИС;
      аОст2:=Таб.Остаток;
      аОст3:=Таб.Остаток2;
      аОстОбщие:=аОстОбщие+аОст;
      аОстОбщие2:=аОстОбщие2+аОст2;
      аОстОбщие3:=аОстОбщие3+аОст3;
      
      пРазница:=аОст+аОст3-аОст2;
      аРазницаОбщая:=аРазницаОбщая+пРазница;
      пОст:=глФРМЧл(?(Строк=0,_Coalesce("ОстатокЕГАИС"),аОст));
      пОст2:=глФРМЧл(аОст2);
      пОст3:=глФРМЧл(аОст3);
      пРазница:=глФРМЧл(пРазница);
      Строк:=Строк+1;
      Т.CopyByX("v2",1);
    EndDo;
    If Строк>1 Then
      Т.Area(11,Т.Height()-Строк+1,11,Т.Height()-Строк+1).Text:=глФРМЧл(аРазницаОбщая);
      Т.Area(2,Т.Height(),2,Т.Height()-Строк+1).Merge();
      Т.Area(6,Т.Height(),6,Т.Height()-Строк+1).Merge();
      Т.Area(9,Т.Height(),9,Т.Height()-Строк+1).Merge();
      Т.Area(12,Т.Height(),12,Т.Height()-Строк+1).Merge();
      Т.Area(13,Т.Height(),13,Т.Height()-Строк+1).Merge();
      Т.Area(14,Т.Height(),14,Т.Height()-Строк+1).Merge();
      Т.Area(15,Т.Height(),15,Т.Height()-Строк+1).Merge();
      Т.Area(16,Т.Height(),16,Т.Height()-Строк+1).Merge();
      Т.Area(17,Т.Height(),17,Т.Height()-Строк+1).Merge();
      Т.Area(18,Т.Height(),18,Т.Height()-Строк+1).Merge();
      Т.Area(19,Т.Height(),19,Т.Height()-Строк+1).Merge();
      Т.Area(20,Т.Height(),20,Т.Height()-Строк+1).Merge();
    EndIf;
    пОст:=глФРМЧл(аОстОбщие);
    пОст2:=глФРМЧл(аОстОбщие2);
    пИтого:="Итого дал по данным ЕГАИС (исключая несопоставленные партии): "+глФРМЧл(аОстОбъем)+" дал, по нашим данным: "+глФРМЧл(аОстОбъем2)+" дал.";
    Т.CopyByX("v3",1);
    Form.StatusText(Т.Height());
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
    Exit;
  ElseIf флТип=1 Then
    Таб.Column("зПартия").ForbidMassLoad:=1; //Экономия памяти
    Таб.Sort("зН+,Справки+");
  
    aList:=List.Create();
    aList.SetByName("оМагазин",оМагазин);
    aList.SetByName("Таб",Таб);
    LoadModule(0,"Modules\FreeForms\УчетныеОтделы\Бухгалтерия\Отчетность\ОбработкаЕГАИС",aList,0,"Module","СписаниеПартий");
    If aList.GetByName("Ответ")<>1 Then
      Exit;
    EndIf;
    
    Тб:=aList.GetByName("Тб");
    ВыполнитьСписаниеПоТаблицеСписания(Тб);
    Exit;
  EndIf;
EndFunction

Function OnDoubleClick(Таб)
  Result:=0;
  If глРаботаСОсобымиИконкамиТаблицы(Таб) Then
    Exit;
  EndIf;
  if Таб.SelectionMode>1 then
    Exit 1;
  EndIf;  
  Сп:=Таб.Area(Таб.CurCol,Таб.CurLine,Таб.CurCol,Таб.CurLine).Value;
  If TypeStr(Сп)<>"LIST" Then
    Exit 1;
  EndIf;
  If Сп.GetByName("ЕГАИС")=1 Then
    If Сп.GetByName("ПоказатьМарки")=1 Then
      Тч:=Text.Create();
      Тч.AddString("--- Ящики ---");
      Тч.AddString(Replace(Сп.GetByName("Ящики"),"###",_NEWLINE));
      Тч.AddString("--- Марки и ящики ---");
      Тч.AddString(Replace(Сп.GetByName("Марки"),"###",_NEWLINE));
      Тч.Show("Марки",,1);
      Exit;
    EndIf;
  EndIf;
  
  If Сп.Size()=1 Then
    OpenObject(Сп.Get(1),0,1);
  Else
    Об:=0;
    If Сп.Select(Об,0,"Выбор объекта")>0 Then
      OpenObject(Об,0,1);
    EndIf;
  EndIf;  
EndFunction

Function ЕслиЗаполнена()
  If ((Trim(ОприходованиеТабФайл.НомерТТН)<>"")And(not isEmpty(ОприходованиеТабФайл.ДатаТТН))And(ОприходованиеТабФайл.КоличествоТТН<>0)And(not isEmpty(ОприходованиеТабФайл.ДатаРазлива))And
      (Trim(ОприходованиеТабФайл.КодЕГАИС)<>"")And(Trim(ОприходованиеТабФайл.РегНомерЕГАИС)<>"")And(not isEmpty(ОприходованиеТабФайл.РегДатаЕГАИС)))Or(ОприходованиеТабФайл.флИзПартии=1) Then
    If Trim(ОприходованиеТабФайл.Марки)<>"" Then
      Exit "ДА + МАРКИ";
    Else
      Exit "ДА";
    EndIf;
  EndIf;
  
  If (Trim(ОприходованиеТабФайл.НомерТТН)<>"")Or(not isEmpty(ОприходованиеТабФайл.ДатаТТН))Or(ОприходованиеТабФайл.КоличествоТТН<>0)Or(not isEmpty(ОприходованиеТабФайл.ДатаРазлива))Or
      (Trim(ОприходованиеТабФайл.КодЕГАИС)<>"")Or(Trim(ОприходованиеТабФайл.РегНомерЕГАИС)<>"")Or(not isEmpty(ОприходованиеТабФайл.РегДатаЕГАИС)) Then
    If Trim(ОприходованиеТабФайл.Марки)<>"" Then
      Exit "ЧАСТИЧНО + МАРКИ";
    Else
      Exit "ЧАСТИЧНО";
    EndIf;
  EndIf;
  Exit "";
EndFunction

Function ОприходованиеОбновитьДоступность(ФлДоступ=1);
  Form.оИзПартии.isDisabled:=1-ФлДоступ;
  ФлДост2:=Min(ФлДоступ,1-Form.оИзПартии.Value);
  Form.оНомерТТН.isDisabled:=1-ФлДост2;
  Form.оДатаТТН.isDisabled:=1-ФлДост2;
  Form.оКоличество.isDisabled:=1-ФлДост2;
  Form.оДатаРазлива.isDisabled:=1-ФлДост2;
  Form.флИмпортнаяПродукция.isDisabled:=1-ФлДост2;
  Form.оКодЕГАИС.isDisabled:=1-ФлДост2;
  Form.оРегНомерЕГАИС.isDisabled:=1-ФлДост2;
  Form.оРегДатаЕГАИС.isDisabled:=1-ФлДост2;
  Form.оМарки.isDisabled:=1-ФлДост2;
EndFunction


Function ОприходованиеСохранитьСтроку()
  оТабСтроки:=Form.оТабСтроки.Value;
  If ОприходованиеСтараяСтрока<=0 Then
    Exit;
  EndIf;
  СтрФайл:=оТабСтроки.Get(ОприходованиеСтараяСтрока,"СтрокаВФайле");
  ФлПропуск:=?(оТабСтроки.Get(ОприходованиеСтараяСтрока,"Пропуск")=пПропуск,1,0);
  ОприходованиеТабФайл.CurLine:=СтрФайл;
  Фл:=(ОприходованиеТабФайл.флИзПартии<>Form.оИзПартии.Value)Or(ОприходованиеТабФайл.НомерТТН<>Form.оНомерТТН.Value)Or(ОприходованиеТабФайл.ДатаТТН<>Form.оДатаТТН.Value)Or(ОприходованиеТабФайл.КоличествоТТН<>Form.оКоличество.Value)
    Or(ОприходованиеТабФайл.ДатаРазлива<>Form.оДатаРазлива.Value)Or(ОприходованиеТабФайл.КодЕГАИС<>Form.оКодЕГАИС.Value)Or(ОприходованиеТабФайл.РегНомерЕГАИС<>Form.оРегНомерЕГАИС.Value)Or(ОприходованиеТабФайл.РегДатаЕГАИС<>Form.оРегДатаЕГАИС.Value)
    Or(ОприходованиеТабФайл.Марки<>Form.оМарки.Value)Or(ОприходованиеТабФайл.флПропущена<>ФлПропуск)Or(ОприходованиеТабФайл.флИмпортнаяПродукция<>Form.флИмпортнаяПродукция.Value);
  If Фл Then
    ОприходованиеТабФайл.флИзПартии:=Form.оИзПартии.Value;
    ОприходованиеТабФайл.НомерТТН:=Form.оНомерТТН.Value;
    ОприходованиеТабФайл.ДатаТТН:=Form.оДатаТТН.Value;
    ОприходованиеТабФайл.КоличествоТТН:=Form.оКоличество.Value;
    ОприходованиеТабФайл.ДатаРазлива:=Form.оДатаРазлива.Value;
    ОприходованиеТабФайл.флИмпортнаяПродукция:=Form.флИмпортнаяПродукция.Value;
    ОприходованиеТабФайл.КодЕГАИС:=Form.оКодЕГАИС.Value;
    ОприходованиеТабФайл.РегНомерЕГАИС:=Form.оРегНомерЕГАИС.Value;
    ОприходованиеТабФайл.РегДатаЕГАИС:=Form.оРегДатаЕГАИС.Value;
    ОприходованиеТабФайл.Марки:=Form.оМарки.Value;
    ОприходованиеТабФайл.флПропущена:=ФлПропуск;
    Form.IsChanged(1);
    оТабСтроки.Set(ОприходованиеСтараяСтрока,"Заполнена",ЕслиЗаполнена());
  EndIf;
EndFunction


Function ОприходованиеОбновитьСтроку(флФорс=0);
  оТабСтроки:=Form.оТабСтроки.Value;
  If ОприходованиеСтараяСтрока=оТабСтроки.SelectedLine Then
    If not флФорс Then
      Exit;
    EndIf;
  Else
    ОприходованиеСохранитьСтроку();
  EndIf;
  
  ОприходованиеСтараяСтрока:=оТабСтроки.SelectedLine;
  If ОприходованиеСтараяСтрока=0 Then
    ОприходованиеОбновитьДоступность(0);
    Exit;
  EndIf;
  СтрФайл:=оТабСтроки.Get(ОприходованиеСтараяСтрока,"СтрокаВФайле");
  ОприходованиеТабФайл.CurLine:=СтрФайл;
  Form.оИзПартии.Value:=ОприходованиеТабФайл.флИзПартии;
  Form.оНомерТТН.Value:=ОприходованиеТабФайл.НомерТТН;
  Form.оДатаТТН.Value:=ОприходованиеТабФайл.ДатаТТН;
  Form.оКоличество.Value:=ОприходованиеТабФайл.КоличествоТТН;
  Form.оДатаРазлива.Value:=ОприходованиеТабФайл.ДатаРазлива;
  Form.флИмпортнаяПродукция.Value:=ОприходованиеТабФайл.флИмпортнаяПродукция;
  Form.оКодЕГАИС.Value:=ОприходованиеТабФайл.КодЕГАИС;
  Form.оРегНомерЕГАИС.Value:=ОприходованиеТабФайл.РегНомерЕГАИС;
  Form.оРегДатаЕГАИС.Value:=ОприходованиеТабФайл.РегДатаЕГАИС;
  Form.оМарки.Value:=ОприходованиеТабФайл.Марки;
  оТабСтроки.Set(ОприходованиеСтараяСтрока,"Заполнена",ЕслиЗаполнена());
  
  ОприходованиеОбновитьДоступность(1);
EndFunction

Function РедактироватьДокументОприходования()
  оСписания:=Form.оСписания.Value;
  aList:=List.Create();
  aList.SetByName("зДок",оСписания.зДок);
  LoadModule(0,"Modules\FreeForms\УчетныеОтделы\Бухгалтерия\Отчетность\ОбработкаЕГАИС",aList,0,"Module","РедакторОприходования");
EndFunction

Function ПодборПартийДобавитьПодбором(aList)
  оТаб:=Form.оТаб.Value;

  ТЗ:="зПартия:=Ref.тмцПартииТМЦ;
  |зН:=Ref.тмцПартииТМЦ.@Parent;
  |Condition(зН IN aList);
  |зСправки:=Trim(Ref.тмцПартииТМЦ.ЕГАИСКодСправок);
  |зКодЕГАИС:=Trim(Ref.тмцПартииТМЦ.ЕГАИСКодНоменклатуры);
  |зАлк:=Ref.тмцПартииТМЦ.@Parent.флАлкогольнаяПродукция;
  |Condition(зАлк=1);
  |Group зПартия;";
  З:=Query.Create();
  З.Execute(ТЗ,0);
  
  aTab:=З.ResultTable;
  aTab.Select();
  While aTab.Next() Do
    If Trim(aTab.зСправки)="" Then
      Continue;
    EndIf;
    If оТаб.Find(aTab.зСправки,,"Справки")>0 Then
      Continue;
    EndIf;
    оТаб.AddLine("КодНоменклатуры,Номенклатура,Партия,Справки",aTab.зН.Code,aTab.зН,aTab.зПартия,aTab.зСправки);
  EndDo;
EndFunction

Function ПодборПартийПриПодборе(Эл,ФлОдин)
  ПодборПартийДобавитьПодбором(List.Create(Эл));
EndFunction

//Используется только для перепродажи между своими КПП, когда сменился RegID
Function _СохранитьФайлПерепродажи(ИмяФайлаРезультата,Ид,ТабРез)
  Тч:=Text.Create(1);
  if Ид="" Then
    Ид:="0";
  EndIf;
  Тч.AddString(Ид);
  ТабРез.Select();
  While ТабРез.Next() Do
    Тч.AddString(""+ТабРез.Справки+Chr(9)+ТабРез.Номенклатура+Chr(9)+ТабРез.КодЕГАИС+Chr(9)+ТабРез.Емкость+Chr(9)+ТабРез.Упаковка+Chr(9)+ТабРез.Крепость+Chr(9)+ТабРез.КодАП+Chr(9)+ТабРез.Контрагент+
        Chr(9)+ТабРез.Адрес+Chr(9)+ТабРез.КодЕГАИСКонтрагент+Chr(9)+ТабРез.флИмпорт+Chr(9)+ТабРез.ИНН+Chr(9)+ТабРез.КПП+Chr(9)+ТабРез.Количество+Chr(9)+ТабРез.СправкиРезультат);
  EndDo;
  Тч.Save(ИмяФайлаРезультата,1200,1);
  Exit 1;
EndFunction


Function ЦиклОжиданияОтветаНаЗапрос(аКодОтвета,ByRef СтрРезультат,ByRef Индекс)
  оМагазин:=Form.оМагазин.Value;
  
  Индекс:=Индекс+1;
  Form.StatusText("Ожидание ответа сервера "+(Индекс*10)+" сек...");
  Sleep(10000);
  
  СпОтвет:=List.Create();  
  If not ВыполнитьЗапросЕГАИС("","",7,1,СпОтвет) Then
    Exit 0;
  EndIf;
  Стр:=СпОтвет.GetByName("Результат");
  Тч:=Text.Create(1);
  Тч.AddString(Стр);
  
  If Тч.Size()=0 Then
    Exit 0;
  EndIf;
  
  i:=0;
  While i<Тч.Size() Do
    i:=i+1;
    Стр:=Тч.GetLine(i);
    If Pos("=====================",Стр)<>1 Then
      Continue;
    EndIf;
    i:=i+1;
    Ид3:=Тч.GetLine(i);
    ВИд3:=UpperCase(Ид3);
    i:=i+1;
    Ид2:=Тч.GetLine(i);
    ВИд2:=UpperCase(Ид2);
    If ВИд2<>аКодОтвета Then
      Continue;
    EndIf;
    While i<Тч.Size() Do
      i:=i+1;
      Стр:=Тч.GetLine(i);
      If Pos("=====================",Стр)=1 Then
        Break;
      EndIf;
      AppendStringToBufferedString(СтрРезультат,Стр+_NEWLINE);
    EndDo;
    Exit 1;
  EndDo;
  Exit 0;
EndFunction


Function ПринятьТекущийВходящийДокумент(пНомерТТН,флВерсия4,ТабРез=0,ИмяФайлаРезультата=0,ФлБезОжидания=0);
  оМагазин:=Form.оМагазин.Value;
  оРегИд:=оМагазин.КодТочкиЕГАИС;
  
  //Принятие входящего документа
  Номер:=FormatDate(Date(),"YYYYmmddhhttss");
  If флВерсия4 Then
    СтрРез:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
      "<ns:Documents Version=""1.0"""+_NEWLINE+
      "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""+_NEWLINE+
      "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
      "xmlns:wa=""http://fsrar.ru/WEGAIS/ActTTNSingle_v4"""+_NEWLINE+
      "xmlns:c=""http://fsrar.ru/WEGAIS/Common"""+_NEWLINE+
      "xmlns:ce=""http://fsrar.ru/WEGAIS/CommonV3"">"+_NEWLINE+
      "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner><ns:Document><ns:WayBillAct_v4>"+_NEWLINE+
      "<wa:Header><wa:IsAccept>Accepted</wa:IsAccept><wa:ACTNUMBER>"+Номер+"</wa:ACTNUMBER><wa:ActDate>"+пДата2(Date())+"</wa:ActDate>"+_NEWLINE+
      "<wa:WBRegId>"+пНомерТТН+"</wa:WBRegId><wa:Note></wa:Note>"+_NEWLINE+
      "</wa:Header><wa:Content>"+_NEWLINE+
      "</wa:Content><wa:Transport><wa:ChangeOwnership>IsChange</wa:ChangeOwnership></wa:Transport></ns:WayBillAct_v4></ns:Document></ns:Documents>";
  Else
    СтрРез:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
      "<ns:Documents Version=""1.0"""+_NEWLINE+
      "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""+_NEWLINE+
      "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
      "xmlns:wa=""http://fsrar.ru/WEGAIS/ActTTNSingle_v3"""+_NEWLINE+
      "xmlns:ce=""http://fsrar.ru/WEGAIS/CommonV3"">"+_NEWLINE+
      "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner><ns:Document><ns:WayBillAct_v3>"+_NEWLINE+
      "<wa:Header><wa:IsAccept>Accepted</wa:IsAccept><wa:ACTNUMBER>"+Номер+"</wa:ACTNUMBER><wa:ActDate>"+пДата2(Date())+"</wa:ActDate>"+_NEWLINE+
      "<wa:WBRegId>"+пНомерТТН+"</wa:WBRegId><wa:Note></wa:Note>"+_NEWLINE+
      "</wa:Header><wa:Content>"+_NEWLINE+
      "</wa:Content></ns:WayBillAct_v3></ns:Document></ns:Documents>";
  EndIf;
    
  СпОтвет:=List.Create();
  If not ВыполнитьЗапросЕГАИС(СтрРез,"opt/in/WayBillAct"+?(флВерсия4,"_v4","_v3"),5,1,СпОтвет) Then
    Exit 0;
  EndIf;
  аКодОтвета:=СпОтвет.GetByName("Результат");
  аКодОтвета:=UpperCase(Replace(аКодОтвета,"-",""));
    
  If аКодОтвета="" Then
    Message("Внутренняя ошибка ответа (ответ пустой) (2)!","!");
    Exit 0;
  EndIf;
  If ТабРез<>0 Then
    If not _СохранитьФайлПерепродажи(ИмяФайлаРезультата,"DONE",ТабРез) Then
      Exit 0;
    EndIf;
  EndIf;  
  If ФлБезОжидания=1 Then
    Exit 1;
  EndIf;  
  
  //Ожидаем ответ сервера
  ТУдалить:=Text.Create(1);
  Try
    СтрРезультат:="";
    Индекс:=0;
    Фл:=0;
    While 1 Do
      Фл:=ЦиклОжиданияОтветаНаЗапрос(аКодОтвета,СтрРезультат,Индекс);
      If not Фл Then
        Continue;
      EndIf;
      
      If Pos("<Conclusion>Rejected</Conclusion>",СтрРезультат)>0 Then
        Message("Сервер отклонил документ!","!");
        Тч:=Text.Create(1);
        Тч.AddString(СтрРезультат);
        Тч.Show("Результат",,1);
        ТУдалить.AddString(пНомерТТН);
        ТУдалить.AddString("###"+пНомерТТН);
        Exit 0;
      ElseIf (Pos("<Conclusion>Accepted</Conclusion>",СтрРезультат)>0)And(Pos("<OperationResult>Accepted</OperationResult>",СтрРезультат)>0) Then  
        ТУдалить.AddString(пНомерТТН);
        ТУдалить.AddString("###"+пНомерТТН);
        Break;
      EndIf;
      Фл:=0;
    EndDo;  
  Finally  
    If ТУдалить.Size()>0 Then
      ВыполнитьЗапросЕГАИС(ТУдалить,"opt/in/",8,1);
    EndIf;
  EndTry;  
    
  If not Фл Then
    Message("Не удалось получить ответ сервера или внутренняя ошибка (2)!","!");
    Exit 0;
  EndIf;
  Exit 1;
EndFunction

Function СозданиеВходящегоПоступленияИзЕГАИС();
  оВхПоступления:=Form.оВхПоступления.Value;
  оМагазин:=Form.оМагазин.Value;
  оЮЛ:=оМагазин.ЮрЛицо;
  оРегИд:=оМагазин.КодТочкиЕГАИС;
  If оВхПоступления.SelectedLine=0 Then
    Exit;
  EndIf;
  оВхПоступления.CurLine:=оВхПоступления.SelectedLine;
  If оВхПоступления.Локальный=-1 Then
    Exit;
  EndIf;

  Box("При создании документа поступления из удаленного документа ЕГАИС будьте предельно вниманительны и сверяйте каждую позицию товара с бумажной накладной! Для позиций, которые не поступали раньше, необходимо будет создать или выбрать элемент номенклатуры. "+
      "Помните также, что накладные ЕГАИС не содержат безалкогольного товара, данный товар необходимо добавить в созданный документ поступления!",Q_WARNING);

  aList:=List.Create();
  aList["ТабПоступления"]:=ТабПоступления;
  LoadModule(0,"Modules\FreeForms\УчетныеОтделы\Бухгалтерия\Отчетность\ОбработкаЕГАИС",aList,0,"Module","СозданиеНовогоПоступления");
  If aList["Ответ"]<>1 Then
    Exit 0;
  EndIf;
  ТДокумент:=aList["ТСтроки"];
  ТСтроки:=ТабПоступления.ТСтроки;
  
  //ТабПоступления: "Номер,Дата,ДатаДоставки,ИНН,КПП,КодЕГАИС,Наименование,РегИДСправки,Адрес,ТСтроки,зДокЛокальный,ПутьТТН,ПутьСправки,ФлВозврат,ФлТип4,Пакет"
  aDoc:=Doc.ПоступлениеТМЦ;
  aDoc.New();
  aDoc.DocDate:=Date();
  aDoc.Автор:=глПользователь;
  aDoc.ЮрЛицо:=оМагазин.ЮрЛицо;
  aDoc.Магазин:=оМагазин;
  глУстановитьНовыйНомер(aDoc);
  aDoc.НомерДокВходящий:=ТабПоступления.Номер;
  aDoc.ДатаДокВходящий:=ТабПоступления.Дата;
  aDoc.АдресДоставки:=ТабПоступления.Адрес;
  //aDoc.НомерДокВходящийСФ:=ТабПоступления.Номер;
  //aDoc.ДатаДокВходящийСФ:=ТабПоступления.Дата;
  aDoc.Склад:=оМагазин.Склад;
  aDoc.КодОперации:=Enum.коПоступлениеТМЦ.ПоступлениеТМЦ;
  //aDoc.УникальныйИдентификатор3:="!"+ТабПоступления.РегИДСправки;
  aDoc.УчитыватьВНалоговомУчете:=1;
  Кнт:=НайтиИлиСоздатьПоставщика(ТабПоступления.КодЕГАИС,ТабПоступления.Наименование,ТабПоступления.ИНН,ТабПоступления.КПП,ТабПоступления.Адрес);
  aDoc.Контрагент:=Кнт;
  
  bDoc:=Doc.ВозвратПоставщику;
  bDoc.New();
  bDoc.DocDate:=Date();
  bDoc.Автор:=глПользователь;
  bDoc.ЮрЛицо:=оМагазин.ЮрЛицо;
  bDoc.Магазин:=оМагазин;
  глУстановитьНовыйНомер(bDoc);
  bDoc.АдресДоставки:=ТабПоступления.Адрес;
  bDoc.Склад:=оМагазин.Склад;
  bDoc.КодОперации:=Enum.коВозвратПоставщику.ВозвратТМЦ;
  bDoc.УчитыватьВНалоговомУчете:=1;
  bDoc.Контрагент:=Кнт;
  
  аДог:=Ref.кнтДоговоры;
  If Not аДог.Find("~(@Parent=Кнт)And(ЮрЛицо=оЮЛ)And(@Status=0)") Then
    If Not аДог.Find("~(@Parent=Кнт)And(ЮрЛицо=оЮЛ)") Then
      аДог.New();
      аДог.Name:="Договор по "+оЮЛ;
      аДог.ЮрЛицо:=оЮЛ;
      аДог.Parent(Кнт);
      If not глЗаписать(аДог) Then
        Exit;
      EndIf;
    EndIf;
  EndIf;
  aDoc.Договор:=аДог;
  aDoc.Контрагент:=аДог.Parent();
  глПриИзмененииДоговора(aDoc);
  bDoc.Договор:=аДог;
  bDoc.Контрагент:=аДог.Parent();
  глПриИзмененииДоговора(bDoc);
  
  флОк:=0;
  BeginTransaction();
  Try
    If not глЗаписать(aDoc) Then
      Exit;
    EndIf;
    bDoc.ДокОснование:=aDoc;
  
    aTab:=aDoc.LineParts("Номенклатура");
    bTab:=bDoc.LineParts("Номенклатура");
    //ТСтроки: "Наименование,Номер,Справки,КодЕГАИС,Объем,Крепость,АПКод,прзКодЕГАИС,прзИНН,прзКПП,прзНаименование,прзАдрес,зН,зПартия,ДатаРазлива,Количество,Цена,флБезУпаковки,флИмпорт,Марки,Ящики"
    //ТДокумент: "Номенклатура,Партия,Количество,Цена,Сумма"
    ТМарки:=Tab.Create("Партия,Ящик,Марка");
    ТМарки2:=Tab.Create("Партия,Ящик,Марка");//Возврат
    ТДокумент.Select();
    While ТДокумент.Next() Do
      Form.StatusText(""+ТДокумент.CurLine+" из "+ТДокумент.Size());
      aTab.AddLine("Номенклатура,Партия,Количество,Цена,Сумма",ТДокумент.Номенклатура,ТДокумент.Партия,ТДокумент.Количество,Round(ТДокумент.Цена,2),Round(ТДокумент.Сумма,2));
      If IsEmpty(aTab.Партия) Then
        If Number(ТДокумент.Индекс)=0 Then
          If ТДокумент.Номенклатура.флАлкогольнаяПродукция Then
            Message("Добавленные строки не должны содержать алкогольной номенклатуры!","!");
            Exit;
          EndIf;
        Else
          ТСтроки.CurLine:=ТДокумент.Индекс;
          аПар:=Ref.тмцПартииТМЦ;
          If not аПар.Find("@Parent,@Status,ЕГАИСКодНоменклатуры,ЕГАИСКодСправок",ТДокумент.Номенклатура,0,Trim(ТСтроки.КодЕГАИС),Trim(ТСтроки.Справки)) Then
            аПр:=НайтиИлиСоздатьПроизводителя(ТСтроки.прзКодЕГАИС,ТСтроки.прзНаименование,ТСтроки.прзИНН,ТСтроки.прзКПП,ТСтроки.прзАдрес);
            Дата:=?(IsEmpty(ТСтроки.ДатаРазлива),ТабПоступления.Дата,ТСтроки.ДатаРазлива);
            аПар.New();
            аПар.Parent(ТДокумент.Номенклатура);
            аПар.Name:=""+BegOfDay(Дата)+" ("+ТабПоступления.Номер+")";
            аПар.НомерУдостоверения:=ТабПоступления.Номер;
            //аПар.НомерПартии:="";
            аПар.КСР:=BegOfDay(Дата);
            аПар.Дата:=BegOfDay(Дата);
            аПар.Производитель:=аПр;
            аПар.ЕГАИСКодАП:=ТСтроки.АПКод;
            аПар.ЕГАИСКодНоменклатуры:=ТСтроки.КодЕГАИС;
            аПар.ЕГАИСКодСправок:=ТСтроки.Справки;
            аПар.ЕГАИСКодПроизводителя:=Trim(ТСтроки.прзКодЕГАИС);
            аПар.флБезУпаковки:=ТСтроки.флБезУпаковки;
            аПар.флИмпортнаяПродукция:=ТСтроки.флИмпорт;
            аПар.флМарочныйУчет:=?(isEmpty(ТСтроки.Марки),0,1);
            аПар.Поступление:=aDoc;
            If not глЗаписать(аПар) Then
              Exit;
            EndIf;
          ElseIf аПар.Поступление<>aDoc Then
            аПар.Поступление:=aDoc;
            If not глЗаписать(аПар) Then
              Exit;
            EndIf;
          EndIf;
          aTab.Партия:=аПар;
        EndIf;
      ElseIf аПар.Поступление<>aDoc Then
        аПар.Поступление:=aDoc;
        If not глЗаписать(аПар) Then
          Exit;
        EndIf;
      EndIf;
      aTab.СтавкаНДС:=ТДокумент.Номенклатура.СтавкаНДС;
      Ц0:=глПолучитьОсновнуюЦену(ТДокумент.Номенклатура,оМагазин.Склад,aDoc.DocDate);
      aTab.ЦенаБезСкидки:=?(Ц0=0,ТДокумент.Цена,Ц0);
      глПересчитатьСтроку(aDoc,aTab,"Количество2@СуммаНДС");
      //Создание марок для этой строки
      If Number(ТДокумент.Индекс)>0 Then
        ТСтроки.CurLine:=Number(ТДокумент.Индекс);
        If Trim(ТСтроки.Марки)<>"" Then
          //ТСтроки.Марки: <Ящик> _TAB <Марка> _NEWLINE ...
          Стр:=ТСтроки.Марки;
          While Стр<>"" Do
            Стр2:=TearStr(Стр,_NEWLINE);
            If Стр2<>"" Then
              Ящик:=TearStr(Стр2,_TAB);
              ТМарки.AddLine("Партия,Ящик,Марка",aTab.Партия,Ящик,Стр2);
            EndIf;
          EndDo;
        EndIf;
      EndIf;
      If ТДокумент.КоличествоВозвраты>0 Then
        If ТДокумент.флМарки=1 Then
          If Number(ТДокумент.Индекс)=0 Then
            Message("Внутренняя ошибка при создании возврата, обратитесь к разрабочнику!","!");
            Exit;
          EndIf;
          ТМарки3:=Tab.Create("Партия,Ящик,Марка");//Возврат
          ТМарки.CopyTo(ТМарки3,,,"Партия,Ящик,Марка","Партия",aTab.Партия);//Марки поступления
          ТМарки4:=Tab.Create("Марка");
          спВозвраты:=ТДокумент.спВозвраты;
          спВозвраты.CopyTo(ТМарки4,,,"Марка");
          //Проверка
          ТМарки4.Combine(ТМарки3,"Марка","SUB");
          ТМарки4.Column("Марка").Name:="Ящик";
          ТМарки4.Combine(ТМарки3,"Ящик","SUB");
          If ТМарки4.Size()>0 Then
            Message("Внутренняя ошибка: в возвратах присутствуют марки, отсутствовавшие в поступлении (к примеру, "+ТМарки4[1]+")!","!");
            Exit;
          EndIf;
          ТМарки4:=Tab.Create("Марка");
          спВозвраты.CopyTo(ТМарки4,,,"Марка");
          //ТМарки4.Combine(ТМарки3,"Ящик","SUB");
          ТМарки3.Combine(ТМарки4,"Марка","AND");
          ТМарки3.CopyTo(ТМарки2,,,"Партия,Ящик,Марка");
          If ТМарки4.Size()<>ТДокумент.КоличествоВозвраты Then
            Message("Внутренняя ошибка: количество возврата не соответствует количеству возвращаемых марок!","!");
            Exit;
          EndIf;
        EndIf;
        bTab.AddLine("Номенклатура,Партия,Количество,Цена,Сумма,СтавкаНДС",aTab.Номенклатура,aTab.Партия,ТДокумент.КоличествоВозвраты,aTab.Цена,aTab.Сумма,aTab.СтавкаНДС);
        глПересчитатьСтроку(bDoc,bTab,"Количество2@СуммаНДС");
      EndIf;
    EndDo;
    aDoc.СуммаВзаиморасчетов:=aTab.Sum("Сумма");
    If not глЗаписать(aDoc) Then
      Exit;
    EndIf;
    bDoc.СуммаВзаиморасчетов:=bTab.Sum("Сумма");
    If bTab.Size()>0 Then
      If not глЗаписать(bDoc) Then
        Exit;
      EndIf;
    EndIf;
    
    //Создать марки для этого поступления, все марки должны иметь флаг 0
    If ТМарки.Size()>0 Then
      If глМаркиЗарегистрироватьДокумент(aDoc,ТМарки,1)<>1 Then
        Exit;
      EndIf;
    EndIf;
    
    If ТМарки2.Size()>0 Then
      If глМаркиЗарегистрироватьДокумент(bDoc,ТМарки2,0)<>1 Then
        Exit;
      EndIf;
    EndIf;
    
    флОк:=1;
  Finally
    If флОк Then
      CommitTransaction();
    Else
      RollbackTransaction();
    EndIf;
  EndTry;
  оВхПоступления.зСтатус:=ПолучитьТекстСтатусаПоступления(aDoc);
  оВхПоступления.зДокЛок:=aDoc.DocNum+" от "+aDoc.DocDate;
  оВхПоступления.зКонтрагент:=aDoc.Контрагент;
  оВхПоступления.Локальный:=aDoc;
  оВхПоступления.Icon(оВхПоступления.CurLine,"Иконка",150);  
  If bTab.Size()>0 Then
    If IsEmpty(оВхПоступления.спВозвраты) Then
      оВхПоступления.спВозвраты:=List.Create();
    EndIf;
    оВхПоступления.спВозвраты.Add(bDoc);
    оВхПоступления.зВзв:=bDoc.DocNum+" от "+bDoc.DocDate;
    LoadModule(0,"Modules\FreeForms\ВнутренниеОбработки\ОбработкиДокументов\ДеревоДокументов",aDoc,0,"Module","Form");
  Else
    OpenObject(aDoc,0,1);
  EndIf;
EndFunction  

Function ПринятьВходящийДокумент();
  оВхПоступления:=Form.оВхПоступления.Value;
  оМагазин:=Form.оМагазин.Value;
  оЮЛ:=оМагазин.ЮрЛицо;
  оРегИд:=оМагазин.КодТочкиЕГАИС;
  
  If IsEmpty(оВхПоступления.Локальный) Then
    Box("Необходимо сопоставить документ со входящим, прежде чем отсылать по нему акты!",Q_STOP);
    Exit;
  EndIf;
  If Number(оВхПоступления.УдаленныйИндекс)=0 Then
    Box("Отсутствует удаленный документ! Обратитесь к администратору!",Q_STOP);
    Exit;
  EndIf;
  If AskQuestion("Принятие поступления должно осуществляться только после приемки товара и выписки возврата поставщику, если товар принят не в полной мере. Если вы примете документ "+
      "до приемки и подсчета, документ будет закрыт и вам придется договариваться с поставщиком о возврате, либо отзывать закрытый документ, если по его партиям еще не было продаж! "+
      "Вы уверены, что товар принят и подсчитан и вы готовы принять документ в ЕГАИС?",Q_WARNING+Q_YESNO)<>R_YES Then
    Exit;
  EndIf;
  
  ТабПоступления.CurLine:=оВхПоступления.УдаленныйИндекс;  
  зДок:=оВхПоступления.Локальный.Copy();
  аПольз:="";аКомп:="";аДата:="";
  If not зДок.Lock(аПольз,аКомп,аДата) Then
    Message("Документ "+зДок+" открыт на запись. В данный момент с ним работает пользователь "+аПольз+" (компьютер "+аКомп+")! Пожалуйста, закройте документ, чтобы выполнить операцию!","!");
    Exit;
  EndIf;
  //ТабПоступления.ТСтроки -- оригинальные строки поступления с оригинальным количеством поступления
  Try
    зДок.Reload();
    Тип:=Left(зДок.УникальныйИдентификатор3,1);
    If зДок.Status()<2 Then
      Box("Документ не обработан! Невозможно принять необработанный документ!",Q_STOP);
      Exit;
    ElseIf (Тип="#")Or(Тип="=") Then
      Box("Документ уже был принят или отклонен!",Q_STOP);
      Exit;
    EndIf;
    ТСтроки:=ТабПоступления.ТСтроки;
    ТабРезультат:=Tab.Create("Номенклатура,Партия,Количество,КоличествоОриг,Справки,КодЕГАИС");//Для вывода
    ТМаркиПоступления:=глМаркиЗагрузитьДокумент(зДок,,1);
    ТМаркиВозвратов:=Tab.Create("Партия,Марка,Ящик,Справки");
    ТПартииВозвратов:=Tab.Create("Справки,Партия,Номенклатура,Количество");
    //Нахождение возвратов
    ФлВозвраты:=0;
    ФлОшибки:=0;
    aList:=зДок.LoadLinkedDocuments(1);
    For i:=1 To aList.Size() Do 
      бДок:=aList.Get(i);
      If бДок.DBName()<>"ВозвратПоставщику" Then
        Continue;
      EndIf;
      If бДок.Status()<2 Then
        If бДок.Status()<>1 Then
          Message("Для документа "+зДок+" найден необработанный возврат поставщику "+бДок+"!","!");
          Message("Необходимо удалить или обработать этот документ, чтобы выполнить данную операцию!","!");
          Exit;
        EndIf;
        Continue;
      EndIf;
  
      ТМарки2:=глМаркиЗагрузитьДокумент(бДок,,1);
      ТМаркиВозвратов.Combine(ТМарки2,"Партия,Марка","ADD");
      ТМарки2.Combine(ТМаркиПоступления,"Партия,Марка","SUB");
      If ТМарки2.Size()>0 Then
        Message("Документ возврата "+бДок+" содержит маркировку продукции, которая отсутствовала в оригинальном документе (к примеру, "+ТМарки2["Марка",1]+"!","!");
        Exit;
      EndIf;
      
      aTab:=бДок.LoadStorage("ОстаткиТМЦ");
      aTab.Select();
      While aTab.Next() Do
        If aTab.Номенклатура.флАлкогольнаяПродукция=0 Then
          Continue;
        EndIf;
        ТПартииВозвратов.AddLine("Номенклатура,Партия,Справки,Количество",aTab.Номенклатура,aTab.Партия,aTab.Партия.ЕГАИСКодСправок,Max(-aTab.Количество,aTab.Количество));
        ТабРезультат.AddLine("Номенклатура,Партия,Справки,КодЕГАИС,Количество,КоличествоОриг",aTab.Номенклатура,aTab.Партия,aTab.Партия.ЕГАИСКодСправок,aTab.Партия.ЕГАИСКодНоменклатуры,Min(-aTab.Количество,aTab.Количество),0);
        If _Or(aTab.Партия.Selected()=0,aTab.Партия.ЕГАИСКодСправок="") Then
          Message("Для номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") не заполнена партия в "+бДок+"!","!");
          ФлОшибки:=1;
        EndIf;
      EndDo;
    EndDo;
    ТПартииВозвратов.Group("Номенклатура,Справки","Партия:FIRST,Количество");
    ТМаркиВозвратов.Select();
    While ТМаркиВозвратов.Next() Do
      ТМаркиВозвратов.Справки:=ТМаркиВозвратов.Партия.ЕГАИСКодСправок;
    EndDo;
    ТМаркиВозвратов.Sort("Справки,Ящик,Марка");

    If ФлОшибки Then
      Exit;
    EndIf;
    
    ФлОшибки:=0;
    аСтр:=0;
    aTab:=зДок.LineParts("Номенклатура");
    aTab.Select();
    While aTab.Next() Do
      аСтр:=аСтр+1;
      If aTab.Номенклатура.флАлкогольнаяПродукция=0 Then
        Continue;
      EndIf;
      If aTab.Партия.Selected()=0 Then
        Message("В строке "+аСтр+" не выбрана партия для алкогольной продукции!","!");
        ФлОшибки:=1;
      EndIf;
      ТабРезультат.AddLine("Номенклатура,Партия,Справки,КодЕГАИС,Количество",aTab.Номенклатура,aTab.Партия,aTab.Партия.ЕГАИСКодСправок,aTab.Партия.ЕГАИСКодНоменклатуры,Max(-aTab.Количество,aTab.Количество));
      ТабРезультат.КоличествоОриг:=ТабРезультат.Количество;
    EndDo;
    If ФлОшибки Then
      Box("В документе обнаружены ошибки! Пока ошибки не будут исправлены, документ отправить не получится!",Q_STOP);
      Exit;
    EndIf;
    ТабРезультат.Group("Номенклатура,Справки,КодЕГАИС","Партия:FIRST,Количество,КоличествоОриг");
    
    ФлОшибки:=0;
    ТабРезультат.Select();
    While ТабРезультат.Next() Do
      If ТабРезультат.Количество<0 Then
        Message("Документы возвратов содержат большее количество, чем присутствовало в поступлении (к примеру, "+ТабРезультат.Наименование+")!","!");
        ФлОшибки:=1;
      EndIf;
      If (ТабРезультат.Количество=0)And(ТабРезультат.КоличествоОриг=0) Then
        Continue;
      EndIf;
      If ТСтроки.FindAndGoto(ТабРезультат.Справки,,"Справки")=0 Then
        Message("В документе прихода или в документе возвратов указана алкогольная номенклатура "+ТабРезультат.Номенклатура+", отсутствующая в поступлении ЕГАИС!","!");
        ФлОшибки:=1;
        Continue;
      EndIf;
      
      зКл:=ТСтроки.Количество;
      If ТСтроки.флБезУпаковки=1 Then
        зКл:=зКл/ТабРезультат.Номенклатура.ОбъемЛитров*10;
      EndIf;
      If Round(зКл,6)<>ТабРезультат.КоличествоОриг Then
        Message("В документе прихода количество для номенклатуры "+ТабРезультат.Номенклатура+" с партией "+ТабРезультат.Партия+" не совпадает с количество в поступлении ЕГАИС!","!");
        ФлОшибки:=1;
        Continue;
      EndIf;
    EndDo;
    
    ТСтроки.Select();
    While ТСтроки.Next() Do
      If ТабРезультат.FindAndGoto(ТСтроки.Справки,,"Справки")=0 Then
        Message("В документе прихода не найдена алкогольная номенклатура "+ТСтроки.Наименование+" ("+ТСтроки.Справки+"), присутствующая в поступлении ЕГАИС!","!");
        ФлОшибки:=1;
        Continue;
      EndIf;
    EndDo;
    
    If ФлОшибки Then
      Box("В документе обнаружены ошибки! Пока ошибки не будут исправлены, принять документ не получится!",Q_STOP);
      Exit;
    EndIf;
    
    флВерсия4:=ТабПоступления.ФлТип4=1;
    ФлРасхождения:=0;
    If флВерсия4 Then
      СтрРез:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
        "<ns:Documents Version=""1.0"""+_NEWLINE+
        "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""+_NEWLINE+
        "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
        "xmlns:wa=""http://fsrar.ru/WEGAIS/ActTTNSingle_v4"""+_NEWLINE+
        "xmlns:c=""http://fsrar.ru/WEGAIS/Common"""+_NEWLINE+
        "xmlns:ce=""http://fsrar.ru/WEGAIS/CommonV3"">"+_NEWLINE+
        "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner><ns:Document><ns:WayBillAct_v4>"+_NEWLINE+
        "<wa:Header><wa:IsAccept>#####</wa:IsAccept><wa:ACTNUMBER>"+зДок.DocNum+"_"+GetYear(зДок.DocDate)+"</wa:ACTNUMBER><wa:ActDate>"+пДата2(Date())+"</wa:ActDate>"+_NEWLINE+
        "<wa:WBRegId>"+ТабПоступления.РегИДСправки+"</wa:WBRegId><wa:Note></wa:Note>"+_NEWLINE+
        "</wa:Header><wa:Content>"+_NEWLINE+"$$$$$"+_NEWLINE+
        "</wa:Content><wa:Transport><wa:ChangeOwnership>IsChange</wa:ChangeOwnership></wa:Transport></ns:WayBillAct_v4></ns:Document></ns:Documents>";
    Else
      СтрРез:="<?xml version=""1.0"" encoding=""UTF-8""?>"+_NEWLINE+
        "<ns:Documents Version=""1.0"""+_NEWLINE+
        "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"""+_NEWLINE+
        "xmlns:ns=""http://fsrar.ru/WEGAIS/WB_DOC_SINGLE_01"""+_NEWLINE+
        "xmlns:wa=""http://fsrar.ru/WEGAIS/ActTTNSingle_v3"""+_NEWLINE+
        "xmlns:ce=""http://fsrar.ru/WEGAIS/CommonV3"">"+_NEWLINE+
        "<ns:Owner><ns:FSRAR_ID>"+оРегИд+"</ns:FSRAR_ID></ns:Owner><ns:Document><ns:WayBillAct_v3>"+_NEWLINE+
        "<wa:Header><wa:IsAccept>#####</wa:IsAccept><wa:ACTNUMBER>"+зДок.DocNum+"_"+GetYear(зДок.DocDate)+"</wa:ACTNUMBER><wa:ActDate>"+пДата2(Date())+"</wa:ActDate>"+_NEWLINE+
        "<wa:WBRegId>"+ТабПоступления.РегИДСправки+"</wa:WBRegId><wa:Note></wa:Note>"+_NEWLINE+
        "</wa:Header><wa:Content>"+_NEWLINE+"$$$$$"+_NEWLINE+
        "</wa:Content></ns:WayBillAct_v3></ns:Document></ns:Documents>";
    EndIf;
    
    ТабРасхождения:=Tab.Create("Номенклатура,Партия");
    ТабРасхождения.AddColumn("Принято",,"Number");
    ТабРасхождения.AddColumn("Исходно",,"Number");
    
    //Добавляем расхожения, указанные в возвратах
    СтрДобавка:="";
    ТСтроки.Select();
    While ТСтроки.Next() Do
      зКл:=0;//Количество за минусом возвратов
      If ТПартииВозвратов.FindAndGoto(ТСтроки.Справки,,"Справки")>0 Then
        зКл:=ТПартииВозвратов.Количество;
        If ТСтроки.флБезУпаковки=1 Then
          зКл:=ТПартииВозвратов.Количество*ТПартииВозвратов.Номенклатура.ОбъемЛитров/10;
        EndIf;
        ТПартииВозвратов.Количество:=0;
      EndIf;
      зКл:=ТСтроки.Количество-зКл;
      If зКл<0 Then
        Message("Документы возвратов содержат большее количество, чем присутствовало в поступлении (к примеру, "+ТСтроки.Наименование+")!","!");
        Message("Отправка акта остановлена!","!");
        Exit;
      EndIf;
      
      тСправки0:=ТСтроки.Справки;
      тСправки:=тСправки0;//Последняя из справок Б
      While Pos("###",тСправки)>0 Do
        TearStr(тСправки,"###");
      EndDo;
      AppendStringToBufferedString(СтрДобавка,"<wa:Position><wa:Identity>"+ТСтроки.Номер+"</wa:Identity><wa:InformF2RegId>"+тСправки+"</wa:InformF2RegId>"+
              "<wa:RealQuantity>"+зКл+"</wa:RealQuantity>");
      If ТМаркиВозвратов.FindAndGoto(тСправки0,,"Справки")>0 Then        
        AppendStringToBufferedString(СтрДобавка,"<wa:MarkInfo>");
        Repeat
          If ТМаркиВозвратов.Справки=тСправки0 Then
            AppendStringToBufferedString(СтрДобавка,"<ce:amc>"+ТМаркиВозвратов.Марка+"</ce:amc>");
          EndIf;
        Until not ТМаркиВозвратов.Next();
        AppendStringToBufferedString(СтрДобавка,"</wa:MarkInfo>");
      EndIf;
      AppendStringToBufferedString(СтрДобавка,"</wa:Position>"+_NEWLINE);
            
      If Round(зКл,3)<Round(ТСтроки.Количество,3) Then
        ТабРасхождения.AddLine("Номенклатура,Партия,Принято,Исходно",ТСтроки.Наименование,ТСтроки.зПартия,зКл,ТСтроки.Количество);
        ФлРасхождения:=1;
      EndIf;
    EndDo;
    ТПартииВозвратов.Select();
    While ТПартииВозвратов.Next() Do
      If Round(ТПартииВозвратов.Количество,6)<>0 Then
        Message("К документу поступления привязаны возвраты поставщику, содержащие партии, отсутствовавшие в самом поступлении! К примеру номенклатура "+ТПартииВозвратов.Номенклатура+" с партией "+ТПартииВозвратов.Партия+"!","!");
        Message("Отправка акта остановлена!","!");
        Exit;
      EndIf;
    EndDo;
    
    If ФлРасхождения Then
      СтрРез:=Replace(СтрРез,"$$$$$",СтрДобавка);
    EndIf;
    
    СтрРез:=Replace(СтрРез,"$$$$$","");
    If ФлРасхождения Then
      If AskQuestion("Документ проверен, обработан и готов к оправке акта, вы уверены (обнаружены возвраты, будет отправлен акт с расхождениями)?",Q_WARNING+Q_YESNO)<>R_YES Then
        Exit;
      EndIf;
      aList:=List.Create();
      aList.SetByName("Таб",ТабРасхождения);
      LoadModule(0,"Modules\FreeForms\УчетныеОтделы\Бухгалтерия\Отчетность\ОбработкаЕГАИС",aList,0,"Module","ПросмотрРасхождений");
      If aList.GetByName("Ответ")<>1 Then
        Exit;
      EndIf;
      СтрРез:=Replace(СтрРез,"#####","Differences");
    Else
      If AskQuestion("Документ проверен, обработан и готов к оправке акта, вы уверены (возвраты не обнаружены, будет отправлен акт принятия)?",Q_QUESTION+Q_YESNO)<>R_YES Then
        Exit;
      EndIf;
      СтрРез:=Replace(СтрРез,"#####","Accepted");
    EndIf;
    
    СпОтвет:=List.Create();
    If not ВыполнитьЗапросЕГАИС(СтрРез,"opt/in/WayBillAct"+?(флВерсия4,"_v4","_v3"),5,1,СпОтвет) Then
      Exit 0;
    EndIf;
    аКодОтвета:=СпОтвет.GetByName("Результат");
    аКодОтвета:=UpperCase(Replace(аКодОтвета,"-",""));
    зДок.УникальныйИдентификатор2:=аКодОтвета;
    
    стрПост:="принятия";
    If ФлРасхождения Then
      стрПост:="расхождения (был возврат)";
    EndIf;
    Logs.Write("Отправлен акт "+стрПост+": "+зДок+", ID: "+Trim(ТабПоступления.РегИДСправки)+", GUID: "+аКодОтвета,зДок,"ЕГАИС",0);
    
    If ФлРасхождения Then
      зДок.УникальныйИдентификатор3:="%"+ТабПоступления.РегИДСправки;
    Else
      зДок.УникальныйИдентификатор3:="!"+ТабПоступления.РегИДСправки;
    EndIf;
    зДок.Save();
    оВхПоступления.Локальный:=зДок;
    оВхПоступления.зСтатус:="Акт отправлен";
  Finally
    зДок.Unlock();
  EndTry;
EndFunction

Function СозданиеНовогоПоступленияПодбор(зН,Фл)
  ТСтроки:=Form.ТСтроки.Value;
  If ТСтроки.FindAndGoto(зН,,"Номенклатура")>0 Then
    Box("Данная позиция уже присутствует в документе!",Q_STOP);
    Exit;
  EndIf;
  ТСтроки.AddLine("оПроверка,Номенклатура,Количество,ОригКоличество","",зН,1,0);
  К:=?(ТСтроки.Номенклатура.оснКоэффициент=0,1,ТСтроки.Номенклатура.оснКоэффициент);
  ТСтроки.КоличествоВОсновных:=Trunc(Round(ТСтроки.Количество/К,6));
  ТСтроки.КоличествоВБазовых:=ТСтроки.Количество-ТСтроки.КоличествоВОсновных*К;
  СозданиеПоступленияОбновитьШрихкод(ТСтроки);
  Form.ТСтроки.InvokeEvent("OnInitLine","IndexFrom,IndexTo",ТСтроки.Size(),ТСтроки.Size());
EndFunction

спТекущиеЗапросы:=List.Create();
SetMultiThreaded(спТекущиеЗапросы);

СтрФСохранениеФайлаЗапросаПоОстаткам:="спУстановки2:=спЗапрос.GetByName(""Функция"");
|Тч:=Text.Create(1);
|Тч.AddString(Стр0);
|Имя:=спУстановки2.GetByName(""ФайлОстатков""+?(НомерЗапроса=1,"""",""2""));
|Тч.Save(Имя+"".New"",1200,1);
|If not File.MoveFile(Имя+"".New"",Имя) Then
|  Message(""Ошибка сохранения файла остатков ""+Имя+"" на сервер!"",""!"");
|  спЗапрос.SetByName(""Ошибка"",""Ошибка сохранения файла на севере!"");
|EndIf;";

СтрФЗакреплениеМарокЗаПартией:="СтрМарки:=спПараметры[""Марки""];//<Марка1> _NEWLINE <Марка2> ...
|Партия:=спПараметры[""Партия""];
|Try
|  While СтрМарки<>"""" Do
|    Стр:=Trim(TearStr(СтрМарки,_NEWLINE));
|    If Стр<>"""" Then
|      зЭл:=Ref.тмцМаркировкаПозиций;
|      зЭл.New();
|      зЭл.Parent(Партия);
|      зЭл.флСостояние:=1;
|      зЭл.КодМарки:=Стр;
|      Try
|        зЭл.Save(,,Партия);
|      Except
|        Message(""Марку ""+Стр+"" не удалось закрепить за партией! Создайте марку вручную!"",""!"");
|      EndTry;
|    EndIf;
|  EndDo;  
|Except
|  спЗапрос.SetByName(""Ошибка"",PopError());
|EndTry;";
