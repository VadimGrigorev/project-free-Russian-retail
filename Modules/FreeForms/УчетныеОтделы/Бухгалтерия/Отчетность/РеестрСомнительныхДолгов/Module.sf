//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
var ТаблДог Export;

Function ВыполнитьЗапрос(ФлВторой=0,СпК=0)
  КонДата:=BegOfDay(Form.КонДата.Value);
  оЮЛ:=Form.оЮЛ.Value;
  оК:=Form.оК.Value;
  оД:=Form.оД.Value;
  оДней50:=Form.оДней50.Value;
  оДней100:=Form.оДней100.Value;

  ДКон:=BegOfDay(КонДата);
  If ФлВторой=0 Then
    ДНач:=BegOfMonth(ДКон-глМаксимальныйПериодРасчетаДебиторскойЗадолж);
  Else
    ДНач:=DBVar.НачалоПериодаБазы;
    If isEmpty(ДНач) Then
      ДНач:='01.01.1980';
    EndIf;
  EndIf;
    
  Form.StatusText("Запрос "+(ФлВторой+1)+", выполнение...");
  ТЗ:="Period From ДНач to ДКон;
  |зД:=Storage.Взаиморасчеты.Договор;
  |зК:=Storage.Взаиморасчеты.Договор.@Parent;
  |зТА:=Storage.Взаиморасчеты.Договор.@Parent.ТипАктива;Condition(зТА=0);
  |Документ:=Storage.Взаиморасчеты.@LINK;
  |зТара:=Storage.Взаиморасчеты.Тара;
  |Condition(IsEmpty(зТара));
  |зДД:=Storage.Взаиморасчеты.ДатаЗадолженности;
  |зДП:=Storage.Взаиморасчеты.ДатаПродажи;
  |зСмНО:=BegTotals(Сумма);
  |зСмП:=Income(Сумма);
  |зСмР:=Expense(Сумма);"+
  ?(оЮЛ.Get(1).Size()+оЮЛ.Get(2).Size()>0,"зЮЛ:=Storage.Взаиморасчеты.Договор.ЮрЛицо;Condition(зЮЛ IN оЮЛ.Get(1));Condition(зЮЛ NOT IN оЮЛ.Get(2));")+
  ?(ФлВторой=0,?(оК.Get(1).Size()+оК.Get(2).Size()>0,"Condition(зК IN оК.Get(1));Condition(зК NOT IN оК.Get(2));"),"Condition(зК IN СпК);")+
  ?(оД.Get(1).Size()+оД.Get(2).Size()>0,"Condition(зД IN оД.Get(1));Condition(зД NOT IN оД.Get(2));")+
  "Group зК,зД,Документ;";
  З:=Query.Create();
  З.Execute(ТЗ,2,,"зК,Документ");
  
  
  While З.Next(1) Do    
    К:=З.зК;
    Form.StatusText("Запрос "+(ФлВторой+1)+":"+Str(К));
    If IsEmpty(К) Then
      Continue;
    EndIf;
    
    While З.Next(2) Do
      ТТ:=Tab.Create("Док,Сумма,зДД,зДП");
      зСмНО:=З.BegTotals("зСмНО");
      If зСмНО<>0 Then
        ТТ.AddLine("Док,Сумма,зДД,зДП",0,зСмНО,ДНач-1,ДНач-1);
      EndIf;
      
      //С коррекцией возвратов
      Взв:="ВозвратОтПокупателя";
      ТдВ:=Tab.Create("зДок,зСм,зДД,зДП");
      
      While З.Next(3) Do
        зСмП:=З.Compute("зСмП");
        зСмР:=З.Compute("зСмР");
        If зСмП-зСмР<>0 Then
          зДок:=З.Документ;
          If isEmpty(зДок) Then
            ТТ.AddLine("Док,Сумма,ДЗ,ДП",0,З.зСмП-З.зСмР,ДНач-1,ДНач-1);
            Continue;
          EndIf;
          зДок:=зДок.Copy();//зДок ссылка на документ в запросе, не будем загружать его, иначе он останется в памяти до окончания обработки
          Вид:=зДок.DBName();
          If Вид<>Взв Then
            ТТ.AddLine("Док,Сумма,зДД,зДП",зДок,зСмП-зСмР,З.зДД,З.зДП);
          Else
            ТдВ.AddLine("зДок,зСм,зДД,зДП",зДок,зСмП-зСмР,З.зДД,З.зДП);
          EndIf;
        EndIf;
      EndDo;
      
      ТдВ.Select();
      While ТдВ.Next() Do
        зРл:=ТдВ.зДок.ДокОснование;
        If ТТ.FindAndGoto(зРл,,"Док")=0 Then
          ТТ.AddLine("Док,Сумма,зДД,зДП",ТдВ.зДок,ТдВ.зСм,ТдВ.зДД,ТдВ.зДП);
        Else
          ТТ.Сумма:=Round(ТТ.Сумма+ТдВ.зСм,2);
        EndIf;
      EndDo;
      ТдВ:=0;
      
      
      If ТТ.Size()=0 Then
        Continue;
      EndIf;
      
      //Расчет просрочки ТТ         
      ТТ.Group("зДД,зДП,Док","Сумма");
      ТТ.Sort("+зДД,+Док");
      ОбщСумма:=Round(ТТ.Sum("Сумма"),2);
      //Обработаем таблицу
      If ОбщСумма>0 Then    
        Баланс:=0;
        i:=1;
        While i<=ТТ.Size() Do
          ТТ.CurLine:=i;
          If ТТ.Сумма<0 Then
            Баланс:=Round(Баланс-ТТ.Сумма,2);
            ТТ.Remove(i);
          ElseIf ТТ.Сумма=0 Then
            ТТ.Remove(i);
          Else
            i:=i+1;
          EndIf;
        EndDo;
        
        While ТТ.Size()>=1 Do
          ТТ.CurLine:=1;
          If ТТ.Сумма<=Баланс Then
            Баланс:=Баланс-ТТ.Сумма;
            ТТ.Remove(1);
          Else
            ТТ.Сумма:=Round(ТТ.Сумма-Баланс,2);
            Break;
          EndIf;
        EndDo;
        
        ТТ.CurLine:=1;
        Проср1:=0;Проср2:=0;
        ПросрДней1:=0;ПросрДней2:=0;
        флВторойЗапрос:=0;
        спДокументы1:=List.Create();
        спДокументы2:=List.Create();
        ТТ.Select();
        While ТТ.Next() Do
          If ТТ.зДД<ДКон Then
            If ТТ.зДД<ДКон-оДней100 Then
              Проср2:=Проср2+ТТ.Сумма;
              ПросрДней2:=max(ПросрДней2,ДКон-ТТ.зДД);
              Док:=?(isEmpty(ТТ.Док),ТТ.Док,ТТ.Док.Copy());
              спДокументы2.Add(Док);
              If isEmpty(Док) Then
                флВторойЗапрос:=1;
              EndIf;
            ElseIf ТТ.зДД<ДКон-оДней50 Then
              Проср1:=Проср1+ТТ.Сумма;
              ПросрДней1:=max(ПросрДней1,ДКон-ТТ.зДД);
              Док:=?(isEmpty(ТТ.Док),ТТ.Док,ТТ.Док.Copy());
              спДокументы1.Add(Док);
              If isEmpty(Док) Then
                флВторойЗапрос:=1;
              EndIf;
            EndIf;
          EndIf;
        EndDo;
        Проср1:=Round(Проср1,2);
        Проср2:=Round(Проср2,2);
        
        If Проср1+Проср2>0 Then
          If not ТаблДог.FindAndGoto(К,,"К") Then
            ТаблДог.AddLine("К",К);
          EndIf;
          
          ТаблДог.флВторойЗапрос:=флВторойЗапрос;
          ТаблДог.Долг1:=Number(ТаблДог.Долг1)+Проср1;
          ТаблДог.Долг2:=Number(ТаблДог.Долг2)+Проср2;
          ТаблДог.ДолгДней1:=max(Number(ТаблДог.ДолгДней1),ПросрДней1);
          ТаблДог.ДолгДней2:=max(Number(ТаблДог.ДолгДней2),ПросрДней2);
          If isEmpty(ТаблДог.спДокументы1) Then
            ТаблДог.спДокументы1:=спДокументы1;
          Else
            спДокументы1.CopyTo(ТаблДог.спДокументы1);
          EndIf;
          If isEmpty(ТаблДог.спДокументы2) Then
            ТаблДог.спДокументы2:=спДокументы2;
          Else
            спДокументы2.CopyTo(ТаблДог.спДокументы2);
          EndIf;
        EndIf;  
      EndIf;
    EndDo;
  EndDo;
EndFunction


Function ПолучитьСписокДокументов(Сп);
  пДок:="";
  For i:=1 To Сп.Size() Do
    зДок:=Сп.Get(i);
    If not isEmpty(зДок) Then
      зДок:=зДок.Copy();
      If length(пДок)>1000 Then
        if Right(пДок,6)<>" и др." Then
          AppendStringToBufferedString(пДок," и др.");
        EndIf;
        Break;
      EndIf;
      AppendStringToBufferedString(пДок,?(пДок<>"",", ","")+зДок.КодОперации+" №"+зДок.DocNum+" от "+FormatDate(зДок.DocDate,"dd.mm.YYYY"));
      If глЕстьРеквизитДокумента("Договор",зДок.DBName()) Then
        зДог:=зДок.Договор;
        If not isEmpty(зДог.НомерДоговора) Then
          AppendStringToBufferedString(пДок," по договору №"+зДог.НомерДоговора+" от "+FormatDate(зДог.ДатаЗаключенияДоговора,"dd.mm.YYYY"));
        EndIf;
      EndIf;  
    EndIf;  
  EndDo;
  Exit пДок;
EndFunction      


Function РасшифровкаСПросрочкой()
  оЮЛ:=Form.оЮЛ.Value;
  оК:=Form.оК.Value;
  оД:=Form.оД.Value;
  КонДата:=BegOfDay(Form.КонДата.Value);
  
  ДКон:=КонДата;
  ДНач:=BegOfMonth(ДКон-глМаксимальныйПериодРасчетаДебиторскойЗадолж);
  ТЗ:="Period From ДНач To ДКон;
  |зД:=Storage.Взаиморасчеты.Договор;
  |зК:=Storage.Взаиморасчеты.Договор.@Parent;
  |зДД:=Storage.Взаиморасчеты.ДатаЗадолженности;
  |зВД:=Storage.Взаиморасчеты.ВидДолга;
  |зСмНО:=BegTotals(Сумма);
  |зСмП:=Income(Сумма);
  |зСмР:=Expense(Сумма);"+
  ?(оЮЛ.Get(1).Size()+оЮЛ.Get(2).Size()>0,"зЮЛ:=Storage.Взаиморасчеты.Договор.ЮрЛицо;Condition(зЮЛ IN оЮЛ.Get(1));Condition(зЮЛ NOT IN оЮЛ.Get(2));")+
  ?(оК.Get(1).Size()+оК.Get(2).Size()>0,"Condition(зК IN оК.Get(1));Condition(зК NOT IN оК.Get(2));")+
  ?(оД.Get(1).Size()+оД.Get(2).Size()>0,"Condition(зД IN оД.Get(1));Condition(зД NOT IN оД.Get(2));")+
  "Документ:=Storage.Взаиморасчеты.@LINK;
  |Group зВД,зК,Документ;";
  З:=Query.Create();
  З.Execute(ТЗ,2,,"зК,Документ");

  
  Т:=Table.Create();
  Т.SetSourceName("РасшифровкаСПросрочкой");

  //Дебиторская задолженность//Дебиторская задолженность//Дебиторская задолженность
  Т.CopyByX("v1",1);
  пН:=0;
  Дл0:=0;
  Пр0:=0;
  While З.Next(1) Do
    While З.Next(2) Do
      Дл:=З.BegTotals("зСмНО")+З.Compute("зСмП")-З.Compute("зСмР");
      Пр:=З.BegTotals("зСмНО");
      пДатаДог:="";
      ТТ:=Tab.Create("См,Д");
      ТО:=0;
      While З.Next(3) Do
        зСмП:=З.Compute("зСмП");
        зСмР:=З.Compute("зСмР");
        Пр:=Пр+?(З.зДД<=ДКон,зСмП-зСмР,0);
        См:=зСмП-зСмР;
        If См>0 Then
          If ТО>0 Then
            If ТО>См Then
              ТО:=Round(ТО-См,2);
              См:=0;
            Else
              См:=Round(См-ТО,2);
              ТО:=0;
            EndIf;
          EndIf;
          If См>0 Then
            зДок:=З.Документ;
            ТТ.AddLine("См,Д",См,?(isEmpty(зДок),ДНач-1,зДок.Copy().DocDate));
          EndIf;
        ElseIf См<0 Then
          См:=-См;
          While ТТ.Size()>0 Do
            ТТ.CurLine:=1;
            См0:=Min(ТТ.См,См);
            ТТ.См:=Round(ТТ.См-См0,2);
            См:=Round(См-См0,2);
            If ТТ.См=0 Then
              ТТ.Remove(1);
            EndIf;
            If См=0 Then
              Break;
            EndIf;
          EndDo;
          ТО:=ТО+См;
        EndIf;
      EndDo;
      
      If ТТ.Size()>0 Then
        пДатаДог:=Trim(ТТ.Get(1,"Д"));
      EndIf;
      
      Пр:=Max(Min(Пр,Дл),0);
      If Round(Дл,2)<=0 Then
        Continue;
      EndIf;
      пН:=пН+1;
      Дл0:=Дл0+Дл;
      Пр0:=Пр0+Пр;
      пИНН:=З.зК.ИНН;
      пИмя:=Trim(З.зК.ПолнНаименование);
      пК:=З.зК;
      пСм:=глФРМ(Дл);
      пПр:=глФРМ(Пр);
      Form.StatusText(Т.Height());
      Т.CopyByX("v2",1);
    EndDo;
  EndDo;
  пСм:=глФРМ(Дл0);
  пПр:=глФРМ(Пр0);
  Т.CopyByX("v3",1);
  
  //Кредиторская задолженность//Кредиторская задолженность//Кредиторская задолженность
  З.First();
  Т.CopyByX("v4",1);
  пН:=0;
  Дл0:=0;
  While З.Next(1) Do
    While З.Next(2) Do
      Дл:=З.Compute("зСмП")-З.Compute("зСмР");
      пДатаДог:="";
      If Дл>=0 Then
        Continue;
      EndIf;
      пН:=пН+1;
      Дл0:=Дл0-Дл;
      пИНН:=З.зК.ИНН;
      пИмя:=Trim(З.зК.ПолнНаименование);
      пК:=З.зК;
      пСм:=глФРМ(-Дл);
      Form.StatusText(Т.Height());
      Т.CopyByX("v5",1);
    EndDo;
  EndDo;
  пСм:=глФРМ(Дл0);
  Т.CopyByX("v6",1);
  Т.CopyByX("v7",1);
  глПечатнаяФормаОтчета(Т,Param,"Сведения о задолженности (финансы)");
EndFunction

Function Печать(СпУстановки)
  оЮЛ:=Form.оЮЛ.Value;
  оК:=Form.оК.Value;
  оД:=Form.оД.Value;
  оВидОтчета:=Form.оВидОтчета.Value.SelectedLine;
  
  КонДата:=BegOfDay(Form.КонДата.Value);
  If not глПроверитьДатуВОтчетах(Param,0,Form.КонДата.Value,0) Then
    Exit;
  EndIf;
  If оВидОтчета=2 Then
    РасшифровкаСПросрочкой();
    Exit;
  ElseIf оВидОтчета=3 Then
    Message("Отчет пока не поддерживается!","!");
    Exit;
  ElseIf оВидОтчета>3 Then
    Message("Отчет пока не поддерживается!","!");
    Exit;
  EndIf;
  
  
  Т:=Table.Create();
  ТаблДог:=Tab.Create("К,Долг1,Долг2,ДолгДней1,ДолгДней2,спДокументы1,спДокументы2,флВторойЗапрос");
  ВыполнитьЗапрос(0);
  
  //Второй запрос
  СпК:=List.Create();
  ТаблДог.Select();
  While ТаблДог.Next() Do
    If ТаблДог.флВторойЗапрос=1 Then
      СпК.Add(ТаблДог.К);
      ТаблДог.Долг1:=0;
      ТаблДог.Долг2:=0;
      ТаблДог.ДолгДней1:=0;
      ТаблДог.ДолгДней2:=0;
      ТаблДог.спДокументы1:=0;
      ТаблДог.спДокументы2:=0;
    EndIf;
  EndDo;
  
  If СпК.Size()>0 Then
    ВыполнитьЗапрос(1,СпК);
  EndIf;  
  ТаблДог.Sort("К");
  
  //Выручка
  ДНач:=BegOfQuarter(КонДата);
  ДКон:=BegOfDay(КонДата);
  ТЗ:="Period From ДНач to ДКон;
  |зД:=Storage.ДвижениеТМЦ.Договор;
  |зК:=Storage.ДвижениеТМЦ.Договор.@Parent;
  |зТА:=Storage.ДвижениеТМЦ.Договор.@Parent.ТипАктива;Condition(зТА<>3);
  |зДП:=Storage.ДвижениеТМЦ.Сумма;
  |зМрТип:=Storage.ДвижениеТМЦ.ТипЗаписи;Condition(зМрТип<2);
  |зМрТУ:=Storage.ДвижениеТМЦ.ТипУчета;Condition(зМрТУ=0);
  |зСм:=SUM(зДП);"+
  ?(оЮЛ.Get(1).Size()+оЮЛ.Get(2).Size()>0,"зЮЛ:=Storage.ДвижениеТМЦ.Договор.ЮрЛицо;Condition(зЮЛ IN оЮЛ.Get(1));Condition(зЮЛ NOT IN оЮЛ.Get(2));")+
  ?(оК.Get(1).Size()+оК.Get(2).Size()>0,"Condition(зК IN оК.Get(1));Condition(зК NOT IN оК.Get(2));")+
  ?(оД.Get(1).Size()+оД.Get(2).Size()>0,"Condition(зД IN оД.Get(1));Condition(зД NOT IN оД.Get(2));");
  З:=Query.Create();
  З.Execute(ТЗ);
  
  СмВыручка:=0;
  If З.Next(1) Then
    СмВыручка:=З.зСм;
  EndIf;  
  
  пЮЛ:="";
  If оЮЛ.Get(1).Size()=1 Then
    пЮЛ:=оЮЛ.Get(1).Get(1).ПолнНаименование;
  EndIf;
  пДНач:=FormatDate(BegOfQuarter(КонДата),"DD MMM YYYY года");
  пДКон:=FormatDate(КонДата,"DD MMM YYYY года");
  пГород:=Trim(DBVar.МестоположениеБазы);
  пДатаОтчета:=""+КонДата;
  Т.CopyByX("v1",1);
  Т.Options.FixedLine:=Т.Height();
  
  Сумма1:=0;
  Сумма2:=0;
  пН:=0;
  ТаблДог.Select();
  While ТаблДог.Next() Do
    Сумма1:=Сумма1+ТаблДог.Долг1+ТаблДог.Долг2;
    If ТаблДог.Долг1>0 Then
      пН:=пН+1;
      пИмя:=ТаблДог.К.ПолнНаименование;
      пК:=ТаблДог.К;
      пСрок:=ТаблДог.ДолгДней1;
      пСумма:=глФРМ(ТаблДог.Долг1);
      пПроц:="50%";
      Сумма2:=Сумма2+Round(ТаблДог.Долг1/2,2);
      пСумма2:=глФРМ(Round(ТаблДог.Долг1/2,2));
      пДок:=ПолучитьСписокДокументов(ТаблДог.спДокументы1);
      Т.CopyByX("v2",1);
    EndIf;  
    If ТаблДог.Долг2>0 Then
      пН:=пН+1;
      пИмя:=ТаблДог.К.ПолнНаименование;
      пК:=ТаблДог.К;
      пСрок:=ТаблДог.ДолгДней2;
      пСумма:=глФРМ(ТаблДог.Долг2);
      пПроц:="100%";
      Сумма2:=Сумма2+Round(ТаблДог.Долг2,2);
      пСумма2:=глФРМ(Round(ТаблДог.Долг2,2));
      пДок:=ПолучитьСписокДокументов(ТаблДог.спДокументы2);
      Т.CopyByX("v2",1);
    EndIf;  
  EndDo;
  
  пСумма:=глФРМ(Сумма1);
  пСумма2:=глФРМ(Сумма2);
  пСм1:=пСумма2;
  пСм2:=глФРМ(СмВыручка);
  пСм3:=глФРМ(СмВыручка*Form.оПроцМакс.Value/100);
  Т.CopyByX("v3",1);
  
  глПечатнаяФормаОтчета(Т,Param,"Регистр");
EndFunction

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction


