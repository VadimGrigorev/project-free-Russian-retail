//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var ТБаланс Export;//Основная настрока
Var Коэфф Export;
Var оЗнаков Export;
Var З Export;
Var ЗДебКред Export;
Var ТабЗапросы Export;


Function ПостроитьСписокНастроек(флУмолчание=1)
  Сп:=List.Create();
  Путь:="Temp\Бухгалтерия";
  If not File.DoesPathExist(Путь) Then
    File.CreateDirectory(Путь);
  EndIf;
  Путь:=Путь+"\Баланс";
  If not File.DoesPathExist(Путь) Then
    File.CreateDirectory(Путь);
  EndIf;
  Путь:=Путь+"\";
  Сп:=File.LoadFileNames(Путь+"*.set");
  If флУмолчание Then
    Сп.Insert(1,"","По умолчанию");
  EndIf;
  For i:=флУмолчание+1 To Сп.Size() Do
    Сп.SetName(i,RemoveExt(Сп.GetName(i)));
  EndDo;
  Exit Сп;
EndFunction


Function НастройкаПоУмолчанию()

  Function СтандартнаяТаблица()
    //<Слагаемое>{-}<Слагаемое>,...
    //<Слагаемое>: [{Д,К}]<Счет>[@<Субконто1>[@<Субконто2>[@<Субконто3>]]]
    //<Субконто>: Код субконто, либо "", если фильтра нет
    Таб:=Tab.Create("Наименование,Код,Формула,Подгруппа,Описание");
    Таб.AddColumn("флПодитоги",,"Number");
    Таб.AddColumn("зСм",,"Number");
    Таб.AddColumn("зСм2",,"Number");
    Таб.AddColumn("зСм3",,"Number");
    
    Exit Таб;
  EndFunction

  ТБаланс:=СтандартнаяТаблица();
  
  ТБаланс.NewLine();
  ТБаланс.Наименование:="АКТИВ";
  ТБаланс.Подгруппа:=СтандартнаяТаблица();
  Таб:=ТБаланс.Подгруппа;
  
  Таб.NewLine();
  Таб.Наименование:="Внеоборотные активы";
  Таб.Подгруппа:=СтандартнаяТаблица();
  Таб2:=Таб.Подгруппа;
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Нематериальные активы","1110","04.1,-05","Разница между остатками по счетам:
    |- 04 ""Нематериальные активы"" (без учета расходов на НИОКР)
    |- 05 ""Амортизация нематериальных активов"" (без учета расходов на НИОКР);
    |- остаток по счету 97 ""Расходы будущих периодов""
    |(в части разового (паушального) платежа за право пользования результатами интеллектуальной деятельности и средствами индивидуализации при условии, что период списания этих расходов превышает 12 месяцев после отчетной даты или продолжительность операционного цикла, если он превышает 12 месяцев)
    |");

  //Сч04=глНайтиСчет("04.1");
  //субНИОКР=глНайтиСубконтоПоИмени(Сч04.ВидСубконто1,"НИОКР");
  //"04.1@"+субНИОКР.Код+"-05@"+субНИОКР.Код
  Таб2.AddLine("Наименование,Код,Формула,Описание","Результаты исследований и разработок","1120","04.2,08.8","Разница между остатками по счетам:
    |- 04 ""Нематериальные активы"" (в части расходов на НИОКР с зарегистрированными исключительными правами и (или) подлежащих правовой охране)
    |- 05 ""Амортизация нематериальных активов"" (в части расходов на НИОКР с зарегистрированными исключительными правами и (или) подлежащих правовой охране)
    |");
    
  Таб2.AddLine("Наименование,Код,Формула,Описание","Нематериальные поисковые активы","1130","","Остаток по счету 08 (в части расходов на освоение полезных ископаемых). Эти расходы в дальнейшем могут быть квалифицированы как нематериальные активы");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Материальные поисковые активы","1140","","Остаток по счету 08 (в части расходов на освоение полезных ископаемых). Эти расходы в дальнейшем могут быть квалифицированы как основные средства");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Основные средства","1150","01,02.1,02.3,02.4","Разница между остатками по счетам:
    |- 01 ""Основные средства""
    |- 02 ""Амортизация основных средств"" (без учета амортизации, начисленной по объектам доходных вложений в материальные ценности, отраженных по строке 1140)
    |- остаток по счету 07 ""Оборудование к установке"" (в части расходов на незавершенное строительство)
    |- остаток по счету 08 ""Вложения во внеоборотные активы"" (в части расходов на незавершенное строительство)
    |- остаток по счету 97 ""Расходы будущих периодов"" (в части регулярных крупных затрат, возникающих через определенные длительные временные интервалы (более 12 месяцев) на протяжении срока эксплуатации объекта основных средств, на проведение его ремонта и на иные аналогичные мероприятия (например, проверку технического состояния))
    |");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Доходные вложения в материальные ценности","1160","03,02.2","Разница между остатками по счетам:
    |- 03 ""Доходные вложения в материальные ценности""
    |- 02 ""Амортизация основных средств"" (в части амортизации, начисленной по этим объектам)
    |");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Финансовые вложения","1170","","Сальдо по счетам:
    |- 58 ""Финансовые вложения"" в части долгосрочных вложений (минус сальдо по счету 59 ""Резервы под обесценение финансовых вложений"", относящееся к долгосрочным финансовым вложениям)
    |- 55 ""Специальные счета в банках"", субсчет 3 ""Депозитные счета"" (в части долгосрочных вложений и депозитов на срок более года, если по ним начисляют проценты)
    |- 73 ""Расчеты с персоналом по прочим операциям"" (в части процентных займов со сроком возврата по истечении 12 месяцев после отчетной даты)
    |");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Отложенные налоговые активы","1180","09","Сальдо по счету 09 ""Отложенные налоговые активы""");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Прочие внеоборотные активы","1190","07,08","Сальдо по счетам:
    |- 07 ""Оборудование к установке"" (за исключением расходов на незавершенное строительство)
    |- 08 ""Вложения во внеоборотные активы"" (за исключением расходов на незавершенное строительство)
    |- прочие внеоборотные активы, не нашедшие отражения по другим группам статей раздела ""Внеоборотные активы""
    |");
  
  
  Таб.NewLine();
  Таб.Наименование:="Оборотные активы";
  Таб.Подгруппа:=СтандартнаяТаблица();
  Таб2:=Таб.Подгруппа;
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Запасы","1210","10,11,20,21,23,29,41,43,44,45,46,15,16,14,97","Сальдо по счетам:
    |- 10 ""Материалы""
    |- 11 ""Животные на выращивании и откорме""
    |- 20 ""Основное производство""
    |- 21 ""Полуфабрикаты собственного производства""
    |- 23 ""Вспомогательные производства""
    |- 29 ""Обслуживающие производства и хозяйства""
    |- 41 ""Товары"" (минус кредитовое сальдо по счету 42 ""Торговая наценка"", если товары учитываются в продажных ценах)
    |- 43 ""Готовая продукция""
    |- 44 ""Расходы на продажу""
    |- 45 ""Товары отгруженные""
    |- 46 ""Выполненные этапы по незавершенным работам""
    |- 97 ""Расходы будущих периодов"" (кроме расходов, отраженных по строкам 1110 и 1150 баланса)
    |- 15 ""Заготовление и приобретение материальных ценностей""
    |- плюс (минус) дебетовое (кредитовое) сальдо по счету 16 ""Отклонение в стоимости материальных ценностей""
    |- минус кредитовое сальдо по счету 14 ""Резервы под снижение стоимости материальных ценностей""
    |");
  Таб2.Подгруппа:=СтандартнаяТаблица();
  Таб3:=Таб2.Подгруппа;

  Таб3.AddLine("Наименование,Код,Формула,Описание","Товары","1211","41.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Материалы","1212","10","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Готовая продукция","1213","43","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Издержки обращения","1214","44","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Прочие запасы и затраты","1215","20","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Тара","1216","41.3","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расходы будущих периодов","1217","97","");
  
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Налог на добавленную стоимость по приобретенным ценностям","1220","19","Сальдо по счету 19 ""Налог на добавленную стоимость по приобретенным ценностям""");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Дебиторская задолженность","1230","Д60.1,Д62.1,Д62.5,Д71.1,Д73.1,Д75.1,Д76.5,Д68.1,Д68.5,-63,Д69.1,Д69.2.2,Д69.3.2,Д68.2,Д68.8,Д73.2,Д73.3","Остаток по дебету счетов:
    |- 60 ""Расчеты с поставщиками и подрядчиками"" (дебиторская задолженность поставщиков по уплаченным организацией авансам отражается за минусом НДС)
    |- 62 ""Расчеты с покупателями и заказчиками""
    |- 71 ""Расчеты с подотчетными лицами""
    |- 73 ""Расчеты с персоналом по прочим операциям"" (кроме процентных займов)
    |- 75 ""Расчеты с учредителями""
    |- 76 ""Расчеты с разными дебиторами и кредиторами"" (суммы НДС, начисленные с авансов, не учитываются)
    |- 68 ""Расчеты по налогам и сборам""
    |- 69 ""Расчеты по социальному страхованию и обеспечению""
    |- минус сальдо по счету 63 ""Резервы по сомнительным долгам""
    |");
    
  Таб2.Подгруппа:=СтандартнаяТаблица();
  Таб3:=Таб2.Подгруппа;

  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с покупателями и заказчиками","1231","Д62.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Задолженность покупателей за тару","1232","Д62.5","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с поставщиками и подрядчиками","1233","Д60.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты по налогам и сборам","1234","Д68.1,Д68.10,Д68.2,Д68.4.1,Д68.6,Д68.7,Д68.8,Д68.9","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты по социальному страхованию","1235","Д69.1,Д69.11,Д69.2.1,Д69.2.2,Д69.2.3,Д69.3.1,Д69.3.2","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с подотчетными лицами","1236","Д71.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с персоналом по прочим операциям","1237","Д73.1,Д73.2,Д73.3","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с прочими дебиторами и кредиторами","1238","Д76.4,Д76.5,Д76.9,Д76.10","");
  
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Финансовые вложения (за исключением денежных эквивалентов)","1240","58.1.2,58.2,58.3,59,58.4,58.5","Сальдо по счетам:
    |- 58 ""Финансовые вложения"" в части краткосрочных вложений (минус сальдо по счету 59 ""Резервы под обесценение финансовых вложений"", относящееся к краткосрочным финансовым вложениям)
    |- 73 ""Расчеты с персоналом по прочим операциям"" (в части процентных займов со сроком возврата менее 12 месяцев после отчетной даты)
    |");
    
  Таб2.Подгруппа:=СтандартнаяТаблица();
  Таб3:=Таб2.Подгруппа;

  Таб3.AddLine("Наименование,Код,Формула,Описание","Представленные займы","1241","58.3",""); 
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Денежные средства и денежные эквиваленты","1250","50,51,52,55,57,58.2,-50.3,-50.33","Сальдо по счетам:
    |- 50 ""Касса"" (за исключением остатка по субсчету ""Денежные документы"")
    |- 51 ""Расчетные счета""
    |- 52 ""Валютные счета""
    |- 55 ""Специальные счета в банках"" (за исключением сумм, учтенных в составе финансовых вложений)
    |- 57 ""Переводы в пути""
    |");
  Таб2.Подгруппа:=СтандартнаяТаблица();
  Таб3:=Таб2.Подгруппа;

  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчетный счет","1251","51","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Переводы в пути (расч. счет)","1252","57","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Касса","1253","50,-50.3,-50.33","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Векселя","1254","58.2","");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Прочие оборотные активы","1260","50.3,79,94,76.АВ","Сальдо по дебету счетов:
    |- 50 ""Касса"" (в части остатка по субсчету ""Денежные документы"")
    |- 79 ""Внутрихозяйственные расчеты"" (в части расчетов по договору доверительного управления имуществом)
    |- 94 ""Недостачи и потери от порчи ценностей""
    |- прочие оборотные активы, не нашедшие отражения по другим группам статей раздела ""Оборотные активы""
    |");
  
  ТБаланс.NewLine();
  ТБаланс.Наименование:="ПАССИВ";
  ТБаланс.Подгруппа:=СтандартнаяТаблица();
  Таб:=ТБаланс.Подгруппа;
    
  Таб.NewLine();Таб.Наименование:="Капитал и резервы";
  Таб.Подгруппа:=СтандартнаяТаблица();
  Таб2:=Таб.Подгруппа;
    
  Таб2.AddLine("Наименование,Код,Формула,Описание","Уставный капитал (складочный капитал, уставный фонд, вклады товарищей)","1310","80","Сальдо по счету 80 ""Уставный капитал""");
  Таб2.AddLine("Наименование,Код,Формула,Описание","Собственные акции, выкупленные у акционеров","1320","81,75.1","Сальдо по дебету счета 81 ""Собственные акции (доли)""");
  Таб2.AddLine("Наименование,Код,Формула,Описание","Переоценка внеоборотных активов","1340","83.2","Сальдо по счетам:
    |- 83 ""Добавочный капитал"" (в части переоценки основных средств)
    |- 84 ""Нераспределенная прибыль (непокрытый убыток)"" (в части переоценки основных средств)
    |");
  
  Таб2.AddLine("Наименование,Код,Формула,Описание","Добавочный капитал (без переоценки)","1350","83.1","Сальдо по счету 83 ""Добавочный капитал"" (без учета переоценки)");
  Таб2.AddLine("Наименование,Код,Формула,Описание","Резервный капитал","1360","82","Сальдо по счету 82 ""Резервный капитал""");
  Таб2.AddLine("Наименование,Код,Формула,Описание","Нераспределенная прибыль (непокрытый убыток)","1370","84,99","Сальдо по счету 84 ""Нераспределенная прибыль (непокрытый убыток)"" (без учета переоценки), сальдо по счету 99 ""Прибыли и убытки"" (в промежуточной отчетности)");
  
  Таб.NewLine();
  Таб.Наименование:="Долгосрочные обязательства";
  Таб.Подгруппа:=СтандартнаяТаблица();
  Таб2:=Таб.Подгруппа;
    
  Таб2.AddLine("Наименование,Код,Формула,Описание","Заемные средства","1410","67","Сальдо по счету 67 ""Расчеты по долгосрочным кредитам и займам"" (сумма основного долга и начисленных процентов. "+
    "Исключение - проценты, срок уплаты которых на отчетную дату составляет менее 12 месяцев. При необходимости проценты отражаются обособленно как расшифровка строки 1410 или 1510)");
  Таб2.AddLine("Наименование,Код,Формула,Описание","Отложенные налоговые обязательства","1420","77","Сальдо по счету 77 ""Отложенные налоговые обязательства""");
  Таб2.AddLine("Наименование,Код,Формула,Описание","Оценочные обязательства","1430","Д96","Сальдо по счету 96 ""Резервы предстоящих расходов"" (в части резервов, созданных под события, которые наступят не ранее чем через год)");
  Таб2.AddLine("Наименование,Код,Формула,Описание","Прочие обязательства","1450","75","Остаток по кредиту счетов:
    |- 60 ""Расчеты с поставщиками и подрядчиками""
    |- 62 ""Расчеты с покупателями и заказчиками"" (кредиторская задолженность перед покупателями по полученным организацией авансам отражается в балансе за минусом НДС)
    |- 73 ""Расчеты с персоналом по прочим операциям""
    |- 75 ""Расчеты с учредителями""
    |- 76 ""Расчеты с разными дебиторами и кредиторами"" (в части долгосрочной кредиторской задолженности; суммы НДС, начисленные с авансов, не учитываются)
    |- 86 ""Целевое финансирование"" (в части долгосрочной кредиторской задолженности)
    |");
    
        
  Таб.NewLine();
  Таб.Наименование:="Краткосрочные обязательства";
  Таб.Подгруппа:=СтандартнаяТаблица();
  Таб2:=Таб.Подгруппа;
    
  Таб2.AddLine("Наименование,Код,Формула,Описание","Заемные средства","1510","66","Сальдо по счету 66 ""Расчеты по краткосрочным кредитам и займам"" (сумма основного долга, а также начисленных процентов. "+
    "При необходимости проценты отражаются обособленно как расшифровка строки 1510)");
    
  Таб2.Подгруппа:=СтандартнаяТаблица();
  Таб3:=Таб2.Подгруппа;

  Таб3.AddLine("Наименование,Код,Формула,Описание","Полученные кредиты","1511","66.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Проценты по кредитам","1512","66.2","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Полученные займы","1513","66.3","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Проценты по займам","1514","66.4","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Краткосрочные обязательства","1515","66.6","");
    
    
  Таб2.AddLine("Наименование,Код,Формула,Описание","Кредиторская задолженность","1520","К60.1,70,К68.1,К68.10,К68.2,К68.4.1,К68.7,К68.8,К68.9,К69.1,К69.11,К69.2.1,К69.2.2,К69.2.3,К69.3.1,К62.1,К73.1,К71.1,К75.1,К76,К68.5,К76.9","Остаток по кредиту счетов:
    |- 60 ""Расчеты с поставщиками и подрядчиками""
    |- 62 ""Расчеты с покупателями и заказчиками"" (кредиторская задолженность перед покупателями по полученным организацией авансам отражается в балансе за минусом НДС)
    |- 70 ""Расчеты по оплате труда""
    |- 68 ""Расчеты по налогам и сборам""
    |- 69 ""Расчеты по социальному страхованию и обеспечению"" в части задолженности""
    |- 71 ""Расчеты с подотчетными лицами""
    |- 73 ""Расчеты с персоналом по прочим операциям""
    |- 75 ""Расчеты с учредителями""
    |- 76 ""Расчеты с разными дебиторами и кредиторами"" (в части краткосрочной кредиторской задолженности; суммы НДС, начисленные с авансов, не учитываются)
    |");
  
  Таб2.Подгруппа:=СтандартнаяТаблица();
  Таб3:=Таб2.Подгруппа;

  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с поставщиками и подрядчиками","1521","К60.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Задолженность поставщикам за тару","1522","К60.5","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с покупателями и заказчиками","1523","К62.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты по налогам и сборам","1524","К68.1,К68.10,К68.2,К68.4,К68.5,К68.7,К68.8,К68.9","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты по социальному страхованию и обеспечению","1525","К69.1,К69.11,К69.2.1,К69.2.2,К69.2.3,К69.3.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с персоналом по оплате труда","1526","70","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с персоналом по прочим операциям","1527","К71.1,К73.1,К75.1","");
  Таб3.AddLine("Наименование,Код,Формула,Описание","Расчеты с разными дебиторами и кредиторами","1528","К76.2,К76.4,К76.9,К76.10","");
    
  Таб2.AddLine("Наименование,Код,Формула,Описание","Доходы будущих периодов","1530","98,86","Сальдо по счету 98 ""Доходы будущих периодов""
    |Остаток по кредиту счета 86 ""Целевое финансирование"" (в части целевого бюджетного финансирования, грантов, технической помощи и т. п.)");
    
  Таб2.AddLine("Наименование,Код,Формула,Описание","Оценочные обязательства","1540","К96","Сальдо по счету 96 ""Резервы предстоящих расходов"" (в части резервов, созданных под события, которые наступят в течение года)");
  Таб2.AddLine("Наименование,Код,Формула,Описание","Прочие краткосрочные обязательства","1550","","Сальдо по счетам:
    |- 79 ""Внутрихозяйственные расчеты"" (в части расчетов по договору доверительного управления имуществом)
    |- 86 ""Целевое финансирование"" (в части краткосрочной кредиторской задолженности)
    |- иные краткосрочные обязательства, не нашедшие отражения по другим группам статей раздела ""Краткосрочные обязательства""
    |");
  
  Form.оНастройка.Value:="По умолчанию";
EndFunction

Function лкФРМ(См)
  If См<0 Then
    Стр:=FormatNumber(-См/Коэфф,1,"'",оЗнаков);
    Exit ?(Стр="","","("+Стр+")");
  Else
    Exit FormatNumber(См/Коэфф,1,"'",оЗнаков);
  EndIf;
EndFunction

Function лкНайтиСчет(Счет)
  а:=Ref.бухПланСчетов;
  If not а.Find("Code",Счет) Then
    Exit 0;
  EndIf;
  Exit а;
EndFunction


Function ПолучитьИлиВыполнитьЗапрос(аСчет,Индекс,КДата,СубНом)
  оЮЛ:=Form.оЮЛ.Value;

  If ТабЗапросы.FindAndGoto(Индекс,,"Индекс")=0 Then
    НачДата:=BegOfMonth(КДата);
    ТЗ:="Period From НачДата to КДата;
    |зЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо;
    |зСч:=Storage.БухгалтерскиеСчета.Счет;
    |зЗБ:=Storage.БухгалтерскиеСчета.Счет.Забалансовый;
    |зСуб:=Storage.БухгалтерскиеСчета.Субконто"+СубНом+";
    |зНачОст:=BegTotals(Сумма);
    |зРасход:=Expense(Сумма);
    |зПриход:=Income(Сумма);
    |Condition(зЗБ=0);
    |Condition(зСч=аСчет);
    |Condition(зЮЛ=оЮЛ);
    |Group зСуб;";
    З2:=Query.Create();
    З2.Execute(ТЗ);
    ТабЗапросы.AddLine("Индекс,Запрос",Индекс,З2);
  EndIf;
  Exit ТабЗапросы.Запрос;
EndFunction

Function ДобавитьДКСчета(СпСчета,Формула)
  While Формула<>"" Do
    Стр:=TearStr(Формула,",");
    If Pos("-",Стр)>0 Then
      Стр:=Replace(Стр,"-","");
    EndIf;
    
    Фл:=0;
    If Pos("Д",Стр)=1 Then
      Фл:=1;
      Стр:=Mid(Стр,2);
    EndIf;
    If Pos("К",Стр)=1 Then
      Фл:=1;
      Стр:=Mid(Стр,2);
    EndIf;
    If Фл=0 Then
      Continue;
    EndIf;
    тСчет:=TearStr(Стр,"@");
    If Pos("@",Стр)>0 Then
      Continue;
    EndIf;
    
    аСчет:=лкНайтиСчет(тСчет);
    If аСчет<>0 Then
      If СпСчета.Find(аСчет)=0 Then
        СпСчета.Add(аСчет);
      EndIf;
    EndIf;
  EndDo;
EndFunction

Function ПолучитьСубконто(стрСуб,ВидСубконто)
  If Trim(стрСуб)="" Then
    Exit GetNothing();
  EndIf;
  If Trim(ВидСубконто.ТипЗначенияЛокальный)="" Then
    а:=Ref.бухЗначенияСубконто;
    If а.Find("@Parent,Code",ВидСубконто,стрСуб) Then
      Exit а;
    EndIf;
    Exit GetNothing();
  EndIf;
  Стр:=Trim(ВидСубконто.ТипЗначенияЛокальный);
  СтрТип:=Uppercase(TearStr(Стр,"."));
  If (СтрТип="ПЕРЕЧИСЛЕНИЕ")or(СтрТип="ENUM") Then
    Try
      Exit Enum.GetByIndex(Стр,Number(стрСуб));
    Except EndTry;
    Exit GetNothing();
  ElseIf (СтрТип="ДОКУМЕНТ")or(СтрТип="DOC") Then
    а:=DB("Doc."+Стр);
    дДата:=TearStr(стрСуб,"#");
    дНомер:=TearStr(стрСуб,"#");
    If а.Find("DocNum,<DocDate,>=DocDate",дНомер,EndOfYear(дДата)+1,BegOfYear(дДата)) Then
      Exit а;
    EndIf;
    Exit GetNothing();
  EndIf;
  
  Стр:=Replace(Uppercase(Trim(ВидСубконто.ТипЗначенияЛокальный)),"СПРАВОЧНИК.","REF.");
  а:=DB(Стр);
  If а.Find("Code",стрСуб) Then
    Exit а;
  EndIf;
  Exit GetNothing();
EndFunction


Function ВычислитьПоказатель(ByRef зСм,КДата,Формула,ФлЗнак0=1)
  оЮЛ:=Form.оЮЛ.Value;

  См0:=0;
  зСм:=0;
  While Формула<>"" Do
    Стр:=TearStr(Формула,",");
    флЗнак:=1;
    If Pos("-",Стр)>0 Then
      флЗнак:=-1;
      Стр:=Replace(Стр,"-","");
    EndIf;
    
    флДебит:=0;
    If Pos("Д",Стр)=1 Then
      флДебит:=1;
      Стр:=Mid(Стр,2);
    EndIf;
    
    флКредит:=0;
    If Pos("К",Стр)=1 Then
      флКредит:=1;
      Стр:=Mid(Стр,2);
    EndIf;
    
    тСчет:=TearStr(Стр,"@");
    аСчет:=лкНайтиСчет(тСчет);
    If аСчет=0 Then
      Message("Счет "+тСчет+" не найден в конфигурации! Счет пропущен при расчете!","!");
      Continue;
    EndIf;
    
    См:=0;
    If Pos("@",Стр)=0 Then
      If (флКредит+флДебит=0)Or(аСчет.ВидСубконто1.Selected()=0) Then
        З.First();
        If З.ResultTable.LocateAndGoto("зСч,@LEVEL",аСчет,1)=0 Then
          Continue;
        EndIf;
        См:=З.зНачОст+З.зПриход-З.зРасход;
      Else
        //Разворачиваем счет по первому субконто
        ЗДебКред.First();
        If ЗДебКред.ResultTable.LocateAndGoto("зСч,@LEVEL",аСчет,2)>0 Then
          While ЗДебКред.Next(2) Do
            аСуб:=ЗДебКред.зСуб;
            См2:=ЗДебКред.зНачОст+ЗДебКред.зПриход-ЗДебКред.зРасход;
            If флДебит=1 Then
              См:=См+Max(См2,0);
            ElseIf флКредит=1 Then
              См:=См+Min(См2,0);
            EndIf;
          EndDo;
        EndIf;
        
        флКредит:=0;
        флДебит:=0;
      EndIf;
    Else
      //<Суб1>@<Суб2>@<Суб3>
      Фл:=0;Фл2:=0;Фл3:=0;
      Стр2:=Стр;
      If TearStr(Стр2,"@")<>"" Then
        Фл:=1;
      EndIf;
      If TearStr(Стр2,"@")<>"" Then
        Фл2:=1;
      EndIf;
      If TearStr(Стр2,"@")<>"" Then
        Фл3:=1;
      EndIf;
      If Фл+Фл2+Фл3=1 Then
        //Простая расшифровка -- одно субконто
        СубНом:=?(Фл=1,1,?(Фл2=1,2,3));
        Стр2:=Стр;
        If СубНом=1 Then
          Стр2:=TearStr(Стр2,"@");
          аСуб:=ПолучитьСубконто(Стр2,аСчет.ВидСубконто1);
        ElseIf СубНом=2 Then
          TearStr(Стр2,"@");
          Стр2:=TearStr(Стр2,"@");
          аСуб:=ПолучитьСубконто(Стр2,аСчет.ВидСубконто2);
        Else
          TearStr(Стр2,"@");
          TearStr(Стр2,"@");
          Стр2:=TearStr(Стр2,"@");
          аСуб:=ПолучитьСубконто(Стр2,аСчет.ВидСубконто3);
        EndIf;
        
        З2:=ПолучитьИлиВыполнитьЗапрос(аСчет,тСчет+"@0@"+Фл+"@"+Фл2+"@"+Фл3,КДата,СубНом);
        If З2=0 Then
          Exit 0;
        EndIf;
        З2.First();
        If З2.ResultTable.LocateAndGoto("зСуб,@LEVEL",аСуб,1)>0 Then
          См:=З2.зНачОст+З2.зПриход-З2.зРасход;
        EndIf;
      Else
        //Сложная расшифровка -- несколько субконто
        Стр2:=Стр;
        аСуб:=ПолучитьСубконто(TearStr(Стр2,"@"),аСчет.ВидСубконто1);
        аСуб2:=ПолучитьСубконто(TearStr(Стр2,"@"),аСчет.ВидСубконто2);
        аСуб3:=ПолучитьСубконто(TearStr(Стр2,"@"),аСчет.ВидСубконто3);
        НачДата:=BegOfMonth(КДата);
        ТЗ:="Period FromНач Дата to КДата;
        |зЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо;
        |зСч:=Storage.БухгалтерскиеСчета.Счет;
        |зЗБ:=Storage.БухгалтерскиеСчета.Счет.Забалансовый;
        |зСуб1:=Storage.БухгалтерскиеСчета.Субконто1;
        |зСуб2:=Storage.БухгалтерскиеСчета.Субконто2;
        |зСуб3:=Storage.БухгалтерскиеСчета.Субконто3;
        |зНачОст:=BegTotals(Сумма);
        |зРасход:=Expense(Сумма);
        |зПриход:=Income(Сумма);
        |Condition(зЗБ=0);
        |Condition(зСч=аСчет);
        |Condition(зЮЛ=оЮЛ);"+
        ?(Фл=1,"Condition(зСуб1=аСуб);","")+
        ?(Фл2=1,"Condition(зСуб2=аСуб2);","")+
        ?(Фл3=1,"Condition(зСуб3=аСуб3);","");
        З2:=Query.Create();
        З2.Execute(ТЗ);
        См:=З2.BegTotals("зНачОст")+З2.Compute("зПриход")-З2.Compute("зРасход");
      EndIf;
    EndIf;

    If флДебит=1 Then
      См:=Max(См,0);
    ElseIf флКредит=1 Then
      См:=Min(См,0);
    EndIf;
    
    См0:=См0+флЗнак*См;
  EndDo;
  
  зСм:=ФлЗнак0*См0;
  Exit 1;
EndFunction

Function ЗаполнитьБалансНаДату(КДата,Тип)
  оЮЛ:=Form.оЮЛ.Value;
  
  If КДата<DBVar.НачалоПериодаБазы Then
    Exit 1;
  EndIf;
  ТабЗапросы:=Tab.Create("Индекс,Запрос");//<Счет>@0@{1,0}@{1,0}@{1,0}
                                          //или <Счет>@1@<Суб1>@<Суб2>@<Суб3>
  
  //Основной запрос
  НачДата:=BegOfMonth(КДата);
  ТЗ:="Period From НачДата to КДата;
  |зЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо;
  |зСч:=Storage.БухгалтерскиеСчета.Счет;
  |зЗБ:=Storage.БухгалтерскиеСчета.Счет.Забалансовый;
  |зНачОст:=BegTotals(Сумма);
  |зРасход:=Expense(Сумма);
  |зПриход:=Income(Сумма);
  |Condition(зЗБ=0);
  |Condition(зЮЛ=оЮЛ);
  |Group зСч;";
  З:=Query.Create();
  З.Execute(ТЗ);

  //Запрос по счетам с разворотом по первому субконто для нахождения дебет/кредит
  //(Оптимизация)
  СпСчета:=List.Create();
  ТБаланс.Select();
  While ТБаланс.Next() Do
    Таб:=ТБаланс.Подгруппа;
    Таб.Select();
    While Таб.Next() Do
      Таб2:=Таб.Подгруппа;
      If IsEmpty(Таб2) Then
        Continue;
      EndIf;
      Таб2.Select();
      While Таб2.Next() Do
        ДобавитьДКСчета(СпСчета,Таб2.Формула);
        Таб3:=Таб2.Подгруппа;
        If IsEmpty(Таб3) Then
          Continue;
        EndIf;
        Таб3.Select();
        While Таб3.Next() Do
          ДобавитьДКСчета(СпСчета,Таб3.Формула);
        EndDo;
      EndDo;
    EndDo;
  EndDo;

  ЗДебКред:=0;
  If СпСчета.Size()>0 Then
    НачДата:=BegOfMonth(КДата);
    ТЗ:="Period From НачДата to КДата;
    |зЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо;
    |зСч:=Storage.БухгалтерскиеСчета.Счет;
    |зСм:=Storage.БухгалтерскиеСчета.Сумма;
    |зЗБ:=Storage.БухгалтерскиеСчета.Счет.Забалансовый;
    |зСуб:=Storage.БухгалтерскиеСчета.Субконто1;
    |зНачОст:=BegTotals(Сумма);
    |зРасход:=Expense(Сумма);
    |зПриход:=Income(Сумма);
    |Condition(зЗБ=0);
    |Condition(зЮЛ=оЮЛ);
    |Condition(зСч IN СпСчета);
    |Group зСч,зСуб;";
    ЗДебКред:=Query.Create();
    ЗДебКред.Execute(ТЗ);
  EndIf;

  //Расчет
  ФлЗнак:=1;
  ТБаланс.Select();
  While ТБаланс.Next() Do
    Таб:=ТБаланс.Подгруппа;
    Таб.Select();
    While Таб.Next() Do
      Таб2:=Таб.Подгруппа;
      If IsEmpty(Таб2) Then
        Continue;
      EndIf;
      аСтр:=0;
      Таб2.Select();
      While Таб2.Next() Do
        аСтр:=аСтр+1;
        См:=0;
        If not ВычислитьПоказатель(См,КДата,Таб2.Формула,ФлЗнак) Then
          Exit 0;
        EndIf;
        Таб2.Set(аСтр,"зСм"+Тип,См);
        Таб3:=Таб2.Подгруппа;
        If IsEmpty(Таб3) Then
          Continue;
        EndIf;
        аСтр2:=0;
        Таб3.Select();
        While Таб3.Next() Do
          аСтр2:=аСтр2+1;
          См:=0;
          If not ВычислитьПоказатель(См,КДата,Таб3.Формула,ФлЗнак) Then
            Exit 0;
          EndIf;
          Таб3.Set(аСтр2,"зСм"+Тип,См);
        EndDo;
      EndDo;
    EndDo;
    ФлЗнак:=-1;
  EndDo;
  
  Exit 1;
EndFunction


Function РимскаяЦифра(зЧл)
  If зЧл=1 Then
    Exit "I";
  ElseIf зЧл=2 Then
    Exit "II";
  ElseIf зЧл=3 Then
    Exit "III";
  ElseIf зЧл=4 Then
    Exit "IV";
  ElseIf зЧл=5 Then
    Exit "V";
  ElseIf зЧл=6 Then
    Exit "VI";
  ElseIf зЧл=7 Then
    Exit "VII";
  ElseIf зЧл=8 Then
    Exit "VIII";
  ElseIf зЧл=9 Then
    Exit "IX";
  ElseIf зЧл=10 Then
    Exit "X";
  EndIf;
  Exit "";
EndFunction

Function НайтиСумму(Таб,Индекс)
  Exit Таб.Sum("зСм"+Индекс);
EndFunction

Function ЗагрузитьТБаланс()
  If (Uppercase(Form.оНастройка.Value)<>uppercase("По умолчанию")) Then
    Try
      Путь:="Temp\Бухгалтерия\Баланс\"+Trim(Form.оНастройка.Value)+".set";
      ТБаланс:=ObjectFromFile(Путь);
    Except
      НастройкаПоУмолчанию();
    EndTry;
  Else
    НастройкаПоУмолчанию();
  EndIf;
EndFunction

Function OnExecute(СпУстановки)
  оЮЛ:=Form.оЮЛ.Value;
  оСуммы:=Form.оСуммы.Value.SelectedLine();
  КонДата:=BegOfDay(Form.КонДата.Value);
  оЗнаков:=Form.оЗнаков.Value;
  
  If оЮЛ.Selected()=0 Then
    Box("Выберите юридическое лицо!",Q_STOP);
    Exit;
  EndIf;

  ЗагрузитьТБаланс();
  
  пПериод:=FormatDate(КонДата,"DD MMM YYYY");
  пДата:=FormatDate(КонДата,"YYYY.mm.dd");
  пОрганизация:="Организация "+Trim(оЮЛ.ПолнНаименование);
  пВидДеятельности:="Вид экономической деятельности "+Trim(оЮЛ.ОсновнойВидДеятельности);
  пИНН:=Trim(оЮЛ.ИНН);
  пИНН:=TearStr(пИНН,"/");
  пОКПО:=Trim(оЮЛ.ОКПО);
  пОКОПФ:=Trim(оЮЛ.ОКОПФ);
  пОКФС:=Trim(оЮЛ.ОКФС);
  пОКВЭД:="";
  пФС:=Trim(оЮЛ.ФормаСобственности);
  пОПФ:=Trim(оЮЛ.ОргПравФорма);
  пАдрес:=глПредставлениеАдреса(оЮЛ.ЮрАдрес);
  пКонПериода:=""+пПериод;
  пПрошГод:=""+GetYear(BegOfYear(КонДата)-1)+" г.";
  пПозапрГод:=""+(GetYear(BegOfYear(КонДата)-1)-1)+" г.";
  
  Коэфф:=1;
  пОКЕИ:="383";
  пЕдиница:="руб.";
  If оСуммы=2 Then
    Коэфф:=1000;
    пЕдиница:="тыс. руб.";
    пОКЕИ:="384";
  ElseIf оСуммы=3 Then
    Коэфф:=1000000;
    пЕдиница:="млн. руб.";
    пОКЕИ:="385";
  EndIf;
  
  
  //Очистка сумм
  ТБаланс.Select();
  While ТБаланс.Next() Do
    ТБаланс.зСм:=0;
    ТБаланс.зСм2:=0;
    ТБаланс.зСм3:=0;
    Таб:=ТБаланс.Подгруппа;
    Таб.Select();
    While Таб.Next() Do
      Таб.зСм:=0;
      Таб.зСм2:=0;
      Таб.зСм3:=0;
      Таб2:=Таб.Подгруппа;
      If IsEmpty(Таб2) Then
        Continue;
      EndIf;
      Таб2.Select();
      While Таб2.Next() Do
        Таб2.зСм:=0;
        Таб2.зСм2:=0;
        Таб2.зСм3:=0;
        Таб3:=Таб2.Подгруппа;
        If IsEmpty(Таб3) Then
          Continue;
        EndIf;
        Таб3.Select();
        While Таб3.Next() Do
          Таб3.зСм:=0;
          Таб3.зСм2:=0;
          Таб3.зСм3:=0;
        EndDo;
      EndDo;
    EndDo;
  EndDo;
  

  If not ЗаполнитьБалансНаДату(КонДата,"") Then
    Exit;
  EndIf;
  If not ЗаполнитьБалансНаДату(BegOfYear(КонДата)-1,"2") Then
    Exit;
  EndIf;
  If not ЗаполнитьБалансНаДату(BegOfYear(BegOfYear(КонДата)-1)-1,"3") Then
    Exit;
  EndIf;
  
  
  //Вывод
  КодБаланс:=1600;
  аСтр:=0;
  аНомРаздела:=0;
  Т:=Table.Create();  
  Т.CopyByX("v1",1);
  ТБаланс.Select();
  While ТБаланс.Next() Do
    аСтр:=аСтр+1;
    If аСтр>1 Then
      Т.PageBreaks.Add();
      Т.CopyByX("v8",1);
    EndIf;
    пТип:=ТБаланс.Наименование;
    Т.CopyByX("v2",1);
    Таб:=ТБаланс.Подгруппа;
    СмБ:=0;
    СмБ2:=0;
    СмБ3:=0;
    
    Таб.Select();
    While Таб.Next() Do
      аНомРаздела:=аНомРаздела+1;
      пРаздел:=РимскаяЦифра(аНомРаздела)+". "+Таб.Наименование;
      Т.CopyByX("v3",1);
      
      Таб2:=Таб.Подгруппа;
      If IsEmpty(Таб2) Then
        Continue;
      EndIf;
      Таб2.Select();
      While Таб2.Next() Do
        пПоказатель:=Таб2.Наименование;
        пКод:=Таб2.Код;
        пСм:=лкФРМ(Таб2.зСм);
        пСм2:=лкФРМ(Таб2.зСм2);
        пСм3:=лкФРМ(Таб2.зСм3);
        Т.CopyByX("v4",1);
        
        Таб3:=Таб2.Подгруппа;
        If IsEmpty(Таб3) Then
          Continue;
        EndIf;
        If Таб3.Size()=0 Then
          Continue;
        EndIf;
        Т.CopyByX("v5",1);
        
        Таб3.Select();
        While Таб3.Next() Do
          пРасшифровка:=Таб3.Наименование;
          пКод:=Таб3.Код;
          пСм:=лкФРМ(Таб3.зСм);
          пСм2:=лкФРМ(Таб3.зСм2);
          пСм3:=лкФРМ(Таб3.зСм3);
          Т.CopyByX("v6",1);
        EndDo;
        
      EndDo;
      
      СмБ:=СмБ+НайтиСумму(Таб2,"");
      СмБ2:=СмБ2+НайтиСумму(Таб2,"2");
      СмБ3:=СмБ3+НайтиСумму(Таб2,"3");
      
      пСм:=лкФРМ(НайтиСумму(Таб2,""));
      пСм2:=лкФРМ(НайтиСумму(Таб2,"2"));
      пСм3:=лкФРМ(НайтиСумму(Таб2,"3"));
      пКод:="1"+аНомРаздела+"00";
      пИтогоПоРазделу:="Итого по разделу "+РимскаяЦифра(аНомРаздела);
      Т.CopyByX("v3_2",1);
    EndDo;
    
    пКод:=""+КодБаланс;
    КодБаланс:=КодБаланс+100;
    пСм:=лкФРМ(СмБ);
    пСм2:=лкФРМ(СмБ2);
    пСм3:=лкФРМ(СмБ3);
    Т.CopyByX("v7",1);
  EndDo;
  
  Т.CopyByX("v9",1);
  глПечатнаяФормаОтчета(Т,Param,"Бухгалтерский баланс");
EndFunction

