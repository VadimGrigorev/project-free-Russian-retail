//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оК:=глПолучитьУстановку(ТабФорма,"оК");
  оЮЛ:=глПолучитьУстановку(ТабФорма,"оЮЛ");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-2) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    НДата:='01.01.1981';
    КДата:=НачДата-1;
    ТЗ:="Period From НДата to КДата;
      |зС0:=Storage.ОтложенныйНДС.Сумма;зСм:=SUM(зС0);
      |зСтавка:=Storage.ОтложенныйНДС.СтавкаНДС;
      |зДата:=Storage.ОтложенныйНДС.ВключатьВКнигуВПериоде;Condition(BegOfDay(зДата)>=НачДата);
      |зК:=Storage.ОтложенныйНДС.Контрагент;
      |Condition(зК IN оК.Get(1));
      |Condition(зК NOT IN оК.Get(2));
      |зЮЛ:=Storage.ОтложенныйНДС.ЮрЛицо;
      |Condition(зЮЛ IN оЮЛ.Get(1));
      |Condition(зЮЛ NOT IN оЮЛ.Get(2));
      |Group зСтавка;";
  
    ТЗ2:="Period From НДата to КДата;
      |зС0:=Storage.ОтложенныйНДС.Сумма;зСм:=SUM(зС0);
      |зСтавка:=Storage.ОтложенныйНДС.СтавкаНДС;
      |Документ:=Storage.ОтложенныйНДС.@LINK;
      |зДата:=Storage.ОтложенныйНДС.ВключатьВКнигуВПериоде;Condition((BegOfDay(зДата)>=НачДата)And(BegOfDay(зДата)<=КонДата));
      |зК:=Storage.ОтложенныйНДС.Контрагент;
      |Condition(зК IN оК.Get(1));
      |Condition(зК NOT IN оК.Get(2));
      |зЮЛ:=Storage.ОтложенныйНДС.ЮрЛицо;
      |Condition(зЮЛ IN оЮЛ.Get(1));
      |Condition(зЮЛ NOT IN оЮЛ.Get(2));
      |Group Документ,зСтавка;";
  
    КДата4:=КонДата;
    ТЗ4:="Period From НачДата to КДата4;
      |зС0:=Storage.ОтложенныйНДС.Сумма;зСм:=SUM(зС0);
      |зСтавка:=Storage.ОтложенныйНДС.СтавкаНДС;
      |Документ:=Storage.ОтложенныйНДС.@LINK;
      |зДата:=Storage.ОтложенныйНДС.ВключатьВКнигуВПериоде;Condition((BegOfDay(зДата)>=НачДата)And(BegOfDay(зДата)<=КонДата));
      |зК:=Storage.ОтложенныйНДС.Контрагент;
      |Condition(зК IN оК.Get(1));
      |Condition(зК NOT IN оК.Get(2));
      |зЮЛ:=Storage.ОтложенныйНДС.ЮрЛицо;
      |Condition(зЮЛ IN оЮЛ.Get(1));
      |Condition(зЮЛ NOT IN оЮЛ.Get(2));
      |Group Документ,зСтавка;";
  
    КДата3:=КонДата;
    ТЗ3:="Period From НачДата to КДата3;
      |зС0:=Storage.ОтложенныйНДС.Сумма;Condition(зС0>0);зСм:=SUM(зС0);
      |зСтавка:=Storage.ОтложенныйНДС.СтавкаНДС;
      |Документ:=Storage.ОтложенныйНДС.@LINK;
      |зДата:=Storage.ОтложенныйНДС.ВключатьВКнигуВПериоде;Condition(BegOfDay(зДата)>КонДата);
      |зК:=Storage.ОтложенныйНДС.Контрагент;
      |Condition(зК IN оК.Get(1));
      |Condition(зК NOT IN оК.Get(2));
      |зЮЛ:=Storage.ОтложенныйНДС.ЮрЛицо;
      |Condition(зЮЛ IN оЮЛ.Get(1));
      |Condition(зЮЛ NOT IN оЮЛ.Get(2));
      |Group Документ,зСтавка;";
  
    
    З:=Query.Create();
    З.Execute(ТЗ,2);
    
    З2:=Query.Create();
    З2.Execute(ТЗ2,2);
    
    З3:=Query.Create();
    З3.Execute(ТЗ3,2);
    
    З4:=Query.Create();
    З4.Execute(ТЗ4,2);
    
    оЗагол:="Отчет по отложенному НДС за период";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оК","");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    
    См0:=З.Compute("зСм");
    См1:=0;
    While З.Next(1) Do
      См1:=См1+З.зСм*глКоэффНДС(З.зСтавка);
    EndDo;
    
    пСм:=глФРМ(См0);
    пСмНДС:=глФРМ(См1);
    Т.CopyByX("v4",1);
  
    //Ошибки
    См:=З4.Compute("зСм");
    If См<>0 Then
      пСм:=глФРМ(См)+_NEWLINE+"-"+глФРМ(См);
      См01:=0;
      While З4.Next(1) Do
        While З4.Next(2) Do
          См01:=См01+З4.зСм*глКоэффНДС(З4.зСтавка);
        EndDo;
      EndDo;
      пСмНДС:="";
      If См01<>0 Then
        пСмНДС:=глФРМ(См01)+_NEWLINE+"-"+глФРМ(См01);
      EndIf;
      Т.CopyByX("v7",1);
      
      While З4.Next(1) Do
        пДокР:=З4.Документ;
        пДок:=пДокР;
        См00:=З4.Compute("зСм");
        пСм:=глФРМ(См00);
        
        См01:=0;
        While З4.Next(2) Do
          См01:=См01+З4.зСм*глКоэффНДС(З4.зСтавка);
        EndDo;
        пСмНДС:=глФРМ(См01);
        Т.CopyByX("v2",1);
        
        пСм:=глФРМ(-См00);
        пСмНДС:=глФРМ(-См01);
        Т.CopyByX("v2",1);
      EndDo;
    EndIf;
    
    
    //Списания
    пСм:=глФРМ(-З2.Compute("зСм"));
    См01:=0;
    While З2.Next(1) Do
      While З2.Next(2) Do
        См01:=См01+З2.зСм*глКоэффНДС(З2.зСтавка);
      EndDo;
    EndDo;
    пСмНДС:=глФРМ(-См01);
    Т.CopyByX("v5",1);
    
    While З2.Next(1) Do
      пДокР:=З2.Документ;
      пДок:=пДокР;
      пСм:=глФРМ(-З2.Compute("зСм"));
      См0:=См0-З2.Compute("зСм");
      
      См01:=0;
      While З2.Next(2) Do
        См01:=См01+З2.зСм*глКоэффНДС(З2.зСтавка);
      EndDo;
      См1:=См1-См01;
      пСмНДС:=глФРМ(-См01);
      Т.CopyByX("v2",1);
    EndDo;
    
    //Добавление
    пСм:=глФРМ(З3.Compute("зСм"));
    См01:=0;
    While З3.Next(1) Do
      While З3.Next(2) Do
        См01:=См01+З3.зСм*глКоэффНДС(З3.зСтавка);
      EndDo;
    EndDo;
    пСмНДС:=глФРМ(См01);
    Т.CopyByX("v6",1);
    
    While З3.Next(1) Do
      пДокР:=З3.Документ;
      пДок:=пДокР;
      пСм:=глФРМ(З3.Compute("зСм"));
      См0:=См0+З3.Compute("зСм");
      
      См01:=0;
      While З3.Next(2) Do
        См01:=См01+З3.зСм*глКоэффНДС(З3.зСтавка);
      EndDo;
      См1:=См1+См01;
      пСмНДС:=глФРМ(См01);
      Т.CopyByX("v2",1);
    EndDo;
    
    пСм:=глФРМ(См0);
    пСмНДС:=глФРМ(См1);
    Т.CopyByX("v3",1);
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction


Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction


