//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var СтарыеСчета Export;

Function ОдинаковыеВидыСубконто(Сп,Тип=1)
  If Сп.Size()=0 Then
    Exit 0;
  EndIf;
  Сч:=Сп[1];
  For i:=2 To Сп.Size() Do
    If Сч.GetValue("ВидСубконто"+Тип)<>Сп[i].GetValue("ВидСубконто"+Тип) Then
      Exit 0;
    EndIf;
  EndDo;
  Exit 1;
EndFunction

Function ПолучитьТип(аНомер)

  Function ПолучитьТипРекв(ВС)
    If Trim(ВС.ТипЗначенияЛокальный)="" Then
      Exit "бухЗначенияСубконто";
    Else
      Exit Replace(Replace(Uppercase(ВС.ТипЗначенияЛокальный),"СПРАВОЧНИК.",""),"REF.","");
    EndIf;
  EndFunction
  
  оСч:=Form.оСч.Value;
  If (оСч.Get(1).Size()>0)And(ОдинаковыеВидыСубконто(оСч.Get(1))) Then
    аСчет:=оСч.Get(1).Get(1);
    Exit ПолучитьТипРекв(аСчет.GetValue("ВидСубконто"+аНомер));
  EndIf;

  Exit "";
EndFunction

Function Формула(оДвиж,спФормулаРасшифровки)
  aList:=спФормулаРасшифровки.Copy();
  aList.SetByName("оДвиж",оДвиж);
  aList.SetByName("оГруппы","");
  Exit aList;
EndFunction 


Function ТипСчетаОтчета(ТабФорма,byRef флКол)
  флКол:=-1;
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  If (оСч.Get(1).Size()=1)And(оСч.Get(2).Size()=0) Then
    флКол:=оСч.Get(1).Get(1).Количественный;
    Exit оСч.Get(1).Get(1).Пассивный;
  EndIf;
  Exit -1;
EndFunction


Function ОбновитьТексты(флНеМенять=0)
  оСч:=Form.оСч.Value;
  оСуб1:=Form.оСуб1.Value;
  оСуб2:=Form.оСуб2.Value;
  оСуб3:=Form.оСуб3.Value;
  оГруппы:=Form.оГруппы.Value;
  
  пСуб1="По субконто 1";
  пСуб2="По субконто 2";
  пСуб3="По субконто 3";
  
  КолвоГруппСубконто:=3;
  Фл:=0;
  If оСч.Get(1).Size()>0 Then
    Фл:=1;
  Else
    оСуб1.Get(1).Clear();
    оСуб1.Get(2).Clear();
    оСуб2.Get(1).Clear();
    оСуб2.Get(2).Clear();
    оСуб3.Get(1).Clear();
    оСуб3.Get(2).Clear();
    
    Form.тС1.isDisabled:=1;
    Form.оСуб1.isDisabled:=1;
    Form.тСуб1.Caption:="";
    
    Form.тС2.isDisabled:=1;
    Form.оСуб2.isDisabled:=1;
    Form.тСуб2.Caption:="";
    
    Form.тС3.isDisabled:=1;
    Form.оСуб3.isDisabled:=1;
    Form.тСуб3.Caption:="";
  EndIf;

  If Фл Then
    Сч:=оСч.Get(1).Get(1);
    
    If _Or(Сч.ВидСубконто1.Selected()=0,not ОдинаковыеВидыСубконто(оСч.Get(1))) Then
      Form.тС1.isDisabled:=1;
      Form.оСуб1.isDisabled:=1;
      Form.тСуб1.Caption:="";
      оСуб1.Get(1).Clear();
      оСуб1.Get(2).Clear();
      КолвоГруппСубконто:=0;
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто1<>Сч.ВидСубконто1) Then
        оСуб1.Get(1).Clear();
        оСуб1.Get(2).Clear();
      EndIf;
      Form.тСуб1.Caption:=Сч.ВидСубконто1.Name;
      Form.тС1.isDisabled:=0;
      Form.оСуб1.isDisabled:=0;
      пСуб1:=Сч.ВидСубконто1.Name;
      КолвоГруппСубконто:=1;
    EndIf;
    
    If _Or(Сч.ВидСубконто2.Selected()=0,not ОдинаковыеВидыСубконто(оСч.Get(1),2)) Then
      Form.тС2.isDisabled:=1;
      Form.оСуб2.isDisabled:=1;
      Form.тСуб2.Caption:="";
      оСуб2.Get(1).Clear();
      оСуб2.Get(2).Clear();
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто2<>Сч.ВидСубконто2) Then
        оСуб2.Get(1).Clear();
        оСуб2.Get(2).Clear();
      EndIf;
      Form.тСуб2.Caption:=Сч.ВидСубконто2.Name;
      Form.тС2.isDisabled:=0;
      Form.оСуб2.isDisabled:=0;
      пСуб2:=Сч.ВидСубконто2.Name;
      КолвоГруппСубконто:=2;
    EndIf;
    
    If _Or(Сч.ВидСубконто3.Selected()=0,not ОдинаковыеВидыСубконто(оСч.Get(1),3)) Then
      Form.тС3.isDisabled:=1;
      Form.оСуб3.isDisabled:=1;
      Form.тСуб3.Caption:="";
      оСуб3.Get(1).Clear();
      оСуб3.Get(2).Clear();
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто3<>Сч.ВидСубконто3) Then
        оСуб3.Get(1).Clear();
        оСуб3.Get(2).Clear();
      EndIf;
      Form.тСуб3.Caption:=Сч.ВидСубконто3.Name;
      Form.тС3.isDisabled:=0;
      Form.оСуб3.isDisabled:=0;
      пСуб3:=Сч.ВидСубконто3.Name;
      КолвоГруппСубконто:=3;
    EndIf;
    СтарыеСчета:=Сч;
  Else
    СтарыеСчета:=0;
  EndIf;
    
  Сп:=List.Create();
  For i:=1 To КолвоГруппСубконто Do
    Сп.Add(""+Eval("пСуб"+i)+"#Субконто"+i+"#зСуб"+i);
  EndDo;
  
  If флНеМенять=0 Then
    For i:=1 To КолвоГруппСубконто Do
      If оГруппы.FindAndGoto("Субконто"+i+"#зСуб"+i,,"Путь")=0 Then
        оГруппы.AddLine("Группировка,Путь",Eval("пСуб"+i),"Субконто"+i+"#зСуб"+i);
      Else
        If оГруппы.Группировка<>Eval("пСуб"+i) Then
          оГруппы.Группировка:=Eval("пСуб"+i);
        EndIf;
        While _And(оГруппы.CurLine<оГруппы.Size(),оГруппы.FindAndGoto("Субконто"+i+"#зСуб"+i,оГруппы.CurLine+1,"Путь")>0) Do
          оГруппы.Remove(оГруппы.CurLine);
        EndDo;
      EndIf;  
    EndDo;
    For i:=КолвоГруппСубконто+1 To 3 Do
      While оГруппы.FindAndGoto("Субконто"+i+"#зСуб"+i,,"Путь")>0 Do
        оГруппы.Remove(оГруппы.CurLine);
      EndDo;
    EndDo;
  EndIf;
  
  Exit Сп;
EndFunction;

Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего,СпРазвернутое,спФормулаРасшифровки,БылСчет=0)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего,СпРазвернутое,спФормулаРасшифровки,БылСчет);
    Exit;
  EndIf;
  
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    пКод:=глПолучитьКод(пЭлР);
    If ИмяПер="зСч" Then
      БылСчет=З.зСч;
      пКод:="";
    EndIf;
    If Pos("День,Месяц,Год,Документ",ИмяПер)=0 Then
      спФормулаРасшифровки.SetByName("о"+Mid(ИмяПер,2),пЭлР);
    EndIf;  
    
    флКол:=0;
    If БылСчет=0 Then
      флПас:=ТипСчетаОтчета(ТабФорма,флКол);
    Else
      флПас:=БылСчет.Пассивный;
      флКол:=БылСчет.Количественный;
    EndIf;  
    If флКол<0 Then
      флКол:=0;
    EndIf;
    If флПас<0 Then
      флПас:=1;
    EndIf;
    
    пНач:=З.зНачОст;
    пКон:=З.зКонОст;
    пПриход:=глФРМ(З.зПриход);
    пРасход:=глФРМ(З.зРасход);
    
    If ФлКол=1 Then
      пНачКол:=З.зНачОстКол;
      пКонКол:=З.зКонОстКол;
      пПриходКл:=глФРМЧл(З.зПриходКол);
      пРасходКл:=глФРМЧл(З.зРасходКол);
    EndIf;
    
    If флПас=1 Then
      пНачД:=?(пНач>0,пНач,0);
      пНачК:=?(пНач<0,-пНач,0);
      пКонД:=?(пКон>0,пКон,0);
      пКонК:=?(пКон<0,-пКон,0);
      
      If ФлКол=1 Then
        пНачДКл:=?(пНач>0,пНачКол,0);
        пНачККл:=?(пНач<0,-пНачКол,0);
        пКонДКл:=?(пКон>0,пКонКол,0);
        пКонККл:=?(пКон<0,-пКонКол,0);
      EndIf;
    Else
      пНачК:=?(флПас=2,-пНач,0);
      пНачД:=?(флПас=0,пНач,0);
      пКонК:=?(флПас=2,-пКон,0);
      пКонД:=?(флПас=0,пКон,0);
      
      If ФлКол=1 Then
        пНачККл:=?(флПас=2,-пНачКол,0);
        пНачДКл:=?(флПас=0,пНачКол,0);
        пКонККл:=?(флПас=2,-пКонКол,0);
        пКонДКл:=?(флПас=0,пКонКол,0);
      EndIf;
    EndIf;    
    
    If Ур=УрВсего Then
      СпРазвернутое.SetByName("пНачД",Number(СпРазвернутое.GetByName("пНачД"))+пНачД);
      СпРазвернутое.SetByName("пНачК",Number(СпРазвернутое.GetByName("пНачК"))+пНачК);
      СпРазвернутое.SetByName("пКонД",Number(СпРазвернутое.GetByName("пКонД"))+пКонД);
      СпРазвернутое.SetByName("пКонК",Number(СпРазвернутое.GetByName("пКонК"))+пКонК);
    EndIf;  
    
    пНачД:=глФРМ(пНачД);
    пНачК:=глФРМ(пНачК);
    пКонД:=глФРМ(пКонД);
    пКонК:=глФРМ(пКонК);
    If ФлКол Then
      пНачДКл:=глФРМЧл(пНачДКл);
      пНачККл:=глФРМЧл(пНачККл);
      пКонДКл:=глФРМЧл(пКонДКл);
      пКонККл:=глФРМЧл(пКонККл);
    EndIf;    
    
    If ИмяПер="Документ" Then
      СпРасш1:=пЭлР;
      СпРасш2:=пЭлР;
      СпРасш3:=пЭлР;
    Else
      СпРасш1:=Формула(1,спФормулаРасшифровки);
      СпРасш2:=Формула(2,спФормулаРасшифровки);
      СпРасш3:=Формула(3,спФормулаРасшифровки);
    EndIf;  
    
    Т.CopyByX("v2",1);
    If ФлКол Then
      Т.CopyByX("v3",1);
    EndIf;    
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1+ФлКол,3,Ур,УрВсего,2,9,пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего,СпРазвернутое,спФормулаРасшифровки,БылСчет);
    
    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
  
  аНум:=спФормулаРасшифровки.FindByName("о"+Mid(ИмяПер,2),,,0);
  If аНум>0 Then
    спФормулаРасшифровки.Remove(аНум);
  EndIf;  
EndFunction



Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  оСуб1:=глПолучитьУстановку(ТабФорма,"оСуб1");
  оСуб2:=глПолучитьУстановку(ТабФорма,"оСуб2");
  оСуб3:=глПолучитьУстановку(ТабФорма,"оСуб3");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  глСохранитьВМодуле("ТабФорма",ТабФорма);
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.БухгалтерскиеСчета";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@ЮрЛицо,оСч@зСч@Счет,оСуб1@зСуб1@Субконто1,оСуб2@зСуб2@Субконто2,оСуб3@зСуб3@Субконто3","оГруппы",спРезПеременные);
    
    ТЗ:=ТЗ+"зРасход:=Expense(Сумма);
      |зПриход:=Income(Сумма);
      |зНачОст:=BegTotals(Сумма);
      |зКонОст:=EndTotals(Сумма);
      |зРасходКол:=Expense(Количество);
      |зПриходКол:=Income(Количество);
      |зНачОстКол:=BegTotals(Количество);
      |зКонОстКол:=EndTotals(Количество);";
      
    флПеременныеВремени:=Pos("Group День",ТЗ)+Pos("Group Месяц",ТЗ)+Pos("Group Год",ТЗ)>0;
      

    З:=Query.Create();
    З.Execute(ТЗ);
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
    
    оЗагол:="Оборотно-сальдовая ведомость по счету";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оСч,оСуб1,оСуб2,оСуб3","");
    глСимулироватьСальдоПоДокументам(З,"Документ:зНачОст:зПриход:зРасход:зКонОст");
    глСимулироватьСальдоПоДокументам(З,"Документ:зНачОстКол:зПриходКол:зРасходКол:зКонОстКол");
    
    
    спФормулаРасшифровки:=List.Create();
    СпРазвернутое:=List.Create();
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего,СпРазвернутое,спФормулаРасшифровки);
    
    If (not флПеременныеВремени)And(УрВсего>0) Then
      пИтого:="Итого развернутое:";
      пНачД:=глФРМ(Number(СпРазвернутое.GetByName("пНачД")));
      пНачК:=глФРМ(Number(СпРазвернутое.GetByName("пНачК")));
      пКонД:=глФРМ(Number(СпРазвернутое.GetByName("пКонД")));
      пКонК:=глФРМ(Number(СпРазвернутое.GetByName("пКонК")));
      пПриход:="";
      пРасход:="";
      Т.CopyByX("v4",1);
    EndIf;
    
    флКол:=0;
    флПас:=ТипСчетаОтчета(ТабФорма,флКол);
    If флПас<0 Then
      флПас:=1;
    EndIf;
    
    З.First();
    пНач:=З.BegTotals("зНачОст");
    пКон:=З.EndTotals("зКонОст");
    пПриход:=глФРМ(З.Compute("зПриход"));
    пРасход:=глФРМ(З.Compute("зРасход"));
    If ФлКол=1 Then
      пНачКол:=З.BegTotals("зНачОстКол");
      пКонКол:=З.EndTotals("зКонОстКол");
      пПриходКл:=глФРМЧл(З.Compute("зПриходКол"));
      пРасходКл:=глФРМЧл(З.Compute("зРасходКол"));
    EndIf;
    
    If флПас=1 Then
      пНачД:=?(пНач>0,пНач,0);
      пНачК:=?(пНач<0,-пНач,0);
      пКонД:=?(пКон>0,пКон,0);
      пКонК:=?(пКон<0,-пКон,0);
      
      If ФлКол=1 Then
        пНачДКл:=?(пНач>0,пНачКол,0);
        пНачККл:=?(пНач<0,-пНачКол,0);
        пКонДКл:=?(пКон>0,пКонКол,0);
        пКонККл:=?(пКон<0,-пКонКол,0);
      EndIf;
    Else
      пНачК:=?(флПас=2,-пНач,0);
      пНачД:=?(флПас=0,пНач,0);
      пКонК:=?(флПас=2,-пКон,0);
      пКонД:=?(флПас=0,пКон,0);
      
      If ФлКол=1 Then
        пНачККл:=?(флПас=2,-пНачКол,0);
        пНачДКл:=?(флПас=0,пНачКол,0);
        пКонККл:=?(флПас=2,-пКонКол,0);
        пКонДКл:=?(флПас=0,пКонКол,0);
      EndIf;
    EndIf;    
        
    пНачД:=глФРМ(пНачД);
    пНачК:=глФРМ(пНачК);
    пКонД:=глФРМ(пКонД);
    пКонК:=глФРМ(пКонК);
    If ФлКол=1 Then
      пНачДКл:=глФРМЧл(пНачДКл);
      пНачККл:=глФРМЧл(пНачККл);
      пКонДКл:=глФРМЧл(пКонДКл);
      пКонККл:=глФРМЧл(пКонККл);
    EndIf;    
    
    пИтого:="Итого:";
    Т.CopyByX("v4",1);
    If ФлКол=1 Then
      Т.CopyByX("v5",1);
    EndIf;    
    Т.CopyByX("v6",1);
      
    If оУровни=1 Then
      Т.Levels(0).Close();
    EndIf;
    
    Т.AttachedModule:=1;
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction

Function OnDoubleClick(Таб)
  Result:=0;
  If not глРаботаСОсобымиИконкамиТаблицы(Таб) Then
    ТабФорма:=глПолучитьИзМодуля("ТабФорма");
    глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч,оСуб1,оСуб2,оСуб3","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\КарточкаСчета");
  EndIf;
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction


