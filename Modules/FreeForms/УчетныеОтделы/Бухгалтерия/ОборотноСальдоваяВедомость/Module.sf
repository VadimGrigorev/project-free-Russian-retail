//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function ПолучитьТип(аНомер)

  Function ПолучитьТипРекв(ВС)
    If Trim(ВС.ТипЗначенияЛокальный)="" Then
      Exit "бухЗначенияСубконто";
    Else
      Exit Replace(Replace(Uppercase(ВС.ТипЗначенияЛокальный),"СПРАВОЧНИК.",""),"REF.","");
    EndIf;
  EndFunction
  
  оСч:=Form.оСч.Value;
  If (оСч.Get(1).Size()=1)And(оСч.Get(2).Size()=0) Then
    аСчет:=оСч.Get(1).Get(1);
    If аНомер=1 Then
      Exit ПолучитьТипРекв(аСчет.ВидСубконто1);
    ElseIf аНомер=2 Then
      Exit ПолучитьТипРекв(аСчет.ВидСубконто2);
    ElseIf аНомер=3 Then
      Exit ПолучитьТипРекв(аСчет.ВидСубконто3);
    EndIf;
  EndIf;

  Exit "";
EndFunction

Function ТипСчетаОтчета(ТабФорма,byRef флКол)
  флКол:=-1;
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  If (оСч.Get(1).Size()=1)And(оСч.Get(2).Size()=0) Then
    флКол:=оСч.Get(1).Get(1).Количественный;
    Exit оСч.Get(1).Get(1).Пассивный;
  EndIf;
  Exit -1;
EndFunction

Function ОбновитьРодителя(ТРез,зСч,оСчС,зНачОстД,зНачОстК,зКонОстД,зКонОстК,зПриход,зРасход)
  If зСч.Folder().Selected()<>0 Then
    ФлРазв:=0;
    ФлНовый:=0;
    If ТРез.FindAndGoto(зСч.Folder(),,"зСч")=0 Then
      ФлНовый:=1;
      Сч:=зСч.Folder();
      If Сч.Пассивный=1 Then
        If оСчС.Get(1).Size()>0 Then
          If _And(оСчС.Get(1).Contains(Сч),_Or(оСчС.Get(2).Size()=0,not оСчС.Get(2).Contains(Сч))) Then
            ФлРазв:=1;
          EndIf;  
        EndIf;
      EndIf;
    Else
      ФлРазв:=ТРез.флРазвернуть;
    EndIf;
    
    If ФлРазв=0 Then
      зНачОстД:=зНачОстД-зНачОстК;
      зКонОстД:=зКонОстД-зКонОстК;
      зНачОстК:=0;зКонОстК:=0;
    EndIf;
    аТекСтр:=ТРез.CurLine;
  
    ОбновитьРодителя(ТРез,зСч.Folder(),оСчС,зНачОстД,зНачОстК,зКонОстД,зКонОстК,зПриход,зРасход);
    If ФлНовый Then
      ТРез.NewLine();
      ТРез.зСч:=зСч.Folder();
      ТРез.флРазвернуть:=ФлРазв;
      ТРез.Сортировка:=ТРез.зСч.Сортировка;
    Else
      ТРез.CurLine:=аТекСтр;//Важно, так как пред. ОбновитьРодителя мог испортить CurLine
    EndIf;
    
    ТРез.зНачОстД:=ТРез.зНачОстД+зНачОстД;
    ТРез.зНачОстК:=ТРез.зНачОстК+зНачОстК;
    ТРез.зКонОстД:=ТРез.зКонОстД+зКонОстД;
    ТРез.зКонОстК:=ТРез.зКонОстК+зКонОстК;
    ТРез.зПриход:=ТРез.зПриход+зПриход;
    ТРез.зРасход:=ТРез.зРасход+зРасход;
  EndIf;
EndFunction

Function ВывестиИтоги(Т,ТИтого)
  ТИтого.CurLine:=ТИтого.Size();
  Т.Area(4,ТИтого.Выс,4,ТИтого.Выс).Text:=глФРМ(ТИтого.НачД);
  Т.Area(5,ТИтого.Выс,5,ТИтого.Выс).Text:=глФРМ(ТИтого.НачК);
  Т.Area(6,ТИтого.Выс,6,ТИтого.Выс).Text:=глФРМ(ТИтого.Приход);
  Т.Area(7,ТИтого.Выс,7,ТИтого.Выс).Text:=глФРМ(ТИтого.Расход);
  Т.Area(8,ТИтого.Выс,8,ТИтого.Выс).Text:=глФРМ(ТИтого.КонД);
  Т.Area(9,ТИтого.Выс,9,ТИтого.Выс).Text:=глФРМ(ТИтого.КонК);
  ТИтого.Size(ТИтого.Size()-1);
EndFunction

Function Формула(ТабФорма,оДвиж,спФормулаРасшифровки,зСчет=0,зСуб=0)
  aList:=спФормулаРасшифровки.Copy();
  If isEmpty(aList.GetByName("оЮЛ")) Then
    оЮЛ:=глПолучитьУстановку(ТабФорма,"оЮЛ");
    If оЮЛ.Get(1).Size()+оЮЛ.Get(2).Size()>0 Then
      aList.SetByName("оЮЛ",List.Create(оЮЛ.Get(1).Copy,оЮЛ.Get(2).Copy()));
    EndIf;
  EndIf;
  aList.SetByName("оДвиж",оДвиж);
  aList.SetByName("ОСВ_ТИП",1);
  If зСчет<>0 Then
    aList.SetByName("оСч",зСчет);
    aList.SetByName("ОСВ_ТИП",2);
  EndIf;
  If зСуб<>0 Then
    aList.SetByName("оСуб1",зСуб);
    aList.SetByName("ОСВ_ТИП",3);
  EndIf;
  Exit aList;
EndFunction 


Function Группировка(З,З2,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего,ТИтоги,спФормулаРасшифровки)
  оСубСчета:=глПолучитьУстановку(ТабФорма,"оСубСчета");
  оСчС:=глПолучитьУстановку(ТабФорма,"оСчС");
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  флСубконто:=глПолучитьИзМодуля("флСубконто");
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");

  
  If Ном>тГруппы.Size() Then
  
    ТРез:=Tab.Create("зСч,флРазвернуть,Сортировка");
    ТРез.AddColumn("зНачОстД",,"Number");ТРез.AddColumn("зНачОстК",,"Number");
    ТРез.AddColumn("зКонОстД",,"Number");ТРез.AddColumn("зКонОстК",,"Number");
    ТРез.AddColumn("зПриход",,"Number");ТРез.AddColumn("зРасход",,"Number");
    
    While З.Next(УрВсего+1) Do
      зСч:=З.зСч;
      
      ФлРазв:=0;
      флПас:=зСч.Пассивный;
      зНачОст:=З.зНачОст;
      зКонОст:=З.зКонОст;
      зПриход:=З.зПриход;
      зРасход:=З.зРасход;
      If флПас=1 Then
        If оСчС.Get(1).Size()>0 Then
          If _And(оСчС.Get(1).Contains(зСч),_Or(оСчС.Get(2).Size()=0,not оСчС.Get(2).Contains(зСч))) Then
            З2.First();
            If З2.ResultTable.LocateAndGoto("зСч,@LEVEL",зСч,2)>0 Then
              ФлРазв:=1;
              пНачД:=0;пНачК:=0;
              пКонД:=0;пКонК:=0;
              While З2.Next(УрВсего+2) Do
                пНачД:=пНачД+?(З2.зНачОст>0,З2.зНачОст,0);
                пНачК:=пНачК+?(З2.зНачОст<0,-З2.зНачОст,0);
                пКонД:=пКонД+?(З2.зКонОст>0,З2.зКонОст,0);
                пКонК:=пКонК+?(З2.зКонОст<0,-З2.зКонОст,0);
              EndDo;
            EndIf;
          EndIf;  
        EndIf;
        
        If not ФлРазв Then
          пНачД:=?(зНачОст>0,зНачОст,0);
          пНачК:=?(зНачОст<0,-зНачОст,0);
          пКонД:=?(зКонОст>0,зКонОст,0);
          пКонК:=?(зКонОст<0,-зКонОст,0);
        EndIf;
      Else
        пНачК:=?(флПас=2,-зНачОст,0);
        пНачД:=?(флПас=0,зНачОст,0);
        пКонК:=?(флПас=2,-зКонОст,0);
        пКонД:=?(флПас=0,зКонОст,0);
      EndIf;
      
      ОбновитьРодителя(ТРез,зСч,оСчС,пНачД,пНачК,пКонД,пКонК,зПриход,зРасход);
      ТРез.AddLine("зСч,флРазвернуть",зСч,ФлРазв);
      ТРез.Сортировка:=ТРез.зСч.Сортировка;
      ТРез.зНачОстД:=пНачД;
      ТРез.зНачОстК:=пНачК;
      ТРез.зКонОстД:=пКонД;
      ТРез.зКонОстК:=пКонК;
      ТРез.зПриход:=зПриход;
      ТРез.зРасход:=зРасход;
    EndDo;
    
    If оСубСчета=0 Then
      i:=1;
      While i<=ТРез.Size() Do
        ТРез.CurLine:=i;
        If ТРез.зСч.Folder().Selected()<>0 Then
          ТРез.Remove(i);
        Else
          i:=i+1;
        EndIf;
      EndDo;
    EndIf;
    
    
    ТРез.Sort("Сортировка+");
    ТРез.Select();
    While ТРез.Next() Do
      пКод:=ТРез.зСч.Code;
      пСчет:=ТРез.зСч;
      пЭлР:=пСчет;
      пСчетИмя:=пСчет.Name;
      
      пНачД:=ТРез.зНачОстД;
      пНачК:=ТРез.зНачОстК;
      пКонД:=ТРез.зКонОстД;
      пКонК:=ТРез.зКонОстК;
      пПриход:=ТРез.зПриход;
      пРасход:=ТРез.зРасход;
      
      If ТРез.флРазвернуть=0 Then
        флПас:=пСчет.Пассивный;
        зНачОст:=пНачД-пНачК;
        зКонОст:=пКонД-пКонК;
        
        If флПас<>1 Then
          пНачК:=?(флПас=2,-зНачОст,0);
          пНачД:=?(флПас=0,зНачОст,0);
          пКонК:=?(флПас=2,-зКонОст,0);
          пКонД:=?(флПас=0,зКонОст,0);
        Else
          пНачД:=?(зНачОст>0,зНачОст,0);
          пНачК:=?(зНачОст<0,-зНачОст,0);
          пКонД:=?(зКонОст>0,зКонОст,0);
          пКонК:=?(зКонОст<0,-зКонОст,0);
        EndIf;
      EndIf;  
      
      If (оСубСчета=0)Or(пСчет.IsFolder()=0) Then
        ТИтоги.Select();
        While ТИтоги.Next() Do
          ТИтоги.НачД:=ТИтоги.НачД+пНачД;
          ТИтоги.НачК:=ТИтоги.НачК+пНачК;
          ТИтоги.Приход:=ТИтоги.Приход+пПриход;
          ТИтоги.Расход:=ТИтоги.Расход+пРасход;
          ТИтоги.КонД:=ТИтоги.КонД+пКонД;
          ТИтоги.КонК:=ТИтоги.КонК+пКонК;
        EndDo;
      EndIf;
      
      пНачД:=глФРМ(пНачД);
      пКонД:=глФРМ(пКонД);
      пНачК:=глФРМ(пНачК);
      пКонК:=глФРМ(пКонК);
      пПриход:=глФРМ(пПриход);
      пРасход:=глФРМ(пРасход);      
      
      СпРасш1:=Формула(ТабФорма,1,спФормулаРасшифровки,пСчет);
      СпРасш2:=Формула(ТабФорма,2,спФормулаРасшифровки,пСчет);
      СпРасш3:=Формула(ТабФорма,3,спФормулаРасшифровки,пСчет);
      
      Т.CopyByX("v3",1);
      глРаскраситьСтроку(Т,1,3,УрВсего+1,УрВсего+1+флСубконто,2,9,?((пСчет.IsFolder())And(оСубСчета=1),пСчет,0));
      
      
      If оСч.Get(1).Size()>0 Then
        If _And(оСч.Get(1).Contains(пСчет),_Or(оСч.Get(2).Size()=0,not оСч.Get(2).Contains(пСчет))) Then
          НачВыс:=Т.Height();
          З2.First();
          If З2.ResultTable.LocateAndGoto("зСч,@LEVEL",пСчет,2)>0 Then
            While З2.Next(УрВсего+2) Do
              пЭл:=З2.зСуб1;
              пЭлР:=З2.зСуб1;
              пКод:=глПолучитьКод(пЭлР);
              пНач:=З2.зНачОст;
              пКон:=З2.зКонОст;
              пПриход:=глФРМ(З2.зПриход);
              пРасход:=глФРМ(З2.зРасход);
              If флПас=1 Then
                пНачД:=?(пНач>0,глФРМ(пНач),"");
                пНачК:=?(пНач<0,глФРМ(-пНач),"");
                пКонД:=?(пКон>0,глФРМ(пКон),"");
                пКонК:=?(пКон<0,глФРМ(-пКон),"");
              Else
                пНачК:=?(флПас=2,глФРМ(-пНач),"");
                пНачД:=?(флПас=0,глФРМ(пНач),"");
                пКонК:=?(флПас=2,глФРМ(-пКон),"");
                пКонД:=?(флПас=0,глФРМ(пКон),"");
              EndIf;
              СпРасш1:=Формула(ТабФорма,1,спФормулаРасшифровки,пСчет,пЭлР);
              СпРасш2:=Формула(ТабФорма,2,спФормулаРасшифровки,пСчет,пЭлР);
              СпРасш3:=Формула(ТабФорма,3,спФормулаРасшифровки,пСчет,пЭлР);
              
              Т.CopyByX("v4",1);
              Т.Area(3,Т.Height(),3,Т.Height()).IndentX:=УрВсего+флСубконто+1;
            EndDo;
          EndIf;
          If оУровни=1 Then
            глДобавитьУровень(Т,НачВыс,Т.Height());
          EndIf;
          
        EndIf;
      EndIf;
    EndDo;    

    Exit;
  EndIf;
  
  
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,З2,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего,ТИтоги,спФормулаРасшифровки);
    Exit;
  EndIf;
  
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    пКод:=глПолучитьКод(пЭлР);
    спФормулаРасшифровки.SetByName("о"+Mid(ИмяПер,2),пЭлР);
    
    СпРасш1:=пЭлР;//Формула(ТабФорма,1,спФормулаРасшифровки);
    СпРасш2:=пЭлР;//Формула(ТабФорма,2,спФормулаРасшифровки);
    СпРасш3:=пЭлР;//Формула(ТабФорма,3,спФормулаРасшифровки);
    
    пНачД:="";
    пНачК:="";
    пПриход:="";
    пРасход:="";
    пКонД:="";
    пКонК:="";
    Т.CopyByX("v4",1);
    
    НачВыс:=Т.Height();
    ТИтоги.AddLine("Выс",НачВыс);
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1,3,Ур,УрВсего+1+флСубконто,2,9,пЭлР);
    Группировка(З,З2,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего,ТИтоги,спФормулаРасшифровки);
    ВывестиИтоги(Т,ТИтоги);
    
    If оУровни=1 Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
  
  аНум:=спФормулаРасшифровки.FindByName("о"+Mid(ИмяПер,2),,,0);
  If аНум>0 Then
    спФормулаРасшифровки.Remove(аНум);
  EndIf;  
EndFunction



Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  оСчС:=глПолучитьУстановку(ТабФорма,"оСчС");
  оЗабал:=глПолучитьУстановку(ТабФорма,"оЗабал");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  глСохранитьВМодуле("ТабФорма",ТабФорма);
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.БухгалтерскиеСчета";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@ЮрЛицо","оГруппы",спРезПеременные);
    
    ТЗ:=ТЗ+"зСч:=Stor.БухгалтерскиеСчета.Счет;
      |флСчПапка:=Stor.БухгалтерскиеСчета.Счет.@IsFolder;
      |Condition(флСчПапка=0);
      |зСорт:=Stor.БухгалтерскиеСчета.Счет.Сортировка;
      |Sort зСорт;
      |Group зСч;
      |зРасход:=Expense(Сумма);
      |зПриход:=Income(Сумма);
      |зНачОст:=BegTotals(Сумма);
      |зКонОст:=EndTotals(Сумма);";
      
    If оЗабал=0 Then
      ТЗ:=ТЗ+"зЗБ:=Stor.БухгалтерскиеСчета.Счет.Забалансовый;Condition(зЗБ=0);";
    EndIf;

    З:=Query.Create();
    З.Execute(ТЗ);
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
          
    глСохранитьВМодуле("флСубконто",оСч.Get(1).Size()>0);
    З2:=0;
    If оСч.Get(1).Size()+оСчС.Get(1).Size()>0 Then
      aList:=List.Create();
      оСч.Get(1).CopyTo(aList);
      оСчС.Get(1).CopyTo(aList);
      bList:=List.Create();
      оСч.Get(2).CopyTo(aList);
      оСчС.Get(2).CopyTo(aList);
      ТЗ:=ТЗ+"Condition(зСч IN aList);"+_NEWLINE+
        ?(bList.Size()=0,"","Condition(зСч NOT IN bList);")+
        "зСуб1:=Stor.БухгалтерскиеСчета.Субконто1;Group зСуб1;"+_NEWLINE;
      З2:=Query.Create();
      З2.Execute(ТЗ);
    EndIf;
            
    
    оЗагол:="Оборотно-сальдовая ведомость";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ","");
    
    спФормулаРасшифровки:=List.Create();
    ТИтоги:=Tab.Create("Выс,НачД,НачК,Приход,Расход,КонД,КонК");
    ТИтоги.NewLine();
    СпРазвернутое:=List.Create();
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    Группировка(З,З2,ТабФорма,Т,1,1,оГруппы,УрВсего,ТИтоги,спФормулаРасшифровки);
    
    Т.CopyByX("v5",1);
    ТИтоги.CurLine:=1;
    ТИтоги.Выс:=Т.Height()-1;
    ВывестиИтоги(Т,ТИтоги);
      
    If оУровни=1 Then
      Т.Levels(0).Close();
    EndIf;
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction

Function OnDoubleClick(Таб)
  Result:=0;
  If not глРаботаСОсобымиИконкамиТаблицы(Таб) Then
    ТабФорма:=глПолучитьИзМодуля("ТабФорма");
    if Таб.SelectionMode>1 then
      Exit 1;
    EndIf;  
    Знч:=Таб.Area(Таб.CurCol,Таб.CurLine,Таб.CurCol,Таб.CurLine).Value;
    If TypeStr(Знч)<>"LIST" Then
      Exit 1;
    EndIf;
    Тип:=Знч.GetByName("ОСВ_ТИП");
    If Тип=2 Then
      б:=глВыполнитьВыборВМеню("Карточка счета@ОСВ по счету@Анализ счета@Отчет по проводкам@Журнал-ордер по счету");
      If б=1 Then
        Знч.SetByName("оГруппы","зСуб1");
        глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч,оСуб1,оСуб2,оСуб3","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\КарточкаСчета");
      ElseIf б=2 Then
        Знч.SetByName("оГруппы","зСуб1");
        глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч,оСуб1,оСуб2,оСуб3","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\ОборотноСальдоваяВедомостьПоСчету");
      ElseIf б=3 Then
        Знч.SetByName("оГруппы","");
        глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\АнализСчета");
      ElseIf б=4 Then
        глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч,оСчК,оСуб1,оСуб2,оСуб3","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\ОтчетПоПроводкам");
      ElseIf б=5 Then
        Знч.SetByName("оГруппы","зСуб1");
        глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч,оСуб1,оСуб2,оСуб3","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\ЖурналОрдерСчетаПоСубконто");
      EndIf;    
    ElseIf Тип=3 Then
      Знч.SetByName("оГруппы","зСуб1");
      глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч,оСуб1,оСуб2,оСуб3","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\КарточкаСчета");
    EndIf;
  EndIf;
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

