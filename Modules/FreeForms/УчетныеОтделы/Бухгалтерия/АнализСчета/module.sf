//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.


Function ТипСчетаОтчета(ТабФорма)
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  If (оСч.Get(1).Size()=1)And(оСч.Get(2).Size()=0) Then
    Exit оСч.Get(1).Get(1).Пассивный;
  EndIf;
  Exit -1;
EndFunction

Function Формула(оДвиж,спФормулаРасшифровки,зСч=0)
  aList:=спФормулаРасшифровки.Copy();
  aList.SetByName("оДвиж",оДвиж);
  If зСч<>0 Then
    aList.SetByName("оСчК",зСч);
  EndIf;
  Exit aList;
EndFunction 


Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего,спФормулаРасшифровки,БылСчет=0)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего,спФормулаРасшифровки,БылСчет);
    Exit;
  EndIf;
  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    пКод:=глПолучитьКод(пЭлР);
    If ИмяПер="зСч" Then
      БылСчет=З.зСч;
      пКод:="";
    EndIf;  
    спФормулаРасшифровки.SetByName("о"+Mid(ИмяПер,2),пЭлР);
    
    If Ур=УрВсего Then
      пПриход2:="";
      пРасход2:="";
      СпРасш0:=Формула(1,спФормулаРасшифровки);
      СпРасш1:=Формула(2,спФормулаРасшифровки);
      СпРасш2:=Формула(3,спФормулаРасшифровки);
      Т.CopyByX("v5",1);
      глРаскраситьСтроку(Т,1,3,Ур,УрВсего+1,2,5,пЭлР);
      If БылСчет=0 Then
        флПас:=ТипСчетаОтчета(ТабФорма);
      Else
        флПас:=БылСчет.Пассивный;
      EndIf;  
      If флПас<0 Then
        флПас:=1;
      EndIf;
      
      пКод:="";
      пНОст:=З.зНачОст;
      пКОст:=З.зКонОст;
      If флПас=1 Then
        пНачК:=?(пНОст>0,глФРМ(пНОст),"");
        пНачД:=?(пНОст<0,глФРМ(-пНОст),"");
        пКонК:=?(пКОст>0,глФРМ(пКОст),"");
        пКонД:=?(пКОст<0,глФРМ(-пКОст),"");
      Else
        пНачД:=?(флПас=2,глФРМ(-пНОст),"");
        пНачК:=?(флПас=0,глФРМ(пНОст),"");
        пКонД:=?(флПас=2,глФРМ(-пКОст),"");
        пКонК:=?(флПас=0,глФРМ(пКОст),"");
      EndIf;
      пПриход:=глФРМ(З.зПриход);
      пРасход:=глФРМ(З.зРасход);
      Т.CopyByX("v4",1);
      
      Строк:=0;
      While З.Next(Ур+1) Do
        If (З.зПриход=0)And(З.зРасход=0) Then
          Continue;
        EndIf;
        пЭл:=З.зСчКорр;
        пЭлР:=пЭл;
        пПриход2:=глФРМ(З.зПриход);
        пРасход2:=глФРМ(З.зРасход);
        СпРасш0:=Формула(1,спФормулаРасшифровки,пЭлР);
        СпРасш1:=Формула(2,спФормулаРасшифровки,пЭлР);
        СпРасш2:=Формула(3,спФормулаРасшифровки,пЭлР);
        Т.CopyByX("v5",1);
        Строк:=Строк+1;
      EndDo;
      СпРасш1:=Формула(2,спФормулаРасшифровки);
      СпРасш2:=Формула(3,спФормулаРасшифровки);
      Т.CopyByX("v2",1);
      Т.CopyByX("v6",1);
      Т.Area(3,Т.Height()-Строк-2,3,Т.Height()).IndentX:=Ур;
    Else
      пПриход2:="";
      пРасход2:="";
      СпРасш0:=Формула(1,спФормулаРасшифровки);
      СпРасш1:=Формула(2,спФормулаРасшифровки);
      СпРасш2:=Формула(3,спФормулаРасшифровки);
      Т.CopyByX("v5",1);
      глРаскраситьСтроку(Т,1,3,Ур,УрВсего+1,2,5,пЭлР);
    EndIf;
    
    НачВыс:=Т.Height();
    Form.StatusText(Т.Height());
    Form.UpdateProgress(-1,,""+Т.Height());
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего,спФормулаРасшифровки,БылСчет);

    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
  
  Чл:=спФормулаРасшифровки.FindByName("о"+Mid(ИмяПер,2),,,0);
  If Чл>0 Then
    спФормулаРасшифровки.Remove(Чл);
  EndIf;  
EndFunction

Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  глСохранитьВМодуле("ТабФорма",ТабФорма);
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.БухгалтерскиеСчета";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@ЮрЛицо,оСч@зСч@Счет","оГруппы",спРезПеременные);
    
    ТЗ:=ТЗ+"зРасход:=Expense(Сумма);
      |зНачОст:=BegTotals(Сумма);
      |зПриход:=Income(Сумма);
      |зКонОст:=EndTotals(Сумма);
      |зСчКорр:=Stor.БухгалтерскиеСчета.КоррСчет;
      |Group зСчКорр;";
  
    З:=Query.Create();
    З.Execute(ТЗ);
    
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
  
    оЗагол:="Анализ счета";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оСч");
    
    спФормулаРасшифровки:=List.Create();
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    флПас:=ТипСчетаОтчета(ТабФорма);
    If УрВсего=0 Then
      //Особый случай -- без группировок
      пНОст:=З.BegTotals("зНачОст");
      пКОст:=З.EndTotals("зКонОст");
      If флПас<0 Then
        флПас:=1;
      EndIf;
      If флПас=1 Then
        пНачК:=?(пНОст>0,глФРМ(пНОст),"");
        пНачД:=?(пНОст<0,глФРМ(-пНОст),"");
        пКонК:=?(пКОст>0,глФРМ(пКОст),"");
        пКонД:=?(пКОст<0,глФРМ(-пКОст),"");
      Else
        пНачД:=?(флПас=2,глФРМ(-пНОст),"");
        пНачК:=?(флПас=0,глФРМ(пНОст),"");
        пКонД:=?(флПас=2,глФРМ(-пКОст),"");
        пКонК:=?(флПас=0,глФРМ(пКОст),"");
      EndIf;
      пПриход:=глФРМ(З.Compute("зПриход"));
      пРасход:=глФРМ(З.Compute("зРасход"));
      Т.CopyByX("v4",1);
      
      While З.Next(1) Do
        If (З.зПриход=0)And(З.зРасход=0) Then
          Continue;
        EndIf;
        пЭл:=З.зСчКорр;
        пЭлР:=пЭл;
        пКод:="";
        пПриход2:=глФРМ(З.зПриход);
        пРасход2:=глФРМ(З.зРасход);
        СпРасш0:=Формула(1,спФормулаРасшифровки,пЭлР);
        СпРасш1:=Формула(2,спФормулаРасшифровки,пЭлР);
        СпРасш2:=Формула(3,спФормулаРасшифровки,пЭлР);
        Т.CopyByX("v5",1);
      EndDo;
      СпРасш1:=Формула(2,спФормулаРасшифровки);
      СпРасш2:=Формула(3,спФормулаРасшифровки);
      Т.CopyByX("v2",1);
      пИтог:="Конечное сальдо:";
      Т.CopyByX("v3",1);
    Else
      Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего,спФормулаРасшифровки);
      пКонК:="";
      пКонД:="";
      пИтог:="";
      Т.CopyByX("v3",1);
    EndIf;
    
    Т.AttachedModule:=1;
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  


Function OnDoubleClick(Таб)
  Result:=0;
  If not глРаботаСОсобымиИконкамиТаблицы(Таб) Then
    ТабФорма:=глПолучитьИзМодуля("ТабФорма");
    result:=not глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч,оСчК,оСуб1,оСуб2,оСуб3","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\ОтчетПоПроводкам");
  EndIf;
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

