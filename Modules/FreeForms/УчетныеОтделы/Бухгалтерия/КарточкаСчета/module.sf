//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var СтарыеСчета Export;

Function ПолучитьТип(аНомер)

  Function ПолучитьТипРекв(ВС)
    If Trim(ВС.ТипЗначенияЛокальный)="" Then
      Exit "бухЗначенияСубконто";
    Else
      Exit Replace(Replace(Uppercase(ВС.ТипЗначенияЛокальный),"СПРАВОЧНИК.",""),"REF.","");
    EndIf;
  EndFunction
  
  оСч:=Form.оСч.Value;
  If (оСч.Get(1).Size()=1)And(оСч.Get(2).Size()=0) Then
    аСчет:=оСч.Get(1).Get(1);
    If аНомер=1 Then
      Exit ПолучитьТипРекв(аСчет.ВидСубконто1);
    ElseIf аНомер=2 Then
      Exit ПолучитьТипРекв(аСчет.ВидСубконто2);
    ElseIf аНомер=3 Then
      Exit ПолучитьТипРекв(аСчет.ВидСубконто3);
    EndIf;
  EndIf;

  Exit "";
EndFunction

Function ПроверитьСчет(оСч,зСч,зСчКорр,текСч=0)
  If оСч.Get(2).Size()>0 Then
    If оСч.Get(2).Contains(зСч)>0 Then
      Exit 0;
    EndIf;
  EndIf;
  If оСч.Get(1).Size()>0 Then
    If оСч.Get(1).Contains(зСч)=0 Then
      Exit 0;
    EndIf;
  EndIf;
  If _And(текСч<>0,текСч<>зСч) Then
    Exit 0;
  EndIf;
  Exit 1;
EndFunction        


Function ПроверитьСубконто(оСуб1,оСуб2,оСуб3,зСуб1,зСуб2,зСуб3,Суб1Пустое,Суб2Пустое,Суб3Пустое)
  If Суб1Пустое Then
    If not isEmpty(зСуб1) Then
      Exit 0;
    EndIf;
  Else
    If оСуб1.Get(1).Size()>0 Then
      If оСуб1.Get(1).Contains(зСуб1)=0 Then
        Exit 0;
      EndIf;
    EndIf;
    If оСуб1.Get(2).Size()>0 Then
      If оСуб1.Get(2).Contains(зСуб1)>0 Then
        Exit 0;
      EndIf;
    EndIf;
  EndIf;  

  If Суб2Пустое Then
    If not isEmpty(зСуб2) Then
      Exit 0;
    EndIf;
  Else
    If оСуб2.Get(1).Size()>0 Then
      If оСуб2.Get(1).Contains(зСуб2)=0 Then
        Exit 0;
      EndIf;
    EndIf;
    If оСуб2.Get(2).Size()>0 Then
      If оСуб2.Get(2).Contains(зСуб2)>0 Then
        Exit 0;
      EndIf;
    EndIf;
  EndIf;  

  If Суб3Пустое Then
    If not isEmpty(зСуб3) Then
      Exit 0;
    EndIf;
  Else
    If оСуб3.Get(1).Size()>0 Then
      If оСуб3.Get(1).Contains(зСуб3)=0 Then
        Exit 0;
      EndIf;
    EndIf;
    If оСуб3.Get(2).Size()>0 Then
      If оСуб3.Get(2).Contains(зСуб3)>0 Then
        Exit 0;
      EndIf;
    EndIf;
  EndIf;
    
  Exit 1;
EndFunction


Function ТипСчетаОтчета(ТабФорма,byRef флКол)
  флКол:=-1;
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  If (оСч.Get(1).Size()=1)And(оСч.Get(2).Size()=0) Then
    флКол:=оСч.Get(1).Get(1).Количественный;
    Exit оСч.Get(1).Get(1).Пассивный;
  EndIf;
  Exit -1;
EndFunction


Function ОбновитьТексты()
  оСч:=Form.оСч.Value;
  оСуб1:=Form.оСуб1.Value;
  оСуб2:=Form.оСуб2.Value;
  оСуб3:=Form.оСуб3.Value;
  
  Фл:=0;
  If (оСч.Get(1).Size()=1)And(оСч.Get(2).Size()=0) Then
    Фл:=1;
  Else
    оСуб1.Get(1).Clear();
    оСуб1.Get(2).Clear();
    оСуб2.Get(1).Clear();
    оСуб2.Get(2).Clear();
    оСуб3.Get(1).Clear();
    оСуб3.Get(2).Clear();
    
    Form.тС1.isDisabled:=1;
    Form.оСуб1.isDisabled:=1;
    Form.тСуб1.Caption:="";
    
    Form.тС2.isDisabled:=1;
    Form.оСуб2.isDisabled:=1;
    Form.тСуб2.Caption:="";
    
    Form.тС3.isDisabled:=1;
    Form.оСуб3.isDisabled:=1;
    Form.тСуб3.Caption:="";
  EndIf;

  If Фл Then
    Сч:=оСч.Get(1).Get(1);
    
    If Сч.ВидСубконто1.Selected()=0 Then
      Form.тС1.isDisabled:=1;
      Form.оСуб1.isDisabled:=1;
      Form.тСуб1.Caption:="";
      оСуб1.Get(1).Clear();
      оСуб1.Get(2).Clear();
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто1<>Сч.ВидСубконто1) Then
        оСуб1.Get(1).Clear();
        оСуб1.Get(2).Clear();
      EndIf;
      Form.тСуб1.Caption:=Сч.ВидСубконто1.Name;
      Form.тС1.isDisabled:=0;
      Form.оСуб1.isDisabled:=0;
    EndIf;
    
    If Сч.ВидСубконто2.Selected()=0 Then
      Form.тС2.isDisabled:=1;
      Form.оСуб2.isDisabled:=1;
      Form.тСуб2.Caption:="";
      оСуб2.Get(1).Clear();
      оСуб2.Get(2).Clear();
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто2<>Сч.ВидСубконто2) Then
        оСуб2.Get(1).Clear();
        оСуб2.Get(2).Clear();
      EndIf;
      Form.тСуб2.Caption:=Сч.ВидСубконто2.Name;
      Form.тС2.isDisabled:=0;
      Form.оСуб2.isDisabled:=0;
    EndIf;
    
    If Сч.ВидСубконто3.Selected()=0 Then
      Form.тС3.isDisabled:=1;
      Form.оСуб3.isDisabled:=1;
      Form.тСуб3.Caption:="";
      оСуб3.Get(1).Clear();
      оСуб3.Get(2).Clear();
    Else
      If _Or(isEmpty(СтарыеСчета),СтарыеСчета.ВидСубконто3<>Сч.ВидСубконто3) Then
        оСуб3.Get(1).Clear();
        оСуб3.Get(2).Clear();
      EndIf;
      Form.тСуб3.Caption:=Сч.ВидСубконто3.Name;
      Form.тС3.isDisabled:=0;
      Form.оСуб3.isDisabled:=0;
    EndIf;
    СтарыеСчета:=Сч;
  Else
    СтарыеСчета:=0;
  EndIf;
EndFunction;

Function OnAfterSettingsChange()
  ОбновитьТексты();
EndFunction;

Function ПредставлениеСубконто(Эл,byRef флКнтНеБыл)
  If pos("DB.REF.",TypeStr(Эл))>0 Then
    If Эл.DBName()="кнтКонтрагенты" Then
      флКнтНеБыл:=0;
      Exit Эл.ПолнНаименование;
    EndIf;
  EndIf;
  Exit Эл;
EndFunction


Function ВывестиГруппировкуПоДокументам(ТабФорма,флПас,ФлКол,З,Т,Ур,зСч=0)
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  оСуб1:=глПолучитьУстановку(ТабФорма,"оСуб1");
  оСуб2:=глПолучитьУстановку(ТабФорма,"оСуб2");
  оСуб3:=глПолучитьУстановку(ТабФорма,"оСуб3");
  Суб1Пустое:=глПолучитьИзМодуля("Суб1Пустое");
  Суб2Пустое:=глПолучитьИзМодуля("Суб2Пустое");
  Суб3Пустое:=глПолучитьИзМодуля("Суб3Пустое");
  оДвиж:=глПолучитьУстановку(ТабФорма,"оДвиж").SelectedLine;

  пСальдо:="Сальдо на "+НачДата;
  пНач:=?(Ур=1,З.BegTotals("зНачОст"),З.зНачОст);
  КонОст:=пНач;
  If флПас=1 Then
    пСуммаД:=?(пНач>0,глФРМ(пНач),"");
    пСуммаК:=?(пНач<0,глФРМ(-пНач),"");
  Else
    пСуммаК:=?(флПас=2,глФРМ(-пНач),"");
    пСуммаД:=?(флПас=0,глФРМ(пНач),"");
  EndIf;
  Т.CopyByX("v4",1);
  If ФлКол=1 Then
    пНачКл:=?(Ур=1,З.BegTotals("зНачОстКол"),З.зНачОстКол);
    КонОстКл:=пНачКл;
    If флПас=1 Then
      пСуммаДКл:=?(пНачКл>0,глФРМЧл(пНачКл),"");
      пСуммаККл:=?(пНачКл<0,глФРМЧл(-пНачКл),"");
    Else
      пСуммаККл:=?(флПас=2,глФРМЧл(-пНачКл),"");
      пСуммаДКл:=?(флПас=0,глФРМЧл(пНачКл),"");
    EndIf;
    Т.CopyByX("v5",1);
  EndIf;

  Приход0:=0;
  Расход0:=0;
  Приход0Кл:=0;
  Расход0Кл:=0;
  
  While З.Next(Ур) Do
    Д:=З.Документ;
    If isEmpty(Д) Then
      Continue;//нач. остаток
    EndIf;
    пДата:=Д.DocDate;
    пКод:=пДата;
    Ком0:=Trim(Д.Комментарий);
    пЭлР:=Д;
    пЭл:=Д;
    
    аСодержание:=0;
    If _And(Д.DBName()<>"РегистрацияВыпускаПродукции",not isEmpty(Struct.Doc(Д.DBName()).LineParts("Содержание"))) Then
      If not isEmpty(Struct.Doc(Д.DBName()).LineParts("Содержание").Props("Содержание")) Then
        аСодержание:=Д.LineParts("Содержание");
        if аСодержание.Size()>0 Then
          аСодержание.Select();
          аСодержание.Next();
        Else
          аСодержание:=0;
        EndIf;
      EndIf;  
    Endif;
    
    aTab:=Д.LoadStorage("БухгалтерскиеСчета");
    aTab.Select();
    While aTab.Next() Do
      
      Фл2:=1;
      ФлКнт:=(Pos(aTab.Счет.Code+",","51,50.1,")>0)or(Pos(aTab.КоррСчет.Code+",","51,50.1,")>0);
      
      ПриходА:=?(aTab._Expense=0,1,-1);
      зСча:=aTab.Счет;
      зСчб:=aTab.КоррСчет;
      зСуб1а:=aTab.Субконто1;
      зСуб2а:=aTab.Субконто2;
      зСуб3а:=aTab.Субконто3;
      Кла:=ПриходА*aTab.Количество;
      Сма:=ПриходА*aTab.Сумма;
      If зСчб.Selected()<>0 Then
        If not aTab.Next() Then
          Message("Документ "+Д+" имеет неверные движения по бух. учету, обратитесь к администратору!","!");
        EndIf;
        зСуб1б:=aTab.Субконто1;
        зСуб2б:=aTab.Субконто2;
        зСуб3б:=aTab.Субконто3;
        ПриходБ:=?(aTab._Expense=0,1,-1);
        Клб:=ПриходБ*aTab.Количество;
        Смб:=ПриходБ*aTab.Сумма;
      Else
        зСуб1б:="";
        зСуб2б:="";
        зСуб3б:="";
        Фл2:=0;
      EndIf;
      
      //Фл2=1 -- корреспондирующая проводка (два счета), иначе 1
      //зСча,зСуб1а,зСуб2а,зСуб3а,Кла,Сма -- первый счет
      //*б -- второй счет
      
      Фл1:=ПроверитьСчет(оСч,зСча,зСчб,зСч);
      If Фл2=1 Then
        Фл2:=ПроверитьСчет(оСч,зСчб,зСча,зСч);
      EndIf;
      
      If Фл1+Фл2=0 Then
        Continue;
      EndIf;
      
      If Фл1=1 Then
        Фл1:=ПроверитьСубконто(оСуб1,оСуб2,оСуб3,зСуб1а,зСуб2а,зСуб3а,Суб1Пустое,Суб2Пустое,Суб3Пустое);
      EndIf;
      
      If Фл2=1 Then
        Фл2:=ПроверитьСубконто(оСуб1,оСуб2,оСуб3,зСуб1б,зСуб2б,зСуб3б,Суб1Пустое,Суб2Пустое,Суб3Пустое);
      EndIf;
      
      If Фл1=1 Then
        If (оДвиж=2)And(ПриходА=-1) Then //Только дебет
          Фл1:=0;
        ElseIf (оДвиж=3)And(ПриходА=1) Then //Только кредит
          Фл1:=0;
        EndIf;
      EndIf;  
      
      //Вывод первого движения
      If Фл1 Then
        КонОст:=КонОст+Сма;
        КонОстКл:=КонОстКл+Кла;
        
        флДебет:=?(ПриходА=1,1,0);
        Приход0:=Приход0+?(флДебет,Сма,0);
        Расход0:=Расход0+?(not флДебет,-Сма,0);
        Приход0Кл:=Приход0Кл+?(флДебет,Кла,0);
        Расход0Кл:=Расход0Кл+?(not флДебет,-Кла,0);
        
        пСуммаД:=?(флДебет,глФРМ(Сма),"");
        пСуммаК:=?(not флДебет,глФРМ(-Сма),"");
        пСуммаДКл:=?(флДебет,глФРМЧл(Кла),"");
        пСуммаККл:=?(флДебет,"",глФРМЧл(-Кла));
        пСчД:=?(флДебет,зСча,зСчб);
        пСчК:=?(флДебет,зСчб,зСча);
        пКонОст:=глФРМ(Max(КонОст,-КонОст));
        пТип:=?(КонОст>=0,"Д","К");
        пКонОстКл:=глФРМЧл(?(КонОст>=0,КонОстКл,-КонОстКл));
        
        флКнтНеБыл:=1;
        пКомм:=Ком0+?(not IsEmpty(зСуб1а),?(Ком0="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб1а,флКнтНеБыл)),"");
        пКомм:=пКомм+?(not IsEmpty(зСуб2а),?(пКомм="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб2а,флКнтНеБыл)),"");
        пКомм:=пКомм+?(not IsEmpty(зСуб3а),?(пКомм="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб3а,флКнтНеБыл)),"");
        If not isEmpty(аСодержание) Then
          пКомм:=пКомм+?(not IsEmpty(аСодержание.Содержание),?(пКомм="","",_NEWLINE)+Trim(аСодержание.Содержание),"");
        EndIf;
        If ФлКнт*флКнтНеБыл>0 Then
          If глЕстьРеквизитДокумента("Контрагент",Д.DBName()) Then
            пКомм:=пКомм+?(not IsEmpty(Д.Контрагент),?(пКомм="","",_NEWLINE)+Trim(Д.Контрагент.ПолнНаименование),"");
          EndIf;
        EndIf;
        
        Т.CopyByX("v2",1);
        If ФлКол=1 Then
          Т.CopyByX("v3",1);
          Т.Area(2,Т.Height()-1,2,Т.Height()).Merge();
          Т.Area(4,Т.Height()-1,4,Т.Height()).Merge();
          Т.Area(5,Т.Height()-1,5,Т.Height()).Merge();
          Т.Area(7,Т.Height()-1,7,Т.Height()).Merge();
        EndIf;
        Form.StatusText(Т.Height());
      EndIf;
      
      If Фл2 Then
        If (оДвиж=2)And(ПриходБ=-1) Then //Только дебет
          Фл2:=0;
        ElseIf (оДвиж=3)And(ПриходБ=1) Then //Только кредит
          Фл2:=0;
        EndIf;
      EndIf;  
      
      //Вывод второго движения
      If Фл2 Then
        КонОст:=КонОст+Смб;
        КонОстКл:=КонОстКл+Клб;
        
        флДебет:=?(ПриходБ=1,1,0);
        Приход0:=Приход0+?(флДебет,Смб,0);
        Расход0:=Расход0+?(not флДебет,-Смб,0);
        Приход0Кл:=Приход0Кл+?(флДебет,Клб,0);
        Расход0Кл:=Расход0Кл+?(not флДебет,-Клб,0);
        
        пСуммаД:=?(флДебет,глФРМ(Смб),"");
        пСуммаК:=?(not флДебет,глФРМ(-Смб),"");
        пСуммаДКл:=?(флДебет,глФРМЧл(Клб),"");
        пСуммаККл:=?(флДебет,"",глФРМЧл(-Клб));
        пСчД:=?(флДебет,зСчб,зСча);
        пСчК:=?(флДебет,зСча,зСчб);
        пКонОст:=глФРМ(Max(КонОст,-КонОст));
        пТип:=?(КонОст>=0,"Д","К");
        пКонОстКл:=глФРМЧл(?(КонОст>=0,КонОстКл,-КонОстКл));
        
        флКнтНеБыл:=1;
        пКомм:=Ком0+?(not IsEmpty(зСуб1б),?(Ком0="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб1б,флКнтНеБыл)),"");
        пКомм:=пКомм+?(not IsEmpty(зСуб2б),?(пКомм="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб2б,флКнтНеБыл)),"");
        пКомм:=пКомм+?(not IsEmpty(зСуб3б),?(пКомм="","",_NEWLINE)+Trim(ПредставлениеСубконто(зСуб3б,флКнтНеБыл)),"");
        If not isEmpty(аСодержание) Then
          пКомм:=пКомм+?(not IsEmpty(аСодержание.Содержание),?(пКомм="","",_NEWLINE)+Trim(аСодержание.Содержание),"");
        EndIf;
        If ФлКнт*флКнтНеБыл>0 Then
          If глЕстьРеквизитДокумента("Контрагент",Д.DBName()) Then
            пКомм:=пКомм+?(not IsEmpty(Д.Контрагент),?(пКомм="","",_NEWLINE)+Trim(Д.Контрагент.ПолнНаименование),"");
          EndIf;
        EndIf;
        
        Т.CopyByX("v2",1);
        If ФлКол=1 Then
          Т.CopyByX("v3",1);
          Т.Area(2,Т.Height()-1,2,Т.Height()).Merge();
          Т.Area(4,Т.Height()-1,4,Т.Height()).Merge();
          Т.Area(5,Т.Height()-1,5,Т.Height()).Merge();
          Т.Area(7,Т.Height()-1,7,Т.Height()).Merge();
        EndIf;
        Form.StatusText(Т.Height());
      EndIf;
    EndDo;
  EndDo;
  
  
  пСальдо:="Обороты за период";
  пСуммаД:=глФРМ(Приход0);
  пСуммаК:=глФРМ(Расход0);
  Т.CopyByX("v4",1);
  If ФлКол Then
    пСуммаДКл:=глФРМЧл(Приход0Кл);
    пСуммаККл:=глФРМЧл(Расход0Кл);
    Т.CopyByX("v5",1);
  EndIf;
  пСальдо:="Сальдо на "+КонДата;
  If флПас=1 Then
    пСуммаД:=?(КонОст>0,глФРМ(КонОст),"");
    пСуммаК:=?(КонОст<0,глФРМ(-КонОст),"");
  Else
    пСуммаК:=?(флПас=2,глФРМ(-КонОст),"");
    пСуммаД:=?(флПас=0,глФРМ(КонОст),"");
  EndIf;
  Т.CopyByX("v4",1);
  If ФлКол=1 Then
    If флПас=1 Then
      пСуммаДКл:=?(КонОстКл>0,глФРМЧл(КонОстКл),"");
      пСуммаККл:=?(КонОстКл<0,глФРМЧл(-КонОстКл),"");
    Else
      пСуммаККл:=?(флПас=2,глФРМЧл(-КонОстКл),"");
      пСуммаДКл:=?(флПас=0,глФРМЧл(КонОстКл),"");
    EndIf;
    Т.CopyByX("v5",1);
  EndIf;
EndFunction
      

  
Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего,БылСчет=0)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего,БылСчет);
    Exit;
  EndIf;
  
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    пКод:=глПолучитьКод(пЭлР);
    If ИмяПер="зСч" Then
      БылСчет=З.зСч;
      пКод:="";
    EndIf;  
    
    пКомм:="";
    пСчД:="";
    пСуммаД:="";
    пСчК:="";
    пСуммаК:="";
    пТип:="";
    пКонОст:="";
    Т.CopyByX("v2",1);
    глРаскраситьСтроку(Т,1,3,Ур,УрВсего+1,2,10,пЭлР);
    
    If Ур=УрВсего Then
      Выс:=Т.Height();
      флКол:=0;
      If БылСчет=0 Then
        флПас:=ТипСчетаОтчета(ТабФорма,флКол);
      Else
        флПас:=БылСчет.Пассивный;
        флКол:=БылСчет.Количественный;
      EndIf;  
      If флПас<0 Then
        флПас:=1;
      EndIf;
      ВывестиГруппировкуПоДокументам(ТабФорма,флПас,ФлКол,З,Т,Ур+1,БылСчет);
      Т.Area(3,Выс+1,3,Т.Height()).IndentX:=Ур;
    EndIf;
    
    НачВыс:=Т.Height();
    Form.StatusText(Т.Height());
    Form.UpdateProgress(-1,,""+Т.Height());
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего,БылСчет);
  EndDo;
EndFunction


Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оДвиж:=глПолучитьУстановку(ТабФорма,"оДвиж").SelectedLine;
  оСч:=глПолучитьУстановку(ТабФорма,"оСч");
  оСуб1:=глПолучитьУстановку(ТабФорма,"оСуб1");
  оСуб2:=глПолучитьУстановку(ТабФорма,"оСуб2");
  оСуб3:=глПолучитьУстановку(ТабФорма,"оСуб3");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.БухгалтерскиеСчета";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@ЮрЛицо,оСч@зСч@Счет,оСуб1@зСуб1@Субконто1,оСуб2@зСуб2@Субконто2,оСуб3@зСуб3@Субконто3","оГруппы",спРезПеременные);
    
    ТЗ:=ТЗ+"зРасход:=Expense(Сумма);
      |зПриход:=Income(Сумма);
      |зНачОст:=BegTotals(Сумма);
      |зРасходКол:=Expense(Количество);
      |зПриходКол:=Income(Количество);
      |зНачОстКол:=BegTotals(Количество);
      |Документ:=Stor.БухгалтерскиеСчета.@LINK;
      |Group Документ;";
  
    З:=Query.Create();
    З.Execute(ТЗ);
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
    
    оЗагол:="Карточка счета";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оСч,оСуб1,оСуб2,оСуб3",?(оДвиж<2,"","Отбор движений@оДвиж"));
    
    глСохранитьВМодуле("Суб1Пустое",_And(оСуб1.Get(1).Size()=1,оСуб1.Get(2).Size()=0,isEmpty(оСуб1.Get(1).Get(1)),оСуб1.Get(1).Get(1)<>0,оСуб1.Get(1).Get(1)<>""));
    глСохранитьВМодуле("Суб2Пустое",_And(оСуб2.Get(1).Size()=1,оСуб2.Get(2).Size()=0,isEmpty(оСуб2.Get(1).Get(1)),оСуб2.Get(1).Get(1)<>0,оСуб2.Get(1).Get(1)<>""));
    глСохранитьВМодуле("Суб3Пустое",_And(оСуб3.Get(1).Size()=1,оСуб3.Get(2).Size()=0,isEmpty(оСуб3.Get(1).Get(1)),оСуб3.Get(1).Get(1)<>0,оСуб3.Get(1).Get(1)<>""));
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    
    флКол:=0;
    флПас:=ТипСчетаОтчета(ТабФорма,флКол);
    If УрВсего=0 Then
      //Особый случай -- без группировок
      ВывестиГруппировкуПоДокументам(ТабФорма,флПас,ФлКол,З,Т,1);
    Else
      Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего);
    EndIf;  
    Т.CopyByX("v6",1);
      
    
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

