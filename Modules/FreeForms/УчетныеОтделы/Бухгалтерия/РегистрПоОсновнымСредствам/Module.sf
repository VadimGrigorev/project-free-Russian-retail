//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var аТипУчета Export;
Var спМесяцы Export;

Function ОбновитьДоступность()
  Фл:=Form.оВид.Value.SelectedLine=2;
  Form.тЮЛ.IsDisabled:=1-Фл;
  Form.оЮЛ.IsDisabled:=1-Фл;
  Form.тСк.IsDisabled:=1-Фл;
  Form.оСк.IsDisabled:=1-Фл;
EndFunction

Function ВывестиСтрокуОбщихИтогов(Т,ТИтого,ТабФорма)
  оПоМесяцам:=Number(глПолучитьУстановку(ТабФорма,"оПоМесяцам"));
  ТИтого.CurLine:=ТИтого.Size();
  Выс:=ТИтого.Выс;
  Т.Area(6,Выс,6,Выс).Text:=глФРМ(ТИтого.См0);
  Т.Area(9,Выс,9,Выс).Text:=глФРМ(ТИтого.СмНач);
  КолВо:=0;
  If оПоМесяцам Then
    For i:=1 To спМесяцы.Size() Do
      a:=спМесяцы[i];
      КолВо:=КолВо+1;
      Т.Area(9+КолВо,Выс,9+КолВо,Выс).Text:=глФРМ(ТИтого.Get(ТИтого.CurLine,"См_"+a));
    EndDo;
  EndIf;
  Т.Area(10+КолВо,Выс,10+КолВо,Выс).Text:=глФРМ(ТИтого.См3);
  Т.Area(11+КолВо,Выс,11+КолВо,Выс).Text:=глФРМ(ТИтого.СмКон);
  
  ТИтого.Size(ТИтого.Size()-1);
EndFunction

Function ДобавитьКИтогам(ТИтого,Имя,См)
  ТИтого.Select();
  While ТИтого.Next() Do
    ТИтого.Set(ТИтого.CurLine,Имя,См+ТИтого.Get(ТИтого.CurLine,Имя));
  EndDo;
EndFunction


Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оЮЛ:=глПолучитьУстановку(ТабФорма,"оЮЛ");
  оСк:=глПолучитьУстановку(ТабФорма,"оСк");
  оТГ:=глПолучитьУстановку(ТабФорма,"оТГ");
  оН:=глПолучитьУстановку(ТабФорма,"оН");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оПоМесяцам:=Number(глПолучитьУстановку(ТабФорма,"оПоМесяцам"));
  оВид:=глПолучитьУстановку(ТабФорма,"оВид").SelectedLine;
  оГрп:=Number(глПолучитьУстановку(ТабФорма,"оГрп"));
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,0) Then
      Exit;
    EndIf;
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    If оВид=1 Then
      ТЗ:="зН:=Ref.тмцСвойстваОсновныхСредств.@Parent;
      |Condition(зН IN оН.Get(1));
      |Condition(зН NOT IN оН.Get(2));
      |зТГ:=Ref.тмцСвойстваОсновныхСредств.@Parent.ТоварнаяГруппа;
      |Condition(зТГ IN оТГ.Get(1));
      |Condition(зТГ NOT IN оТГ.Get(2));
      |зФлг:=Ref.тмцСвойстваОсновныхСредств.флНачислятьАмортизацию;
      |Condition(зФлг=1);
      |зСумма:=Ref.тмцСвойстваОсновныхСредств.ПервоначальнаяСтоимость;
      |Condition(зСумма>0);
      |Group зН"+?(оГрп=1," with folders")+";";
    Else
      спСч:=List.Create(глНайтиСчет("01.1"),глНайтиСчет("02.1"));
      ТЗ:="Period From НачДата to КонДата;
      |зЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо;
      |Condition(зЮЛ IN оЮЛ.Get(1));
      |Condition(зЮЛ NOT IN оЮЛ.Get(2));
      |зСч:=Storage.БухгалтерскиеСчета.Счет;
      |Condition(зСч IN спСч);
      |зН:=Storage.БухгалтерскиеСчета.Субконто1..Ref.тмцНоменклатура;
      |Condition(зН IN оН.Get(1));
      |Condition(зН NOT IN оН.Get(2));"+
      ?(оТГ[1].Size()+оТГ[2].Size()>0,"зТГ:=Storage.БухгалтерскиеСчета.Субконто1..Ref.тмцНоменклатура.ТоварнаяГруппа;
      |Condition(зТГ IN оТГ.Get(1));
      |Condition(зТГ NOT IN оТГ.Get(2));")+
      "зСуб2:=Storage.БухгалтерскиеСчета.Субконто2;
      |Condition(зСуб2 IN оСк.Get(1));
      |Condition(зСуб2 NOT IN оСк.Get(2));
      |зСуб3:=Storage.БухгалтерскиеСчета.Субконто3;
      |зСмОст:=EndTotals(Сумма);
      |зСмП:=Income(Сумма);
      |зСмР:=Expense(Сумма);
      |Group зН"+?(оГрп=1," with folders")+";";
    EndIf;
    З:=Query.Create();
    З.Execute(ТЗ);
    
    оЗагол:="Регистр расчета амортизации основных средств";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,""+?(оВид=2,"оЮЛ,оСк,")+"оТГ,оН","","");
    пОстаточнаяСтоимостьНач:="Остаточная стоимость на "+НачДата;
    пОстаточнаяСтоимостьКон:="Остаточная стоимость на "+КонДата;
    пАмортизацияЗаПериод:="Амортизация с "+НачДата+" по "+КонДата;
    ТИтого:=Tab.Create("Выс");
    ТИтого.AddColumn("См0",,"Number");
    ТИтого.AddColumn("СмНач",,"Number");
    ТИтого.AddColumn("См3",,"Number");
    ТИтого.AddColumn("СмКон",,"Number");
    
    спМесяцы:=List.Create();
    a:=BegOfMonth(НачДата);
    While a<=BegOfMonth(КонДата) Do
      спМесяцы.Add(a);
      ТИтого.AddColumn("См_"+a,,"Number");
      a:=EndOfMonth(a)+1;
    EndDo;
    
    Сп:=СпУстановки;
    Т.CopyByX("v1|h1",1);
    If оПоМесяцам Then
      For i:=1 To спМесяцы.Size() Do
        пАмортизацияЗаМесяц:="Амортизация за "+FormatDate(спМесяцы.Get(i),"MM YYYY г.");
        Т.CopyByX("v1|h2");
      EndDo;
    EndIf;
    Т.CopyByX("v1|h3");
    Т.Options.FixedLine:=Т.Height();
    ТИтого.NewLine();
    
    спГруппы:=List.Create();
    While З.Next(1) Do
      зН:=З.зН;
      пЭл:=зН;
      пЭлР:=пЭл;
      If IsEmpty(пЭл) Then
        пЭл:="< Не выбран >";
      EndIf;
      пКод:=глПолучитьКод(пЭлР);
      
      пДата0:="";
      пДата1:="";
      пСм0:="";
      пСПИ:="";
      пСпособ:="";
      пСмНач:="";
      пСм2:="";
      пСм3:="";
      пСмКон:="";
      
      ФлПапка:=0;
      If зН.isFolder() Then
        //Завершить предыдущую папку?
        While спГруппы.Size()>0 Do
          пЭлПред:=спГруппы.Get(спГруппы.Size());
          if пЭлПред.Contains(пЭлР) Then
            Break;
          EndIf;
          ВывестиСтрокуОбщихИтогов(Т,ТИтого,ТабФорма);
          спГруппы.Remove(спГруппы.Size());
        EndDo;
      
        спГруппы.Add(пЭлР);
        ТИтого.NewLine();
        ТИтого.Выс:=Т.Height()+1;
        ФлПапка:=1;
      
        Т.CopyByX("v2|h1",1);
        If оПоМесяцам Then
          For i:=1 To спМесяцы.Size() Do
            Т.CopyByX("v2|h2");
          EndDo;
        EndIf;
        Т.CopyByX("v2|h3");
      
        глРаскраситьСтроку(Т,1,3,1,1,2,Т.Width-1,зН);
        Continue;
      EndIf;
      ТИтого.NewLine();
      ТИтого.Выс:=Т.Height()+1;
      
      
      aEl:=Ref.тмцСвойстваОсновныхСредств;
      If _And(aEl.Find("@Parent",зН)>0,aEl.флНачислятьАмортизацию=1) Then
        пДата0:=aEl.ДатаВводаВЭксплуатацию;
        пДата1:=aEl.ДатаВыбытия;
        пСм0:=глФРМ(aEl.ПервоначальнаяСтоимость);
        пСПИ:=Max(aEl.СрокПолезногоИспользования,1);
        пСпособ:="Линейный"+?(aEl.СтоимостьМодернизации<>0," + модернизация");
        
        //См0
        //См0 - СмМес
        //См0 - 2*СмМес
        //...
        //(См0+СмМодернизация) - N*СмМес - СмМодМес        //СмМодМес = СмМодернизация/(Количество оставшихся месяцев)
        //(См0+СмМодернизация) - (N+1)*СмМес + 2*СмМодМес
        //...
        //Max(0,(См0+СмМодернизация) - K*СмМес + (K-N+1)*СмМодМес) = 0
        
        ДатаВыбытия:=?(IsEmpty(пДата1),AddMonth(BegOfMonth(aEl.ДатаВводаВЭксплуатацию),пСПИ),пДата1);
        зСмНач:=aEl.ПервоначальнаяСтоимость;
        зМесяцев:=Max(aEl.СрокПолезногоИспользования,1);
        зСмМес:=aEl.ПервоначальнаяСтоимость/зМесяцев;
        a:=BegOfMonth(aEl.ДатаВводаВЭксплуатацию);
        While (a<BegOfMonth(НачДата))And(a<=BegOfMonth(ДатаВыбытия)) Do
          If a=BegOfMonth(aEl.ДатаМодернизации) Then
            зСмНач:=зСмНач+aEl.СтоимостьМодернизации;
            зСмМес:=зСмНач/зМесяцев;
          EndIf;
          зМесяцев:=зМесяцев-1;
          зСмНач:=зСмНач-зСмМес;
          If зМесяцев=0 Then
            зСмНач:=0;
            зСмМес:=0;
            Break;
          EndIf;
          a:=EndOfMonth(a)+1;
        EndDo;
        
        пСм3:=0;//За период
        пСмНач:=глФРМ(зСмНач);
        
        ДобавитьКИтогам(ТИтого,"СмНач",зСмНач);
        ДобавитьКИтогам(ТИтого,"См0",aEl.ПервоначальнаяСтоимость);
        a:=BegOfMonth(НачДата);
        Т.CopyByX("v2|h1",1);
        For i:=1 To спМесяцы.Size() Do
          If a<=BegOfMonth(ДатаВыбытия) Then
            If a=BegOfMonth(aEl.ДатаМодернизации) Then
              зСмНач:=зСмНач+aEl.СтоимостьМодернизации;
              зСмМес:=зСмНач/зМесяцев;
            EndIf;
            зМесяцев:=зМесяцев-1;
            зСмНач:=зСмНач-зСмМес;
          Else
            зСмМес:=0;
          EndIf;  
          пСм3:=пСм3+зСмМес;
          пСм2:=глФРМ(зСмМес);
          
          ДобавитьКИтогам(ТИтого,"См_"+a,зСмМес);
          If зМесяцев=0 Then
            зСмНач:=0;
            зСмМес:=0;
          EndIf;
          If оПоМесяцам Then
            Т.CopyByX("v2|h2");
          EndIf;
          a:=EndOfMonth(a)+1;
        EndDo;
        ДобавитьКИтогам(ТИтого,"См3",пСм3);
        ДобавитьКИтогам(ТИтого,"СмКон",зСмНач);
        пСм3:=глФРМ(пСм3);
        пСмКон:=глФРМ(зСмНач);
        Т.CopyByX("v2|h3");
      
        глРаскраситьСтроку(Т,1,3,1,1,2,Т.Width-1,зН);
      EndIf;
      If not ФлПапка Then
        ВывестиСтрокуОбщихИтогов(Т,ТИтого,ТабФорма);
      EndIf;
    EndDo;
    While спГруппы.Size()>0 Do
      ВывестиСтрокуОбщихИтогов(Т,ТИтого,ТабФорма);
      спГруппы.Remove(спГруппы.Size());
    EndDo;
    ТИтого.CurLine:=1;
    ТИтого.Выс:=Т.Height()+1;
    
    пСм0:="";
    пСмНач:="";
    пСм2:="";
    пСм3:="";
    пСмКон:="";
    Т.CopyByX("v3|h1",1);
    If оПоМесяцам Then
      For i:=1 To спМесяцы.Size() Do
        Т.CopyByX("v3|h2");
      EndDo;
    EndIf;
    Т.CopyByX("v3|h3");
    ВывестиСтрокуОбщихИтогов(Т,ТИтого,ТабФорма);
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

