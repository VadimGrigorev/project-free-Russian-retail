//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function ПроверитьСоответствиеТипа(оВС,aList)
  If оВС.Selected()<>0 Then
    If Trim(оВС.ТипЗначенияЛокальный)="" Then
      Тип:="Ref.бухЗначенияСубконто";
    Else
      Тип:=Replace(Replace(Replace(оВС.ТипЗначенияЛокальный,"Справочник.","Ref."),"Документ.","Doc."),"Перечисление.","Enum.");
    EndIf;
  Else
    aList.Get(1).Clear();
    aList.Get(2).Clear();
    Exit;
  EndIf;
  Тип:=Uppercase("DB."+Тип);
  bList:=aList.Get(1);
  i:=0;
  While i<bList.Size() Do
    i:=i+1;
    Тип2:=Uppercase(TypeStr(bList.Get(i)));
    If Тип2<>Тип Then
      bList.Remove(i);
      i:=i-1;
    EndIf;
  EndDo;
  bList:=aList.Get(2);
  i:=0;
  While i<bList.Size() Do
    i:=i+1;
    Тип2:=Uppercase(TypeStr(bList.Get(i)));
    If Тип2<>Тип Then
      bList.Remove(i);
      i:=i-1;
    EndIf;
  EndDo;
EndFunction

Function Формула(оДвиж,спФормулаРасшифровки)
  aList:=спФормулаРасшифровки.Copy();
  aList.SetByName("оДвиж",оДвиж);
  aList.SetByName("оГруппы","");
  Exit aList;
EndFunction 

Function ПолучитьТип(аНомер,ByRef аРод)

  Function ПолучитьТипРекв(ВС,ByRef аРод)
    If Trim(ВС.ТипЗначенияЛокальный)="" Then
      Exit "бухЗначенияСубконто";
    Else
      Стр:=Replace(Replace(Uppercase(ВС.ТипЗначенияЛокальный),"СПРАВОЧНИК.",""),"REF.","");
      оЮЛ:=Form.оЮЛ.Value;
      аРод:=List.Create(ВС);
      
      If Стр=uppercase("кнтБанковскиеСчета") Then
        If оЮЛ.Get(1).Size()<>1 Then
          Box("Необходимо выбрать единственное юридическое лицо, чтобы имелась возможность выбрать его счет!",Q_STOP);
          Exit "";
        EndIf;
        аРод:=List.Create(оЮЛ.Get(1).Get(1).Контрагент);
      EndIf;
          
      Exit Стр;
    EndIf;
  EndFunction
  
  If аНомер=1 Then
    Exit ПолучитьТипРекв(Form.оВидСуб1.Value,аРод);
  ElseIf аНомер=2 Then
    Exit ПолучитьТипРекв(Form.оВидСуб2.Value,аРод);
  ElseIf аНомер=3 Then
    Exit ПолучитьТипРекв(Form.оВидСуб3.Value,аРод);
  EndIf;

  Exit "";
EndFunction


Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего,спОбороты,спФормулаРасшифровки,БылСчет=0)
  If Ном>тГруппы.Size() Then
    Exit;
  EndIf;
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего,спОбороты,спФормулаРасшифровки,БылСчет);
    Exit;
  EndIf;
  
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  
  While З.Next(Ур) Do
    ФлПапка:=0;
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    Else
      If Pos("DB.REF.",TypeStr(пЭлР))=1 Then
        ФлПапка:=пЭлР.isFolder();
      EndIf;
    EndIf;
    
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    пКод:=глПолучитьКод(пЭлР);
    If ИмяПер="зСч" Then
      БылСчет=З.зСч;
      пКод:="";
    EndIf;
    If Pos("День,Месяц,Год,Документ",ИмяПер)=0 Then
      спФормулаРасшифровки.SetByName("о"+Mid(ИмяПер,2),пЭлР);
    EndIf;  
    
    флКол:=0;
    флПас:=1;
    If БылСчет<>0 Then
      флПас:=БылСчет.Пассивный;
      флКол:=БылСчет.Количественный;
    EndIf;  
    
    пНач:=З.зНачОст;
    пКон:=З.зКонОст;
    пПриход:=глФРМ(З.зПриход);
    пРасход:=глФРМ(З.зРасход);
    
    If ФлКол=1 Then
      пНачКол:=З.зНачОстКол;
      пКонКол:=З.зКонОстКол;
      пПриходКл:=глФРМЧл(З.зПриходКол);
      пРасходКл:=глФРМЧл(З.зРасходКол);
    EndIf;
    
    If флПас=1 Then
      пНачД:=?(пНач>0,пНач,0);
      пНачК:=?(пНач<0,-пНач,0);
      пКонД:=?(пКон>0,пКон,0);
      пКонК:=?(пКон<0,-пКон,0);
      
      If ФлКол=1 Then
        пНачДКл:=?(пНач>0,пНачКол,0);
        пНачККл:=?(пНач<0,-пНачКол,0);
        пКонДКл:=?(пКон>0,пКонКол,0);
        пКонККл:=?(пКон<0,-пКонКол,0);
      EndIf;
    Else
      пНачК:=?(флПас=2,-пНач,0);
      пНачД:=?(флПас=0,пНач,0);
      пКонК:=?(флПас=2,-пКон,0);
      пКонД:=?(флПас=0,пКон,0);
      
      If ФлКол=1 Then
        пНачККл:=?(флПас=2,-пНачКол,0);
        пНачДКл:=?(флПас=0,пНачКол,0);
        пКонККл:=?(флПас=2,-пКонКол,0);
        пКонДКл:=?(флПас=0,пКонКол,0);
      EndIf;
    EndIf;    
    
    If (Ур=1)And(not ФлПапка) Then
      спОбороты.Set(1,спОбороты.Get(1)+пНачД);
      спОбороты.Set(2,спОбороты.Get(2)+пНачК);
      спОбороты.Set(3,спОбороты.Get(3)+пКонД);
      спОбороты.Set(4,спОбороты.Get(4)+пКонК);
    EndIf;  
    
    пНачД:=глФРМ(пНачД);
    пНачК:=глФРМ(пНачК);
    пКонД:=глФРМ(пКонД);
    пКонК:=глФРМ(пКонК);
    If ФлКол Then
      пНачДКл:=глФРМЧл(пНачДКл);
      пНачККл:=глФРМЧл(пНачККл);
      пКонДКл:=глФРМЧл(пКонДКл);
      пКонККл:=глФРМЧл(пКонККл);
    EndIf;    
    
    СпРасш1:=Формула(1,спФормулаРасшифровки);
    СпРасш2:=Формула(2,спФормулаРасшифровки);
    СпРасш3:=Формула(3,спФормулаРасшифровки);
    
    Т.CopyByX("v2",1);
    If ФлКол Then
      Т.CopyByX("v3",1);
    EndIf;    
    
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1+ФлКол,3,Ур,УрВсего,2,9,пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего,спОбороты,спФормулаРасшифровки,БылСчет);
    
    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
  
  аНум:=спФормулаРасшифровки.FindByName("о"+Mid(ИмяПер,2),,,0);
  If аНум>0 Then
    спФормулаРасшифровки.Remove(аНум);
  EndIf;  
EndFunction


Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оСуб1:=глПолучитьУстановку(ТабФорма,"оСуб1");
  оСуб2:=глПолучитьУстановку(ТабФорма,"оСуб2");
  оСуб3:=глПолучитьУстановку(ТабФорма,"оСуб3");
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  глСохранитьВМодуле("ТабФорма",ТабФорма);
  
  ФлЛок:=0;
  If Т=0 Then
    If not глПроверитьДатуВОтчетах(Param,Form.НачДата.Value,Form.КонДата.Value,-1) Then
      Exit;
    EndIf;
    If оСуб1.Get(1).Size()+оСуб2.Get(1).Size()+оСуб3.Get(1).Size()=0 Then
      Box("Выберите to крайней мере одно субконто!",Q_STOP);
      Exit;
    EndIf;    
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Stor.БухгалтерскиеСчета";
    ТЗ:="";
    спРезПеременные:=List.Create();
    глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,НачДата,КонДата,"оЮЛ@зЮЛ@ЮрЛицо,оСуб1@зСуб1@Субконто1,оСуб2@зСуб2@Субконто2,оСуб3@зСуб3@Субконто3","оГруппы",спРезПеременные);
    
    ТЗ:=ТЗ+"зРасход:=Expense(Сумма);
      |зПриход:=Income(Сумма);
      |зНачОст:=BegTotals(Сумма);
      |зКонОст:=EndTotals(Сумма);
      |зРасходКол:=Expense(Количество);
      |зПриходКол:=Income(Количество);
      |зНачОстКол:=BegTotals(Количество);
      |зКонОстКол:=EndTotals(Количество);";
    флПеременныеВремени:=Pos("Group День",ТЗ)+Pos("Group Месяц",ТЗ)+Pos("Group Год",ТЗ)>0;
  
    З:=Query.Create();
    З.Execute(ТЗ);
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
    
    оЗагол:="Анализ субконто";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оСуб1,оСуб2,оСуб3","");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1",1);
    Т.Options.FixedLine:=Т.Height();
    глСимулироватьСальдоПоДокументам(З,"Документ:зНачОст:зПриход:зРасход:зКонОст");
    глСимулироватьСальдоПоДокументам(З,"Документ:зНачОстКол:зПриходКол:зРасходКол:зКонОстКол");
    
    
    спОбороты:=List.Create(0,0,0,0);
    спФормулаРасшифровки:=List.Create();
    Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего,спОбороты,спФормулаРасшифровки);
      
    //Обороты
    If (not флПеременныеВремени)And(УрВсего>0) Then
      пНачД:=глФРМ(спОбороты.Get(1));
      пНачК:=глФРМ(спОбороты.Get(2));
      пПриход:=глФРМ(З.Compute("зПриход"));
      пРасход:=глФРМ(З.Compute("зРасход"));
      пКонД:=глФРМ(спОбороты.Get(3));
      пКонК:=глФРМ(спОбороты.Get(4));
      пТипИтого:="Обороты:";
      Т.CopyByX("v4",1);    
    EndIf;  
    
    //Итого
    З.First();
    зНачОст:=З.BegTotals("зНачОст");
    зКонОст:=З.EndTotals("зКонОст");
    пНачД:=глФРМ(?(зНачОст<0,0,зНачОст));
    пНачК:=глФРМ(?(зНачОст>0,0,-зНачОст));
    пПриход:=глФРМ(З.Compute("зПриход"));
    пРасход:=глФРМ(З.Compute("зРасход"));
    пКонД:=глФРМ(?(зКонОст<0,0,зКонОст));
    пКонК:=глФРМ(?(зКонОст>0,0,-зКонОст));
    пТипИтого:="Итого:";
    Т.CopyByX("v4",1);
    Т.CopyByX("v5",1);

    If оУровни=1 Then
      Т.Levels(0).Close();
    EndIf;
    
    Т.AttachedModule:=1;
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction

Function OnDoubleClick(Таб)
  If not глРаботаСОсобымиИконкамиТаблицы(Таб) Then
    ТабФорма:=глПолучитьИзМодуля("ТабФорма");
    result:=not глФормулаРасшифровкиОтчета(ТабФорма,Таб,"оЮЛ,оСч,оСуб1,оСуб2,оСуб3","НачДата,КонДата","","УчетныеОтделы\Бухгалтерия\КарточкаСчета");
  EndIf;
EndFunction



Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

