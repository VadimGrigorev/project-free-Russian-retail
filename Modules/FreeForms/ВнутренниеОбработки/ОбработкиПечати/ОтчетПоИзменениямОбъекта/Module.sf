//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function Печать(Сп)
  ФлЛок:=0;
  If TypeStr(Сп)="LIST" Then
    Д:=Сп.GetByName("Установки");
    Т:=Сп.GetByName("Таблица");
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  Else
    Д:=Сп;
    Т:=Table.Create();
    Т.SetSourceName("Table");
  EndIf;  
  
  Try
    оЗагол:="Отчет по изменениям объекта "+Д+" в журнале событий";
    оСвойства:=глСвойстваПечатиПростые();
    aTab:=Logs.Query(,,,"@LINK",Д);
    aTab.Sort("@Date+,@Element+");
    
    Сп:=List.Create();
    Сп.SetByName("Установки",Д);
    Сп.SetByName("Таблица",0);
    Сп.SetByName("Module",Form.GetModuleFileName());
    Сп.SetByName("Form",Form.GetFormFileName());
    Т.CopyByX("v1",1);
    спОбычные:=List.Create();
    спОбычные.Add("NEW","Новый объект");
    спОбычные.Add("WRITE","Запись объекта");
    спОбычные.Add("OPEN","Просмотр объекта");
    спОбычные.Add("MARK","Удаление объекта");
    спОбычные.Add("UNMARK","Отмена удаления объекта");
    спОбычные.Add("DELETE","Физическое удаление объекта");
    спОбычные.Add("PUBLISH","Обработка объекта");
    спОбычные.Add("UNPUBLISH","Отмена обработки объекта");
    спОбычные.Add("LOGIN","Вход в систему");
    спОбычные.Add("LOGOUT","Выход из системы");
    спОбычные.Add("USER","Событие задано администратором");
    спОбычные.Add("REPORT","Формирование отчета");
    
    aTab.Select();
    While aTab.Next() Do
      //@DATE,@USERNAME,@EVENTTYPE,@EVENTNAME,@LINK,@COMMENT
      пЭл:=aTab.Get(aTab.CurLine,"@LINK");
      пЭлР:=пЭл;
      пПользователь:=aTab.Get(aTab.CurLine,"@USERNAME");
      пДата:=aTab.Get(aTab.CurLine,"@DATE");
      пТип:=aTab.Get(aTab.CurLine,"@EVENTTYPE");
      пТип:=?(пТип=0,"Визуальное",?(пТип=1,"Программное","Пользовательское, тип: "+пТип));
      пИмя:=aTab.Get(aTab.CurLine,"@EVENTNAME");
      If спОбычные.Find(пИмя)>0 Then
        пИмя:=спОбычные.GetName(спОбычные.Find(пИмя));
      EndIf;
      пОписание:=aTab.Get(aTab.CurLine,"@COMMENT");
      Т.CopyByX("v2",1);
    EndDo;
    пЧисло:=aTab.Size();
    Т.CopyByX("v3",1);
  
    глПечатнаяФормаОтчета(Т,Д,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;    
EndFunction

Function OnDoubleClick(Таб)
  Result:=not глРаботаСОсобымиИконкамиТаблицы(Таб);
EndFunction

Function OnExecute(Объект)
  Печать(Объект);
EndFunction


Function OnOpen()
  Result:=0;
  If (not глПользователь.общиеОсновныеСправочники) Then
    Box("Вам запрещается пользоваться этой обработкой!",Q_STOP);
    Exit 0;
  EndIf;
  
  If not IsEmpty(Param) Then
    Печать(Param);
  EndIf;
EndFunction


