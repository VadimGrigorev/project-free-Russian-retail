//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function ОбновитьТексты()
  оДокументы:=Form.оДокументы.Value;
  Вид:="";
  For i:=1 to оДокументы.Size() Do
    If оДокументы.Check(i)=1 Then
      If Вид="" Then
        Вид:=оДокументы.Get(i);
      Else
        Вид:=0;
      EndIf;  
    EndIf;
  EndDo;
  If isEmpty(Вид) Then
    Form.тКодОперации.isDisabled:=1;
    Form.оКО.isDisabled:=1;
    Form.оКО.Value.Clear();
  Else
    Form.тКодОперации.isDisabled:=0;
    Form.оКО.isDisabled:=0;
    оКО:=Form.оКО.Value;
    aEl:=оКО.SelectedLine;
    If (aEl>0)And(aEl<=оКО.Size()) Then
      aEl:=оКО.Get(aEl);
    EndIf;
    оКО.Clear();
    aStruct:=Meta.Enum("ко"+Вид);
    оКО.Add("");
    For i:=1 to aStruct.Values.Count() Do
      оКО.Add(Enum.GetByIndex("ко"+Вид,i));
    EndDo;
    aNum:=оКО.Find(aEl);
    If aNum>0 Then
      оКО.SelectedLine:=aNum;
    Else
      оКО.SelectedLine:=1;
    EndIf;
  EndIf;
EndFunction;

Function ВывестиИтоги(Т,ТИтого,оКмт,СпТары)
  ТИтого.CurLine:=ТИтого.Size();
  Т.Area(8+оКмт,ТИтого.Выс,8+оКмт,ТИтого.Выс).Text:=глФРМ(ТИтого.См);
  ТИтого.Size(ТИтого.Size()-1);
EndFunction


Function Группировка(З,ТабФорма,Т,Ном,Ур,тГруппы,УрВсего,ByRef пН,ТИтого)

  Function ГруппировкаПоДокументам(Ур,ТВозвраты,СпТары)
    While З.Next(Ур) Do
      д:=З.Get("Документ");
      пСм:=0;
      If глЕстьРеквизитДокумента("СуммаВзаиморасчетов",д.DBName()) Then
        пСм:=д.СуммаВзаиморасчетов;
      EndIf;
      ТИтого.Select();
      While ТИтого.Next() Do
        ТИтого.См:=ТИтого.См+пСм;
      EndDo;
    EndDo;
  EndFunction

  флДобГруппировка:=глПолучитьИзМодуля("флДобГруппировка");
  флДобОпция:=Number(глПолучитьИзМодуля("флДобОпция"));
  ТВозвраты:=глПолучитьИзМодуля("ТВозвраты");
  СпТары:=глПолучитьИзМодуля("СпТары");
  
  If Ном>тГруппы.Size() Then
    If флДобГруппировка and 1<>0 Then
      If флДобГруппировка and 2<>0 Then
        While З.Next(Ур) Do
          ГруппировкаПоДокументам(Ур+1,ТВозвраты,СпТары);
        EndDo;  
      Else
        ГруппировкаПоДокументам(Ур,ТВозвраты,СпТары);
      EndIf;
    EndIf;
    Exit;
  EndIf;
  
  
  If тГруппы.Check(Ном,"Группировка")=0 Then
    Группировка(З,ТабФорма,Т,Ном+1,Ур,тГруппы,УрВсего,пН,ТИтого);
    Exit;
  EndIf;
  
  ИмяПер:=глПолучитьИмяПеременной(тГруппы,Ном);
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  НачДата:=глПолучитьУстановку(ТабФорма,"НачДата");
  КонДата:=глПолучитьУстановку(ТабФорма,"КонДата");
  оКмт:=глПолучитьУстановку(ТабФорма,"оКмт");
  
  If (ИмяПер="Документ")and(флДобГруппировка and 2<>0)And(флДобОпция=0) Then
    глСохранитьВМодуле("флДобОпция",1);
    While З.Next(Ур) Do
      Группировка(З,ТабФорма,Т,Ном,Ур+1,тГруппы,УрВсего,пН,ТИтого);
    EndDo;  
    глСохранитьВМодуле("флДобОпция",0);
    Exit;
  EndIf;


  спГруппы:=List.Create();
  While З.Next(Ур) Do
    пЭл:=З.Get(ИмяПер);
    пЭлР:=пЭл;
    If IsEmpty(пЭл) Then
      пЭл:="< Не выбран >";
    EndIf;
    глОбработатьВыводимоеЗначениеВОтчет(пЭл,ИмяПер);
    
    ФлПапка=0;
    If _And(pos("DB.REF.",TypeStr(пЭлР))>0,not isEmpty(пЭлР),пЭлР.isFolder()) Then
      //Завершить предыдущую папку?
      While спГруппы.Size()>0 Do
        пЭлПред:=спГруппы.Get(спГруппы.Size());
        if пЭлПред.Contains(пЭлР) Then
          Break;
        EndIf;
        ВывестиИтоги(Т,ТИтого,оКмт,СпТары);
        спГруппы.Remove(спГруппы.Size());
      EndDo;
    
      спГруппы.Add(пЭлР);
      ТИтого.NewLine();
      ТИтого.Выс:=Т.Height()+1;
      ФлПапка:=1;
    EndIf;
    
    
    пКод:=глПолучитьКод(пЭлР);
    Секция:="v5";
    If ИмяПер="Документ" Then
      пКод:=пН;
      
      д:=пЭлР;
      д2:=д;
      If _And(д.DBName()="Сторнирование",not isEmpty(д.ДокОснование)) Then
        д2:=д.ДокОснование;
      EndIf;
      
      пН:=пН+1;
      пСТ:=?(д.Status()<2,?(д.Status()=0,"","Удален"),"Обработан");
      пВНСФ:="";
      пВН:="";
      If глЕстьРеквизитДокумента("НомерДокВходящий",д.DBName()) Then
        пВН:=""+Trim(д.НомерДокВходящий)+" от "+д.ДатаДокВходящий;
      EndIf;  
      If глЕстьРеквизитДокумента("НомерДокВходящийСФ",д.DBName()) Then
        пВНСФ:=""+Trim(д.НомерДокВходящийСФ)+" от "+д.ДатаДокВходящийСФ;
      EndIf;
      пКР:=GetNothing();
      пКод:="";пК:="";
      If глЕстьРеквизитДокумента("Контрагент",д2.DBName()) Then
        пКР:=д2.Контрагент;
        пК:=пКР;
        пКод:=глНомерБезНулей(пКР);
      EndIf;
      пАвтор:=д.Автор;
      пНом:=?(НачДата<>КонДата,Trim(д.DocDate)+", №","")+Trim(д.DocNum);
      пДок:=д;
      пВид:=д.КодОперации;
      пСм:=0;
      If глЕстьРеквизитДокумента("СуммаВзаиморасчетов",д.DBName()) Then
        пСм:=д.СуммаВзаиморасчетов;
      EndIf;
      ТИтого.Select();
      While ТИтого.Next() Do
        ТИтого.См:=ТИтого.См+пСм;
      EndDo;
      пСм:=глФРМ(пСм);
      
      Т.CopyByX("v2|h1",1);
      If оКмт=1 Then
        пКмт:=Trim(д.Комментарий);
        Т.CopyByX("v2|h6");
      EndIf;
      Т.CopyByX("v2|h7");
      Т.CopyByX("v2|h4");      
    Else
      Выс:=Т.Height();
      Т.CopyByX("v5|h1",1);
      If оКмт=1 Then
        Т.CopyByX("v5|h6");
      EndIf;
      Т.CopyByX("v5|h7");
      Т.CopyByX("v5|h4");    
    EndIf;  
      
    If ИмяПер<>"Документ" Then
      ТИтого.NewLine();
      ТИтого.Выс:=Т.Height();
    EndIf;
    НачВыс:=Т.Height();
    Form.StatusText(НачВыс);
    Form.UpdateProgress(-1,,""+Т.Height());
    глРаскраситьСтроку(Т,1,?(ИмяПер="Документ",0,3),Ур-флДобОпция,УрВсего,2,4+оКмт+7,пЭлР);
    Группировка(З,ТабФорма,Т,Ном+1,Ур+1,тГруппы,УрВсего,пН,ТИтого);
    If ИмяПер<>"Документ" Then
      ВывестиИтоги(Т,ТИтого,оКмт,СпТары);
    EndIf;    
    
    If (оУровни=1)and(Ур<УрВсего) Then
      глДобавитьУровень(Т,НачВыс,Т.Height());
    EndIf;
  EndDo;
  
  While спГруппы.Size()>0 Do
    ВывестиИтоги(Т,ТИтого,оКмт,СпТары);
    спГруппы.Remove(спГруппы.Size());
  EndDo;
EndFunction



Function НаложитьФильтр2(зДок,Тип1,Тип2,оФильтр)
  Вид:=зДок.DBName();
  Фл1:=глЕстьРеквизитДокумента(Тип1,Вид);
  Фл2:=глЕстьРеквизитДокумента(Тип2,Вид);
  If (not Фл1)And(not Фл2) Then
    Exit 0;
  EndIf;
  зКс1:=?(Фл1,зДок.GetValue(Тип1),0);
  зКс2:=?(Фл2,зДок.GetValue(Тип2),0);

  If (Фл1)And(Фл2) Then
    If _Or(_And(оФильтр.Get(1).Size()>0,not оФильтр.Get(1).Contains(зКс1),not оФильтр.Get(1).Contains(зКс2)),_And(оФильтр.Get(2).Size()>0,_Or(оФильтр.Get(1).Contains(зКс1),оФильтр.Get(1).Contains(зКс2)))) Then
      Exit 0;
    EndIf;
  ElseIf Фл1 Then
    If _Or(_And(оФильтр.Get(1).Size()>0,not оФильтр.Get(1).Contains(зКс1)),_And(оФильтр.Get(2).Size()>0,оФильтр.Get(1).Contains(зКс1))) Then
      Exit 0;
    EndIf;
  ElseIf _Or(_And(оФильтр.Get(1).Size()>0,not оФильтр.Get(1).Contains(зКс2)),_And(оФильтр.Get(2).Size()>0,оФильтр.Get(1).Contains(зКс2))) Then
    Exit 0;
  EndIf;
  
  Exit 1;
EndFunction


Function ДобавитьВТаблицуВозврат(ТВозвраты,вДок,СпТары)
  aTab:=вДок.LineParts("Номенклатура");
  aTab.Select();
  While aTab.Next() Do
    If aTab.Количество=0 Then
      Continue;
    EndIf;
    If (aTab.Номенклатура.ВидНоменклатуры=Enum.ВидыНоменклатуры.Тара)And(aTab.СтавкаНДС=Enum.СтавкиНДС.БезНДС) Then
      If СпТары.Find(aTab.Номенклатура)=0 Then
        СпТары.Add(aTab.Номенклатура);
        ТВозвраты.AddColumn("Т"+aTab.Номенклатура.Code,,"Number");
        ТВозвраты.AddColumn("Д"+aTab.Номенклатура.Code,,"Number");
      EndIf;
      ТВозвраты.Set(ТВозвраты.CurLine,"Т"+aTab.Номенклатура.Code,ТВозвраты.Get(ТВозвраты.CurLine,"Т"+aTab.Номенклатура.Code)+aTab.Количество);
      ТВозвраты.Set(ТВозвраты.CurLine,"Д"+aTab.Номенклатура.Code,ТВозвраты.Get(ТВозвраты.CurLine,"Д"+aTab.Номенклатура.Code)+aTab.Сумма);
    Else
      ТВозвраты.СуммаВ:=ТВозвраты.СуммаВ+aTab.Сумма;
    EndIf;
  EndDo;
EndFunction      


Function Печать(СпУстановки)
  ТабФорма:=СпУстановки.GetByName("Установки");
  Т:=СпУстановки.GetByName("Таблица");
  оСтатус:=глПолучитьУстановку(ТабФорма,"оСтатус").SelectedLine;
  оГруппы:=глПолучитьУстановку(ТабФорма,"оГруппы");
  НачДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"НачДата"));
  КонДата:=BegOfDay(глПолучитьУстановку(ТабФорма,"КонДата"));
  оДокументы:=глПолучитьУстановку(ТабФорма,"оДокументы");
  оСортНом:=Number(глПолучитьУстановку(ТабФорма,"оСортНом"));
  оКО:=глПолучитьУстановку(ТабФорма,"оКО");
  If (оКО.SelectedLine>1)And(оКО.Size()>=оКО.SelectedLine) Then
    оКО:=оКО.Get(оКО.SelectedLine);
  Else
    оКО:=0;
  EndIf;  
  оУровни:=глПолучитьУстановку(ТабФорма,"оУровни");
  оКмт:=глПолучитьУстановку(ТабФорма,"оКмт");
  
  ФлЛок:=0;
  If Т=0 Then
    Т:=Table.Create();
    НачДата:=BegOfDay(Form.НачДата.Value);
    КонДата:=BegOfDay(Form.КонДата.Value);
  Else  
    ФлЛок:=1;
    Т.Lock();
    Т.Clear();
  EndIf;  
  
  Try
    Путь:="Jour.ОбщийЖурнал";
    ТЗ:="ДатаДок:=Jour.ОбщийЖурнал.DocDate;Condition((BegOfDay(ДатаДок)>=НачДата)And(BegOfDay(ДатаДок)<=КонДата));"+_NEWLINE;
    спРезПеременные:=List.Create();
    
    ФлЕстьСторнирование:=0;
    For i:=1 To оДокументы.Size() Do
      If оДокументы.Check(i)=0 Then
        Continue;
      EndIf;
      If оДокументы.Get(i)="Сторнирование" Then
        ФлЕстьСторнирование:=1;
        Break;
      EndIf;
    EndDo;

    If ФлЕстьСторнирование Then
      глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,0,0,"оЮЛ@зЮЛ@ЮрЛицо,оМг@зМг@Магазин,оА@зА@Автор,оСк@зСк@Склад","оГруппы",спРезПеременные);
    Else
      глПостроитьТекстЗапросаИзФильтров(ТЗ,ТабФорма,Путь,0,0,"оЮЛ@зЮЛ@ЮрЛицо,оМг@зМг@Магазин,оА@зА@Автор,оК@зК@Контрагент,оСк@зСк@Склад","оГруппы",спРезПеременные);
    EndIf;  
    If оСтатус=2 Then
      ТЗ:=ТЗ+"зСтатус:="+Путь+".@Status;Condition(зСтатус>1);"+_NEWLINE;
    ElseIf оСтатус=3 Then
      ТЗ:=ТЗ+"зСтатус:="+Путь+".@Status;Condition(зСтатус<2);"+_NEWLINE;
    ElseIf оСтатус=4 Then
      ТЗ:=ТЗ+"зСтатус:="+Путь+".@Status;Condition(зСтатус=1);"+_NEWLINE;
    EndIf;  
    
    If оКО<>0 Then
      ТЗ:=ТЗ+"зКО:=Jour.ОбщийЖурнал.КодОперации;Condition(зКО=оКО);"+_NEWLINE;
    Else
      Стр:="";
      ФлКолВо:=0;
      ФлВсе:=1;
      For i:=1 To оДокументы.Size() Do
        If оДокументы.Check(i)=0 Then
          ФлВсе:=0;
          Continue;
        EndIf;
        Стр:=Стр+",Doc."+оДокументы.Get(i);
        ФлКолВо:=ФлКолВо+1;
      EndDo;
      If ФлКолВо=0 Then
        Box("Необходимо выбрать по крайней мере один тип документов!",Q_STOP);
        Exit;
      EndIf;
      ТЗ:=ТЗ+"Condition(isType(Jour.ОбщийЖурнал.@LINK"+Стр+"));"+_NEWLINE;
    EndIf;
    
    флДобГруппировка:=0;
    If Pos("Group Документ",ТЗ)=0 Then
      If isEmpty(спРезПеременные.GetByName("Документ")) Then
        ТЗ:=ТЗ+"Документ:=Jour.ОбщийЖурнал.@LINK;";
      EndIf;
      ТЗ:=ТЗ+"Group Документ;"+_NEWLINE;
      флДобГруппировка:=1;
    EndIf;
    If оСортНом Then
      ТЗ:=Replace(ТЗ,"Group Документ;","зДокНом:=Jour.ОбщийЖурнал.DocNum;Group зДокНом,Документ;");
      флДобГруппировка:=флДобГруппировка or 2;
    EndIf;
    
    З:=Query.Create();
    З.Execute(ТЗ,0);
    
    //Заполняем следующие поля: зД
    флД:=Pos("зД:=",ТЗ)>0;
    //Накладываем фильтры, которые невозможно было наложить в запросе: оД, оН, оТГ, оТЦ, оКс
    оД:=глПолучитьУстановку(ТабФорма,"оД");оДФл:=оД.Get(1).Size()+оД.Get(2).Size()>0;
    оН:=глПолучитьУстановку(ТабФорма,"оН");оНФл:=оН.Get(1).Size()+оН.Get(2).Size()>0;
    оТГ:=глПолучитьУстановку(ТабФорма,"оТГ");оТГФл:=оТГ.Get(1).Size()+оТГ.Get(2).Size()>0;
    оТЦ:=глПолучитьУстановку(ТабФорма,"оТЦ");оТЦФл:=оТЦ.Get(1).Size()+оТЦ.Get(2).Size()>0;
    оКс:=глПолучитьУстановку(ТабФорма,"оКс");оКсФл:=оКс.Get(1).Size()+оКс.Get(2).Size()>0;
    //оК вычисляется отдельно для сторнирований (т.к., в документе не указывается контрагент)
    оК:=глПолучитьУстановку(ТабФорма,"оК");оКФл:=оК.Get(1).Size()+оК.Get(2).Size()>0;
    оКомм:=UpperCase(Trim(глПолучитьУстановку(ТабФорма,"оКомм")));
    
    СпТары:=List.Create();
    ТВозвраты:=Tab.Create("зДок,ДВ,ДВТ,СуммаВ");
    aTab:=З.ResultTable;
    i:=0;
    While i<aTab.Size() Do
      i:=i+1;
      aTab.CurLine:=i;
      зДок:=aTab.Документ;
      Вид:=зДок.DBName();
      
      If _And(флД,глЕстьРеквизитДокумента("Договор",Вид)) Then
        aTab.зД:=зДок.Договор;
      EndIf;
      
      зДок2:=зДок;
      If _And(зДок.DBName()="Сторнирование",not isEmpty(зДок.ДокОснование)) Then
        зДок2:=зДок.ДокОснование;
        Вид:=зДок2.DBName();
      EndIf;
      
      If оДФл Then
        If _Or(not глЕстьРеквизитДокумента("Договор",Вид),_And(оД.Get(1).Size()>0,not оД.Get(1).Contains(зДок2.Договор)),_And(оД.Get(2).Size()>0,оД.Get(1).Contains(зДок2.Договор))) Then
          aTab.Remove(i);
          i:=i-1;
          Continue;
        EndIf;
      EndIf;
      
      If _And(оКФл,ФлЕстьСторнирование) Then
        If _Or(not глЕстьРеквизитДокумента("Контрагент",Вид),_And(оК.Get(1).Size()>0,not оК.Get(1).Contains(зДок2.Контрагент)),_And(оК.Get(2).Size()>0,оК.Get(1).Contains(зДок2.Контрагент))) Then
          aTab.Remove(i);
          i:=i-1;
          Continue;
        EndIf;
      EndIf;
      
      If оТЦФл Then
        If _Or(not глЕстьРеквизитДокумента("ТипЦен",Вид),_And(оТЦ.Get(1).Size()>0,not оТЦ.Get(1).Contains(зДок2.ТипЦен)),_And(оТЦ.Get(2).Size()>0,оТЦ.Get(1).Contains(зДок2.ТипЦен))) Then
          aTab.Remove(i);
          i:=i-1;
          Continue;
        EndIf;
      EndIf;
      
      If оКсФл Then
        If not НаложитьФильтр2(зДок2,"Касса","КассаПолучатель",оКс) then
          aTab.Remove(i);
          i:=i-1;
          Continue;
        EndIf;
      EndIf;
      
      If _And(оКомм<>"",глЕстьРеквизитДокумента("Комментарий",Вид)) Then
        If Pos(оКомм,UpperCase(зДок.Комментарий))=0 Then
          aTab.Remove(i);
          i:=i-1;
          Continue;
        EndIf;
      EndIf;
      
      Вид:=зДок.DBName();
      
      If оНФл+оТГФл>0 Then
        If not isEmpty(Struct.Doc(Вид).LineParts("Номенклатура")) Then
          bTab:=зДок.LineParts("Номенклатура");
          //TODO: Очень медленно
          Фл:=-1;
          bTab.Select();
          While bTab.Next() Do
            If оНФл Then
              //По крайней мере одна строка в фильтре -- принимаем документ
              If _And(оН.Get(1).Size()>0,оН.Get(1).Contains(bTab.Номенклатура)) Then
                Фл:=1;
                If оН.Get(2).Size()=0 Then
                  Break;
                EndIf;  
              EndIf;
              //По крайней мере одна строка в фильтре -- не принимаем документ
              If _And(оН.Get(2).Size()>0,not оН.Get(1).Contains(bTab.Номенклатура)) Then
                Фл:=0;
                Break;
              EndIf;
            EndIf;  
            If оТГФл Then
              аТГ:=bTab.Номенклатура.ТоварнаяГруппа;
              If аТГ.Selected()<>0 Then
                //По крайней мере одна строка в фильтре -- принимаем документ
                If _And(оТГ.Get(1).Size()>0,оТГ.Get(1).Contains(аТГ)) Then
                  Фл:=1;
                  If оТГ.Get(2).Size()=0 Then
                    Break;
                  EndIf;  
                EndIf;
                //По крайней мере одна строка в фильтре -- не принимаем документ
                If _And(оТГ.Get(2).Size()>0,not оТГ.Get(1).Contains(аТГ)) Then
                  Фл:=0;
                  Break;
                EndIf;
              EndIf;  
            EndIf;  
          EndDo;
          If (Фл=-1)And((оН.Get(1).Size()>0)or(оТГ.Get(1).Size()>0)) Then
            Фл:=0;
          EndIf;
          If Фл=0 Then
            aTab.Remove(i);
            i:=i-1;
            Continue;
          EndIf;
        EndIf;
      EndIf;
    EndDo;
    
    глСохранитьВМодуле("флДобГруппировка",флДобГруппировка);
    глСохранитьВМодуле("флДобОпция",0);
    глСохранитьВМодуле("ТВозвраты",ТВозвраты);
    глСохранитьВМодуле("СпТары",СпТары);
    
    З.Postprocess();
    
    УрВсего:=глКоличествоУровнейИзФильтров(оГруппы);
    оКОСтр:=глПолучитьУстановку(ТабФорма,"оКО").SelectedLine;
  
    оЗагол:="Реестр "+?(оСтатус=1,"",?(оСтатус=2,"обработанных ",?(оСтатус=3,"не обработанных ","удаленных ")))+"документов";
    оСвойства:=глСвойстваПечатиСложные(ТабФорма,НачДата,КонДата,"оЮЛ,оМг,оК,оД,оА,оСк,оН,оПр,оТГ,оТЦ,оКс",?(оКОСтр=1,"","Код операции@оКО"),"Сортировать документы по номерам@оСортНом");
    
    Сп:=СпУстановки;
    Т.CopyByX("v1|h1",1);
    If оКмт=1 Then
      Т.CopyByX("v1|h6");
    EndIf;
    Т.CopyByX("v1|h7");
    Т.CopyByX("v1|h4");    
    Т.Options.FixedLine:=Т.Height();
    
    ТИтого:=Tab.Create("Выс");
    ТИтого.AddColumn("См",,"Number");
    ТИтого.AddColumn("СмВ",,"Number");
    For i:=1 to СпТары.Size() Do
      Код:=СпТары.Get(i).Code;
      ТИтого.AddColumn("Т"+Код,,"Number");
      ТИтого.AddColumn("Д"+Код,,"Number");
    EndDo;    
    ТИтого.NewLine();
    
    пН:=0;
    Группировка(З,ТабФорма,Т,1,1,оГруппы,УрВсего,пН,ТИтого);
    
    ТИтого.CurLine:=1;
    пСм:=глФРМ(ТИтого.См);
    Т.CopyByX("v3|h1",1);
    If оКмт=1 Then
      Т.CopyByX("v3|h6");
    EndIf;
    Т.CopyByX("v3|h7");
    Т.CopyByX("v3|h4");    
    
    If оУровни=1 Then
      Т.Levels().Close();
    EndIf;
    глПечатнаяФормаОтчета(Т,Param,оЗагол);
  Finally
    If ФлЛок Then
      Т.Unlock();
      Т.EditorMode:=1;
    EndIf;
  EndTry;
  If not ФлЛок then 
    глЭтоБыстрыйВызовОтчета(Param,1);
  endif;  
EndFunction
  

Function OnDoubleClick(Таб)
  If not глРаботаСОсобымиИконкамиТаблицы(Таб) Then
    Result:=not глФормулаПростогоСпискаВТаблице(Таб);
  EndIf;
EndFunction

Function OnExecute(СпУстановки)
  Печать(СпУстановки);
EndFunction

