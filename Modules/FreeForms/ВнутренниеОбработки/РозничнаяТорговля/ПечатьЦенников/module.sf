//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function OnExecute()
  оН:=Form.оН.Value.Get(1);
  оННЕ:=Form.оН.Value.Get(2);
  If оН.Size()=0 Then
    Box("Необходимо выбрать номенклатуру!",Q_STOP);
    Exit;
  EndIf;
  
  спМг:=Ref.рознМагазины.Load(0,"~(@ELEMENT IN Form.оМг.Value.Get(1))And((@ELEMENT NOT IN Form.оМг.Value.Get(2)))And(ЮрЛицо IN Form.оЮЛ.Value.Get(1))And((ЮрЛицо NOT IN Form.оЮЛ.Value.Get(2)))");
  If спМг.Size()=0 Then
    Box("Вы не выбрали ни одного магазина для печати ценников!",Q_STOP);
    Exit;
  EndIf;
  If _And(глПользователь.бухБухгалтер=0,_Or(спМг.Size()>1,спМг[1]<>глПользователь.Магазин)) Then
    Box("Вы можете производить печать ценников только для вашего магазина! Для печати ценников по другим магазинам обратитесь к бухгалтеру!",Q_STOP);
    Exit;
  EndIf;
  
  спСклады:=List.Create();
  For i:=1 To спМг.Size() Do
    Магазин:=спМг[i];
    If Магазин.Склад.Selected()=0 Then
      Message("Для магазина %LINK% не установлен склад!","!",спМг[i]);
      Continue;
    EndIf;
    If Магазин.ТипЦенРеализации.Selected()=0 Then
      Message("Для магазина %LINK% не выбран тип цен реализации!","!",спМг[i]);
      Continue;
    EndIf;
    Склад:=Магазин.Склад;
    ТипЦен:=Магазин.ТипЦенРеализации;
    
    ФлКомплектации:=Form.флЦенникиКомплектаций.Value;
    If ФлКомплектации Then
      ТЗ:="зКм:=Ref.рознКомплектацияНоменклатуры;
      |зН:=Ref.рознКомплектацияНоменклатуры.@Parent;
      |зСтатус:=Ref.рознКомплектацияНоменклатуры.@Parent.@Status;
      |зСтатус2:=Ref.рознКомплектацияНоменклатуры.@Status;
      |Condition(зСтатус=0);
      |Condition(зСтатус2=0);
      |Condition(зН IN оН);
      |Condition(зН NOT IN оННЕ);
      |Group зКм;";
    ElseIf Form.оСкл.Value=0 Then
      ТЗ:="зН:=Ref.тмцНоменклатура;
      |зСтатус:=Ref.тмцНоменклатура.@Status;
      |Condition(зСтатус=0);
      |Condition(зН IN оН);
      |Condition(зН NOT IN оННЕ);
      |Group зН;";
    Else
      КДата:=BegOfDay(Date());
      ТЗ:="Period From КДата to КДата;
      |зН:=Storage.ОстаткиТМЦ.Номенклатура;
      |зСк:=Storage.ОстаткиТМЦ.Склад;
      |зКО:=EndTotals(Количество);
      |Condition(зН IN оН);
      |Condition(зН NOT IN оННЕ);
      |Condition(зСк=Склад);
      |Group зН;";
    EndIf;
    З:=Query.Create();
    З.Execute(ТЗ);
    
    ТПеч:=Tab.Create("Номенклатура,Цена,Скидка,ЭлЦенник");
  
    СпНом:=List.Create();
    While З.Next(1) Do
      Form.StatusText(З.ResultTable.CurLine);
      If _And(not ФлКомплектации,Form.оСкл.Value=1) Then
        If З.зКО<=0 Then
          Continue;
        EndIf;
      EndIf;
      зН:=З.зН;
      
      Ц:=Ref.цЦены;
      If Ц.Find("@Parent,ТипЦен",зН,ТипЦен)=0 Then
        Continue;
      EndIf;
      
      пЦена:=Ц.GetValue("Цена",Date());
      //TODO: использовать скидки из акций    
      Скидка:=0;
      
      If not ФлКомплектации Then
        кЦ:=Ref.цПечатьЦенников;
        If кЦ.Find("@Parent,Магазин",зН,Магазин)=0 Then
          //Создаем
          кЦ.New();
          кЦ.Parent(зН);
          кЦ.Магазин:=Магазин;
          глЗаписать(кЦ);
        ElseIf Form.оНовые.Value=1 Then
          цДатаП:=?(isEmpty(кЦ.ДатаПечати),'01.01.1981',кЦ.ДатаПечати);
          If _And(кЦ.ОбщаяСкидка=Скидка,пЦена=Ц.GetValue("Цена",цДатаП)) Then
            Continue;
          EndIf;
        EndIf;
        ТПеч.AddLine("Номенклатура,Цена,Скидка,ЭлЦенник",зН,пЦена,Скидка,кЦ);
        СпНом.Add(зН);
      Else
        ТПеч.AddLine("Номенклатура,Цена,Скидка",З.зКм,пЦена,Скидка);
      EndIf;
    EndDo;
  
    If ТПеч.Size()=0 Then
      If Form.оНовые.Value=1 Then
        Message("Для магазина "+Магазин+" новые ценники по всем выбранным ТМЦ уже были распечатаны!","!");
      Else
        Message("Для магазина "+Магазин+" нет ни одного ценника, который можно было бы вывести на печать!","!");
      EndIf;
      Continue;
    EndIf;
    
    If not ФлКомплектации Then
      спPLU:=глПолучитьДрайверыПоУсловию("ВестиPLUКоды",1);
  
      For i2:=1 To спPLU.Size() Do
        Form.StatusText("Обновление PLU-кодов "+i2+" из "+спPLU.Size());
        спНастройки:=спPLU[i2];
        СпНом2:=List.Create();
        aEl:=спНастройки["Оборудование"];
        aTab:=aEl.LineParts("Номенклатура");
        aTab.CopyTo(СпНом2,1,aTab.Size(),"Номенклатура");
        If СпНом2.Size()=0 Then
          Message("Невозможно обновить PLU коды оборудования %LINK% магазина %LINK%, так как в оборудование не выбрана номенклатура выгрузки!","!",aEl,aEl.Parent());
          Continue;
        EndIf;
        ТЗ:="зН:=Ref.тмцНоменклатура;
        |Condition(зН IN СпНом);
        |Condition(зН IN СпНом2);
        |Group зН;";
        З:=Query.Create();
        З.Execute(ТЗ);
        
        
        ИмяМутанта:="PLU_"+Магазин.Code;аПольз:="";аМаш:="";аДата:="";
        If not DBLockStringMutex(ИмяМутанта,аПольз,аМаш,аДата) Then
          Message("Невозможно заблокировать генератор PLU-кодов для магазина, он был заблокирован пользователем "+аПольз+" ("+аМаш+") в "+аДата,"!");
          Message("Попробуйте запустить печать еще раз!","!");
          Exit;
        EndIf;
        ФлОк:=0;
        BeginTransaction();
        Try
          тМаксКод:=Ref.тмцPLUКоды.Compute("","PLUКод:MAX","Магазин",Магазин);
          МаксКод:=0;
          if тМаксКод.Size()>0 Then
            МаксКод:=тМаксКод["_MAX_PLUКод",1];
          EndIf;
          
          While З.Next(1) Do
            зН:=З.зН;
            bEl:=Ref.тмцPLUКоды;
            аМагазин:=Магазин;
            If Not bEl.FindEx(3,,"~(@Parent=зН)And(Магазин=аМагазин)") Then
              МаксКод:=МаксКод+1;
              
              bEl.New();
              bEl.Parent(зН);
              bEl.PLUКод:=МаксКод;
              bEl.Магазин:=Магазин;
              bEl.Save();
            EndIf;
          EndDo;//Цикл по номенклатуре
        Finally
          If ФлОк Then
            CommitTransaction();
          Else
            RollbackTransaction();
          EndIf;
          DBUnlockStringMutex(ИмяМутанта);
        EndTry
      EndDo; //По устройствам с PLU кодами
    EndIf;
    
    aList:=List.Create();
    aList.Add(1,"КоличествоКопий");
    aList.Add(0,"ТипПринтера");
    aList.Add(?(Form.оПринтер.Value.SelectedLine=2,1,0),"ПечататьБезВывода");
    
    //Распечатать.
    Таб:=Tab.Create("Номенклатура,ШтрихКод,Цена,Скидка");
    ТПеч.Select();
    While ТПеч.Next() Do
      Таб.AddLine("Номенклатура,ШтрихКод,Цена,Скидка",ТПеч.Номенклатура,глПолучитьШтрихкод(ТПеч.Номенклатура),ТПеч.Цена,ТПеч.Скидка);
    EndDo;
    aList.SetByName("Object",Таб);
    aList.SetByName("БезШК",0);
    aList.SetByName("Магазин",Магазин);
    If Form.оПортрет.Value=1 Then
      aList.SetByName("Ориентация",0);
    EndIf;
    
    If Form.оПринтер.Value.SelectedLine<3 Then
      LoadModule(0,"Modules\FreeForms\ПечатныеФормы\Справочник.тмцНоменклатура\Ценник",aList,0);
      ФлОтвет:=Number(aList["Ответ"]);
    Else
      ФлОтвет:=1;
    EndIf;
    
    If _And(ФлОтвет,not ФлКомплектации) Then
      Дата:=Date();
      ТПеч.Select();
      While ТПеч.Next() Do
        кЦ:=ТПеч.ЭлЦенник;
        кЦ.ДатаПечати:=Дата;
        кЦ.ОбщаяСкидка:=ТПеч.Скидка;
        If not глЗаписать(кЦ) Then
          Message("Невозможно обновить свойства печати ценника позиции %LINK%! Рекомендуется провести процедуру печати повторно...","!",ТПеч.Номенклатура);
          Exit;
        EndIf;
      EndDo;
    EndIf;
    
  EndDo;
  
EndFunction


