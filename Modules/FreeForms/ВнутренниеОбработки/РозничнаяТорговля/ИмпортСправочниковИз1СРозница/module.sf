//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.


//Вызывает исключение, если проблема
Function УстановитьЦену(зН,Магазин,ТипЦен,Цена,Дата,ByRef ФлИзмененных)
  Ц:=Ref.цЦены;
  If Ц.Find("@Parent,ТипЦен",зН,ТипЦен) Then
    If Ц.Status()=1 Then
      Ц.Mark(0);
    EndIf;
  Else
    Ц.New();
    Ц.Parent(зН);
    Ц.ТипЦен:=ТипЦен;
    Ц.Save();
    ФлИзмененных:=ФлИзмененных+1;
  EndIf;
  If Ц.GetValue("Цена",Дата)<>Цена Then
    Ц.SetValue("Цена",Цена,Дата);
    
    кЦ:=Ref.цПечатьЦенников;
    If кЦ.Find("@Parent,Магазин",зН,Магазин)=0 Then
      //Создаем
      кЦ.New();
      кЦ.Parent(зН);
      кЦ.Магазин:=Магазин;
      кЦ.ДатаПечати:=Дата;
      кЦ.ОбщаяСкидка:=0;
      кЦ.Save();
    ElseIf _Or(кЦ.ОбщаяСкидка<>0,isEmpty(кЦ.ДатаПечати),кЦ.ДатаПечати<Дата) Then
      кЦ.ДатаПечати:=Дата;
      кЦ.ОбщаяСкидка:=0;
      кЦ.Save();
    EndIf;
    ФлИзмененных:=ФлИзмененных+1;
  EndIf;
EndFunction

Function НайтиЭлемент(Спр,Знач,Род=0,ФлПапка=0,Рекв="Name")
  aEl:=DB("Ref."+Спр);
  If aEl.Find(?(Род<>0,"~(@Parent=Род)And","~")+"("+Рекв+"=Знач)"+?(Struct.Ref(Спр).HasFolders,"And(@IsFolder="+ФлПапка+")")) Then
    Exit aEl;
  EndIf;
  aEl.New(ФлПапка);
  If Род<>0 Then
    aEl.Parent(Род);
  EndIf;
  aEl.SetValue(Рекв,Знач);
  aEl.Save();
  Exit aEl;
EndFunction

Function ЗагрузитьСтроку(Стр)
  Сп:=List.Create();
  While Стр<>"" Do
    Стр2:=TearStr(Стр,Chr(1));
    Сп[TearStr(Стр2,Chr(2))]:=Trim(Стр2);
  EndDo;
  Exit Сп;
EndFunction


Function OnExecute(СпУстановки)
  If Form.оЮЛ.Value.Selected()=0 Then
    Box("Необходимо выбрать юр. лицо загрузки!",Q_STOP);
  EndIf;
  Файл:="";
  If not OpenFileDialog(Файл,"Выберите файл загрузки:","Текстовые файлы (*.txt)|*.txt",0) Then
    Exit;
  EndIf;
  Т:=Text.Create();
  Т.Load(Файл,0);
  оМагазин:=Form.оМагазин.Value;
  
  //Розничный покупатель
  зКРП:=НайтиЭлемент("кнтКонтрагенты","Покупатели",,1);
  зКР:=НайтиЭлемент("кнтКонтрагенты","Розничный покупатель");
  зКР.Folder(зКРП);
  зКР.ВидКонтрагента:=Enum.ВидыКонтрагентов.ФизЛицо;
  зКР.ДокументУдЛичность:="";
  зКР.ИНН:="";
  зКР.ПолнНаименование:="Розничный покупатель";
  зКР.ТипАктива:=0;
  зКР.ФактАдрес:="";
  зКР.ЮрАдрес:="";
  зКР.фоРозничныйПокупатель:=1;
  зКР.Save();

  зДР:=НайтиЭлемент("кнтДоговоры",Form.оЮЛ.Value,зКР,0,"ЮрЛицо");
  зДР.ЮрЛицо:=Form.оЮЛ.Value;
  зДР.Save();
  
  Message("Загрузка и создание магазинов...");
  ТМагазины:=Tab.Create("Магазин,Код");
  ФлМагазин:=0;
  For i:=1 To Т.Size() Do
    Form.StatusText("Магазины: "+i+" из "+Т.Size());
    Стр:=Т.GetLine(i);
    Стр2:=TearStr(Стр,Chr(1));
    If Стр2<>"Магазины" Then
      Continue;
    EndIf;
    Сп:=ЗагрузитьСтроку(Стр);
    If _And(ФлМагазин=0,оМагазин.Selected()<>0) Then
      ТМагазины.AddLine("Магазин,Код",оМагазин,Сп["КодМагазина"]);
      ФлМагазин:=ФлМагазин+1;
      Continue;
    EndIf;
    СтрИмя:=Сп["НаименованиеМагазина"];
    зМг:=Ref.рознМагазины;
    If зМг.Find("Name",СтрИмя)=0 Then
      //Создаем новый элемент справочника магазины
      зМг.New();
      зМг.Name:=СтрИмя;
      зМг.НазваниеМагазина:=СтрИмя;
      зМг.ДоговорРозничногоПокупателя:=зДР;
      зМг.ЮрЛицо:=Form.оЮЛ.Value;
      зМг.Save();
      
      зТЦП:=НайтиЭлемент("цТипыЦен","Цены закупок "+СтрИмя);
      зТЦП.РазрешитьИзменятьВМагазине:=зМг;
      зТЦП.Save();
      
      зТЦР:=НайтиЭлемент("цТипыЦен","Цены продаж "+СтрИмя);
      зТЦР.РазрешитьИзменятьВМагазине:=зМг;
      зТЦР.ТипЦенРасчетныхЦен:=зТЦП;
      зТЦР.Процент:=20;
      зТЦР.Save();
      
      зСк:=НайтиЭлемент("общСклады","Склад "+СтрИмя);
      зСк.ИспользоватьВАктиве:=1;
      зСк.Магазин:=зМг;
      зСк.рзТипЦенПоступления:=зТЦП;
      зСк.рзТипЦенРеализации:=зТЦР;
      зСк.флРозничныйСклад:=1;
      зСк.флУчаствуетВЕГАИС:=1;
      зСк.Save();
      
      зМг.Склад:=зСк;
      зМг.ТипЦенПоступления:=зТЦП;
      зМг.ТипЦенРеализации:=зТЦР;
      зМг.Save();
      
      ТМагазины.AddLine("зМг,Код",оМагазин,Сп["КодМагазина"]);
    EndIf;
  EndDo;

  СтавкиНДС:=List.Create();
  СтавкиНДС["20%"]:=Enum.СтавкиНДС.НДС20;
  СтавкиНДС["10%"]:=Enum.СтавкиНДС.НДС10;
  СтавкиНДС["0%"]:=Enum.СтавкиНДС.НДС0;
  СтавкиНДС["Без НДС"]:=Enum.СтавкиНДС.БезНДС;
  
  ТЗ:="зН:=Ref.тмцНоменклатура;
  |зКод:=Ref.тмцНоменклатура.ВнешнийТекстовыйКод;
  |Condition(зКод<>"""");
  |Group зН,зКод;";
  З:=Query.Create();
  ТабНоменклатура:=З.Execute(ТЗ,0);
  ТабНоменклатура.Sort("зКод+");
  
  //Штука
  ТЕдиницыИзмерения:=Tab.Create("Наименование,Элемент");
  зЕдШт:=Ref.тмцЕдиницыИзмерения;
  If not зЕдШт.Find("Name","шт") Then
    зЕдШт.New();
    зЕдШт.Name:="шт";
    зЕдШт.ПолнНаименование:="Штука";
    зЕдШт.ВнешнийКод:="796";
    зЕдШт.Save();
  EndIf;
  
  ТПартии:=Tab.Create("Справка2,Элемент");
  
  тШтрихКоды:=0;
  ТекДата:=Date();
  Message("Загрузка и создание номенклатуры и подчиненных справочников...");
  ФлИзмененных:=0;
  BeginTransaction();
  Try
    For i:=1 To Т.Size() Do
      Form.StatusText("Справочники: "+i+" из "+Т.Size());
      Стр:=Т.GetLine(i);
      Стр2:=TearStr(Стр,Chr(1));
      If ФлИзмененных>50 Then
        CommitTransaction();
        ФлИзмененных:=0;
        BeginTransaction();
      EndIf;
      If Стр2="Номенклатура" Then
        Сп:=ЗагрузитьСтроку(Стр);
        зН:=Ref.тмцНоменклатура;
        ФлНовая:=1;
        ФлПапка:=Сп["ЭтоГруппа"]="Да";
        If ТабНоменклатура.FindAndGoto(Сп["КодНоменклатуры"],,"зКод",1)>0 Then
          If ТабНоменклатура.зН.Name<>"...Синхронизация..." Then
            Continue;
          EndIf;
          зН:=ТабНоменклатура.зН;
          ФлНовая:=0;
        Else
          зН.New(ФлПапка);
        EndIf;
        //Папка
        зПапка:=Form.оКорневаяПапка.Value;
        If Сп["КодРодителя"]<>"" Then
          зПапка:=Ref.тмцНоменклатура;
          If ТабНоменклатура.FindAndGoto(Сп["КодРодителя"],,"зКод",1)=0 Then
            зПапка.New(1);
            зПапка.Name:="...Синхронизация...";
            зПапка.ВнешнийТекстовыйКод:=Сп["КодРодителя"];
            зПапка.Save();
            ФлИзмененных:=ФлИзмененных+1;
            ТабНоменклатура.AddLineSorted("зКод","зН,зКод",зПапка,Сп["КодРодителя"]);
          Else
            зПапка:=ТабНоменклатура.зН;
          EndIf;
        EndIf;
        If not IsEmpty(зПапка) Then
          зН.Folder(зПапка);
        EndIf;
        зН.Name:=Сп["НаименованиеНоменклатуры"];
        зН.ВнешнийТекстовыйКод:=Сп["КодНоменклатуры"];
        If not ФлПапка Then
          зН.рбДатаСоздания:=BegOfDay(Date())-1;
          зН.оснКоэффициент:=1;
          If Сп["ВидНоменклатуры"]="Тара" Then
            зН.ВидНоменклатуры:=Enum.ВидыНоменклатуры.Тара;
          ElseIf зН.ВидНоменклатуры.Selected()=0 Then
            зН.ВидНоменклатуры:=Enum.ВидыНоменклатуры.Товар;
          EndIf;
          зН.ОбъемЛитров:=Number(Сп["ОбъемДАЛ"])*10;
          зН.СтавкаНДС:=СтавкиНДС[Сп["СтавкаНДС"]];
          If IsEmpty(зН.СтавкаНДС) Then
            зН.СтавкаНДС:=Enum.СтавкиНДС.НДС20;
          EndIf;
          зН.ЦенаМинимальнаяПродажная:=Number(Сп["ЦенаМРЦ"]);
          If Сп["НаименованиеЕдиницыИзмерения"]="" Then
            зН.базЕдиница:=зЕдШт;
            зН.оснЕдиница:=зЕдШт;
          ElseIf ТЕдиницыИзмерения.FindAndGoto(Сп["НаименованиеЕдиницыИзмерения"],,"Наименование")>0 Then
            зН.базЕдиница:=ТЕдиницыИзмерения.Элемент;
            зН.оснЕдиница:=ТЕдиницыИзмерения.Элемент;
          Else
            зЕд:=Ref.тмцЕдиницыИзмерения;
            If not зЕд.Find("Name",Сп["НаименованиеЕдиницыИзмерения"]) Then
              зЕд.New();
              зЕд.Name:=Сп["НаименованиеЕдиницыИзмерения"];
              зЕд.ПолнНаименование:=Сп["НаименованиеЕдиницыИзмерения"];
              зЕд.Save();
              ТЕдиницыИзмерения.AddLine("Наименование,Элемент",Сп["НаименованиеЕдиницыИзмерения"],зЕд);
            EndIf;
            зН.базЕдиница:=зЕд;
            зН.оснЕдиница:=зЕд;
          EndIf;
          зН.базМассаНетто:=Number(Сп["ВесНетто"]);
          зН.сертКрепость:=Number(Сп["Крепость"]);
          зН.флАлкогольнаяПродукция:=Сп["ЭтоАлкогольнаяПродукция"]="Да";
          зН.флПодлежитПрослеживаемости:=Сп["ЭтоТабачнаяПродукция"]="Да";
          зН.флВесовойТовар:=Сп["ВесовойТовар"]="Да";
          зН.флПартионныйУчет:=зН.флАлкогольнаяПродукция+зН.флПодлежитПрослеживаемости>0;
          зН.Save();
          If зН.флПартионныйУчет Then
            зП:=Ref.тмцПартииТМЦ;
            зП.UseOrder("Code-");
            If not зП.Find("~(@Parent=зН)And(@Status<>1)") Then
              зП.New();
              зП.Parent(зН);
            EndIf;
            If зП.НомерУдостоверения="" Then
              зП.НомерУдостоверения:="Загрузка из 1С";
              зП.КСР:=BegOfDay(Date());
              зП.флМарочныйУчет:=Сп["Поштучная"]="Да";
              зП.Name:=""+зП.КСР+" ("+зП.НомерУдостоверения+")";
              ФлИзмененных:=ФлИзмененных+1;
              зП.Save();
            EndIf;
          EndIf;
        Else
          зН.Save();
        EndIf;
        If ФлНовая Then
          ТабНоменклатура.AddLineSorted("зКод","зН,зКод",зН,Сп["КодНоменклатуры"]);
        EndIf;
        ФлИзмененных:=ФлИзмененных+1;
      ElseIf Стр2="Характеристики" Then
        Сп:=ЗагрузитьСтроку(Стр);
        If ТабНоменклатура.FindAndGoto(Сп["КодВладельца"],,"зКод",1)=0 Then
          Message("Характеристики: не найдена номенклатура с кодом: "+Сп["КодВладельца"],"!");
          Continue;
        EndIf;
        зН:=ТабНоменклатура.зН;
        зЦена:=Number(Сп["НаименованиеХарактеристики"]);
        If _And(зЦена>0,зН.флПодлежитПрослеживаемости) Then
          If зН.ГИСМТТоварнаяГруппа.Name<>"Табачная продукция" Then
            зТГ:=НайтиЭлемент("рознТоварныеГруппыГИСМТ","Табачная продукция");
            If зТГ.ВнешнееНаименование<>"tobacco" Then
              зТГ.ВнешнееНаименование:="tobacco";
              зТГ.ВнешнийКод:=3;
              зТГ.Save();
              ФлИзмененных:=ФлИзмененных+1;
            EndIf;
            зН.ГИСМТТоварнаяГруппа:=зТГ;
            зН.Save();
            ФлИзмененных:=ФлИзмененных+1;
          EndIf;
          зП:=Ref.тмцПартииТМЦ;
          зП.UseOrder("Code-");
          If not зП.Find("~(@Parent=зН)And(@Status<>1)And((ЦенаМаксимальнаяПродажная=зЦена)or(ЦенаМаксимальнаяПродажная=0))") Then
            зП.New();
            зП.Parent(зН);
          EndIf;
          If зП.ЦенаМаксимальнаяПродажная=0 Then
            зП.НомерУдостоверения:="МРЦ "+FormatNumber(зЦена,,"",2)+" руб.";
            зП.ЦенаМаксимальнаяПродажная:=зЦена;
            зП.КСР:=BegOfDay(Date());
            зП.флМарочныйУчет:=1;
            зП.Name:=""+зП.КСР+" ("+зП.НомерУдостоверения+")";
            ФлИзмененных:=ФлИзмененных+1;
            зП.Save();
          EndIf;
        EndIf;
      ElseIf Стр2="Штрихкоды" Then
        Сп:=ЗагрузитьСтроку(Стр);
        If ТабНоменклатура.FindAndGoto(Сп["КодВладельца"],,"зКод",1)=0 Then
          Message("Штрихкоды: не найдена номенклатура с кодом: "+Сп["КодВладельца"],"!");
          Continue;
        EndIf;
        зН:=ТабНоменклатура.зН;
        Стр:=Сп["ТипШтрихкода"];
        Стр2:=Сп["Штрихкод"];
        If _And(Left(Стр,3)<>"EAN",Length(Стр2)<>13,Length(Стр2)<>8) Then
          Continue;
        EndIf;
        If тШтрихКоды=0 Then
          ТЗ:="(зШтрихКод:=Ref.тмцШтрихкоды.Name;
          |зКф:=Ref.тмцШтрихкоды.Коэффициент;
          |Condition((зКф=1)Or(зКф=0));
          |зНКод:=Ref.тмцШтрихкоды.@Parent..Ref.тмцНоменклатура.Code;
          |зЭл:=Ref.тмцШтрихкоды;
          |Group зНКод,зЭл,зШтрихКод;) Postprocessing (SkipVariables зКф;)";
          З:=Query.Create();
          тШтрихКоды:=З.Execute(ТЗ,0);
          MassLoadObjects(тШтрихКоды);
          тШтрихКоды.Sort("зШтрихКод");
          спБылиШтрихкоды:=List.Create();
        EndIf;
        If тШтрихКоды.FindAndGoto(Стр2,,"зШтрихКод",1) Then
          Continue;
        EndIf;
        
        //Добавляем
        зШК:=Ref.тмцШтрихкоды;
        зШК.New();
        зШК.Parent(зН);
        зШК.Name:=Стр2;
        зШК.Коэффициент:=1;
        ФлИзмененных:=ФлИзмененных+1;
        зШК.Save();
        тШтрихКоды.AddLineSorted("зШтрихКод","зНКод,зЭл,зШтрихКод",зН.Code,зШК,Стр);
      ElseIf Стр2="Цены" Then
        Сп:=ЗагрузитьСтроку(Стр);
        If ТабНоменклатура.FindAndGoto(Сп["КодНоменклатуры"],,"зКод",1)=0 Then
          Message("Цены: не найдена номенклатура с кодом: "+Сп["КодНоменклатуры"],"!");
          Continue;
        EndIf;
        зН:=ТабНоменклатура.зН;
        If ТМагазины.FindAndGoto(Сп["КодМагазина"],,"Код")=0 Then
          Continue;
        EndIf;
        зМг:=ТМагазины.Магазин;
        УстановитьЦену(зН,зМг,зМг.ТипЦенРеализации,Number(Сп["ЦенаРозничная"]),ТекДата,ФлИзмененных);
        УстановитьЦену(зН,зМг,зМг.ТипЦенПоступления,Number(Сп["ЦенаЗакупочная"]),ТекДата,ФлИзмененных);
      ElseIf Стр2="Партии" Then
        Сп:=ЗагрузитьСтроку(Стр);
        If Left(Сп["НаименованиеПартии"],3)<>"FB-" Then
          Continue;
        EndIf;
        If ТабНоменклатура.FindAndGoto(Сп["КодВладельца"],,"зКод",1)=0 Then
          Message("Партии: не найдена номенклатура с кодом: "+Сп["КодВладельца"],"!");
          Continue;
        EndIf;
        зН:=ТабНоменклатура.зН;
        If зН.флПартионныйУчет Then
          СтрКодСправок:=Сп["НаименованиеПартии"]+"###"+Сп["Справка1"];
          зП:=Ref.тмцПартииТМЦ;
          зП.UseOrder("Code-");
          If not зП.Find("~(@Parent=зН)And(@Status<>1)And((ЕГАИСКодСправок=СтрКодСправок)Or(ЕГАИСКодСправок=""""))") Then
            зП.New();
            зП.Parent(зН);
          EndIf;
          If зП.ЕГАИСКодСправок="" Then
            зП.НомерУдостоверения:="Загрузка из 1С";
            зП.ЕГАИСКодСправок:=СтрКодСправок;
            зП.ЕГАИСКодНоменклатуры:=Сп["КодЕГАИС"];
            зП.ЕГАИСКодПроизводителя:=Сп["КодПроизводителя"];
            зП.КСР:=BegOfDay(Date());
            зП.флМарочныйУчет:=Сп["Поштучная"]="Да";
            зП.Name:=""+зП.КСР+" ("+зП.НомерУдостоверения+")";
            ФлИзмененных:=ФлИзмененных+1;
            зП.Save();
          EndIf;
          ТПартии.AddLineSorted("Справка2","Справка2,Элемент",Сп["НаименованиеПартии"],зП);
        EndIf;
      ElseIf Стр2="АкцизныеМарки" Then
        Сп:=ЗагрузитьСтроку(Стр);
        If ТПартии.FindAndGoto(Сп["Партия"],,"Справка2",1)=0 Then
          Continue;
        EndIf;
        зП:=ТПартии.Элемент;
        If зП.флМарочныйУчет Then
          Стр:=Сп["АкцизнаяМарка"];
          зМарка:=Ref.тмцМаркировкаПозиций;
          If not зМарка.Find("~(@Parent=зП)And(@IsFolder=0)And(КодМарки=Стр)") Then
            зМарка.New();
            зМарка.Parent(зП);
            зМарка.КодМарки:=Стр;
            зМарка.флСостояние:=1;
            ФлИзмененных:=ФлИзмененных+1;
            зМарка.Save();
          EndIf;
        EndIf;
      
      EndIf;
    EndDo;
  Finally
    Стр:=PopError();
    SuppressException();
    If not IsEmpty(Стр) Then
      If IsTransactionActive() Then
        RollbackTransaction();
      EndIf;
      Box(Стр,Q_STOP);
    Else
      If IsTransactionActive() Then
        CommitTransaction();
      EndIf;
    EndIf;
  EndTry;
  
  //Загрузка остатков
  Message("Загрузка остатков на складе...");
  
  СпДокументы:=List.Create();
  ФлИзмененных:=0;
  BeginTransaction();
  Try
    For i:=1 To Т.Size() Do
      Form.StatusText("Остатки: "+i+" из "+Т.Size());
      Стр:=Т.GetLine(i);
      Стр2:=TearStr(Стр,Chr(1));
      If Стр2<>"Остатки" Then
        Continue;
      EndIf;
      Сп:=ЗагрузитьСтроку(Стр);
      If ТМагазины.FindAndGoto(Сп["КодМагазина"],,"Код")=0 Then
        Message("Пропущен магазин с неизвестным кодом: "+Сп["КодМагазина"],"!");
        Continue;
      EndIf;
      Магазин:=ТМагазины.Магазин;
      зДок:=СпДокументы[Сп["КодМагазина"]];
      If IsEmpty(зДок) Then
        зДок:=Doc.РегистрацияТМЦ;
        зДок.New();
        зДок.DocDate:=ТекДата;
        зДок.Автор:=глПользователь;
        зДок.ЮрЛицо:=Магазин.ЮрЛицо;
        зДок.Магазин:=Магазин;
        глУстановитьНовыйНомер(зДок);
        зДок.Склад:=Магазин.Склад;
        зДок.КодОперации:=Enum.коРегистрацияТМЦ.ОприходованиеТМЦ;
        зДок.УчитыватьВНалоговомУчете:=1;
        зДок.ТипЦен:=Магазин.ТипЦенПоступления;
        СпДокументы[Сп["КодМагазина"]]:=зДок;
      EndIf;
      aTab:=зДок.LineParts("Номенклатура");
      If ТабНоменклатура.FindAndGoto(Сп["КодНоменклатуры"],,"зКод",1)=0 Then
        Message("Остатки: не найдена номенклатура с кодом: "+Сп["КодНоменклатуры"],"!");
        Continue;
      EndIf;
      зН:=ТабНоменклатура.зН;
      зП:=Ref.тмцПартииТМЦ;
      зП.UseOrder("Code-");
      зП.Find("~(@Status=0)And(@Parent=зН)");
      aTab.AddLine("Номенклатура,Партия,СтавкаНДС,Количество,Цена",зН,зП,зН.СтавкаНДС,Number(Сп["Остаток"]),0);
      глПересчитатьСтроку(зДок,aTab,"Код@Количество2@Сумма@СуммаНДС");
    EndDo;
    
    For i:=1 To СпДокументы.Size() Do
      зДок:=СпДокументы[i];
      aTab:=зДок.LineParts("Номенклатура");
      зДок.СуммаВзаиморасчетов:=aTab.Sum("Сумма");
      If not глОбработать(зДок,1) Then
        Message("Невозможно обработать документ "+зДок+"! Остатки не загружены!","!");
      EndIf;
    EndDo;
  Finally
    Стр:=PopError();
    SuppressException();
    If not IsEmpty(Стр) Then
      If IsTransactionActive() Then
        RollbackTransaction();
      EndIf;
      Box(Стр,Q_STOP);
    Else
      If IsTransactionActive() Then
        CommitTransaction();
      EndIf;
    EndIf;
  EndTry;
  
  Message("Работа окончена!","I");  
EndFunction
  
