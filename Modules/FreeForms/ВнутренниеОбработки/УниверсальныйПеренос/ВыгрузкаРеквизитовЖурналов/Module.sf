//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
var ТабВыгружено Export;
Var ТВыгрузка Export;
Var НомерВыгрузки Export;
Var РезКаталог Export;

Function ОбновитьФорму()
  оИстория:=Form.оИстория.Value;
  Form.тДатаДна.isDisabled:=1-оИстория;
  Form.оДатаДна.isDisabled:=1-оИстория;
  Form.тДатаПериод.isDisabled:=оИстория;
  Form.оДатаПериод.isDisabled:=оИстория;
EndFunction

Function ОбновитьПризнакиФильтров()
  оЖурналы:=Form.оЖурналы.Value;
  aNum:=оЖурналы.CurLine;//Событие прерывает выгрузку, которая проходит по журналам
  оЖурналы.Select();
  While оЖурналы.Next() Do
    тФильтр:=оЖурналы.тФильтр;
    Фл:=0;
    тФильтр.Select();
    While тФильтр.Next() Do
      If тФильтр.Фильтр.Get(1).Size()+тФильтр.Фильтр.Get(2).Size()>0 Then
        Фл:=1;
        Break;
      EndIf;
    EndDo;
    оЖурналы.флФильтр:=?(Фл,"ДА","");
  EndDo;
  оЖурналы.CurLine:=aNum;
EndFunction

Function ОбновитьТаблицуРеквизитов()
  оЖурналы:=Form.оЖурналы.Value;
  ОбновитьПризнакиФильтров();
  
  оФильтр:=Form.оФильтр.Value;  
  оФильтр.ClearLines();
  Ид:="";
  тФильтр:=0;
  If оЖурналы.SelectedLine>0 Then
    Ид:=оЖурналы.Get(оЖурналы.SelectedLine,"Наименование");
    тФильтр:=оЖурналы.Get(оЖурналы.SelectedLine,"тФильтр");
  EndIf;
  
  If Ид="" Then
    Form.оФильтр.isDisabled:=1;
    Exit;
  EndIf;
  Form.оФильтр.isDisabled:=0;
  
  тФильтр.CopyTo(оФильтр,,,"Фильтр,пФильтр,Ид,зПерем,зПуть,идПуть,Сорт,Объектов");
  тФильтр.Select();
  While тФильтр.Next() Do
    оФильтр.CurLine:=тФильтр.CurLine;
    If тФильтр.ФлСвободный Then
      оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_RED,10));
    EndIf;
    If тФильтр.Check(тФильтр.CurLine,"Ид")>0 Then
      оФильтр.Check(тФильтр.CurLine,"Ид",1);
    EndIf;
  EndDo;
EndFunction


Function OnExecute()
  РезКаталог:="Exchange.txt";
  If SaveFileDialog(РезКаталог,"Выберите каталог для выгрузки:")<>1 Then
    Exit;
  EndIf;
  РезКаталог:=GetPath(РезКаталог);
  If Trim(РезКаталог)="" Then
    Box("Необходимо выбрать каталог для выгрузки!",Q_STOP);
    Exit;
  EndIf;
  РезКаталог:=AddBackSlash(РезКаталог);
  флИстория:=Form.оИстория.Value;
  If флИстория Then
    оДатаДна:=Form.оДатаДна.Value;
    If оДатаДна<='01.01.1981' Then
      оДатаДна:=Date(0);
    EndIf;
  Else
    оДатаДна:=Form.оДатаПериод.Value;
  EndIf;
  
  //@REFSV4@
  //RF:<Вид>#1<Удален>#1<Папка>#1<ВидРодитель>|<КодРодитель (полный код)>#1<КодПапки (полный код)>#1<Code>#1<Кодированный Name>#1<Реквизит1>#1<Реквизит2>...
  //<Реквизит?>:         {<Ид>@<Периодический>@<ЗначениеРек>,#2<ИмяСтрочнойЧасти>}
  //<ИмяСтрочнойЧасти>:  После каждого имени строчной части следуют атрибуты новой строки, для перехода на следующую строку #2<ИмяСтрочнойЧасти> повторяется
  //<ЗначениеРек>:       для периодических: <ЗначениеПериод1>#3<ЗначениеПериод2>#3...
  //                     для обычных: <Значение>
  //<ЗначениеПериод>:    <ДатаЗначения>@<Значение>
  //<Значение>:          <ТипАтрибута>.<ЗначениеТипа>
  //<ТипАтрибута>:       {"STRING" (кодированная),"NUMBER","DATE","ENUM" (далее следует индекс),"REF" (далее следует <ПолныйКод>),"DOC" (далее следует <ВидДок>@<НомерДок>@<ДатаДок>)}
  //<ПолныйКод>:         <Код>@{+ если папка}<ВидРодитель>|<КодРодитель>@{+ если папка}<ВидРодитель>|<КодРодительРодителя>...  
  //
  //@JORSV4@
  //JR:<ВидЖурнала>#1<0 - документ>#1<ВидДокумента>#1<Номер документа>#1<Дата документа>#1<Реквизит 1>#1<Реквизит 2>...
  //или
  //JR:<ВидЖурнала>#1<1 - справочник>#1<ВидСправочника>#1<Полный код справочника>#1<Реквизит 1>#1<Реквизит 2>...
  //<Реквизит ?>: <Ид>@<ЗначениеРек> (см. выше)
  ТВыгрузкаСпр:=Text.Create(1);
  ТВыгрузкаСпр.AddString("@REFSV4@");
  ТабВыгружено:=Tab.Create("Ид,Таб");
  ТВыгрузка:=Text.Create(1);
  ТВыгрузка.AddString("@JORSV4@");
  НомерВыгрузки:=0;
  оБезСправочников:=Form.оБезСправочников.Value;
  
  члДокВсего:=0;
  НачДата:=BegOfDay(Form.НачДата.Value);
  КонДата:=BegOfDay(Form.КонДата.Value)+1;
  оЖурналы:=Form.оЖурналы.Value;
  Form.StatusText("Создание временной таблицы журналов и применение фильтров...");
  оЖурналы.Select();
  While оЖурналы.Next() Do
    If оЖурналы.Check(оЖурналы.CurLine,"Наименование")=0 Then
      Continue;
    EndIf;
    СтрИД:=оЖурналы.Наименование;
    тФильтр:=оЖурналы.тФильтр;
    спРеквизиты:=List.Create();
    тФильтр.Select();
    While тФильтр.Next() Do
      If тФильтр.Check(тФильтр.CurLine,"Ид")>0 Then
        спРеквизиты.Add(тФильтр.Ид);
      EndIf;
    EndDo;
    If спРеквизиты.Size()=0 Then
      Continue;
    EndIf;
    
    аДокументы:=TempDB.Create("зДата:Date,зЖур:DB,зДок:DB");
    аДокументы.LoadFrom("Journal."+СтрИД,"@LINK->зДок,@ELEMENT->зЖур,DocDate->зДата","DocDate>=НачДата","DocDate<КонДата");
    //Фильтры
    СтрФильтры:="";
    тФильтр.Select();
    While тФильтр.Next() Do
      If тФильтр.Фильтр.Get(1).Size()>0 Then
        СтрФильтры:=?(СтрФильтры="","",СтрФильтры+"Or")+"(зЖур..JOR."+СтрИД+"."+тФильтр.Ид+" NOT IN тФильтр.Get("+тФильтр.CurLine+",""Фильтр"").Get(1))";
      EndIf;
      If тФильтр.Фильтр.Get(2).Size()>0 Then
        СтрФильтры:=?(СтрФильтры="","",СтрФильтры+"Or")+"(зЖур..JOR."+СтрИД+"."+тФильтр.Ид+" IN тФильтр.Get("+тФильтр.CurLine+",""Фильтр"").Get(2))";
      EndIf;
    EndDo;
    If СтрФильтры<>"" Then
      аДокументы.Remove(СтрФильтры);
    EndIf;  
    аЧл:=аДокументы.Size();
    Message("Журнал: "+СтрИД+". Во временную таблицу вошло "+аЧл+" элементов журнала!","I");
    
    аЧл2:=0;
    аДокументы.Select("зДата+");  
    While аДокументы.Next() Do
      аЧл2:=аЧл2+1;
      аДок:=аДокументы.зДок;
      аЖур:=аДокументы.зЖур;
      Form.StatusText(СтрИД+": "+аЧл2+" из "+аЧл);
      
      If DBTypeStr(аДок)="DOC" Then
        Стр:="JR:"+СтрИД+Chr(1)+"0"+Chr(1)+аДок.DBName()+Chr(1)+аДок.DocNum+Chr(1)+FormatDate(аДок.DocDate,"dd.mm.YYYY hh:tt:ss");
      Else
        Стр:="JR:"+СтрИД+Chr(1)+"1"+Chr(1)+аДок.DBName()+Chr(1)+глУниверсальнаяВыгрузкаПолучитьПолныйКод(аДок);
      EndIf;  
      For j:=1 to спРеквизиты.Size() Do
        Ид2:=спРеквизиты.Get(j);
        Стр1:=Ид2+"@";
        aEl:=аЖур.GetValue(Ид2);
        If _And(not оБезСправочников,DBTypeStr(aEl)="REF") Then
          глУниверсальнаяВыгрузкаВыгрузитьЭлементСправочника(aEl,ТабВыгружено,ТВыгрузкаСпр);
        EndIf;
        Стр1:=Стр1+глУниверсальнаяВыгрузкаВыгрузитьРеквизит(aEl);
        AppendStringToBufferedString(Стр,Chr(1)+Стр1);
      EndDo;
      ТВыгрузка.AddString(Стр);
      члДокВсего:=члДокВсего+1;
    EndDo;
    Message("  Окончание выгрузки "+СтрИД+", выгружено элементов: "+члДокВсего,"I");
  EndDo;
  
  Имя:=Trim(РезКаталог)+"Jors_0000.txt";
  If File.DoesFileExist(Имя) Then
    Raise "Файл "+Имя+" уже существует в папке результата!";
  EndIf;
  ТВыгрузка.Save(Имя,-1,1);
  
  If ТВыгрузкаСпр.Size()>1 Then
    Имя:=Trim(РезКаталог)+"Refs_"+Right("0000"+НомерВыгрузки,4)+".txt";
    If File.DoesFileExist(Имя) Then
      Raise "Файл "+Имя+" уже существует в папке результата!";
    EndIf;
    ТВыгрузкаСпр.Save(Имя,-1,1);
  EndIf;  
  
  Message("Выгрузка завершена успешно!","I");
EndFunction
