//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
var ТабВыгружено Export;
Var ТВыгрузка Export;
Var НомерВыгрузки Export;
Var РезКаталог Export;
Var аВыгруженоВсего Export;

Function ОбновитьФорму()
  оИстория:=Form.оИстория.Value;
  Form.тДатаДна.isDisabled:=1-оИстория;
  Form.оДатаДна.isDisabled:=1-оИстория;
  Form.тДатаПериод.isDisabled:=оИстория;
  Form.оДатаПериод.isDisabled:=оИстория;
EndFunction

Function ПриПодбореЭлементов(aEl,Фл)
  оЭлементы:=Form.оЭлементы.Value;
  
  If isEmpty(aEl) Then
    Exit;
  EndIf;
  а:=оЭлементы.Find(aEl);
  If а>0 Then
    Box("Элемент "+Str(aEl)+" уже был выбран!",Q_STOP);
  Else
    оЭлементы.Add(aEl);
  EndIf;  
EndFunction

Function ПолучитьСтруктуру(Вид,ВидРекв)
  If Pos("Parent",ВидРекв)=0 Then
    Exit Struct.Ref(Вид).Props(ВидРекв);
  EndIf;
  TearStr(ВидРекв,"Parent");
  аСтр:=Struct.Ref(Вид);
  While ВидРекв<>"" Do
    аСтр:=аСтр.Parents(1);
    ВидРекв:=Mid(ВидРекв,2);
  EndDo;
  Exit аСтр;
EndFunction


Function ДобавитьРодителей(Имя,Род,Ноль)
  оФильтр:=Form.оФильтр.Value;
  If isEmpty(Имя) Then
    Exit;
  EndIf;
  If Struct.Ref(Имя).Parents().Count()<>1 Then
    Exit;//TODO: Support
  EndIf;
  
  Вид:=Struct.Ref(Имя).Parents(1).Name;
  Имя:=Вид;
  Тип:="Справочник";
  Ид:=Struct.Ref(Вид).Name;
  
  оФильтр.AddLine("Фильтр,Ид,зПуть,зПерем,идПуть,Сорт",List.Create(List.Create(),List.Create()),"Родитель => "+Ид,"@Parent"+Род,"Parent"+Ноль,
      "Ref."+Вид,Ноль+"Parent"+"@"+Тип+"@"+Вид);
  
  ДобавитьРодителей(Имя,Род+".@Parent",Ноль+"0");
EndFunction

Function локПослеВыгрузкиЭлемента()
  аВыгруженоВсего:=аВыгруженоВсего+1;
  
  If ТВыгрузка.Size()>100000 Then
    ТВыгрузка.Save(Trim(РезКаталог)+"Refs_"+Right("0000"+НомерВыгрузки,4)+".txt",-1,1);
    НомерВыгрузки:=НомерВыгрузки+1;
    ТВыгрузка:=Text.Create(1);
    ТВыгрузка.AddString("@REFSV4@");
  EndIf;  
EndFunction

Function ОбновитьТаблицуРеквизитов()
  оТип:=Trim(Form.оТип.Value);
  If оТип="" Then
    Form.оЭл.isDisabled:=1;
    Form.тЭлементы.isDisabled:=1;
    Form.оФильтр.isDisabled:=1;
    Exit;
  EndIf;
  Form.оЭл.isDisabled:=0;
  Form.тЭлементы.isDisabled:=0;
  Form.оФильтр.isDisabled:=0;
  
  оФильтр:=Form.оФильтр.Value;
  оФильтр.ClearLines();
  Имя:=оТип;
  Ноль:="0";
  Род:="";
  If Struct.Ref(Имя).Parents().Count()>0 Then
    ДобавитьРодителей(Имя,Род,Ноль);
  EndIf;
  
  For i:=1 To Struct.Ref(оТип).Props.Count() Do
    Ид:=Struct.Ref(оТип).Props(i).Name;
    Вид:=Struct.Ref(оТип).Props(i).DataType;
    Тип:=Вид;
    Тип:=TearStr(Тип,".");
    оФильтр.AddLine("Фильтр,пФильтр,Ид,зПерем,зПуть,идПуть,Сорт",List.Create(List.Create(),List.Create()),"",Ид,Ид,Ид,Вид,Тип+"@"+Ид);
  EndDo;
  оФильтр.Sort("Сорт+");
  
  //Справочники -- без цвета
  //Перечисления -- красные
  //Строки -- зеленые
  //Числа -- синие
  //Даты -- желтые
  оФильтр.Select();
  While оФильтр.Next() Do
    Стр:=оФильтр.идПуть;
    Тип:=TearStr(Стр,".");
    If Тип="ENUM" Then
      оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_RED,10));
    ElseIf Тип="NUMBER" Then
      оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_BLUE,10));
    ElseIf Тип="STRING" Then
      оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_GREEN,10));
    ElseIf Тип="DATE" Then
      оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_YELLOW,10));
    EndIf;
  EndDo;
EndFunction

Function OnExecute()
  РезКаталог:="Exchange.txt";
  If SaveFileDialog(РезКаталог,"Выберите каталог для выгрузки:")<>1 Then
    Exit;
  EndIf;
  РезКаталог:=GetPath(РезКаталог);
  If Trim(РезКаталог)="" Then
    Box("Необходимо выбрать каталог для выгрузки!",Q_STOP);
    Exit;
  EndIf;
  РезКаталог:=AddBackSlash(РезКаталог);
  
  //@REFSV4@
  //RF:<Вид>#1<Удален>#1<Папка>#1<ВидРодитель>|<КодРодитель (полный код)>#1<КодПапки (полный код)>#1<Code>#1<Кодированный Name>#1<Реквизит1>#1<Реквизит2>...
  //<Реквизит?>:         {<Ид>@<Периодический>@<ЗначениеРек>,#2<ИмяСтрочнойЧасти>}
  //<ИмяСтрочнойЧасти>:  После каждого имени строчной части следуют атрибуты новой строки, для перехода на следующую строку #2<ИмяСтрочнойЧасти> повторяется
  //<ЗначениеРек>:       для периодических: <ЗначениеПериод1>#3<ЗначениеПериод2>#3...
  //                     для обычных: <Значение>
  //<ЗначениеПериод>:    <ДатаЗначения>@<Значение>
  //<Значение>:          <ТипАтрибута>.<ЗначениеТипа>
  //<ТипАтрибута>:       {"STRING" (строка кодированная),"NUMBER","DATE","ENUM" (далее следует индекс),"REF" (далее следует <ПолныйКод>),"DOC" (далее следует <ВидДок>@<НомерДок>@<ДатаДок>)}
  //<ПолныйКод>:         <Код>@{+ если папка}<ВидРодитель>|<КодРодитель>@{+ если папка}<ВидРодитель>|<КодРодительРодителя>...  
  оСпособВыгрузки:=Form.оСпособВыгрузки;
  ТабВыгружено:=Tab.Create("Ид,Таб");
  ТВыгрузка:=Text.Create(1);
  ТВыгрузка.AddString("@REFSV4@");
  НомерВыгрузки:=0;
  аВыгруженоВсего:=0;
  
  аТип:=оСпособВыгрузки.Pages.SelectedPage;
  If аТип=1 Then
    Message("Выгрузка будет произведена по фильтру из закладки ""один справочник""","I");
    Вид:=Form.оТип.Value;
    If IsEmpty(Вид) Then
      Message("Выгружаемый справочник не выбран!","!");
      Exit;
    EndIf;
    оЭл:=Form.оЭл.Value;
    оСЭ:=Form.оСЭ.Value.SelectedLine;
    оТЭ:=Form.оТЭ.Value.SelectedLine;
    оДатаЧт:=Form.оДатаЧт.Value;
    оФильтр:=Form.оФильтр.Value;
    ФлЕстьПапки:=DB("Ref."+Вид).Struct.HasFolders;
  
    ТЗ:=?(оСЭ>1,"зСтатус:=Ref."+Вид+".@Status;Condition(зСтатус<>"+?(оСЭ=2,"1","0")+");","")+
      "зЭл:=Ref."+Вид+";Condition(зЭл IN оЭл.Get(1));Condition(зЭл NOT IN оЭл.Get(2));"+
      ?((ФлЕстьПапки)And(оТЭ>1),"зПапка:=Ref."+Вид+".@isFolder;Condition(зПапка="+?(оТЭ=2,"0","1")+");");
      
    оФильтр.Select();
    While оФильтр.Next() Do
      If (оФильтр.Фильтр.Get(1).Size()=0)And(оФильтр.Фильтр.Get(2).Size()=0) Then
        Continue;
      EndIf;
      Тип0:=оФильтр.идПуть;
      ВидТипа:=оФильтр.идПуть;
      Тип:=TearStr(ВидТипа,".");
      
      зПер:="зПерем_"+оФильтр.зПерем;
      ФлПер:=ПолучитьСтруктуру(Вид,оФильтр.зПерем).Periodical;
      ТЗ:=ТЗ+зПер+":=Ref."+Вид+"."+оФильтр.зПуть+?(ФлПер,"('"+оДатаЧт+"')")+";"+_NEWLINE;
      If оФильтр.Фильтр.Get(1).Size()>0 Then
        ТЗ:=ТЗ+"Condition("+зПер+" IN оФильтр.Get("+оФильтр.CurLine+",""Фильтр"").Get(1));"+_NEWLINE;
      EndIf;
      If оФильтр.Фильтр.Get(2).Size()>0 Then
        ТЗ:=ТЗ+"Condition("+зПер+" NOT IN оФильтр.Get("+оФильтр.CurLine+",""Фильтр"").Get(2));"+_NEWLINE;
      EndIf;
    EndDo;
    ТЗ:=ТЗ+"Group зЭл;"+_NEWLINE;    
        
    З:=Query.Create();
    З.Execute(ТЗ,2);
    
    While З.Next(1) Do
      Form.StatusText("Выгрузка "+З.ResultTable.CurLine+" из "+З.ResultTable.Size());
      глУниверсальнаяВыгрузкаВыгрузитьЭлементСправочника(З.зЭл.Copy(),ТабВыгружено,ТВыгрузка);
    EndDo;
  ElseIf аТип=2 Then
    Message("Выгрузка будет произведена по фильтру из закладки ""выбор с помощью фильтра""","I");
    оЭлементы:=Form.оЭлементы.Value;
    For i:=1 To оЭлементы.Size() Do
      Form.StatusText("Выгрузка "+i+" из "+оЭлементы.Size());
      глУниверсальнаяВыгрузкаВыгрузитьЭлементСправочника(оЭлементы.Get(i).Copy(),ТабВыгружено,ТВыгрузка);
    EndDo;
  ElseIf аТип=4 Then
    Message("Выгрузка будет произведена с помощью сценария","I");
    Стр:=Trim(Form.аСценарий.Value);
    If Стр="" Then
      Box("Сценарий не был задан!",Q_STOP);
      Exit;
    EndIf;
    Модуль:=0;
    Try
      Модуль:=Compile(Стр,0,"СпОперация",Стр);
    Except
      Box("Сценарий вызывает ошибку при компиляции "+Left(PopError(),200)+"!",Q_STOP);
      Exit;
    EndTry;
    
    СпОперация:=List.Create();
    While 1 Do
      СпОперация["Результат"]:=0;
      СпОперация["Элемент"]:=0;
      Try
        Exec(Модуль);
      Except
        Стр:=PopError();
        Box("Сценарий вызвал ошибку "+Left(Стр,200)+"! Выгрузка остановлена!",Q_STOP);
        Exit;
      EndTry;
      If СпОперация["Результат"]=0 Then
        Break;
      EndIf;
      глУниверсальнаяВыгрузкаВыгрузитьЭлементСправочника(СпОперация["Элемент"],ТабВыгружено,ТВыгрузка);
    EndDo;
  ElseIf аТип=3 Then
    Message("Выгрузка будет произведена по фильтру из закладки ""список справочников""","I");
    оСправочники:=Form.оСправочники.Value;
    оСправочники.Select();
    While оСправочники.Next() Do
      If оСправочники.Check(оСправочники.CurLine,"Ид") Then
        Вид:=оСправочники.Ид;
        Form.StatusText("Выгрузка: "+Вид);
        aEl:=DB("Ref."+Вид);
        aList:=оСправочники.Фильтр;
        if _And(not isEmpty(aList),aList.Get(1).Size()+aList.Get(2).Size()>0) Then
          aEl.Select("->@ELEMENT,!->@ELEMENT",aList.Get(1),aList.Get(2));
        Else
          aEl.Select();
        EndIf;  
        аНом:=0;
        While aEl.Next() Do
          аНом:=аНом+1;
          If аНом%100=0 Then
            Form.StatusText("Выгрузка: "+Вид+" ("+аНом+")");
          EndIf;
          глУниверсальнаяВыгрузкаВыгрузитьЭлементСправочника(aEl,ТабВыгружено,ТВыгрузка);
        EndDo;
      EndIf;
    EndDo;
  EndIf;

  If ТВыгрузка.Size()>1 Then
    ТВыгрузка.Save(Trim(РезКаталог)+"Refs_"+Right("0000"+НомерВыгрузки,4)+".txt",-1,1);
  EndIf;
  
  Message("Выгрузка завершена успешно! Было выгружено: "+аВыгруженоВсего+" элементов!","I");
EndFunction
