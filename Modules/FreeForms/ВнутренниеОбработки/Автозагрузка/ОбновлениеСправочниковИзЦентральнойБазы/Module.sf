//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
var ТолькоБазы Export;


Function СоздатьЗапросНаСпр(ИмяРеф,Рекурсия,спЭл,флПапки=1)
  аЭл:=DB("Ref."+ИмяРеф);
  If флПапки Then
    //Добавляем элементы, не являющиеся папками
    Фл:=0;
    bList:=List.Create();
    For i=1 To спЭл.Size() Do
      aEl:=спЭл.Get(i);
      If _And(not isEmpty(aEl),not aEl.isFolder()) Then
        bList.Add(aEl);
      Else
        Фл:=1;
      EndIf;
    EndDo;
    aList:=List.Create();
    If Фл Then
      aList:=аЭл.Load(0,"->@Folder",спЭл);
    EndIf;  
    bList.CopyTo(aList);
  Else
    aList:=аЭл.Load(0,"->@Parent",спЭл);
  EndIf;
  If aList.Size()=0 Then
    Exit;
  EndIf;
  
  //Создание запросов
  вЭл:=Ref.рбСопоставленныеЭлементы;
  bList:=вЭл.Load(0,"=Элемент,флЗапретОбновленияРеквизитов",aList,0);
  If bList.Size()=0 Then
    Exit;
  EndIf;
  
  вЭл2:=Ref.рбНесинхронизированныеЭлементы;
  For i:=1 To bList.Size() Do
    If i%10=0 Then
      Form.StatusText("Ресинхронизация, запрос ("+ИмяРеф+"): "+i+"/"+bList.Size());
    EndIf;
  
    Эл:=bList.Get(i).Copy();
    КлИБ:=Trim(Эл.ПрефиксУдаленнойБазы);
    If ТолькоБазы<>"" Then
      If Pos(","+КлИБ+",",ТолькоБазы)=0 Then
        Continue;
      EndIf;
    EndIf;
    //ПрефиксУдБазы # ВидСправочника # КодУдБазы
    Инд:=КлИБ+"#"+ИмяРеф+"#"+Trim(Эл.КодУдаленнойБазы);
    If вЭл2.Find("Индекс",Инд) Then
      Continue;
    EndIf;
    элКонт:=глНайтиКонтейнерСопоставления(КлИБ,ИмяРеф);
    If элКонт=0 Then
      Exit;
    EndIf;
    вЭл2.New();
    вЭл2.Folder(элКонт);
    вЭл2.ПрефиксУдаленнойБазы:=КлИБ;
    вЭл2.КодУдаленнойБазы:=Trim(Эл.КодУдаленнойБазы);
    вЭл2.ВидСправочника:=ИмяРеф;
    вЭл2.Флаг:=6;
    вЭл2.Индекс:=Trim(Эл.Индекс);
    глЗаписать(вЭл2);
  EndDo;  
  
  If (Рекурсия)And(Struct.Ref(ИмяРеф).Children.Count()>0) Then
    For i:=1 To Struct.Ref(ИмяРеф).Children.Count() Do
      СоздатьЗапросНаСпр(Struct.Ref(ИмяРеф).Children(i).Name,Рекурсия,aList,0);
    EndDo;
  EndIf;
EndFunction

//Тип: "N[XXXX,XXXX][:<База1>,<База2>...]" -- номенклатура (N -- с подчиненными справочниками, n -- только справочник номенклатуры)
//     "C[XXXX,XXXX][:<База1>,<База2>...]" -- контрагенты (C -- с подчиненными справочниками, c -- только справочник контрагентов)
//     XXXX -- коды папок
Function Выполнить(Тип)
  ТолькоБазы:="";
  СпрТип:="тмцНоменклатура";
  If Pos(Left(Тип,1),"cCсС")>0 Then
    СпрТип:="кнтКонтрагенты";
  EndIf;
  ФлПодчиненные:=Left(Тип,1)=Uppercase(Left(Тип,1));
  Тип:=Mid(Тип,2);
  ТолькоБазы:=Тип;
  Тип:=TearStr(ТолькоБазы,":");
  If ТолькоБазы<>"" Then
    ТолькоБазы:=","+ТолькоБазы+",";
  EndIf;
  If Тип<>"" Then
    aList:=List.Create();
    While Тип<>"" Do
      Стр:=TearStr(Тип,",");
      If Стр="" Then
        Continue;
      EndIf;
      аЭл:=глНайтиПоКоду(СпрТип,Стр);
      If isEmpty(аЭл) Then
        Message("Элемент справочника "+СпрТип+" с кодом "+Стр+" не найден!","!");
        Continue;
      EndIf;
      aList.Add(аЭл);
    EndDo;
  Else
    аЭл:=DB("Ref."+СпрТип);
    aList:=аЭл.Load(0,"@isFolder,флОбновлятьИзПериферийныхБаз",1,1);
  EndIf;
  If aList.Size()=0 Then
    Message("Процедура обновления справочников в ЦБ не нашла ни одной папки для обновления!","I");
  EndIf;
  СоздатьЗапросНаСпр(СпрТип,ФлПодчиненные,aList);
EndFunction


Function OnOpen()
  Result:=0;
  If isEmpty(Param) Then
    Exit;
  EndIf;
  
  Выполнить(Param);
EndFunction



