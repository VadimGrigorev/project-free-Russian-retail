//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.


Function ПриПодбореЭлементов(aEl,Фл)
  оЭлементы:=Form.оЭлементы.Value;
  
  If isEmpty(aEl) Then
    Exit;
  EndIf;
  а:=оЭлементы.Find(aEl);
  If а>0 Then
    Box("Элемент "+Str(aEl)+" уже был выбран!",Q_STOP);
  Else
    оЭлементы.Add(aEl);
  EndIf;  
EndFunction


Function кУпростить(Код)
  If Length(Код)<3 Then
    Exit Код;
  EndIf;
  Смв:=Left(Код,1);
  If Смв="0" Then
    Exit Str(Number(Код));
  EndIf;
  If Смв<="9" Then
    Exit Код;
  EndIf;
  If Mid(Код,2,1)<>"0" Then
    Exit Код;
  EndIf;
  Exit Смв+Str(Number(Mid(Код,2)));
EndFunction

Function ПолучитьПолныйКод(Эл,СпрВид=0)
  If Эл.Selected()=0 Then
    Exit "";
  EndIf;
  Вид:=Эл.DBName();
//Исключения//Исключения//Исключения//Исключения//Исключения
  If Вид="бухПланСчетов" Then
    Exit ?(СпрВид=1,Вид+"/","")+?(Эл.IsFolder()=0,"","+")+Эл.Code;
  EndIf;
//Исключения//Исключения//Исключения//Исключения//Исключения
  If Struct.Ref(Вид).Parents.Count()=0 Then
    Exit ?(СпрВид=1,Вид+"/","")+?(Эл.IsFolder()=0,"","+")+кУпростить(Эл.Code);
  EndIf;
  Exit ?(СпрВид=1,Вид+"/","")+?(Эл.IsFolder()=0,"","+")+кУпростить(Эл.Code)+"@"+ПолучитьПолныйКод(Эл.Parent());
EndFunction

Function Выгрузить()
  оЭлементы:=Form.оЭлементы.Value;
  If оЭлементы.Size()=0 Then
    Box("Выберите по крайней мере один элемент для выгрузки!",Q_STOP);
    Exit;
  EndIf;
  
  РезКаталог:="";
  If not SelectFolderDialog(РезКаталог,"Выберите каталог для выгрузки:") Then
    Exit;
  EndIf;
  Путь:=AddBackSlash(РезКаталог);
  Файл:=Путь+"УстанениеДублирующихсяСопоставлений.txt";
  аН:=0;
  Т:=Text.Create();
  Т.AddString(Trim(DBVar.ПрефиксИБ));
  For i:=1 To оЭлементы.Size() Do
    аЭл:=оЭлементы.Get(i);
    If _And(not isEmpty(аЭл),аЭл.Selected()<>0) Then
      Т.AddString(Trim(аЭл.DBName())+"@"+ПолучитьПолныйКод(аЭл));
      аН:=аН+1;
    EndIf;
  EndDo;
  Т.Save(Файл);
  Box("Выгружено "+аН+" элементов!",Q_INFORMATION);
EndFunction


Function Загрузить()
  Файл:="";
  If not OpenFileDialog(Файл,"Выберите файл загрузки:","УстанениеДублирующихсяСопоставлений.txt|УстанениеДублирующихсяСопоставлений.txt",0,".txt") Then
    Exit;
  EndIf;
  Т:=Text.Create();
  Т.Load(Файл);
  аЭл:=Ref.рбСопоставленныеЭлементы;
  спЗ:=List.Create();
  пПр:=Trim(Т.GetLine(1));
  аНум:=0;
  For i:=2 To Т.Size() Do
    аКод:=Т.GetLine(i);
    аТип:=TearStr(аКод);
    Индекс:=пПр+"#"+аТип+"#"+аКод;
    If not аЭл.Find("Индекс",Trim(Индекс)) Then
      Continue;
    EndIf;
    аЛокЭл:=аЭл.Элемент;
    З:=спЗ.GetByName(аТип);
    If IsEmpty(З) Then
      ТЗ:="зЭл:=Ref.рбСопоставленныеЭлементы;
      |зПр:=Ref.рбСопоставленныеЭлементы.ПрефиксУдаленнойБазы;
      |Condition(зПр=пПр);
      |зЛокЭл:=Ref.рбСопоставленныеЭлементы.Элемент;
      |зВид:=Ref.рбСопоставленныеЭлементы.ВидСправочника;
      |Condition(зВид=аТип);
      |Group зВид,зЛокЭл,зЭл;";
      З:=Query.Create();
      З.Execute(ТЗ,2);
      спЗ.SetByName(аТип,З);
    EndIf;
    З.First();
    If З.ResultTable.LocateAndGoto("зВид,зЛокЭл",аТип,аЛокЭл)=0 Then
      Continue;
    EndIf;
    З.LinearLevelPos:=3;    
    Фл:=0;
    Фл2:=0;
    While З.Next(3) Do
      Фл:=Фл+1;
      If Trim(З.зЭл.КодУдаленнойБазы)=аКод Then
        аЭл:=З.зЭл;
        Фл2:=1;
      EndIf;
    EndDo;
    If (Фл<2)Or(Фл2=0) Then
      Continue;
    EndIf;
    If аЭл.флЗапретОбновленияРеквизитов=1 Then
      Continue;
    EndIf;
    Message(""+аТип+":"+аКод);
    аЭл:=аЭл.Copy();
    аЭл.флЗапретОбновленияРеквизитов=1;
    аЭл.Save();
    
    аНум:=аНум+1;
  EndDo;

  спЗ:=0;
  Message(""+аНум+" элементов было помечено, как запрещенные к обновлению!");
EndFunction


Function OnExecute()
  аТип:=Form.оТипОбработки.Value.SelectedLine;
  If аТип=2 Then
    Выгрузить();
    Exit;
  ElseIf аТип=3 Then
    Загрузить();
    Exit;
  EndIf;
  
  аБаза:=Form.оБаза.Value;
  оЭлементы:=Form.оЭлементы.Value;
  оТип:=Form.оТип.Value;
  
  If аБаза.Selected()=0 Then
    Box("Выберите периферийную базу, для которой будет создан запрос!",Q_STOP);
    Exit;
  EndIf;
  пПр:=Trim(аБаза.ПрефиксБазы);
  If пПр="" Then
    Box("Выбранная периферийная база не имеет префикса!",Q_STOP);
    Exit;
  EndIf;
  
  ФлТип:=not isEmpty(оТип);
  ТЗ:="зЭл:=Ref.рбСопоставленныеЭлементы;
  |зПр:=Ref.рбСопоставленныеЭлементы.ПрефиксУдаленнойБазы;
  |Condition(зПр=пПр);
  |зЛокЭл:=Ref.рбСопоставленныеЭлементы.Элемент;
  |зВид:=Ref.рбСопоставленныеЭлементы.ВидСправочника;"+
  ?(ФлТип,"Condition(зВид=оТип);","")+
  "Group зВид,зЛокЭл,зЭл;";
  
  оЗагол:="Отчет по дублирующимся сопоставлениям";
  оСвойства:=глСвойстваПечатиПростые();
  
  З:=Query.Create();
  З.Execute(ТЗ,2);
  Т:=Table.Create();
  Т.CopyByX("v1");
  While З.Next(1) Do
    Фл:=0;
    
    While З.Next(2) Do
      зЦл:=0;
      While З.Next(3) Do
        зЦл:=зЦл+1;
      EndDo;
      If зЦл<2 Then
        Continue;
      EndIf;
      
      If Фл=0 Then
        пЭл:=З.зВид;
        пЭлР:=GetNothing();
        пКод:="";
        пФл:="";
        Т.CopyByX("v2",1);
        глРаскраситьСтроку(Т,1,3,1,3,2,4);
        Фл:=1;
      EndIf;
      
      пКод:=З.зЛокЭл.Code;
      пЭл:=З.зЛокЭл;
      пЭлР:=пЭл;
      пФл:="";
      Т.CopyByX("v2",1);
      глРаскраситьСтроку(Т,1,3,2,3,2,4);
      While З.Next(3) Do
        пКод:=З.зЭл.КодУдаленнойБазы;
        пЭл:=З.зЭл.Name;
        пЭлР:=З.зЭл;
        пФл:=З.зЭл.флЗапретОбновленияРеквизитов;
        Т.CopyByX("v2",1);
        глРаскраситьСтроку(Т,1,3,3,3,2,4);
      EndDo;
    EndDo;
  EndDo;
  
  Т.CopyByX("v3",1);
  глПечатнаяФормаОтчета(Т,Param,оЗагол);
EndFunction

