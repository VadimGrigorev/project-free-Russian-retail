//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var ПапкаЗагрузки Export;
Var Шаблон Export;
Var ОчиститьПапкуПослеЗагрузки Export;
Var ПропускатьОшибочныеДокументы Export;
Var Уст Export;
Var табРезультат Export;
Var спФайлыВыгрузки Export;
Var флБылиОшибки Export;
Var лнИмяФайла Export,лнТипОбновления Export, СтолбцыТаблицыЗагрузки Export, лнИмяДок Export, лнКОДок Export, лнКонвертироватьИзUTF8 Export, лнКорректироватьСтруктуруXML Export, лнПересчет Export;
Var ТЗаголовокФайла Export, ТЗаголовок Export, ТСтрока Export, ТЗавершение Export, ТЗавершениеФайла Export;
Var спКол Export;
Var флПропуститьДокумент Export;

//Переменные, для доступа из шаблонов
Var aVars Export, aLines Export, aLine Export;

Function ПолучитьНастройку(Путь,Умолч="",Ошибка="")
  Result:=Уст.GetData(Путь,Умолч);
  If _And(Result=Умолч,Ошибка<>"") Then
    Message("Для данного типа загрузки "+Ошибка+" ("+Путь+"), обратитесь к администратору!","!");
  EndIf;
EndFunction

Function лВычислитьВыражение(СтрИсходник)
  If pos("!!!",СтрИсходник)=0 Then
    Exit СтрИсходник;
  EndIf;
  СтрРез:="";
  While pos("!!!",СтрИсходник)>0 Do
    СтрРез:=СтрРез+TearStr(СтрИсходник,"!!!");
    Стр2:=TearStr(СтрИсходник,"!!!");
    Try
      СтрРез:=СтрРез+Eval(Стр2);
    Except
      Message(PopError(),"!");
      Message("Ошибка при вычислении выражения """+Стр2+"""!","!");
    EndTry;
  EndDo;
  СтрРез:=СтрРез+СтрИсходник;
  Exit СтрРез;
EndFunction


Function ЗаполнитьДокВиды(флРеинит=0)
  оДокВиды:=Form.оДокВиды.Value;
  
  флСтрока:="";
  If (оДокВиды.SelectedLine>0)And(оДокВиды.Size()>0) Then
    флСтрока:=оДокВиды.Get(оДокВиды.SelectedLine);
  EndIf;
  Form.оТаб.isDisabled:=1;
  Form.пТипДокументов.isDisabled:=1;
  Form.оДокВиды.isDisabled:=1;
  оДокВиды.Clear();
  
  //Заполняем оДокВиды
  Tx:=Text.Create();
  Tx.Load(Шаблон,0);
  i:=1;
  While i<=Tx.Size() Do
    Стр:=Tx.GetLine(i);
    If (Left(Стр,1)=";")Or(Стр="") Then
      i:=i+1;
      Continue;
    EndIf;
    
    If Left(Стр,1)="[" Then
      //Ищем строку ИмяФайла
      i:=i+1;
      лнИмяСекции:=Стр;
      лнИмяФайла:="";
      лнОписание:="";
      While i<=Tx.Size() Do
        Стр:=Tx.GetLine(i);
        If (Left(Стр,1)=";")Or(Стр="") Then
          i:=i+1;
          Continue;
        EndIf;
        СтрЗнач:=Стр;
        СтрПер:=UpperCase(TearStr(СтрЗнач,"="""));
        If Right(СтрЗнач,1)="""" Then
          СтрЗнач:=Mid(СтрЗнач,1,Length(СтрЗнач)-1);
        EndIf;
        If СтрПер="ИМЯФАЙЛА" Then
          лнИмяФайла:=СтрЗнач;
        ElseIf СтрПер="ОПИСАНИЕ" Then
          лнОписание:=СтрЗнач;
        ElseIf Left(Стр,1)="[" Then
          Break;
        ElseIf СтрПер="НАЧАЛОЗАГОЛОВКАФАЙЛА" Then
          Break;
        EndIf;
        i:=i+1;
      EndDo;
      
      If (лнИмяФайла="")Or(лнОписание="") Then
        Continue;
      EndIf;
      
      оДокВиды.Add(лнИмяСекции,лнОписание);
      If оДокВиды.SelectedLine=0 Then
        оДокВиды.SelectedLine:=1;
      EndIf;  
    EndIf;
    i:=i+1;
  EndDo;
  
  If оДокВиды.Size()>0 Then
    If (флРеинит=1)And(флСтрока<>"") Then
      аСтр:=оДокВиды.Find(флСтрока);
      If аСтр>0 Then
        оДокВиды.SelectedLine:=аСтр;
      EndIf;
    EndIf;
    
    Form.оТаб.isDisabled:=0;
    Form.пТипДокументов.isDisabled:=0;
    Form.оДокВиды.isDisabled:=0;
  EndIf;
EndFunction


Function СоздатьРабочуюТаблицуЗагрузки(ByRef Index,Tx,стрНач,стрКон)
  //Начало<Раздел>="<Позиция>"
  //...
  //@TEMPLATE@
  //...<Текст и переменные, переменные включаются в знаки %%<имя>%%>
  //@TEMPLATE@
  //...<Кусок кода для исполнения>
  //@TEMPLATE@
  //...<Текст и переменные, переменные включаются в знаки %%<имя>%%>
  //@TEMPLATE@
  //...
  //Конец<Раздел>="<Позиция>"

  Сп:=List.Create();
  //Переменные и таблицы списка:
  //1. НачалоСекции
  //2. КонецСекции
  //3. ТаблицаЗагрузки
  
  ТаблицаЗагрузки:=Tab.Create("Тип,Шаблон,Переменные,Код");
  //Тип: 0 -- шаблон, 1 -- кусок кода
  //Шаблон: со знаками Chr(1), вместо переменных
  //Переменные: разделены знаками Chr(1)
  
  Сп.SetByName("ТаблицаЗагрузки",ТаблицаЗагрузки);
  
  флШаблонТаб:=0;//0 -- нет строки, 1 -- строка шаблона, 2 -- строка кода
  флНачало:=0;
  флШаблон:=0;
  While Index<=Tx.Size() Do
    Стр:=Tx.GetLine(Index);
    If (Left(Стр,1)=";")Or(Стр="") Then
      Index:=Index+1;
      Continue;
    EndIf;
    СтрЗнач:=Trim(Стр);
    СтрЗначВ:=Uppercase(СтрЗнач);
    If Pos(стрКон+"=",СтрЗначВ)=1 Then
      If not флНачало Then
        Message("Ошибка в файле шаблона: "+стрКон+" без "+стрНач,"!");
        Exit 0;
      EndIf;
      
      СтрПер:=TearStr(СтрЗнач,"=""");
      If Right(СтрЗнач,1)="""" Then
        СтрЗнач:=Mid(СтрЗнач,1,Length(СтрЗнач)-1);
      EndIf;
      Сп.SetByName("КонецСекции",СтрЗнач);
      Index:=Index+1;
      Break;
    ElseIf Pos(стрНач+"=",СтрЗначВ)=1 Then
      флНачало:=1;
      СтрПер:=TearStr(СтрЗнач,"=""");
      If Right(СтрЗнач,1)="""" Then
        СтрЗнач:=Mid(СтрЗнач,1,Length(СтрЗнач)-1);
      EndIf;
      Сп.SetByName("НачалоСекции",СтрЗнач);
      Index:=Index+1;
      Continue;
    ElseIf (Pos("=""",СтрЗначВ)>0)And(флНачало=0) Then
      Break;
    EndIf;
    If not флНачало Then
      Index:=Index+1;
      Continue;
    EndIf;
    If СтрЗначВ="@TEMPLATE@" Then
      флШаблон:=1-флШаблон;
      Index:=Index+1;
      Continue;
    EndIf;
    
    If флШаблон Then
      If флШаблонТаб<>1 Then
        ТаблицаЗагрузки.AddLine("Тип,Шаблон,Переменные",0,"","");
        флШаблонТаб:=1;
      EndIf;
      
      стрПер:="";
      стрРез:="";
      While Pos("%%",СтрЗнач)>0 Do
        стрРез:=стрРез+TearStr(СтрЗнач,"%%")+Chr(1);
        стрПер:=стрПер+?(стрПер="","",Chr(1))+TearStr(СтрЗнач,"%%");
      EndDo;
      стрРез:=стрРез+СтрЗнач;
      ТаблицаЗагрузки.Шаблон:=""+?(ТаблицаЗагрузки.Шаблон<>"",ТаблицаЗагрузки.Шаблон+_NEWLINE)+стрРез;
      ТаблицаЗагрузки.Переменные:=""+?(ТаблицаЗагрузки.Переменные<>"",ТаблицаЗагрузки.Переменные+_NEWLINE)+стрПер;
    ElseIf not флШаблон Then
      СтрЗнач:=Стр;
      If флШаблонТаб<>2 Then
        ТаблицаЗагрузки.AddLine("Тип,Код",1,"");
        флШаблонТаб:=2;
      EndIf;
      ТаблицаЗагрузки.Код:=""+?(ТаблицаЗагрузки.Код<>"",ТаблицаЗагрузки.Код+_NEWLINE)+СтрЗнач;
    EndIf;
    Index:=Index+1;
  EndDo;
  
  Exit Сп;
EndFunction

Function ЕслиПодходитПодМаску(ByRef Index,тФайл,СтрМаска,ByRef СтрТек0,IndexMax=0)
  СтрТек:=СтрТек0;
  If Pos("|",СтрМаска)=0 Then
    If Pos(СтрМаска,СтрТек)=1 Then
      TearStr(СтрТек,СтрМаска);
      СтрТек0:=СтрТек;
      Exit 1;
    EndIf;
  EndIf;
  Index0:=Index;
  Стр:=tearStr(СтрМаска,"|");
  i:=Pos(Стр,СтрТек);
  If i=0 Then
    Exit 0;
  EndIf;
  TearStr(СтрТек,Стр);
  While 0=0 Do
    Стр:=tearStr(СтрМаска,"|");
    If Стр="" Then
      СтрТек0:=СтрТек;
      Exit 1;
    EndIf;
    If Pos(Стр,СтрТек)>0 Then
      TearStr(СтрТек,Стр);
      Continue;
    EndIf;
    While (Index<тФайл.Size())And((Index<IndexMax)Or(IndexMax=0)) Do
      Index:=Index+1;
      СтрТек:=Trim(тФайл.GetLine(Index));
      If Pos(Стр,СтрТек)>0 Then
        TearStr(СтрТек,Стр);
        Continue 2;
      EndIf;
    EndDo;
    Index:=Index0;
    Exit 0;
  EndDo;
EndFunction

Function РасшифроватьНачалоСекции(СтрШаблон)
  СтрРез:="";
  While Pos("|",СтрШаблон)>0 Do
    Стр:=TearStr(СтрШаблон,"|");
    СтрРез:=СтрРез+?(СтрРез<>"","|")+лВычислитьВыражение(Стр);
  EndDo;
  СтрРез:=СтрРез+?(СтрРез<>"","|")+лВычислитьВыражение(СтрШаблон);
  Exit СтрРез;
EndFunction

Function УдалитьМаскуИзСтроки(ByRef Стр,СтрМаска)
  If Pos("|",СтрМаска)=0 Then
    TearStr(Стр,СтрМаска);
    Exit;
  EndIf;
  Repeat
    Стр2:=TearStr(СтрМаска,"|");
    If pos(Стр2,Стр)>0 Then
      TearStr(Стр,Стр2);
    EndIf;
  Until СтрМаска="";
EndFunction;


//0 -- сл такой же регион, 1 -- новый регион, -1 -- ошибка загрузки, -2 -- ошибка загрузки, не прерывать до окончания, 2 -- окончание таблицы
Function ЗагрузитьРегион(ByRef Index,тФайл,ТЗагрузки,ТДо=0,ByRef спРез=0,ТипРегиона,ФлМультиСекция)
  If TypeStr(спРез)<>"LIST" Then
    спРез:=List.Create();
  EndIf;
  If IsEmpty(ТЗагрузки.GetByName("НачалоСекции")) Then
    //Возможно, необходимо исполнить выражения?
    тЗаг:=ТЗагрузки.GetByName("ТаблицаЗагрузки");
    If _And(not isEmpty(тЗаг),тЗаг.Size()=1) Then
      тЗаг.CurLine:=1;
      If тЗаг.Тип=1 Then
        //Исполняем выражение
        Try
          If тЗаг.Код<>"" Then
            Exec(тЗаг.Код);
          EndIf;  
        Except
          ТипОшибки:=PeekError(1);
          ТипОшибки:=Trim(TearStr(ТипОшибки," at "));
          ТипОшибки:=Number(Mid(ТипОшибки,2));
          If ТипОшибки=41 Then  //Пользовательская ошибка
            Message(PopError(4),"!");
          ElseIf ТипОшибки=88 Then  //Прервано пользователем
            Message(PopError(4),"!");
            Raise PopError(4);
          Else
            Message(PopError(),"!");
            Message("(2) Регион "+ТипРегиона+". Ошибка возникла при вычислении выражения:");
            Message(тЗаг.Код);
          EndIf;
          Exit -1;
        EndTry;
      EndIf;
    EndIf;
  
    Exit ?(Index>тФайл.Size(),2,1);
  EndIf;
  If ТДо<>0 Then
    If IsEmpty(ТДо.GetByName("НачалоСекции")) Then
      ТДо:=0;
    EndIf;
  EndIf;
  
  ТекНачалоСекции:=РасшифроватьНачалоСекции(ТЗагрузки.GetByName("НачалоСекции"));
  ТекКонецСекции:=РасшифроватьНачалоСекции(ТЗагрузки.GetByName("КонецСекции"));
  СледНачалоСекции:="";
  If ТДо<>0 Then
    СледНачалоСекции:=РасшифроватьНачалоСекции(ТДо.GetByName("НачалоСекции"));
  EndIf;
  
  //Находим границу секции
  Index2:=Index;
  While Index2<=тФайл.Size() Do
    Стр:=Trim(тФайл.GetLine(Index2));
    If not ЕслиПодходитПодМаску(Index2,тФайл,ТекНачалоСекции,(Стр)) Then //NOTE: (Стр), чтобы Стр не изменилось
      If СледНачалоСекции<>"" Then
        If ЕслиПодходитПодМаску(Index2,тФайл,СледНачалоСекции,(Стр)) Then //NOTE: (Стр), чтобы Стр не изменилось
          Break;
        EndIf;
      EndIf;
      Index2:=Index2+1;
      Continue;
    EndIf;
    If ТекКонецСекции="" Then
      Break;
    EndIf;
    
    While Index2<=тФайл.Size() Do
      Стр:=Trim(тФайл.GetLine(Index2));
      If ЕслиПодходитПодМаску(Index2,тФайл,ТекКонецСекции,(Стр)) Then //NOTE: (Стр), чтобы Стр не изменилось
        Break 2;
      EndIf;
      If СледНачалоСекции<>"" Then
        If ЕслиПодходитПодМаску(Index2,тФайл,СледНачалоСекции,(Стр)) Then //NOTE: (Стр), чтобы Стр не изменилось
          Break 2;
        EndIf;
      EndIf;
      Index2:=Index2+1;
    EndDo;
  EndDo;  
  
  ФлРезультат:=1;
  While Index<=тФайл.Size() Do
    Стр:=Trim(тФайл.GetLine(Index));
    
    If not ЕслиПодходитПодМаску(Index,тФайл,ТекНачалоСекции,(Стр),Index2) Then //NOTE: (Стр), чтобы Стр не изменилось
      If СледНачалоСекции<>"" Then
        If ЕслиПодходитПодМаску(Index,тФайл,СледНачалоСекции,(Стр),Index2) Then //NOTE: (Стр), чтобы Стр не изменилось
          If ФлРезультат<0 Then
            Message("(1) Не найдена маска. Регион "+ТипРегиона+".");
          EndIf;  
          Exit ФлРезультат;
        EndIf;
      EndIf;
      Index:=Index+1;
      Continue;
    EndIf;
    Index0:=Index;
    
    тЗаг:=ТЗагрузки.GetByName("ТаблицаЗагрузки");
    ИндексЗагрузки:=0;
    While ИндексЗагрузки<тЗаг.Size() Do
      ИндексЗагрузки:=ИндексЗагрузки+1;
      тЗаг.CurLine:=ИндексЗагрузки;
      If тЗаг.Тип=0 Then
        //Ищем последовательно появление строк шаблона
        
        СтрШаблон:=тЗаг.Шаблон;
        стрМаска2:=TearStr(СтрШаблон,_NEWLINE);
        стрМаска1:=лВычислитьВыражение(TearStr(стрМаска2,Chr(1)));
        
        СтрПеременные:=тЗаг.Переменные;
        стрПеременная2:=TearStr(СтрПеременные,_NEWLINE);
        стрПеременная1:=TearStr(стрПеременная2,Chr(1));

        While Index<=тФайл.Size() Do
          Стр:=Trim(тФайл.GetLine(Index));
          If ЕслиПодходитПодМаску(Index,тФайл,ТекКонецСекции,(Стр),Index2) Then //NOTE: (Стр), чтобы Стр не изменилось
            Break;
          EndIf;
          If not ЕслиПодходитПодМаску(Index,тФайл,стрМаска1,Стр,Index2) Then
            //Pos(стрМаска1,Стр)=0 Then
            Index:=Index+1;
            Continue;
          EndIf;
          
          //УдалитьМаскуИзСтроки(Стр,СтрМаска1);
          //TearStr(Стр,СтрМаска1);
          Repeat
            стрМаска1:=лВычислитьВыражение(TearStr(стрМаска2,Chr(1)));
            If стрМаска1<>"" Then
              If pos("|",стрМаска1)=0 Then
                СтрЗнач:=TearStr(Стр,стрМаска1);
              Else
                Index2:=Index;
                i:=0;
                While 0=0 Do
                  i:=i+1;
                  Стр2:=TearStr(стрМаска1,"|");
                  While (pos(Стр2,Стр)=0)And(Index<тФайл.Size()) Do
                    Index:=Index+1;
                    Стр:=Trim(тФайл.GetLine(Index));
                  EndDo;
                  If pos(Стр2,Стр)=0 Then
                    Message("Ошибка при поиске куска шаблона "+Replace(тЗаг.Шаблон,Chr(1),"*")+"! Обратитесь к администратору!","!");
                    Index:=Index2;
                    Break 2;
                  EndIf;
                  If i=1 Then
                    СтрЗнач:=TearStr(Стр,Стр2);
                  Else
                    TearStr(Стр,Стр2);
                  EndIf;  
                  If стрМаска1="" Then
                    Break;
                  EndIf;
                EndDo;  
              EndIf;  
            Else
              СтрЗнач:=Стр;
              Стр:="";
            EndIf;
            СтрЗнач:=DecodeXMLString(СтрЗнач);
            спРез.SetByName(стрПеременная1,СтрЗнач);
            стрПеременная1:=TearStr(стрПеременная2,Chr(1));
          Until (Стр="")or(стрМаска2="")or(стрПеременная1="");
          
          If СтрШаблон="" Then
            Break;
          EndIf;
          стрМаска2:=TearStr(СтрШаблон,_NEWLINE);
          стрМаска1:=TearStr(стрМаска2,Chr(1));
          стрПеременная2:=TearStr(СтрПеременные,_NEWLINE);
          стрПеременная1:=TearStr(стрПеременная2,Chr(1));
        EndDo;
      ElseIf тЗаг.Тип=1 Then
        //Исполняем выражение
        Try
          If тЗаг.Код<>"" Then
            Exec(тЗаг.Код);
          EndIf;  
        Except
          ТипОшибки:=PeekError(1);
          ТипОшибки:=Trim(TearStr(ТипОшибки," at "));
          ТипОшибки:=Number(Mid(ТипОшибки,2));
          If ТипОшибки=41 Then  //Пользовательская ошибка
            Message(PopError(4),"!");
          ElseIf ТипОшибки=88 Then  //Прервано пользователем
            Message(PopError(4),"!");
            Raise PopError(4);
          Else
            Message(PopError(),"!");
            Message("(3) Регион "+ТипРегиона+". Ошибка возникла при вычислении выражения:");
            Message(тЗаг.Код);
          EndIf;        
          Exit -1;
        EndTry;
      EndIf;
    EndDo;

    If ТекКонецСекции="" Then
      Break;
    EndIf;
    
    //Ожидаем КонецСекции
    While Index<=тФайл.Size() Do
      Стр:=Trim(тФайл.GetLine(Index));
      If ЕслиПодходитПодМаску(Index,тФайл,ТекКонецСекции,Стр,Index2) Then
        Break;
      EndIf;
      Index:=Index+1;
    EndDo;
    
    If (Index>тФайл.Size())And(ТекКонецСекции<>"") Then
      If ?(ФлРезультат=1,2,Max(ФлРезультат,-1))<0 Then
        Message("(2) Внутренняя ошибка поиска. Регион "+ТипРегиона+".");
      EndIf;  
      Exit ?(ФлРезультат=1,2,Max(ФлРезультат,-1));
    EndIf;
    
    If ТДо=0 Then
      If ?(ФлРезультат=1,0,ФлРезультат)<0 Then
        Message("(3) Внутренняя ошибка поиска начала региона. Регион "+ТипРегиона+".");
      EndIf;  
      If ФлМультиСекция=0 Then
        Exit ФлРезультат;
      Else
        Exit ?(ФлРезультат=1,0,ФлРезультат);
      EndIf;  
    EndIf;
    //Новая секция или другой регион?
    
    If (ФлМультиСекция=0)And(СледНачалоСекции="") Then
      If ФлРезультат<0 Then
        Message("(6) Внутренняя ошибка поиска. Регион "+ТипРегиона+".");
      EndIf;  
      Exit ФлРезультат;
    EndIf;
    Index2:=Index;
    While Index2<=тФайл.Size() Do
      Стр:=Trim(тФайл.GetLine(Index2));
      If _And(СледНачалоСекции<>"",ЕслиПодходитПодМаску(Index,тФайл,СледНачалоСекции,(Стр))) Then  //NOTE: (Стр), чтобы Стр не изменилось
        If ФлРезультат<0 Then
          Message("(4) Внутренняя ошибка поиска маски. Регион "+ТипРегиона+".");
        EndIf;  
        Exit ФлРезультат;
      ElseIf ЕслиПодходитПодМаску(Index,тФайл,ТекНачалоСекции,(Стр)) Then //NOTE: (Стр), чтобы Стр не изменилось
        If ФлРезультат<0 Then
          Message("(5) Внутренняя ошибка поиска маски. Регион "+ТипРегиона+".");
        EndIf;  
        Exit ?(ФлРезультат=1,0,ФлРезультат);
      EndIf;
      Index2:=Index2+1;
    EndDo;
    
    If ?(ФлРезультат=1,2,Max(ФлРезультат,-1))<0 Then
      Message("(6) Внутренняя ошибка поиска. Регион "+ТипРегиона+".");
    EndIf;  
    Exit ?(ФлРезультат=1,2,Max(ФлРезультат,-1));
  EndDo;
  
  If ?(ФлРезультат=1,2,Max(ФлРезультат,-1))<0 Then
    Message("(7) Внутренняя ошибка поиска. Регион "+ТипРегиона+".");
  EndIf;  
  Exit ?(ФлРезультат=1,2,Max(ФлРезультат,-1));
EndFunction


Function ЗагрузитьФайл(ByRef ИмяФайла)
  тФайл:=Text.Create();
  тФайл.Load(ИмяФайла,-1);
  If лнКорректироватьСтруктуруXML=1 Then
    Стр:=тФайл.ToString();
    Стр:=ReformatXML(Стр);
    //ИмяВып:="Modules\FreeForms\ВнутренниеОбработки\УниверсальнаяВыгрузкаЗагрузка\XMLTagCorrector.exe";
    //SysExec(Trim(ИмяВып)+" """+ИмяФайла+""" """+ИмяФайла+"""",1);
    тФайл:=Text.Create();
    тФайл.AddString(Стр);
  EndIf;
        
  If лнКонвертироватьИзUTF8=1 Then
    тФайл.TranslateFrom(65001);
  EndIf;    
  Index:=1;
  aVars:=List.Create();
  Фл:=ЗагрузитьРегион(Index,тФайл,ТЗаголовокФайла,0,aVars,"ЗаголовокФайла",0);
  bVars:=aVars;
  If (Фл<0)Or(Фл=2) Then
    Exit 0;
  EndIf;
  
  While Index<=тФайл.Size() Do
    aLines:=Tab.Create("aVars");
    aVars:=bVars.Copy();
    
    спНовДок:=List.Create();
    спНовДок.SetByName("Строки",aLines);  
  
    флПропуститьДокумент:=0;
    Фл:=ЗагрузитьРегион(Index,тФайл,ТЗаголовок,ТСтрока,aVars,"Заголовок",0);
    If (Фл<0)Or(Фл=0) Then
      флПропуститьДокумент:=1;
      Message("(1) Ошибка при загрузке заголовка документа в файле "+ИмяФайла+"!","!");
      If not ПропускатьОшибочныеДокументы Then
        Exit 0;
      EndIf;
    ElseIf Фл=2 Then
      Break;
    EndIf;
    
    ФлОшибка:=0;
    Сумма0:=0;
    Фл:=0;
    While Фл=0 Do
      aLine:=List.Create();
      Фл:=ЗагрузитьРегион(Index,тФайл,ТСтрока,ТЗавершение,aLine,"Строка",1);
      If Фл=-1 Then
        флПропуститьДокумент:=1;
        Message("(2) Ошибка при загрузке строки документа в файле "+ИмяФайла+"!","!");
        If not ПропускатьОшибочныеДокументы Then
          Exit 0;
        EndIf;
      ElseIf Фл=-2 Then
        ФлОшибка:=1;
        Фл:=0;
      ElseIf Фл=2 Then
        Break;
      EndIf;
      If aLine.Size()>0 Then
        aLines.AddLine("aVars",aLine);
        Сумма0:=Сумма0+Number(aLine.GetByName("Сумма"));
      EndIf;
    EndDo;
    If ФлОшибка Then
      флПропуститьДокумент:=1;
      Message("(4) Ошибка при загрузке строки документа в файле "+ИмяФайла+"!","!");
      If not ПропускатьОшибочныеДокументы Then
        Exit 0;
      EndIf;
    EndIf;
    
    aVars.SetByName("СуммаВзаиморасчетов",Сумма0);
    If Фл=2 Then
      спНовДок.SetByName("Шапка",aVars);
      табРезультат.Add(спНовДок);
      Break;
    EndIf;
    Фл:=ЗагрузитьРегион(Index,тФайл,ТЗавершение,ТЗаголовок,aVars,"Завершение",0);
    If Фл=-1 Then
      флПропуститьДокумент:=1;
      Message("(3) Ошибка при загрузке завершения документа в файле "+ИмяФайла+"!","!");
      If not ПропускатьОшибочныеДокументы Then
        Exit 0;
      EndIf;
    EndIf;
    
    спНовДок.SetByName("Шапка",aVars);
    If флПропуститьДокумент=0 Then
      табРезультат.Add(спНовДок);
    EndIf;  
    
    If Фл=2 Then
      Break;
    ElseIf Фл=1 Then
      Continue;
    EndIf;
  EndDo;
  
  If Фл<>2 Then
    Фл:=ЗагрузитьРегион(Index,тФайл,ТЗавершениеФайла,0,aVars,"ЗавершениеФайла",0);
    If Фл=-1 Then
      Message("(4) Ошибка при загрузке завершения файла в файле "+ИмяФайла+"!","!");
      If not ПропускатьОшибочныеДокументы Then
        Exit 0;
      EndIf;
    EndIf;
  EndIf;
  
  Exit 1;
EndFunction


Function ЗагрузитьСекцию(ByRef Index,Tx)
  лнИмяФайла:="";
  лнТипОбновления:=1;
  СтолбцыТаблицыЗагрузки:="";
  лнИмяДок:="";
  лнКОДок:="";
  лнКонвертироватьИзUTF8:=0;
  лнКорректироватьСтруктуруXML:=0;
  флБылиОшибки:=0;
  
  While Index<=Tx.Size() Do
    Стр:=Tx.GetLine(Index);
    If (Left(Стр,1)=";")Or(Стр="") Then
      Index:=Index+1;
      Continue;
    EndIf;
    СтрЗнач:=Стр;
    СтрПер:=UpperCase(TearStr(СтрЗнач,"="""));
    If Right(СтрЗнач,1)="""" Then
      СтрЗнач:=Mid(СтрЗнач,1,Length(СтрЗнач)-1);
    EndIf;
    If СтрПер="ИМЯФАЙЛА" Then
      лнИмяФайла:=СтрЗнач;
    ElseIf СтрПер="СПОСОБОБНОВЛЕНИЯДОКУМЕНТОВ" Then
      лнТипОбновления:=Number(СтрЗнач);
    ElseIf СтрПер="СТОЛБЦЫТАБЛИЦЫЗАГРУЗКИ" Then
      СтолбцыТаблицыЗагрузки:=СтрЗнач;
    ElseIf СтрПер="КОДОПЕРАЦИИ" Then
      лнКОДок:=СтрЗнач;
    ElseIf СтрПер="ТИПДОКУМЕНТОВ" Then
      лнИмяДок:=СтрЗнач;
    ElseIf СтрПер="ШАБЛОНПЕРЕСЧЕТАСТРОКИ" Then
      лнПересчет:=СтрЗнач;
    ElseIf СтрПер="КОНВЕРТИРОВАТЬИЗUTF8" Then
      лнКонвертироватьИзUTF8:=Number(СтрЗнач);
    ElseIf СтрПер="КОРРЕКТИРОВАТЬСТРУКТУРУXML" Then
      лнКорректироватьСтруктуруXML:=Number(СтрЗнач);
    ElseIf (Pos("НАЧАЛОЗАГОЛОВКАФАЙЛА",СтрПер)=1)Or(Pos("НАЧАЛОЗАГОЛОВКА",СтрПер)=1) Then
      Break;
    EndIf;
    Index:=Index+1;
  EndDo;
  
  ТЗаголовокФайла:=СоздатьРабочуюТаблицуЗагрузки(Index,Tx,"НАЧАЛОЗАГОЛОВКАФАЙЛА","КОНЕЦЗАГОЛОВКАФАЙЛА");
  If ТЗаголовокФайла=0 Then
    Exit 0;
  EndIf;
  ТЗаголовок:=СоздатьРабочуюТаблицуЗагрузки(Index,Tx,"НАЧАЛОЗАГОЛОВКА","КОНЕЦЗАГОЛОВКА");
  If ТЗаголовок=0 Then
    Exit 0;
  EndIf;
  ТСтрока:=СоздатьРабочуюТаблицуЗагрузки(Index,Tx,"НАЧАЛОСТРОКИ","КОНЕЦСТРОКИ");
  If ТСтрока=0 Then
    Exit 0;
  EndIf;
  ТЗавершение:=СоздатьРабочуюТаблицуЗагрузки(Index,Tx,"НАЧАЛОЗАВЕРШЕНИЯ","КОНЕЦЗАВЕРШЕНИЯ");
  If ТЗавершение=0 Then
    Exit 0;
  EndIf;
  ТЗавершениеФайла:=СоздатьРабочуюТаблицуЗагрузки(Index,Tx,"НАЧАЛОЗАВЕРШЕНИЯФАЙЛА","КОНЕЦЗАВЕРШЕНИЯФАЙЛА");
  If ТЗавершениеФайла=0 Then
    Exit 0;
  EndIf;

  флСтрок:=табРезультат.Size();
  Ф:=File.Create();
  Ф.FindOpen(ПапкаЗагрузки+лнИмяФайла);
  While Ф.FindNextFile()<>"" Do
    спФайлыВыгрузки.Add(ПапкаЗагрузки+Ф.FileName);
  EndDo;
  For i:=1 To спФайлыВыгрузки.Size() Do
    Form.StatusText("Загрузка: "+i+" из "+спФайлыВыгрузки.Size());
    Form.UpdateProgress(i,спФайлыВыгрузки.Size());
  
    Файл:=спФайлыВыгрузки.Get(i);
    If ЗагрузитьФайл(Файл) Then
      спФайлыВыгрузки.Set(i,Файл);
    Else
      флБылиОшибки:=1;
    EndIf;
  EndDo;
  
  //Удаляем уже имеющиеся документы
  аСтр:=флСтрок+1;
  While аСтр<=табРезультат.Size() Do
    спДок:=табРезультат.Get(аСтр);
    спЗагол:=спДок.GetByName("Шапка");
    спЗагол.SetByName("Вид",лнИмяДок);
    спЗагол.SetByName("ДокументИлиВид","НОВЫЙ: "+лнИмяДок);
    оКО:=0;
    If лнКОДок<>"" Then
      If IsEmpty(Struct.Doc(лнИмяДок).Props("КодОперации")) Then
        Message("Ошибка при выгрузке документов! У документов типа "+лнИмяДок+" нет реквизита КодОперации!","!");
        Exit 0;
      EndIf;
      If isEmpty(Struct.Enum("ко"+лнИмяДок).Values(лнКОДок)) Then
        Message("Ошибка при выгрузке документов! Перечисление КодОперации документа "+лнИмяДок+" не содержит кода "+лнКОДок+"!","!");
        Exit 0;
      EndIf;
      оКО:=Enum.Get("ко"+лнИмяДок+"."+лнКОДок);
      спЗагол.SetByName("КодОперации",оКО);
      спЗагол.SetByName("ДокументИлиВид","НОВЫЙ: "+оКО);
    EndIf;
    If лнТипОбновления=3 Then
      аСтр:=аСтр+1;
      Continue;
    EndIf;
    аДок:=DB("Doc."+лнИмяДок);
    
    //Ищем, был ли уже загружен по УникальныйИдентификатор
    DocDate:=Date(спЗагол.GetByName("DocDate"));
    DocDate:=?((isEmpty(DocDate))or(BegOfDay(DocDate)=BegOfDay(CurDate())),CurDate(),DocDate);
    спЗагол.SetByName("DocDate",DocDate);
    
    Фл:=0;
    УникальныйИдентификатор:="";
    If (Trim(спЗагол.GetByName("DocNum"))<>"")And(Trim(спЗагол.GetByName("DocDate"))<>"") Then
      УникальныйИдентификатор:=Trim(спЗагол.GetByName("DocNum"));
      DocDate:=Date(спЗагол.GetByName("DocDate"));
      Фл:=аДок.Find("DocNum,КодОперации,>DocDate,<DocDate",УникальныйИдентификатор,оКО,DocDate-60,DocDate+30);
    ElseIf not isEmpty(Struct.Doc(лнИмяДок).Props("УникальныйИдентификатор")) Then
      УникальныйИдентификатор:=Trim(спЗагол.GetByName("УникальныйИдентификатор"));
      If УникальныйИдентификатор<>"" Then
        If оКО<>0 Then
          Фл:=аДок.Find("УникальныйИдентификатор,КодОперации,>DocDate,<DocDate",УникальныйИдентификатор,оКО,DocDate-60,DocDate+30);
        Else
          Фл:=аДок.Find("УникальныйИдентификатор,>DocDate,<DocDate",УникальныйИдентификатор,DocDate-60,DocDate+30);
        EndIf;
      EndIf;
    EndIf;
    
    If Фл Then
      спЗагол.SetByName("Документ",аДок);
      спЗагол.SetByName("ДокументИлиВид",аДок);
      If лнТипОбновления=4 Then
        If Trim(спЗагол.GetByName("СписокОбновляемыхРеквизитов"))="" Then
          Message("Не задан список обновляемых реквизитов для документа с кодом или номером "+УникальныйИдентификатор+", файл загрузки будет пропущен!","I");
          табРезультат.Remove(аСтр);
          Continue;
        EndIf;
      ElseIf лнТипОбновления=0 Then
        Message("Документ "+аДок+" с кодом или номером """+УникальныйИдентификатор+""" уже был загружен, поэтому будет пропущен!","I");
        табРезультат.Remove(аСтр);
        Continue;
      ElseIf (лнТипОбновления=1)And((аДок.Status()>1)Or(аДок.Status()=1)) Then
        Message("Документ "+аДок+" с кодом или номером """+УникальныйИдентификатор+""" уже был загружен и обработан (или удален), поэтому будет пропущен!","I");
        табРезультат.Remove(аСтр);
        Continue;
      EndIf;
    ElseIf лнТипОбновления=4 Then
      Message("Не найден документ с кодом или номером """+УникальныйИдентификатор+""", файл загрузки будет пропущен!","I");
      табРезультат.Remove(аСтр);
      Continue;
    EndIf;
    
    аСтр:=аСтр+1;
  EndDo;
  
  If флБылиОшибки Then
    Message("Были обнаружены ошибки при загрузке файлов! Пожалуйста, исправьте ошибки и попробуйте произвести загрузку снова!","!");
  ElseIf табРезультат.Size()=0 Then
    Message("Все документы, присутствующие в файле загрузки, уже были загружены в систему ранее! Удалите файл загрузки вручную!","!");
  EndIf;
  
  Exit 1;
EndFunction

Function ОбновитьТекущуюСтрокуТаблицы(оТаб,спЗагол,аДок)
  For i2:=1 To спКол.Size() Do
    Стр:=спКол.Get(i2);
    Стр2:=Uppercase(Стр);
    СтрРез:=спЗагол.GetByName(Стр);
    If _And(isEmpty(СтрРез),not isEmpty(аДок)) Then
      If Not IsEmpty(Struct.Doc(аДок.DBName()).Props(Стр)) Then
        СтрРез:=аДок.GetValue(Стр);
      EndIf;
    EndIf;
    If Pos(","+Стр2+",",",СУММА,ЦЕНА,СУММАВЗАИМОРАСЧЕТОВ,")>0 Then
      оТаб.Set(оТаб.CurLine,Стр,FormatNumber(СтрРез,1,"",2));
    Else
      оТаб.Set(оТаб.CurLine,Стр,СтрРез);
    EndIf;  
  EndDo;
EndFunction


Function Обновить()
  оДокВиды:=Form.оДокВиды.Value;
  оТаб:=Form.оТаб.Value;
  
  If (ПапкаЗагрузки="?")or(ПапкаЗагрузки="") Then
    If not SelectFolderDialog(ПапкаЗагрузки,"Выберите каталог для загрузки:") Then
      ПапкаЗагрузки:="";
      Exit;
    EndIf;
    ПапкаЗагрузки:=AddBackSlash(ПапкаЗагрузки);
    If not File.DoesPathExist(ПапкаЗагрузки) Then
      ПапкаЗагрузки:="";
      Message("Каталог загрузки не существует!","!");
      Exit;
    EndIf;
  EndIf;
  
  спФайлыВыгрузки:=List.Create();
  
  Form.bPanelProceed.isDisabled:=1;
  If not File.DoesFileExist(Шаблон) Then
    Message("Не найден файл шаблона "+Шаблон,"!");
    Exit;
  EndIf;
  ТекСтр:=оДокВиды.Get(оДокВиды.SelectedLine);
  
  СтолбцыТаблицыЗагрузки:="";
  табРезультат:=List.Create();
  Tx:=Text.Create();
  Tx.Load(Шаблон,0);
  i:=1;
  While i<=Tx.Size() Do
    Стр:=Tx.GetLine(i);
    If (Left(Стр,1)=";")Or(Стр="") Then
      i:=i+1;
      Continue;
    EndIf;
    
    If Left(Стр,1)="[" Then
      If Стр=ТекСтр Then
        If not ЗагрузитьСекцию(i,Tx) Then
          оТаб.Clear();
          Exit;
        EndIf;
        Break;
      EndIf;
    EndIf;
    i:=i+1;
  EndDo;
  
  //Загрузка в таблицу полученных документов
  оТаб.Clear();
  спКол:=List.Create();
  Стр:=?(СтолбцыТаблицыЗагрузки="","Дата:10:DocDate:130,Номер:15:DocNum,Тип:20:ДокументИлиВид,Склад:25,Сумма:15:СуммаВзаиморасчетов:1,Комментарий:30",СтолбцыТаблицыЗагрузки);  
  While Стр<>"" Do
    Стр2:=TearStr(Стр,",");
    Стр3:=TearStr(Стр2,":");
    Шир:=Number(TearStr(Стр2,":"));
    Шир:=?(Шир=0,20,Шир);
    Поз:=Стр2;
    Стр2:=TearStr(Поз,":");
    Поз:=?(Поз="",0,Number(Поз));
    Макс:=0;
    If Поз=1 Then
      Макс:=150;//Цифры
    ElseIf Поз>10 Then
      Макс:=Поз;//Дата?
      Поз:=0;
    EndIf;
    Стр2:=?(Стр2="",Стр3,Стр2);
    спКол.Add(Стр2);
    оТаб.AddColumn(Стр2,Стр3,,Шир,Поз);
    If Макс>0 Then
      оТаб.Column(Стр2).MaxWidth:=Макс;
    EndIf;  
  EndDo;
  
  оТаб.Lock();
  Try
    For i:=1 To табРезультат.Size() Do
      спДок:=табРезультат.Get(i);
      спЗагол:=спДок.GetByName("Шапка");
      аДок:=спЗагол.GetByName("Документ");
      оТаб.NewLine();
      ОбновитьТекущуюСтрокуТаблицы(оТаб,спЗагол,аДок);
    EndDo;
  Finally
    оТаб.Unlock();
  EndTry;  
  
  Form.bPanelProceed.isDisabled:=(оТаб.Size()=0);
EndFunction


Function ЗаполнитьНастройки()
  оТипы:=Form.оТипы.Value;
  Form.bPanelProceed.isDisabled:=1;
  Form.пТипДокументов.isDisabled:=1;
  Form.оДокВиды.isDisabled:=1;
  Form.оТаб.Value.Clear();
  If оТипы.SelectedLine=0 Then
    Exit;
  EndIf;
  Путь:=оТипы.Get(оТипы.SelectedLine);
  
  ПапкаЗагрузки:=ПолучитьНастройку(Путь+"\ПапкаЗагрузки","","");
  If (ПапкаЗагрузки<>"?")And(ПапкаЗагрузки<>"") Then
    ПапкаЗагрузки:=AddBackSlash(ПапкаЗагрузки);
    If not File.DoesPathExist(ПапкаЗагрузки) Then
      Message("Папка загрузки "+ПапкаЗагрузки+" не существует!","!");
      Exit;
    EndIf;
  EndIf;
  
  Шаблон:=ПолучитьНастройку(Путь+"\Шаблон","","не выбран файл шаблона");
  ОчиститьПапкуПослеЗагрузки:=Number(ПолучитьНастройку(Путь+"\ОчиститьПапкуПослеЗагрузки","1"));
  ПропускатьОшибочныеДокументы:=Number(ПолучитьНастройку(Путь+"\ПропускатьОшибочныеДокументы","0"));
  Шаблон:="Modules\FreeForms\ВнутренниеОбработки\УниверсальнаяВыгрузкаЗагрузка\"+Шаблон;
  ДополнительныйСписок:=Trim(ПолучитьНастройку(Путь+"\ДополнительныйСписок","",""));

  If not isEmpty(ДополнительныйСписок) Then
    Form.тПараметр.isInvisible:=0;
    Form.оПараметр.isInvisible:=0;
    Form.оПараметр.Value.Clear();
    Form.оПараметр.Value.FromString(ДополнительныйСписок,",");
    Form.оПараметр.Value.SelectedLine:=1;
  Else
    Form.тПараметр.isInvisible:=1;
    Form.оПараметр.isInvisible:=1;
  EndIf;  
    
  If not File.DoesFileExist(Шаблон) Then
    Message("Не найден файл шаблона "+Шаблон+"!","!");
    Exit;
  EndIf;
  
  ЗаполнитьДокВиды();
EndFunction


Function ЗагрузитьДокумент(спДок,ТОтчет,пН,ByRef См0)

  пСтатус:="";
  спЗагол:=спДок.GetByName("Шапка");
  DocDate:=Date(спЗагол.GetByName("DocDate"));
  If isEmpty(DocDate) Then
    DocDate:=Date();
  EndIf;
  аБлокировка:=0;
  тРеквизиты:="";
  аДок:=DB("Doc."+спЗагол.GetByName("Вид"));
  If not IsEmpty(спЗагол.GetByName("Документ")) Then
    If лнТипОбновления<>4 Then
      аДок:=спЗагол.GetByName("Документ").Copy();
      If аДок.Status()>1 Then
        If not глОтменитьОбработку(аДок) Then
          Exit 0;
        EndIf;
      EndIf;
    Else
      тРеквизиты:=Trim(спЗагол.GetByName("СписокОбновляемыхРеквизитов"));
      аДок:=спЗагол.GetByName("Документ");
      аПольз:="";аМаш:="";аВремя:="";
      If аДок.Lock(аПольз,аМаш,аВремя)=0 Then
        Message("Невозможно заблокировать документ "+аДок+", так как в данный момент с ним работает пользователь "+аПольз+" на "+аМаш+" в "+аВремя+"! "+
            "Пожалуйста, дождитесь окончания работы с документом, прежде чем его обновлять!","!");
        Exit 0;    
      EndIf;
      аБлокировка:=аДок;
      аДок.Reload();
    EndIf;  
    пСтатус:="Обновлен";
  Else
    аДок.New();
    аДок.DocDate:=DocDate;
    пСтатус:="Новый";
  EndIf;
  
  Try
    ВидДок:=спЗагол.GetByName("Вид");
    
    If лнТипОбновления=4 Then
      While тРеквизиты<>"" Do
        Стр:=Trim(TearStr(тРеквизиты,","));
        If Not IsEmpty(Struct.Doc(ВидДок).Props(Стр)) Then
          аДок.SetValue(Стр,спЗагол.GetByName(Стр));
          If Стр="АдресДоставки" Then
            If (глЕстьРеквизитДокумента("Договор",ВидДок))And(глЕстьРеквизитДокумента("Контрагент",ВидДок)) Then
              аДок.Договор:=аДок.АдресДоставки.Parent();
              аДок.Контрагент:=аДок.Договор.Parent();
              глПриИзмененииДоговора(аДок);
            EndIf;
          EndIf;
        EndIf;
      EndDo;
      If not глЗаписать(аДок) Then
        Exit 0;
      EndIf;
      Exit аДок;
    EndIf;
    
    If Not IsEmpty(Struct.Doc(лнИмяДок).Props("КодОперации")) Then
      аДок.КодОперации:=спЗагол.GetByName("КодОперации");
    EndIf;  
    аДок.Комментарий:=спЗагол.GetByName("Комментарий");
  
    If _And(глЕстьРеквизитДокумента("ДатаДоставки",ВидДок),IsEmpty(аДок.ДатаДоставки)) Then
      аДок.ДатаДоставки:=BegOfDay(аДок.DocDate)+1;
    EndIf;
    
    For i:=1 To спЗагол.Size() Do
      СтрИмя:=спЗагол.GetName(i);
      СтрЗнач:=спЗагол.Get(i);
      If Not IsEmpty(Struct.Doc(ВидДок).Props(СтрИмя)) Then
        аДок.SetValue(СтрИмя,СтрЗнач);
        If СтрИмя="АдресДоставки" Then
          If (глЕстьРеквизитДокумента("Договор",ВидДок))And(глЕстьРеквизитДокумента("Контрагент",ВидДок)) Then
            аДок.Договор:=аДок.АдресДоставки.Parent();
            аДок.Контрагент:=аДок.Договор.Parent();
            глПриИзмененииДоговора(аДок);
          EndIf;
        EndIf;
      EndIf;
    EndDo;
    
    If аДок.Selected()<0 Then
      аДок.Автор:=глПользователь;
      глУстановитьНовыйНомер(аДок);
      If глЕстьРеквизитДокумента("УчитыватьВНалоговомУчете",ВидДок) Then
        аДок.УчитыватьВНалоговомУчете:=1;
      EndIf;
    EndIf;
    
    If глЕстьРеквизитДокумента("Договор",ВидДок) Then
      глПриИзмененииДоговора(аДок);
    EndIf;
    
    If _And(глЕстьРеквизитДокумента("Склад",ВидДок),аДок.Склад.Selected()=0) Then
      аДок.Склад:=глПользователь.ОсновнойСклад;
    EndIf;
    
    If _And(глЕстьРеквизитДокумента("Касса",ВидДок),аДок.Касса.Selected()=0) Then
      аДок.Касса:=глПользователь.ОсновнаяКасса;
    EndIf;
    
    aTab:=0;
    If not isEmpty(Struct.Doc(ВидДок).LineParts("Номенклатура")) Then
      aTab:=аДок.LineParts("Номенклатура");
      aTab.ClearLines();
      
      ТСтроки:=спДок.GetByName("Строки");
      ТСтроки.Select();
      While ТСтроки.Next() Do
        aTab.NewLine();
        спРекв:=ТСтроки.aVars;
        For i:=1 To спРекв.Size() Do
          СтрИмя:=спРекв.GetName(i);
          СтрЗнач:=спРекв.Get(i);
          If Not isEmpty(Struct.Doc(ВидДок).LineParts("Номенклатура").Props(СтрИмя)) Then
            aTab.Set(aTab.CurLine,СтрИмя,СтрЗнач);
          EndIf;
        EndDo;
        If лнПересчет<>"" Then
          глПересчитатьСтроку(аДок,aTab,лнПересчет);
        EndIf;
      EndDo;
    EndIf;
    
    If _And(глЕстьРеквизитДокумента("СуммаВзаиморасчетов",ВидДок),aTab<>0,aTab.GetColumnIndex("Сумма")>0) Then
      аДок.СуммаВзаиморасчетов:=aTab.Sum("Сумма");
    EndIf;
    
    If not глЗаписать(аДок) Then
      Exit 0;
    EndIf;
    
    If аДок.Status()=1 Then
      If not глОтменитьУдаление(аДок) Then
        Message("Невозможно изменить документ "+аДок+", он останется удаленным!","!");
      EndIf;
    EndIf;
    If not глОбработать(аДок) Then
      Message("Невозможно обработать документ "+аДок+"!","!");
    EndIf;
    
    
    пДата:=BegOfDay(аДок.DocDate);
    пДок:=аДок;
    пСумма:="";
    пК:="";
    пД:="";
    пАД:="";
    пСтатус2:=?(аДок.Status()>1,"ДА","НЕТ");
    пСумма:="";
    If глЕстьРеквизитДокумента("СуммаВзаиморасчетов",ВидДок) Then
      пСумма:=глФРМ(аДок.СуммаВзаиморасчетов);
      См0:=См0+аДок.СуммаВзаиморасчетов;
    EndIf;
    
    If глЕстьРеквизитДокумента("Контрагент",ВидДок) Then
      пК:=аДок.Контрагент;
    EndIf;
    If глЕстьРеквизитДокумента("Договор",ВидДок) Then
      пДог:=аДок.Договор;
    EndIf;
    If глЕстьРеквизитДокумента("АдресДоставки",ВидДок) Then
      пАД:=аДок.АдресДоставки;
    EndIf;
    ТОтчет.CopyByX("v2",1);
    Exit аДок;
  Finally
    If аБлокировка<>0 Then
      аБлокировка.Unlock();
    EndIf;
  EndTry;  
  
EndFunction

Function OnExecute(СпУстановки)
  оТаб:=Form.оТаб.Value;
  If оТаб.Size()=0 Then
    Exit;
  EndIf;
  
  Form.bPanelProceed.isDisabled:=1;
  флБылВыводВОтчет:=0;
  ТОтчет:=Table.Create();
  ТОтчет.SetSourceName("РеестрЗагрузки");
  оЗагол:="Реестр загруженных документов";
  оСвойства:=глСвойстваПечатиПростые();
  ТОтчет.CopyByX("v1",1);
  ТОтчет.Options.FixedLine:=ТОтчет.Height();

  ФлКол:=0;
  См0:=0;
  Try
    For i:=1 To табРезультат.Size() Do
      Form.StatusText("Загрузка: "+i+" из "+табРезультат.Size());
      Form.UpdateProgress(i,табРезультат.Size());
    
      спДок:=табРезультат.Get(i);
      флБылВыводВОтчет:=1;
      аДок:=ЗагрузитьДокумент(спДок,ТОтчет,i,См0);
      If аДок=0 Then
        Exit;
      EndIf;
      
      ФлКол:=ФлКол+1;
      //Обновление
      спЗагол:=спДок.GetByName("Шапка");
      спЗагол.SetByName("Документ",аДок);
      спЗагол.SetByName("ДокументИлиВид",аДок);
      оТаб.CurLine:=i;
      ОбновитьТекущуюСтрокуТаблицы(оТаб,спЗагол,аДок);
    EndDo;
    
  Finally
    If ФлКол>0 Then
      Box("Успешно загружено (обновлено) "+ФлКол+" документов!",Q_INFORMATION);
    EndIf;
  
    If (флБылВыводВОтчет>0)And(лнТипОбновления<>4) Then
      пСумма:=глФРМ(См0);
      ТОтчет.CopyByX("v3",1);
      глПечатнаяФорма(ТОтчет,0,"Реестр загрузки");
    EndIf;
  EndTry;  

  //Удаление файлов загрузки
  If ОчиститьПапкуПослеЗагрузки=1 Then
    For i:=1 To спФайлыВыгрузки.Size() Do
      фСтр:=спФайлыВыгрузки.Get(i);
      File.DeleteFile(фСтр);
    EndDo;
  EndIf;
EndFunction