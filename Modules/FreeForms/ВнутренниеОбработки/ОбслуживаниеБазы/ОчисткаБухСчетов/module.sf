//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function СоздатьДокумент(З)
    аДок:=Doc.БухгалтерскаяОперация;
    аДок.New();
    аДок.DocDate:=BegOfDay(Form.ДокДата.Value);
    аДок.ЮрЛицо:=З.зЮЛ;
    аДок.КодОперации:=Enum.коБухгалтерскаяОперация.БухгалтерскаяОперация;
    глУстановитьНовыйНомер(аДок);
    аДок.Автор:=глПользователь;
    аДок.флКорректировочныйДокумент:=1;
    Exit аДок;
EndFunction    

Function OnExecute(СпУстановки)
  КонДата:=BegOfDay(Form.КонДата.Value);
  НачДата:=КонДата;
  оВО:=Form.оВО.Value.SelectedLine;
  оН:=Form.оН.Value;
  оТГ:=Form.оТГ.Value;
  оСк:=Form.оСк.Value;
  
  If оВО=1 Then
    ТЗ:="Period From НачДата to КонДата;
    |зЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо;
    |зСч:=Storage.БухгалтерскиеСчета.Счет;
    |зСуб1:=Storage.БухгалтерскиеСчета.Субконто1;
    |зСуб2:=Storage.БухгалтерскиеСчета.Субконто2;
    |зСуб3:=Storage.БухгалтерскиеСчета.Субконто3;
    |зКонОст:=EndTotals(Сумма);
    |зКонОстКл:=EndTotals(Количество);
    |Group зЮЛ,зСч,зСуб1,зСуб2,зСуб3;";
    З:=Query.Create();
    З.Execute(ТЗ,2);
  
    While З.Next(1)=1 Do
      аДок:=СоздатьДокумент(З);
      аДок.Комментарий:="Очистка бух. счетов, юр. лицо: "+З.зЮЛ;
      aTab:=аДок.LineParts("Содержание");
      While З.Next(2)=1 Do
        зСч:=З.зСч;
        флПеренесение:=0;
        If зСч.IsFolder() Then
          aList:=Ref.бухПланСчетов.Load(1,"@IsFolder,->@Folder",0,зСч);
          If aList.Size()=0 Then
            Message("Внимание! Серьезная ошибка: обнаружены движения по группе счетов "+зСч+"! Обработка не сможет перенести эти движения на подчиненный счет, так как он не найден! Счет пропущен! Требуется вмешательство!","!!");
            Continue;
          EndIf;
          флПеренесение:=1;
          зСч2:=aList.Get(1);
          Message("Внимание! Серьезная ошибка: обнаружены движения по группе счетов "+зСч+"! Обработка перенесет эти движения на счет "+зСч2+", однако, потребуется дополнительная проверка!","!!");
        EndIf;
        Form.StatusText(""+З.зЮЛ+", "+зСч);
        
        While З.Next(3)=1 Do
          While З.Next(4)=1 Do
            While З.Next(5)=1 Do
              зКонОст:=З.EndTotals("зКонОст");
              зКонОстКл:=З.EndTotals("зКонОстКл");
              If (зКонОст=0)And(зКонОстКл=0) Then
                Continue;
              EndIf;
              Цена:=?(зКонОстКл=0,зКонОст,Round(зКонОст/зКонОстКл,2));
              
              If флПеренесение Then
                //TODO: Нужна дополнительная проверка на соответствие субконто
                aTab.AddLine("СчетД,СубконтоД1,СубконтоД2,СубконтоД3,СчетК,СубконтоК1,СубконтоК2,СубконтоК3,Цена,Сумма,Количество",зСч2,З.зСуб1,З.зСуб2,З.зСуб3,зСч,З.зСуб1,З.зСуб2,З.зСуб3,Цена,зКонОст,зКонОстКл);
                Continue;
              EndIf;
              
              If (зСч.Количественный=0)And(зКонОстКл<>0) Then
                aTab.AddLine("СчетД,СубконтоД1,СубконтоД2,СубконтоД3,СчетК,СубконтоК1,СубконтоК2,СубконтоК3,Цена,Сумма,Количество",GetNothing(),GetNothing(),GetNothing(),GetNothing(),зСч,З.зСуб1,З.зСуб2,З.зСуб3,0,0,зКонОстКл);
                зКонОстКл:=0;
                Цена:=зКонОст;
              EndIf;
              
              Фл:=0;
              бСуб1:=З.зСуб1;
              бСуб2:=З.зСуб2;
              бСуб3:=З.зСуб3;
              If (зСч.ВидСубконто3.Selected()=0)And(not isEmpty(З.зСуб3)) Then
                Фл:=1;
                бСуб3:=GetNothing();
              EndIf;
              If (зСч.ВидСубконто2.Selected()=0)And(not isEmpty(З.зСуб2)) Then
                Фл:=1;
                бСуб2:=GetNothing();
              EndIf;
              If (зСч.ВидСубконто1.Selected()=0)And(not isEmpty(З.зСуб1)) Then
                Фл:=1;
                бСуб1:=GetNothing();
              EndIf;
              
              If Фл Then
                aTab.AddLine("СчетД,СубконтоД1,СубконтоД2,СубконтоД3,СчетК,СубконтоК1,СубконтоК2,СубконтоК3,Цена,Сумма,Количество",зСч,бСуб1,бСуб2,бСуб3,зСч,З.зСуб1,З.зСуб2,З.зСуб3,Цена,зКонОст,зКонОстКл);
              EndIf;
            EndDo;
          EndDo;
        EndDo;    
      EndDo;
      
      If aTab.Size()>0 Then
        аДок.СуммаВзаиморасчетов:=aTab.Sum("Сумма");
        аДок.Save();
        If глОбработать(аДок,1) Then
          Message("Обработан "+аДок+" для юр. лица: "+З.зЮЛ,"I");
        Else
          Message("Сформирован, но не обработан "+аДок+" для юр. лица: "+З.зЮЛ,"!");
        EndIf;  
      EndIf;
    EndDo;  
  ElseIf оВО=2 Then
  
    Стр:="41.1,41.2,41.3,43,10.1,10.2,10.4,10.5,10.6,10.7,10.8,10.9";
    спСч:=List.Create();
    While Стр<>"" Do
      Сч:=глНайтиСчет(TearStr(Стр,","));
      If Pos("ТМЦНОМЕНКЛАТУРА",UpperCase(Trim(Сч.ВидСубконто1.ТипЗначенияЛокальный)))>0 Then
        If Pos("ОБЩСКЛАДЫ",UpperCase(Trim(Сч.ВидСубконто2.ТипЗначенияЛокальный)))>0 Then
          спСч.Add(Сч);
        EndIf;
      EndIf;
    EndDo;
    If спСч.Size()=0 Then
      Exit;
    EndIf;
    
    ТЗ:="Period From НачДата to КонДата;
    |зЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо;
    |зСч:=Storage.БухгалтерскиеСчета.Счет;
    |Condition(зСч IN спСч);
    |зСуб1:=Storage.БухгалтерскиеСчета.Субконто1;
    |Condition(зСуб1 IN оН.Get(1));
    |Condition(зСуб1 NOT IN оН.Get(2));
    |зТГ:=Storage.БухгалтерскиеСчета.Субконто1..Ref.тмцНоменклатура.ТоварнаяГруппа;
    |Condition(зТГ IN оТГ.Get(1));
    |Condition(зТГ NOT IN оТГ.Get(2));
    |зСуб2:=Storage.БухгалтерскиеСчета.Субконто2;
    |Condition(зСуб2 IN оСк.Get(1));
    |Condition(зСуб2 NOT IN оСк.Get(2));
    |зСуб3:=Storage.БухгалтерскиеСчета.Субконто3;
    |зКонОст:=EndTotals(Сумма);
    |зКонОстКл:=EndTotals(Количество);
    |Group зЮЛ,зСч,зСуб3,зСуб1,зСуб2;";
    
    З:=Query.Create();
    З.Execute(ТЗ,2);
    СчетД:=глНайтиСчет("90.2.1");
    СчетД2:=глНайтиСчет("90.2.2");
    
    While З.Next(1)=1 Do
      
      аДок:=СоздатьДокумент(З);
      аДок.Комментарий:="Начальное заполнение себестоимости";
      aTab:=аДок.LineParts("Содержание");
    
      While З.Next(2)=1 Do
        зСч:=З.зСч;
        While З.Next(3)=1 Do
          зСуб3:=З.зСуб3;
          While З.Next(4)=1 Do
            зН:=З.зСуб1;
            While З.Next(5)=1 Do
              зСк:=З.зСуб2;
              СчСпис:=?(зСк.флОблагаетсяЕНВД=1,СчетД2,СчетД);
              
              If (З.зКонОст=0)And(З.зКонОстКл=0) Then
                Continue;
              EndIf;
              
              См:=З.зКонОст;
              Кл:=З.зКонОстКл;
              СтНДС=?(З.зЮЛ.УчитыватьНДС=0,0,глКоэффНДС(зН.СтавкаНДС));
              зЦ:=Round(глПолучитьОсновнуюЦену(зН,зСк,КонДата)*(1-СтНДС),2);
              См2:=Кл*зЦ;
              
              If См<>См2 Then
                См0:=См-См2;
                
                aTab.AddLine("СчетД,СчетК,СубконтоК1,СубконтоК2,СубконтоК3,Цена,Сумма,Количество",СчСпис,зСч,зН,зСк,зСуб3,зЦ,См0,0);
              EndIf;
            EndDo;
          EndDo;
        EndDo;
      EndDo;
      
      If aTab.Size()>0 Then
        аДок.СуммаВзаиморасчетов:=aTab.Sum("Сумма");
        аДок.Save();
        If глОбработать(аДок,1) Then
          Message("Обработан "+аДок+" для юр. лица: "+З.зЮЛ,"I");
        Else
          Message("Сформирован, но не обработан "+аДок+" для юр. лица: "+З.зЮЛ,"!");
        EndIf;  
      EndIf;
    EndDo;
  ElseIf оВО=3 Then
    спСч:=List.Create(глНайтиСчет("10.1"),глНайтиСчет("41.1"),глНайтиСчет("41.2"));
    
    ТЗ:="Period From НачДата to КонДата;
    |зЮЛ:=Storage.БухгалтерскиеСчета.ЮрЛицо;
    |зСч:=Storage.БухгалтерскиеСчета.Счет;
    |Condition(зСч IN спСч);
    |зСуб1:=Storage.БухгалтерскиеСчета.Субконто1;
    |Condition(зСуб1 IN оН.Get(1));
    |Condition(зСуб1 NOT IN оН.Get(2));
    |зТГ:=Storage.БухгалтерскиеСчета.Субконто1..Ref.тмцНоменклатура.ТоварнаяГруппа;
    |Condition(зТГ IN оТГ.Get(1));
    |Condition(зТГ NOT IN оТГ.Get(2));
    |зСуб2:=Storage.БухгалтерскиеСчета.Субконто2;
    |Condition(зСуб2 IN оСк.Get(1));
    |Condition(зСуб2 NOT IN оСк.Get(2));
    |зСуб3:=Storage.БухгалтерскиеСчета.Субконто3;
    |зКонОст:=EndTotals(Сумма);
    |зКонОстКл:=EndTotals(Количество);
    |Group зЮЛ,зСч,зСуб3,зСуб1,зСуб2;";
    З:=Query.Create();
    З.Execute(ТЗ,2);
    
    Сч101=глНайтиСчет("10.1");
    
    While З.Next(1)=1 Do
      
      аДок:=СоздатьДокумент(З);
      аДок.Комментарий:="Исправление счетов продукция/товар ТМЦ";
      aTab:=аДок.LineParts("Содержание");
      СчОСЮЛ:=З.зЮЛ.GetValue("СчетХраненияОС",КонДата);
    
      While З.Next(2)=1 Do
        зСч:=З.зСч;
        While З.Next(3)=1 Do
          зСуб3:=З.зСуб3;
          While З.Next(4)=1 Do
            зН:=З.зСуб1;
            ФлОС:=зН.ВидНоменклатуры=Enum.ВидыНоменклатуры.Инвентарь;
            
            While З.Next(5)=1 Do
              Сч411:=глНайтиСчет("41."+?(З.зСуб2.флРозничныйСклад=1,"2","1"));
              
              If (З.зКонОст=0)And(З.зКонОстКл=0) Then
                Continue;
              EndIf;
              
              СчОС:=0;
              If ФлОС Then
                СчОС:=зН.СчетХраненияОС;
                If СчОС.Выбран()=0 Then
                  СчОС:=СчОСЮЛ;
                  If СчОС.Выбран()=0 Then
                    СчОС:=Сч101;
                  EndIf;
                EndIf;
                If СчОС.Code=зСч.Code Then
                  Continue;
                EndIf;
              ElseIf зСч.Code="10.1" Then
                Continue;
              EndIf;
              
              зЦ:=?(З.зКонОстКл=0,З.зКонОст,З.зКонОст/З.зКонОстКл);
              aTab.AddLine("СубконтоД1,СубконтоД2,СубконтоД3,СубконтоК1,СубконтоК2,СубконтоК3,Цена,Сумма,Количество",зН,зСк,зСуб3,зН,зСк,зСуб3,зЦ,З.зКонОст,З.зКонОстКл);
                
              If ФлОС Then
                aTab.СчетД:=СчОС;
                aTab.СчетК:=зСч;
              ElseIf зСч.Code="10.1" Then
                aTab.СчетД:=Сч411;
                aTab.СчетК:=зСч;
              EndIf;
              
            EndDo;
          EndDo;
        EndDo;
      EndDo;
        
      If aTab.Size()>0 Then
        аДок.СуммаВзаиморасчетов:=aTab.Sum("Сумма");
        аДок.Save();
        If глОбработать(аДок,1) Then
          Message("Обработан "+аДок+" для юр. лица: "+З.зЮЛ,"I");
        Else
          Message("Сформирован, но не обработан "+аДок+" для юр. лица: "+З.зЮЛ,"!");
        EndIf;  
      EndIf;
    EndDo;
  EndIf;

  Message("Обработка завершена успешно!","I");
EndFunction

