//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Function ДобавитьРодителей(Имя,Род,Ноль)
  оФильтр:=Form.оФильтр.Value;
  If isEmpty(Имя) Then
    Exit;
  EndIf;
  If Struct.Ref(Имя).Parents().Count()<>1 Then
    Exit;//TODO: Support
  EndIf;
  
  Вид:=Struct.Ref(Имя).Parents(1).Name;
  Имя:=Вид;
  Тип:="Справочник";
  Ид:=Struct.Ref(Вид).Name;
  
  оФильтр.AddLine("Фильтр,Ид,зПуть,зПерем,идПуть,Сорт",List.Create(List.Create(),List.Create()),"Родитель => "+Ид,"@Parent"+Род,"Parent"+Ноль,
      "Ref."+Вид,Ноль+"Parent"+"@"+Тип+"@"+Вид);
  
  ДобавитьРодителей(Имя,Род+".@Parent",Ноль+"0");
EndFunction


Function ОбновитьТаблицуРеквизитов()
  оТип:=Trim(Form.оТип.Value);
  If оТип="" Then
    Form.оЭл.isDisabled:=1;
    Form.тЭлементы.isDisabled:=1;
    Form.оФильтр.isDisabled:=1;
    Form.оИзм.isDisabled:=1;
    Exit;
  EndIf;
  Form.оЭл.isDisabled:=0;
  Form.тЭлементы.isDisabled:=0;
  Form.оФильтр.isDisabled:=0;
  Form.оИзм.isDisabled:=0;
  
  оФильтр:=Form.оФильтр.Value;
  оИзм:=Form.оИзм.Value;
  оФильтр.ClearLines();
  оИзм.ClearLines();
  
  оИзм.Lock();
  оФильтр.Lock();
  Try
    Имя:=оТип;
    Ноль:="0";
    Род:="";
    If Struct.Ref(Имя).Parents().Count()>0 Then
      ДобавитьРодителей(Имя,Род,Ноль);
    EndIf;
    
    For i:=1 To Struct.Ref(оТип).Props.Count() Do
      Ид:=Struct.Ref(оТип).Props(i).Name;
      Вид:=Struct.Ref(оТип).Props(i).DataType;
      Тип:=Вид;
      Тип:=TearStr(Тип,".");
      оФильтр.AddLine("Фильтр,пФильтр,Ид,зПерем,зПуть,идПуть,Сорт",List.Create(List.Create(),List.Create()),"",Ид,Ид,Ид,Вид,Тип+"@"+Ид);
      оИзм.AddLine("Ид,идПуть,Сорт",Ид,Вид,Тип+"@"+Ид);
    EndDo;
    оФильтр.Sort("Сорт+");
    оИзм.Sort("Сорт+");
    
    //Справочники -- без цвета
    //Перечисления -- красные
    //Строки -- зеленые
    //Числа -- синие
    //Даты -- желтые
    оФильтр.Select();
    While оФильтр.Next() Do
      Стр:=оФильтр.идПуть;
      Тип:=TearStr(Стр,".");
      If Тип="ENUM" Then
        оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_RED,10));
      ElseIf Тип="NUMBER" Then
        оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_BLUE,10));
      ElseIf Тип="STRING" Then
        оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_GREEN,10));
      ElseIf Тип="DATE" Then
        оФильтр.BackgroundColor(оФильтр.CurLine,0,MixColors(_CLR_WINDOW,_CLR_YELLOW,10));
      EndIf;
    EndDo;
    
    оИзм.Select();
    While оИзм.Next() Do
      Стр:=оИзм.идПуть;
      Тип:=TearStr(Стр,".");
      If Тип="ENUM" Then
        оИзм.BackgroundColor(оИзм.CurLine,0,MixColors(_CLR_WINDOW,_CLR_RED,10));
      ElseIf Тип="NUMBER" Then
        оИзм.BackgroundColor(оИзм.CurLine,0,MixColors(_CLR_WINDOW,_CLR_BLUE,10));
      ElseIf Тип="STRING" Then
        оИзм.BackgroundColor(оИзм.CurLine,0,MixColors(_CLR_WINDOW,_CLR_GREEN,10));
      ElseIf Тип="DATE" Then
        оИзм.BackgroundColor(оИзм.CurLine,0,MixColors(_CLR_WINDOW,_CLR_YELLOW,10));
      EndIf;
    EndDo;
  Finally
    оИзм.Unlock();
    оФильтр.Unlock();
  EndTry;
EndFunction

Function ПолучитьСтруктуру(Вид,ВидРекв)
  If Pos("Parent",ВидРекв)=0 Then
    Exit Struct.Ref(Вид).Props(ВидРекв);
  EndIf;
  TearStr(ВидРекв,"Parent");
  аСтр:=Struct.Ref(Вид);
  While ВидРекв<>"" Do
    аСтр:=аСтр.Parents(1);
    ВидРекв:=Mid(ВидРекв,2);
  EndDo;
  Exit аСтр;
EndFunction


Function Выполнить(СпУстановки)
  оДатаЧт:=BegOfDay(Form.оДатаЧт.Value);
  оДатаЗп:=BegOfDay(Form.оДатаЗп.Value);
  Вид:=Trim(Form.оТип.Value);
  оЭл:=Form.оЭл.Value;
  оФильтр:=Form.оФильтр.Value;
  оИзм:=Form.оИзм.Value;
  оСЭ:=Form.оСЭ.Value.SelectedLine;
  оТЭ:=Form.оТЭ.Value.SelectedLine;
  оПер:=Form.оПер.Value.SelectedLine;
  ФлЕстьПапки:=DB("Ref."+Вид).Struct.HasFolders;
  

  ТЗ:=?(оСЭ>1,"зСтатус:=Ref."+Вид+".@Status;Condition(зСтатус<>"+?(оСЭ=2,"1","0")+");","")+
    "зЭл:=Ref."+Вид+";Condition(зЭл IN оЭл.Get(1));Condition(зЭл NOT IN оЭл.Get(2));"+
    ?((ФлЕстьПапки)And(оТЭ>1),"зПапка:=Ref."+Вид+".@isFolder;Condition(зПапка="+?(оТЭ=2,"0","1")+");");

  оФильтр.Select();
  While оФильтр.Next() Do
    If (оФильтр.Фильтр.Get(1).Size()=0)And(оФильтр.Фильтр.Get(2).Size()=0) Then
      Continue;
    EndIf;
    Тип0:=оФильтр.идПуть;
    ВидТипа:=оФильтр.идПуть;
    Тип:=TearStr(ВидТипа,".");
    
    зПер:="зПерем_"+оФильтр.зПерем;
    ФлПер:=ПолучитьСтруктуру(Вид,оФильтр.зПерем).Periodical;
    ТЗ:=ТЗ+зПер+":=Ref."+Вид+"."+оФильтр.зПуть+?(ФлПер,"('"+оДатаЧт+"')")+";"+_NEWLINE;
    If оФильтр.Фильтр.Get(1).Size()>0 Then
      ТЗ:=ТЗ+"Condition("+зПер+" IN оФильтр.Get("+оФильтр.CurLine+",""Фильтр"").Get(1));"+_NEWLINE;
    EndIf;
    If оФильтр.Фильтр.Get(2).Size()>0 Then
      ТЗ:=ТЗ+"Condition("+зПер+" NOT IN оФильтр.Get("+оФильтр.CurLine+",""Фильтр"").Get(2));"+_NEWLINE;
    EndIf;
  EndDo;
  ТЗ:=ТЗ+"Group зЭл;"+_NEWLINE;    
      
  З:=Query.Create();
  З.Execute(ТЗ,2);
  
  While З.Next(1) Do
    Form.StatusText(З.зЭл);
    аЭл:=З.зЭл.Copy();
    Message(аЭл);
    
    Фл:=0;
    оИзм.Select();
    While оИзм.Next() Do
      If оИзм.Check(оИзм.CurLine,"Вкл")=0 Then
        Continue;
      EndIf;
      пЗнч:=оИзм.пРез;
      If Struct.Ref(Вид).Props(оИзм.Ид).Periodical Then
        If оПер>1 Then
          aTab:=аЭл.LoadPeriodicalValues(оИзм.Ид);
          If оПер=2 Then //Удалять историю, устанавливать на выбранную дату
            aTab.ClearLines();
          Else
            aNum:=0;
            While aNum<aTab.Size() Do
              aNum:=aNum+1;
              aTab.CurLine:=aNum;
              If оПер=3 Then //Удалять историю до выбранной даты, уст. на дату
                If BegOfDay(aTab.Get(aNum,"_Date"))<=оДатаЗп Then
                  aTab.Remove(aNum);
                  aNum:=aNum-1;
                EndIf;
              ElseIf оПер=4 Then //Удалять историю после выбранной даты, уст. на дату
                If BegOfDay(aTab.Get(aNum,"_Date"))>=оДатаЗп Then
                  aTab.Remove(aNum);
                  aNum:=aNum-1;
                EndIf;
              EndIf;
            EndDo;
          EndIf;  
          aTab.AddLine("_Date,_Value",оДатаЗп,пЗнч);
          аЭл.SavePeriodicalValues(оИзм.Ид,aTab);
          Фл:=1;
        Else
          аЭл.SetValue(оИзм.Ид,пЗнч,оДатаЗп,оДатаЗп);
          Фл:=1;
        EndIf;
      Else
        аЭл.SetValue(оИзм.Ид,пЗнч);
        Фл:=1;
      EndIf;
    EndDo;
    
    If Фл Then
      глЗаписать(аЭл);
      Message("Обновлен: "+аЭл,"I");
    EndIf;
  EndDo;

  Message("Изменение завершено!","I");
EndFunction

Function OnExecute(СпУстановки)
  Выполнить(СпУстановки);
EndFunction

