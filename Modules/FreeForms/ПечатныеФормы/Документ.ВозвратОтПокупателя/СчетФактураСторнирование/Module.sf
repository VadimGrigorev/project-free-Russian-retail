//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var Д Export;
Var Т Export;


Function Печать(Д)

  Т:=Table.Create();
  If Д.DocDate>='01.07.2021' Then
    Т.SetSourceName("Table");
  Else
    Т.SetSourceName("Table2107");
  EndIf;  
  
  фИНН:=глПолучитьИННПодразделения(Д.ЮрЛицо,Д.Склад.Магазин);
  фАдрес:=глПолучитьАдресПодразделения(Д.ЮрЛицо,Д.Склад.Магазин);
  фРук:="";фБух:="";глПолучитьСотрудниковПодразделения(Д.ЮрЛицо,Д.Склад.Магазин,Д.DocDate,фРук,фБух);
  фАдрес:=Д.ЮрЛицо.ПолнНаименование+", "+фАдрес;
  
  фВал:="Российский рубль, 643";
  пВалюта:="Валюта: наименование, код: "+фВал;
  
  пНом:="Корректировочный Счет-Фактура № "+Д.DocNum+" от "+Д.DocDate+", Исправление корректировочного Счета-Фактуры № _________ от __________";
  пНом2:="к Счету-Фактуре № "+Д.ДокОснование.DocNum+" от "+Д.ДокОснование.DocDate+", с учетом исправления № _________ от __________";
  пПост:="Продавец: "+Д.ДокОснование.ЮрЛицо.ПолнНаименование;
  пАДПост:="Адрес: "+Trim(Д.ДокОснование.ЮрЛицо.ЮрАдрес);
  пИННПост:="ИНН/КПП продавца: "+Д.ДокОснование.ЮрЛицо.ИНН;
  пПок:="Покупатель: "+TrimR(Д.ДокОснование.Контрагент.ПолнНаименование);
  пАДПок:="Адрес: "+Trim(Д.ДокОснование.Контрагент.ЮрАдрес);
  пИННПок:="ИНН/КПП покупателя: "+Д.ДокОснование.Контрагент.ИНН;
  Т.CopyByX("v1",1);
  Т.Printing.ContinualLines.From:=Т.Height()-2;
  Т.Printing.ContinualLines.To:=Т.Height();
  
  Т2:=глТаблицаНакопителяОстаткиСПартиямиИЦенами(Д.ДокОснование);
  Тб:=глТаблицаНакопителяОстаткиСПартиямиИЦенами(Д);
  ТГТД:=глПолучитьТаблицуГТД(Д);
  
  пНомер:=0;
  пСмНДСИтог3:=0;
  пСмНДСИтог4:=0;
  пСмБезНДСИтог3:=0;
  пСмБезНДСИтог4:=0;
  пСмИтог3:=0;
  пСмИтог4:=0;
  Тб.Select();
  While Тб.Next() Do
    См2:=Тб.Сумма;
    СтавкаНДС2:=Тб.СтавкаНДС;
    пК2:=Тб.Количество;
    
    пК:=0;
    СтавкаНДС:=СтавкаНДС2;
    См:=0;
    Т2.CurLine:=0;
    If Т2.LocateAndGoto("Номенклатура,Партия",Тб.Номенклатура,Тб.Партия)>0 Then
      СтавкаНДС:=Т2.СтавкаНДС;
      См:=Т2.Сумма;
      пК:=Т2.Количество;
    EndIf;
    пСтНДС:=?(IsEmpty(СтавкаНДС),"Без НДС",Trim(СтавкаНДС));
    
    пК2:=Max(пК-пК2,0);
    См2:=Max(См-См2,0);
    
    пН:=Тб.Номенклатура;
    пСтНДС2:=?(IsEmpty(Тб.СтавкаНДС),"Без НДС",Trim(Тб.СтавкаНДС));
    
    If (пК2=пК)And(См=См2)And(пСтНДС2=пСтНДС) Then
      Continue;
    EndIf;
    
    пЕд:="шт";
    пКодЕд:="796";
    пЕд2:="шт";
    пКодЕд2:="796";
    пАкциз:="Без акциза";
    пАкциз2:="Без акциза";
    пАкциз3:="-";
    пАкциз4:="-";
    
    пСтрана:="";//"Российская Федерация";
    пСтранаКод:="";//"643";
    пГТД:="";
    зН:=Тб.Номенклатура;
    If зН.сертСтранаПроисхождения.Selected()<>0 Then
      пСтрана:=зН.сертСтранаПроисхождения;
      пСтранаКод:=Trim(пСтрана.ВнешнийКод);
      If Pos("РОССИ",UpperCase(пСтрана))=1 Then
        пСтрана:="";
        пСтранаКод:="";
      EndIf;
      пГТД:=Trim(зН.сертНомерГТД);
    EndIf;
    If ТГТД.FindAndGoto(зН,,"зН")>0 Then
      пГТД:=ТГТД.пГТД;
    EndIf;
    пСтрана2:=пСтрана;
    пСтранаКод2:=пСтранаКод;
    пГТД2:=пГТД;
    
    пСмВсего2:=глФРМ(См2);
    пСмВсего:=глФРМ(См);
    пСмНДС2:=Round(См2*глКоэффНДС(СтавкаНДС2),2);
    пСмНДС:=Round(См*глКоэффНДС(СтавкаНДС),2);
    пСмБезНДС2:=См2-пСмНДС2;
    пСмБезНДС:=См-пСмНДС;
    
    пЦ:=глФРМ(пСмБезНДС/пК);
    пЦ2:=?(пК2=0,пЦ,глФРМ(пСмБезНДС2/пК2));
    пСмНДС3:=глФРМ(Max(0,пСмНДС2-пСмНДС));
    пСмНДС4:=глФРМ(Max(0,пСмНДС-пСмНДС2));
    пСмВсего3:=глФРМ(Max(0,См2-См));
    пСмВсего4:=глФРМ(Max(0,См-См2));
    пСмБезНДС3:=глФРМ(Max(0,пСмБезНДС2-пСмБезНДС));
    пСмБезНДС4:=глФРМ(Max(0,пСмБезНДС-пСмБезНДС2));
    
    пСмИтог3:=пСмИтог3+Max(0,См2-См);
    пСмИтог4:=пСмИтог4+Max(0,См-См2);
    пСмНДСИтог3:=пСмНДСИтог3+Max(0,пСмНДС2-пСмНДС);
    пСмНДСИтог4:=пСмНДСИтог4+Max(0,пСмНДС-пСмНДС2);
    пСмБезНДСИтог3:=пСмБезНДСИтог3+Max(0,пСмБезНДС2-пСмБезНДС);
    пСмБезНДСИтог4:=пСмБезНДСИтог4+Max(0,пСмБезНДС-пСмБезНДС2);
    
    пСмНДС:=глФРМ(пСмНДС);
    пСмНДС2:=глФРМ(пСмНДС2);
    пСмБезНДС:=глФРМ(пСмБезНДС);
    пСмБезНДС2:=глФРМ(пСмБезНДС2);
    
    пНомер:=пНомер+1;
    Т.CopyByX("v2",1);
  EndDo;
  Т.Printing.ContinualLines.EndCell:=Т.Height();
  
  пСмНДСИтог3:=глФРМ(пСмНДСИтог3);
  пСмНДСИтог4:=глФРМ(пСмНДСИтог4);
  пСмБезНДСИтог3:=глФРМ(пСмБезНДСИтог3);
  пСмБезНДСИтог4:=глФРМ(пСмБезНДСИтог4);
  пСмИтог3:=глФРМ(пСмИтог3);
  пСмИтог4:=глФРМ(пСмИтог4);
  Т.CopyByX("v3",1);
  
  глПечатнаяФорма(Т,Param,"Счет-фактура к документу "+Д,1);
EndFunction

Function OnOpen()
  Result:=0;
  If not IsEmpty(Param) Then
    Д:=Param.GetByName("Object");
    
    If Д.КодОперации<>Enum.коВозвратОтПокупателя.ВозвратСторнирование Then
      Box("Данная печатная форма предназначена только для документов сторнирования!",Q_STOP);
      Exit;
    EndIf;    
    
    If Д.ДокОснование.Selected()=0 Then
      Box("Печатная форма работает только для документов с выбранным основанием!",Q_STOP);
      Exit;
    EndIf;
    
    If Д.ДокОснование.Status()<2 Then
      Box("Печатная форма работает только для документов с обработанным документом-основанием!",Q_STOP);
      Exit;
    EndIf;
    
    If (Д.Status()<2)Or(Д.УчитыватьВНалоговомУчете=0) Then
      Box("Нельзя печатать счет-фактуру к документу, так как он не обработан, либо счет-фактура не выписана!",Q_STOP);
      Exit;
    EndIf;
    If not глПроверкаПраваПечати(Д,2) Then
      Exit;
    EndIf;
        
    Печать(Д);
  EndIf;
EndFunction


