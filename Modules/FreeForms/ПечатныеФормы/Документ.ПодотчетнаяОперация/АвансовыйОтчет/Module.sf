//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var Д Export;
Var Т Export;

Function Печать(Д)
  Т:=Table.Create();
  Т.SetSourceName("Table");

  пЮЛ:=Trim(Д.ЮрЛицо.ПолнНаименование);
  пОКПО:=Trim(Д.ЮрЛицо.ОКПО);
  пДиректор:=Trim(Д.ЮрЛицо.GetValue("Руководитель",Д.DocDate));
  пДолжность:=Trim(Д.ЮрЛицо.ДолжностьРуководителя);
  пГлБух:=Trim(Д.ЮрЛицо.GetValue("Глбухгалтер",Д.DocDate));
  пСмЦ:=Trunc(Д.СуммаВзаиморасчетов);
  пКоп:=Right("00"+Trunc((Д.СуммаВзаиморасчетов-пСмЦ)*100),2);
  пНомер:=Д.DocNum;
  пДата:=""+Д.DocDate;
  пДатаФормат:=FormatDate(Д.DocDate,"DD MMM YYYY г.");
  пПодотчетник:=Trim(Д.ПодотчетноеЛицо.ПолнНаименование);
  пИтого:=глФРМ(Д.СуммаВзаиморасчетов);  
  
  оТип:=Enum.ТипыПодотчетныхОпераций.ПодотчетнаяОперация;
  оМОЛ:=Д.ПодотчетноеЛицо;
  оЮЛ:=Д.ЮрЛицо;
  НДата:='01.01.1981';
  КДата:=EndOfMonth(Д.DocDate);
  ТЗ:="Period From НДата to КДата;
  |зЮЛ:=Storage.ПодотчетныеОперации.ЮрЛицо;
  |Condition(зЮЛ=оЮЛ);
  |зМОЛ:=Storage.ПодотчетныеОперации.ПодотчетноеЛицо;
  |Condition(зМОЛ=оМОЛ);
  |зТип:=Storage.ПодотчетныеОперации.ТипОперации;
  |зДок:=Storage.ПодотчетныеОперации.@LINK;
  |Condition(зТип=оТип);
  |зРасход:=Expense(Сумма);
  |зПриход:=Income(Сумма);
  |Group зДок;";

  З:=Query.Create();
  З.Execute(ТЗ);
  
  оКонОст:=0;
  оНачОст:=0;
  оНачОстПрош:=0;
  оПриходы:=0;
  зДокТек:=Д;
  While З.Next(1) Do
    зСм:=З.зПриход-З.зРасход;
    зДок:=З.зДок;
    If зДок=зДокТек Then
      оКонОст:=оНачОст+зСм;
      Break;
    EndIf;
    оНачОст:=оНачОст+зСм;
    If зСм>0 Then
      оПриходы:=оПриходы+зСм;
    ElseIf зСм<0 Then
      оПриходы:=0;
      оНачОстПрош:=оНачОст;
    EndIf;
  EndDo;
  
  пОстНДата2:=глФРМ(-Min(оНачОстПрош,0));
  пОстНДата:=глФРМ(Max(оНачОстПрош,0));
  пПриход:=глФРМ(оПриходы);
  пОстДата2:=глФРМ(-Min(оКонОст,0));
  пОстДата:=глФРМ(Max(оКонОст,0));
  пРасход:=глФРМ(Max(оПриходы+(оНачОстПрош-оКонОст),0));
  
  пСчет71:="71.1";
  пКод:=Д.ПодотчетноеЛицо.Code;
  пДопИнфо:="Отчет проверен. К утверждению в сумме "+FormatCurrency(Д.СуммаВзаиморасчетов,1,"RUB");
  
  Дб1:="";Дб2:="";Дб3:="";Дб4:="";Дб5:="";Дб6:="";Дб7:="";
  Кр1:="";Кр2:="";Кр3:="";Кр4:="";Кр5:="";Кр6:="";Кр7:="";
  СмКр1:="-";СмКр2:="-";СмКр3:="-";СмКр4:="-";СмКр5:="-";СмКр6:="-";СмКр7:="-";
  СмДб1:="-";СмДб2:="-";СмДб3:="-";СмДб4:="-";СмДб5:="-";СмДб6:="-";СмДб7:="-";
  
  а:=0;
  aTab:=Д.LineParts("Содержание");
  aTab.Select();
  While aTab.Next() Do
    If aTab.Сумма=0 Then
      Continue;
    EndIf;
    а:=а+1;
    If а>7 Then
      Continue;
    EndIf;
    If Д.КодОперации=Enum.коПодотчетнаяОперация.Оплата Then
      Exec("
        |Дб"+а+":=""60.1"";
        |Кр"+а+":=""71.1"";");
    Else
      Exec("
        |Дб"+а+":=Trim(aTab.Счет.Code);
        |Кр"+а+":=""71.1"";");
    EndIf;
    Exec("
      |СмКр"+а+":="""";
      |СмДб"+а+":=глФРМ(aTab.Сумма)");
  EndDo;  

  Т.CopyByX("v1",1);
  Т.PageBreaks.Add();
  Т.CopyByX("v2",1);
  
  пН:=0;
  aTab.Select();
  While aTab.Next() Do
    If aTab.Сумма=0 Then
      Continue;
    EndIf;
    пН:=пН+1;
    пДок:=Trim(aTab.Содержание);
    пСм:=глФРМ(aTab.Сумма);
    СчДб:=?(Д.КодОперации=Enum.коПодотчетнаяОперация.Оплата,"60.1",Trim(aTab.Счет.Code));
    Т.CopyByX("v3",1);
  EndDo;
  Т.CopyByX("v4",1);
      
  Т.Printing.ScaleMode:=3;
  глПечатнаяФорма(Т,Param,"Авансовый отчет "+Д,0);
EndFunction

Function OnOpen()
  Result:=0;
  If not IsEmpty(Param) Then
    Д:=Param.GetByName("Object");
    
    If not глПроверкаПраваПечати(Д,Param,2) Then
      Exit;
    EndIf;
    
    Печать(Д);
  EndIf;
EndFunction

