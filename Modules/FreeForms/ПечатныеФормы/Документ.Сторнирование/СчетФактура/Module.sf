//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var Д Export;
Var Т Export;

Function Печать(Д)

  Т:=Table.Create();
  If Д.DocDate>='01.07.2021' Then
    Т.SetSourceName("Table");
  Else
    Т.SetSourceName("Table2107");
  EndIf;  

  ВД:=0;Приход:=0;
  aTab:=Д.ДокОснование.LoadStorage("Взаиморасчеты");
  aTab.Select();
  While aTab.Next() Do
    If aTab.Тара.Selected()<>0 Then
      Continue;
    EndIf;
    ВД:=aTab.ВидДолга;
    Приход:=1-aTab._Expense;
    Break;
  EndDo;
  If isEmpty(ВД) Then
    Box("Невозможно определить вид исходного документа, либо исходный документ неверен!",Q_STOP);
    Exit;
  EndIf;
  Прочее:=Д.КодОперации=Enum.коСторнирование.СторнированиеВзаиморасчетовПрочее; 
  
  фИНН:=глПолучитьИННПодразделения(Д.ЮрЛицо,Д.Склад.Магазин);
  фАдрес:=глПолучитьАдресПодразделения(Д.ЮрЛицо,Д.Склад.Магазин);
  фРук:="";фБух:="";глПолучитьСотрудниковПодразделения(Д.ЮрЛицо,Д.Склад.Магазин,Д.DocDate,фРук,фБух);
  фАдрес:=Д.ЮрЛицо.ПолнНаименование+", "+фАдрес;
  ТГТД:=глПолучитьТаблицуГТД(Д);  
  
  If ВД=Enum.ПокупательПоставщик.Покупатель Then
    пНом:="Корректировочный Счет-Фактура № "+Д.DocNum+" от "+Д.DocDate+", Исправление корректировочного Счета-Фактуры № _________ от __________";
    пНом2:="к Счету-Фактуре № "+Д.ДокОснование.DocNum+" от "+Д.ДокОснование.DocDate+", с учетом исправления № _________ от __________";
    пПост:="Продавец: "+Д.ДокОснование.ЮрЛицо.ПолнНаименование;
    пАДПост:="Адрес: "+Trim(Д.ДокОснование.ЮрЛицо.ЮрАдрес);
    пИННПост:="ИНН/КПП продавца: "+Д.ДокОснование.ЮрЛицо.ИНН;
    пПок:="Покупатель: "+TrimR(Д.ДокОснование.Контрагент.ПолнНаименование);
    пАДПок:="Адрес: "+Trim(Д.ДокОснование.Контрагент.ЮрАдрес);
    пИННПок:="ИНН/КПП покупателя: "+Д.ДокОснование.Контрагент.ИНН;
  Else
    Приход:=1-Приход;
    ЮрФизЛицо:=Д.ДокОснование.ЮрЛицо;
    пНом:="Корректировочный Счет-Фактура № "+Д.DocNum+" от "+Д.DocDate+", Исправление корректировочного Счета-Фактуры № _________ от __________";
    If глЕстьРеквизитДокумента("НомерДокВходящийСФ",Д.ДокОснование.DBName()) Then
      пНом2:="к Счету-Фактуре № "+Trim(Д.ДокОснование.НомерДокВходящийСФ)+" от "+Д.ДокОснование.ДатаДокВходящийСФ+", с учетом исправления № _________ от __________";
    Else
      пНом2:="к Счету-Фактуре № "+Д.ДокОснование.DocNum+" от "+Д.ДокОснование.DocDate+", с учетом исправления № _________ от __________";
    EndIf;
    пПост:="Продавец: "+Д.ДокОснование.Контрагент.ПолнНаименование;
    пАДПост:="Адрес: "+Trim(Д.ДокОснование.Контрагент.ЮрАдрес);
    пИННПост:="ИНН/КПП продавца: "+Д.ДокОснование.Контрагент.ИНН;
    пПок:="Покупатель: "+TrimR(ЮрФизЛицо.ПолнНаименование);
    пАДПок:="Адрес: "+Trim(ЮрФизЛицо.ЮрАдрес);
    пИННПок:="ИНН/КПП покупателя: "+ЮрФизЛицо.ИНН;
  EndIf;
  
  фВал:="Российский рубль, 643";
  пВалюта:="Валюта: наименование, код: "+фВал;
  Т.CopyByX("v1",1);
  Т.Printing.ContinualLines.From:=Т.Height()-2;
  Т.Printing.ContinualLines.To:=Т.Height();
  
  Т2:=Tab.Create();
  If not isEmpty(Struct.Doc(Д.ДокОснование.DBName()).LineParts("Содержание")) Then
    Д.ДокОснование.LineParts("Содержание").CopyTo(Т2);
  ElseIf not isEmpty(Struct.Doc(Д.ДокОснование.DBName()).LineParts("Номенклатура")) Then
    Д.ДокОснование.LineParts("Номенклатура").CopyTo(Т2);
  ElseIf not isEmpty(Struct.Doc(Д.ДокОснование.DBName()).LineParts("Заправки")) Then
    Д.ДокОснование.LineParts("Заправки").CopyTo(Т2);
  Else
    Т2:=0;
  EndIf;
  
  If Прочее Then
    If Д.LineParts("Номенклатура").Size()<>Т2.Size() Then
      Box("Количество строк в документе не совпадает с количеством строк в исходном документе!",Q_STOP);
      Exit;
    EndIf;
  EndIf;
  
  пНомер:=0;
  aTab:=Д.LineParts("Номенклатура");
  НомСтр:=0;
  пСмНДСИтог3:=0;
  пСмНДСИтог4:=0;
  пСмБезНДСИтог3:=0;
  пСмБезНДСИтог4:=0;
  пСмИтог3:=0;
  пСмИтог4:=0;
  aTab.Select();
  While aTab.Next() Do
    НомСтр:=НомСтр+1;
    См2:=aTab.Сумма;
    СтавкаНДС2:=aTab.СтавкаНДС;
    пК2:=aTab.Количество;
    
    пК:=0;
    СтавкаНДС:=СтавкаНДС2;
    См:=0;
    If not isEmpty(Т2) Then
      If Т2.Size()>=НомСтр Then
        Т2.CurLine:=НомСтр;
        If Т2.GetColumnIndex("Номенклатура")>0 Then
          If Т2.Номенклатура<>aTab.Номенклатура Then
            Message("Порядок строк в оригинальном документе отличается от сторнирования. Вывод печатной формы продолжен не будет!","!");
            Exit;
          EndIf;
          If Т2.GetColumnIndex("Партия")>0 Then
            If Т2.Партия<>aTab.Партия Then
              Message("Порядок строк в оригинальном документе отличается от сторнирования. Вывод печатной формы продолжен не будет!","!");
              Exit;
            EndIf;
          EndIf;
        EndIf;
        пК:=Т2.Количество;
        СтавкаНДС:=Т2.СтавкаНДС;
        См:=Т2.Сумма;
      EndIf;
    EndIf;
    пСтНДС:=?(IsEmpty(СтавкаНДС),"Без НДС",Trim(СтавкаНДС));
    
    пН:=aTab.Номенклатура;
    If Прочее Then
      пН:="Услуга";
      пК2:=1;
      If not isEmpty(Т2) Then
        If Т2.Size()>=НомСтр Then
          Т2.CurLine:=НомСтр;
          If Т2.Сумма=aTab.СтараяСумма Then
            If глЕстьРеквизитДокумента("Содержание",Д.ДокОснование.DBName()) Then
              пН:=Trim(Т2.Содержание);
            EndIf;  
            пК2:=Т2.Количество;
          EndIf;
        EndIf;
      EndIf;
    EndIf;
    пСтНДС2:=?(IsEmpty(aTab.СтавкаНДС),"Без НДС",Trim(aTab.СтавкаНДС));
    
    If (пК2=пК)And(См=См2)And(пСтНДС2=пСтНДС) Then
      Continue;
    EndIf;
    
    пЕд:="шт";
    пКодЕд:="796";
    пЕд2:="шт";
    пКодЕд2:="796";
    пАкциз:="Без акциза";
    пАкциз2:="Без акциза";
    пАкциз3:="-";
    пАкциз4:="-";
    
    пСтрана:="";
    пСтранаКод:="";
    пГТД:="";
    пСтрана2:="";
    пСтранаКод2:="";
    пГТД2:="";
    If not Прочее Then
      зН:=aTab.Номенклатура;
      If зН.сертСтранаПроисхождения.Selected()<>0 Then
        пСтрана:=зН.сертСтранаПроисхождения;
        пСтранаКод:=Trim(пСтрана.ВнешнийКод);
        If Pos("РОССИ",UpperCase(пСтрана))=1 Then
          пСтрана:="";
          пСтранаКод:="";
        EndIf;
        пГТД:=Trim(зН.сертНомерГТД);
      EndIf;
      If ТГТД.FindAndGoto(зН,,"зН")>0 Then
        пГТД:=ТГТД.пГТД;
      EndIf;
      
      If not isEmpty(Т2) Then
        If Т2.Size()>=НомСтр Then
          Т2.CurLine:=НомСтр;
          зН:=Т2.Номенклатура;
          If зН.сертСтранаПроисхождения.Selected()<>0 Then
            пСтрана:=зН.сертСтранаПроисхождения;
            пСтранаКод:=Trim(пСтрана.ВнешнийКод);
            If Pos("РОССИ",UpperCase(пСтрана))=1 Then
              пСтрана:="";
              пСтранаКод:="";
            EndIf;
            пГТД:=Trim(зН.сертНомерГТД);
          EndIf;
          If ТГТД.FindAndGoto(зН,,"зН")>0 Then
            пГТД:=ТГТД.пГТД;
          EndIf;
        Else
          пСтрана2:=пСтрана;
          пСтранаКод2:=пСтранаКод;
          пГТД2:=пГТД;
        EndIf;
      EndIf;
    EndIf;
    
    
    пСмВсего2:=глФРМ(См2);
    пСмВсего:=глФРМ(См);
    пСмНДС2:=Round(См2*глКоэффНДС(СтавкаНДС2),2);
    пСмНДС:=Round(См*глКоэффНДС(СтавкаНДС),2);
    пСмБезНДС2:=См2-пСмНДС2;
    пСмБезНДС:=См-пСмНДС;
    
    пЦ:=?(пК=0,0,глФРМ(пСмБезНДС/пК));
    пЦ2:=?(пК2=0,0,глФРМ(пСмБезНДС2/пК2));
    пСмНДС3:=глФРМ(Max(0,пСмНДС2-пСмНДС));
    пСмНДС4:=глФРМ(Max(0,пСмНДС-пСмНДС2));
    пСмВсего3:=глФРМ(Max(0,См2-См));
    пСмВсего4:=глФРМ(Max(0,См-См2));
    пСмБезНДС3:=глФРМ(Max(0,пСмБезНДС2-пСмБезНДС));
    пСмБезНДС4:=глФРМ(Max(0,пСмБезНДС-пСмБезНДС2));
    
    пСмИтог3:=пСмИтог3+Max(0,См2-См);
    пСмИтог4:=пСмИтог4+Max(0,См-См2);
    пСмНДСИтог3:=пСмНДСИтог3+Max(0,пСмНДС2-пСмНДС);
    пСмНДСИтог4:=пСмНДСИтог4+Max(0,пСмНДС-пСмНДС2);
    пСмБезНДСИтог3:=пСмБезНДСИтог3+Max(0,пСмБезНДС2-пСмБезНДС);
    пСмБезНДСИтог4:=пСмБезНДСИтог4+Max(0,пСмБезНДС-пСмБезНДС2);
    
    пСмНДС:=глФРМ(пСмНДС);
    пСмНДС2:=глФРМ(пСмНДС2);
    пСмБезНДС:=глФРМ(пСмБезНДС);
    пСмБезНДС2:=глФРМ(пСмБезНДС2);
    
    пНомер:=пНомер+1;
    Т.CopyByX("v2",1);
  EndDo;
  пСмНДСИтог3:=глФРМ(пСмНДСИтог3);
  пСмНДСИтог4:=глФРМ(пСмНДСИтог4);
  пСмБезНДСИтог3:=глФРМ(пСмБезНДСИтог3);
  пСмБезНДСИтог4:=глФРМ(пСмБезНДСИтог4);
  пСмИтог3:=глФРМ(пСмИтог3);
  пСмИтог4:=глФРМ(пСмИтог4);
  Т.CopyByX("v3",1);
  Т.CopyTitles();
  
  глПечатнаяФорма(Т,Param,"Счет-фактура к документу "+Д,1);
EndFunction

Function OnOpen()
  Result:=0;
  If not IsEmpty(Param) Then
    Д:=Param.GetByName("Object");
    
    If Д.ДокОснование.Selected()=0 Then
      Box("Печатная форма работает только для документов с выбранным основанием!",Q_STOP);
      Exit;
    EndIf;
    
    If Д.ДокОснование.Status()<2 Then
      Box("Печатная форма работает только для документов с обработанным основанием!",Q_STOP);
    EndIf;
    
    If (Д.Status()<2)Or(Д.ДокОснование.УчитыватьВНалоговомУчете=0) Then
      Box("Нельзя печатать счет-фактуру к документу, так как он не обработан, либо счет-фактура не выписана!",Q_STOP);
      Exit;
    EndIf;
        
    If not глПроверкаПраваПечати(Д,Param,2) Then
      Exit;
    EndIf;
    
    Печать(Д);
  EndIf;
EndFunction



