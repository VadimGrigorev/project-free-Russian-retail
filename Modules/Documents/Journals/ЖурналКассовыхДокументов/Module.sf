//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.

Var спОтбор Export;

Function СохранитьУстановки()
  StoreValue("ЖурналКассовыхДокументовОтбор",спОтбор);
EndFunction

Function ОбновитьИнформацию()
  If isEmpty(спОтбор) Then
    Exit;
  EndIf;
  аЮрЛицо:=0;
  аКасса:=0;
  If not isEmpty(спОтбор.GetByName("ЮрЛицо")) Then
    аЮрЛицо:=спОтбор.GetByName("ЮрЛицо");
  EndIf;
  If not isEmpty(спОтбор.GetByName("Касса")) Then
    аКасса:=спОтбор.GetByName("Касса");
  EndIf;  
  НачДата:=спОтбор.GetByName("НачДата");
  КонДата:=спОтбор.GetByName("КонДата");

  ТЗ:="Period From НачДата to КонДата;
  |зК:=Storage.Касса.Касса;
  |зЮЛ:=Storage.Касса.ЮрЛицо;
  |зСмП:=Income(Сумма);
  |зСмР:=Expense(Сумма);
  |зСмНО:=BegTotals(Сумма);
  |зСмКО:=EndTotals(Сумма);"+
  ?(аКасса=0,"","Condition(зК IN аКасса);")+
  ?(аЮрЛицо=0,"","Condition(зЮЛ IN аЮрЛицо);");

  З:=Query.Create();
  З.Execute(ТЗ);
  
  Form.пНП.Caption:=глФРМ(З.BegTotals("зСмНО"),"");
  Form.пПриход.Caption:=глФРМ(З.Compute("зСмП"),"");
  Form.пРасход.Caption:=глФРМ(З.Compute("зСмР"),"");
  Form.пКП.Caption:=глФРМ(З.EndTotals("зСмКО"),"");
  
  ФлН:=0;
  ФлО:=0;
  If (Form.ЮрЛицо.Value.Selected()<>0)and(Form.Касса.Value.Selected()<>0) Then
    аЮЛ:=Form.ЮрЛицо.Value;
    If (З.BegTotals("зСмНО")>аЮЛ.ЛимитСуммыВКассе)And(аЮЛ.ЛимитСуммыВКассе>0) Then
      ФлН:=1;
    EndIf;
    If (З.BegTotals("зСмКО")>аЮЛ.ЛимитСуммыВКассе)And(аЮЛ.ЛимитСуммыВКассе>0) Then
      ФлО:=1;
    EndIf;
  EndIf;
  Form.пНП.Color:=?(ФлН=1,_CLR_RED,_CLR_BTNFACE);
  Form.пКП.Color:=?(ФлО=1,_CLR_RED,_CLR_BTNFACE);
EndFunction

Function ПрименитьУстановки(ФлЗапись=0,флОбновитьИнфо=0)
  НачДата:=спОтбор.GetByName("НачДата");
  КонДата:=спОтбор.GetByName("КонДата");
  If isEmpty(НачДата)+isEmpty(КонДата)>0 Then
    НачДата:=Date();
    КонДата:=Date();
    спОтбор.SetByName("НачДата",НачДата);
    спОтбор.SetByName("КонДата",КонДата);
    ФлЗапись:=1;
  EndIf;
  Фильтры:=">=DocDate,<DocDate";
  Значения:="'"+BegOfDay(НачДата)+"','"+BegOfDay(КонДата+1)+"'";
  Form.пПериод.Caption:="с "+FormatDate(НачДата,"DD MMM YYYY")+" по "+FormatDate(КонДата,"DD MMM YYYY");
  
  аЮрЛицо:=0;
  аКасса:=0;
  аВид:=0;
  If not isEmpty(спОтбор.GetByName("Вид")) Then
    Фильтры:=Фильтры+",=@LINKTYPE";
    аВид:="DOC."+спОтбор.GetByName("Вид");
    Значения:=Значения+",аВид";
    а:=Max(Form.ТипДокумента.Value.Find(спОтбор.GetByName("Вид")),1);
    Form.ТипДокумента.Value.SelectedLine:=а;
  EndIf;
  If not isEmpty(спОтбор.GetByName("ЮрЛицо")) Then
    Фильтры:=Фильтры+",->ЮрЛицо";
    аЮрЛицо:=спОтбор.GetByName("ЮрЛицо");
    Значения:=Значения+",аЮрЛицо";
    If Form.ЮрЛицо.Value<>аЮрЛицо Then
      Form.ЮрЛицо.Value:=аЮрЛицо;
    EndIf;
  ElseIf not isEmpty(Form.ЮрЛицо.Value) Then
    Form.ЮрЛицо.Value:=0;
  EndIf;
  If not isEmpty(спОтбор.GetByName("Касса")) Then
    Фильтры:=Фильтры+",->Касса";
    аКасса:=спОтбор.GetByName("Касса");
    Значения:=Значения+",аКасса";
    If Form.Касса.Value<>аКасса Then
      Form.Касса.Value:=аКасса;
    EndIf;
  ElseIf not isEmpty(Form.Касса.Value) Then
    Form.Касса.Value:=0;
  EndIf;
  флНеОбработанные:=Number(спОтбор.GetByName("флНеОбработанные"));
  If флНеОбработанные=0 Then
    Фильтры:=Фильтры+",>@Status";
    Значения:=Значения+",1";
  EndIf;
  If Form.оНеОбработанные.Value<>флНеОбработанные Then
    Form.оНеОбработанные.Value:=флНеОбработанные;
  EndIf;
  
  //Наложение фильтров одновременно, чтобы исключить множественные обновления.
  Exec("Form.MainTab.SetFilters("""+Фильтры+""","+Значения+")");
  If ФлЗапись Then
    СохранитьУстановки();
  EndIf;
  
  If флОбновитьИнфо Then
    ОбновитьИнформацию();
  EndIf;
EndFunction

