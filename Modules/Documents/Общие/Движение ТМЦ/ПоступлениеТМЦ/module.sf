//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var флВидимостьПартий Export;
Var СуммаМаржПрибыли Export;
Var флТипЦенРеализации Export;
Var ТЦеныЗакупок Export;

Var ВыделятьСтроки Export;
Var ВыделеннаяСтрокаПред Export;
ВыделятьСтроки:=Number(RestoreValue("ВыделятьСтрокиТаблиц"));

Function Видимость()
  aEl:=Form.Object;
  ФлЗП:=aEl.КодОперации=Enum.коПоступлениеТМЦ.ЗаявкаПоставщику;
  флВидимостьПартий:=aEl.Склад.БезПартионногоУчета=0;
  
  Form.УчитыватьВНалоговомУчете.isDisabled:=1-глПользователь.бухБухгалтер*(1-ФлЗП);
  Form.MainTab.Value.Column("Партия").isVisible:=флВидимостьПартий;
  Form.MainTab.Value.Column("Партия").isReadonly:=1-глПользователь.бухБухгалтер;
  If aEl.флПересчетРозничныхЦенВыполнен Then
    Form.кнЦены.FontColor:=_CLR_WINDOWTEXT;
    Form.кнЦены.FontStyle:=0;
    Form.кнЦены.Glyph:=1;
  EndIf;
  
  If aEl.СтатьяМаркетинга.Selected()<>0 Then
    Form.оТабМаркетинг.isDisabled:=1;
  Else
    Form.оТабМаркетинг.isDisabled:=0;
  EndIf;
EndFunction

Function ОбновитьЦеныЗакупокВТаблице(ФлБезВизуальнойТаблицы=0)
  aEl:=Form.Object;
  If (Form.Mode<>3)And(aEl.Status()<2) Then
    Exit;
  EndIf;
  aTab:=aEl.LineParts("Номенклатура");
  aTab.Select();
  While aTab.Next() Do
    If _And(aTab.ЦенаБезСкидки>0,aTab.Номенклатура.Selected()<>0) Then
      Continue;
    EndIf;
    зЦ:=глПолучитьОсновнуюЦену(aTab.Номенклатура,aEl.Склад,aEl.DocDate,1,ТЦеныЗакупок);
    If зЦ>0 Then
      aTab.ЦенаБезСкидки:=зЦ;
    EndIf;
  EndDo;
  If not ФлБезВизуальнойТаблицы Then
    Form.MainTab.InvokeEvent("OnInitLine","IndexFrom,IndexTo",1,aTab.Size());
  EndIf;
EndFunction

Function ОбновитьМаржПрибыль()
  aEl:=Form.Object;
  aTab:=aEl.LineParts("Номенклатура");
  СуммаМаржПрибыли:=0;
  aTab.Select();
  While aTab.Next() Do
    If (aTab.Номенклатура.ВидНоменклатуры=Enum.ВидыНоменклатуры.Товар)And(aTab.ЦенаБезСкидки>0) Then
      СуммаМаржПрибыли:=Round(СуммаМаржПрибыли+Round(aTab.ЦенаБезСкидки*aTab.Количество,2)-aTab.Сумма,2);
    EndIf;
  EndDo;
  Form.пСуммаМаржПрибыли.Caption:=глФРМ(СуммаМаржПрибыли,"");
EndFunction

Function ПриИзмененииСклада(ФлПересчет=1)
  aEl:=Form.Object;
  if Form.IsFullyInitialized() Then
    aTab:=aEl.LineParts("Номенклатура");
    Form.MainTab.InvokeEvent("OnInitLine","IndexFrom,IndexTo",1,aTab.Size());
  EndIf;  
  Form.ТипЦен.Value:=aEl.Склад.рзТипЦенПоступления;
  If aEl.Магазин<>aEl.Склад.Магазин Then
    aEl.Магазин:=aEl.Склад.Магазин;
    If ФлПересчет Then
      If AskQuestion("Изменился склад и магазин, заполнить графу цена без скидки, исходя из цен поступления выбранного склада?",Q_QUESTION+Q_YESNO,R_YES)=R_YES Then
        aTab:=aEl.LineParts("Номенклатура");
        aTab.Select();
        While aTab.Next() Do
          Ц0:=глПолучитьОсновнуюЦену(aTab.Номенклатура,aEl.Склад,aEl.DocDate);
          aTab.ЦенаБезСкидки:=?(Ц0=0,aTab.Цена,Ц0);
        EndDo;
      EndIf;
    EndIf;    
  EndIf;
EndFunction

Function OnAfterChangeOperationCode()
  ПриИзмененииСклада();
  Видимость();
EndFunction

Function ОбновитьПеремещение2()
  Сп:=List.Create();
  aEl:=Form.Object;
  aList:=aEl.LoadLinkedDocuments(1);
  For i:=1 To aList.Size() Do
    bEl:=aList[i];
    If _And(bEl.DBName()="Регистр2ЕГАИС",bEl.Status()<>1) Then
      Сп.Add(bEl);
    EndIf;
  EndDo;
  If Сп.Size()=0 Then
    Form.пЕГАИС2.Tag:=0;
    Form.пЕГАИС2.Value:="";
  ElseIf Сп.Size()=1 Then
    Form.пЕГАИС2.Tag:=Сп;
    Form.пЕГАИС2.Value:=Сп[1];
  Else
    Form.пЕГАИС2.Tag:=Сп;
    Form.пЕГАИС2.Value:="Документов: "+Сп.Size();
  EndIf;
EndFunction

Function OnBeforeDocumentSaveOrPublish(флОбработка,byRef флПарам)
  aEl:=Form.Object;
  If not глПроверитьДокументПриходаНаОтрицательныеОстатки(aEl) Then
    Exit 0;
  EndIf;
  If _And(not isEmpty(aEl.ОтложитьНДСНаПериод),BegOfMonth(aEl.ОтложитьНДСНаПериод)<=BegOfMonth(aEl.DocDate)) Then
    Box("В документе неверно указана дата отложенного НДС!",Q_STOP);
    Exit 0;
  EndIf;
  If not глПроверкаКорректностиНоменклатурыВДокументе(aEl) Then
    Exit 0;
  EndIf;
  Фл:=0;
  aTab:=aEl.LineParts("Номенклатура");
  aTab.Select();
  While aTab.Next() Do
    зН:=aTab.Номенклатура;
    If зН.ВидНоменклатуры=Enum.ВидыНоменклатуры.Услуга Then
      Continue;
    EndIf;
    If _AND(aTab.ЦенаБезСкидки=0,aEl.КодОперации<>Enum.коПоступлениеТМЦ.ЗаявкаПоставщику) Then
      Message("Для строки документа "+aTab.CurLine+" не указана цена закупки (цена без скидки). Если это первый приход необходимо установить цену закупки равной цене документа!","!");
      Фл:=1;
    EndIf;
    If (aTab.Номенклатура.флПартионныйУчет=1)And(aTab.Партия.Selected()=0)And(aEl.КодОперации<>Enum.коПоступлениеТМЦ.ЗаявкаПоставщику) Then
      If aTab.Номенклатура.флАлкогольнаяПродукция Then
        Message("Для строки документа "+aTab.CurLine+" не указана партия для товара с партионным учетом!","!");
        If not глРаботаетРобот Then
          Фл:=1;
        EndIf;
      Else
        аПартия:=Ref.тмцПартииТМЦ;
        аПартия.UseOrder("Code-");
        If not аПартия.Find("~(@Status=0)And(@Parent=aTab.Номенклатура)") Then
          Message("Для строки документа "+aTab.CurLine+" не задано ни одной партии для товара с партионным учетом!","!");
          If not глРаботаетРобот Then
            Фл:=1;
          EndIf;
        Else
          aTab.Партия:=аПартия;
        EndIf;
      EndIf;
    EndIf;
  EndDo;
  If Фл Then
    Exit 0;
  EndIf;
  
  
  If aEl.Договор.Selected()=0 Then
    Box("Необходимо выбрать контрагента и договор, прежде чем записывать или обрабатывать документ!",Q_STOP);
    Exit 0;
  EndIf;

  If (aEl.Склад.Selected()<>0)And(not глПользователь.общиеАдминистратор)And(not глПользователь.общиеКорректировкаСкладскихОстатков) Then
    If aEl.Склад.Магазин<>глПользователь.Магазин Then
      Box("Вам запрещено создавать документы для выбранного склада!",Q_STOP);
      Exit 0;
    EndIf;
  EndIf;
  
  If aEl.ТипПроводки.Selected()<>0 Then
    If Trim(aEl.СубконтоТипаПроводки)="" Then
      If not глРедактироватьСубконтоТипаПроводки(aEl,1) Then
        Exit 0;
      EndIf;
    EndIf;
  EndIf;

  If isEmpty(aEl.ДатаДоставки) Then
    aEl.ДатаДоставки:=aEl.DocDate+1;
  EndIf;
  
  aTab:=aEl.LineParts("Номенклатура");
  Фл:=1;
  aTab.Select();
  While aTab.Next() Do
    If aTab.Количество<0 Then
      Message("У номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") указано отрицательное количество!","!");
      Фл:=0;
    EndIf;
    If aTab.Номенклатура.Selected()=0 Then
      Message("В строке "+aTab.CurLine+" не выбрана номенклатура!","!");
      Фл:=0;
    EndIf;
  EndDo;
  If Фл=0 Then
    Exit 0;
  EndIf;
  
  If (aEl.Контрагент.ТипАктива=1)And(aEl.Склад.ИспользоватьВАктиве>0) Then
    ОбновитьМаржПрибыль();
    СуммаМаржПрибыли:=?(aEl.КодОперации=Enum.коПоступлениеТМЦ.ПоступлениеТМЦ,СуммаМаржПрибыли,0);
    If not глКорректностьСуммыМаркетинга(aEl,СуммаМаржПрибыли) Then
      Exit 0;
    EndIf;
  EndIf;
  //флПарам:=List.Create();
  //флПарам.SetByName("ПересчитатьРозничныеЦены",Form.оФорсЦен.Value);
  
  Exit 1;
EndFunction


Function OnCreateFromObject()
  aEl:=Form.Object;
  aEl.ДокОснование:=aEl.FounderObject();
  ФлБезЗаполнения:=0;
  If aEl.ДокОснование.DBName()="АктПоСкладу" Then
    If aEl.ДокОснование.КодОперации=Enum.коАктПоСкладу.Инвентаризация Then
      aTab:=aEl.LineParts("Номенклатура");
      aTab.Lock();
      try
        ФлПартии:=1-Min(aEl.ДокОснование.Склад.БезПартионногоУчета,1);
        Т:=Tab.Create();
        aEl.ДокОснование.LineParts("Номенклатура").CopyTo(Т,,,"Номенклатура,"+?(ФлПартии=0,"","Партия,")+"Цена,Количество,КоличествоФактическое");
        Т.Group("Номенклатура,"+?(ФлПартии=0,"","Партия,")+"Цена","Количество,КоличествоФактическое");
        Т.Select();
        While Т.Next() Do
          If Т.КоличествоФактическое<=Т.Количество Then
            Continue;
          EndIf;
          aTab.NewLine();
          aTab.Количество:=Т.КоличествоФактическое-Т.Количество;
          aTab.Номенклатура:=Т.Номенклатура;
          If ФлПартии Then
            aTab.Партия:=Т.Партия;
          EndIf;          
          aTab.Цена:=Т.Цена;
          глПересчитатьСтроку(aEl,aTab,"Код@Количество2@Сумма@СуммаНДС");
        EndDo;
      Finally
        aTab.Unlock();
      EndTry;  
      ФлБезЗаполнения:=1;
    EndIf;
  EndIf;
  
  If not ФлБезЗаполнения Then
    if not глЗаполнениеПоДокументуОснованию(aEl,1,0) Then
      Form.Close(0);
      Exit;
    EndIf;
  EndIf;
EndFunction

Function OnUnknownAction(Тип)
  aEl:=Form.Object;
  If Тип="Выполнить обмен по текущему магазину..." Then
    If aEl.Склад.Магазин.Selected()=0 Then
      Box("Для склада документа не выбран магазин!",Q_STOP);
      Exit;
    EndIf;
    Фл:=0;
    аМагазин:=aEl.Склад.Магазин;
    аПротокол:=Ref.рознПротоколыОбменаМагазинов;
    If аПротокол.Find("@Parent,@Status,ПутьДрайвераОбмена",аМагазин,0,"Modules\FreeForms\ПротоколыОбмена\РаспределеннаяБаза\") Then
      aList:=List.Create();
      aList["Команда"]:="Выгрузка всех магазинов";
      aList["СпМагазины"]:=List.Create(аМагазин);
      aList["ВизуальныйВызов"]:=1;
      LoadModule(0,"Modules\FreeForms\ПротоколыОбмена\РаспределеннаяБаза",aList,0,"Module","Form");
      Фл:=1;
    EndIf;
    If аПротокол.Find("@Parent,@Status,ПутьДрайвераОбмена",аМагазин,0,"Modules\FreeForms\ПротоколыОбмена\ФронтолСервер\") Then
      aList:=List.Create();
      aList["Команда"]:="Выгрузка всех магазинов";
      aList["СпМагазины"]:=List.Create(аМагазин);
      aList["ВизуальныйВызов"]:=1;
      LoadModule(0,"Modules\FreeForms\ПротоколыОбмена\ФронтолСервер",aList,0,"Module","Form");
      Фл:=1;
    EndIf;
    If not Фл Then
      Box("Для магазина отсутствуют зарегистрированные подходящие протоколы обмена!",Q_STOP);
    EndIf;
  ElseIf тип="Загрузка из внешнего файла xls(x) или txt" Then
  
    If Form.cDocDate.isDisabled Then
      Exit;
    EndIf;
  
    If _Or(aEl.Status()<0,Form.IsChanged()=1) Then
      Box("Документ не записан!",Q_STOP);
      Exit;
    EndIf;
    
    cols:=List.create("Штрихкод","Количество","Цена","Сумма","ЦенаБезСкидки");
    colsLowercase:=List.create("штрихкод","количество","цена","сумма","ценабезскидки");
    xTab:=Tab.create(cols.toString(","));
    
    Box("Файл загрузки должен иметь формат xls,xlsx,txt. Документ должен иметь как минимум одну из следующих колонок: "+cols.toString(", "),Q_INFORMATION);
    Путь:="Документ";
    If not OpenFileDialog(Путь,"Выберите файл для загрузки:","Файл xls/xlsx/txt") Then
      Exit;
    EndIf;
    
    If _AND(GetExt(Путь)<>"xls",GetExt(Путь)<>"xlsx",GetExt(Путь)<>"txt") Then
      Box("Файл не соответствует формату xls,xlsx или txt!",Q_STOP);
      Exit;
    Endif;
    
    If _OR(GetExt(Путь)="xls",GetExt(Путь)="xlsx") Then
      aTable:=Table.create();
      Try
        aTable.load(Путь);
      Except
        Box("Файл заблокирован или не существует!",Q_STOP);
        Exit;
      Endtry;
      
      If aTable.size()<2 Then
        Box("Документ пуст!",Q_STOP);
        Exit;
      EndIf;
      
      спСтолбцы:=List.create();
      For c:=1 To aTable.sizec() Do
        стрСтолбец:=aTable.area(c,1).text;
        If _AND(colsLowercase.find(lowercase(стрСтолбец))<1,стрСтолбец<>"") Then 
          Message("Неизвестный столбец """+стрСтолбец+""" будет пропущен","i");
        ElseIf _AND(colsLowercase.find(lowercase(стрСтолбец))<1,стрСтолбец="") Then
          Message("Найден пустой столбец - будет пропущен","i");
          спСтолбцы.add("Пустой#"+number(спСтолбцы.size()+1));
          Continue;
        EndIf;
        спСтолбцы.add(стрСтолбец);
      EndDo;
      
      For r:=2 To aTable.size() Do
        xTab.newLine();        
        For c:=1 To спСтолбцы.size() Do
          стрЗначение:=aTable.area(c,r).text;
          If colsLowercase.find(lowercase(спСтолбцы[c]))>0 Then
            xTab[спСтолбцы[c]]:=стрЗначение;
          EndIf;
        EndDo;
      EndDo;
            
    ElseIf GetExt(Путь)="txt" Then
      txt:=Text.create();
      txt.load(Путь);
      
      If txt.size()<2 Then
        Box("Документ пуст!",Q_STOP);
        Exit;
      EndIf;
      
      спСтолбцы:=List.create();
      стрСтолбцы:=trim(txt.getLine(1));
      стрСтолбец:="НазваниеСтолбца";
      While стрСтолбец<>"" Do
        стрСтолбец:=tearStr(стрСтолбцы,_TAB);
        If _AND(colsLowercase.find(lowercase(стрСтолбец))<1,стрСтолбец<>"") Then 
          Message("Неизвестный столбец """+стрСтолбец+""" будет пропущен","i");
        ElseIf _AND(colsLowercase.find(lowercase(стрСтолбец))<1,стрСтолбец="") Then
          Message("Найден пустой столбец - будет пропущен","i");
          спСтолбцы.add("Пустой#"+number(спСтолбцы.size()+1));
          Continue;
        EndIf;
        спСтолбцы.add(стрСтолбец);
      EndDo;
      
      If спСтолбцы.size()=0 Then
        Message("Не найдено ни одного столбца из списка: "+cols.toString(", "),"!");
        Exit;
      EndIf;
        
      For i:=2 To txt.size() Do
        стрЗначения:=txt.getLine(i);
        xTab.newLine();
        For ii:=1 to спСтолбцы.size() Do
          стрЗначение:=tearStr(стрЗначения,_TAB);
          If colsLowercase.find(lowercase(спСтолбцы[ii]))>0 Then
            xTab[спСтолбцы[ii]]:=стрЗначение;
          EndIf;
        EndDo;
      EndDo;   
    EndIf;
    
    aEl:=Form.Object;
    aTab:=aEl.LineParts("Номенклатура");
    MainTab:=Form.MainTab.Value;
    MainTab.Lock();
   
    Try
      xTab.select();
      While xTab.next() Do
        Штрихкод:=DB("ref.тмцШтрихкоды","@Status,<>Name,Name",0,"",xTab.Штрихкод);
        Номенклатура:=?(_AND(not isEmpty(Штрихкод),DBObjectName(Штрихкод.parent())="тмцНоменклатура"),Штрихкод.parent(),"");
        Цена:=number(replace(replace(xTab.Цена,",",".")," ",""));
        Сумма:=number(replace(replace(xTab.Сумма,",",".")," ",""));
        Количество:=number(replace(replace(xTab.Количество,",",".")," ",""));
        ЦенаБезСкидки:=number(replace(replace(xTab.ЦенаБезСкидки,",",".")," ",""));
        
        If _AND(isEmpty(Номенклатура),not isEmpty(xTab.Штрихкод)) Then
          Message("Номенклатура со штрихкодом "+xTab.Штрихкод+" не найдена!","!");
        EndIf;
        
        If _AND(isEmpty(Цена),not isEmpty(Сумма),not isEmpty(Количество)) Then
          Цена:=Сумма/Количество;
        EndIf;
        
        If _AND(isEmpty(Сумма),not isEmpty(Цена),not isEmpty(Количество)) Then
          Сумма:=Цена*Количество;
        EndIf;
        
        If _AND(isEmpty(Количество),not isEmpty(Цена),not isEmpty(Сумма)) Then
          Количество:=Сумма/Цена;
        EndIf;
        
        If _AND(isEmpty(ЦенаБезСкидки),not isEmpty(Цена)) Then
          ЦенаБезСкидки:=Цена;
        EndIf;
        
        If aTab.find(Номенклатура,,"Номенклатура") Then
          Message("Позиция "+Номенклатура.name+" присутствует сразу в нескольких строках данного документа, будьте внимательны","i");
        Endif;
        
        If _AND(isEmpty(Номенклатура),isEmpty(Количество),isEmpty(Цена),isEmpty(Сумма),isEmpty(ЦенаБезСкидки)) Then
          Continue;
        EndIf;
       
        aTab.addLine("Номенклатура,Количество,Цена,Сумма,ЦенаБезСкидки",Номенклатура,Количество,Цена,Сумма,ЦенаБезСкидки);
      EndDo;
      глПересчитатьСтроку(aEl,aTab,"Сумма,СтавкаНДС,СуммаНДС");

    Finally
      MainTab.unlock();
    EndTry; 
       
    Form.MainTab.InvokeEvent("OnInitLine","IndexFrom,IndexTo",1,MainTab.Size());
    EndIf;
EndFunction
