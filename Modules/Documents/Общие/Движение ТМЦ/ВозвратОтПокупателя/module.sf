//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var СтарКод Export;
Var флВидимостьПартий Export;


Function OnBeforeChangeOperationCode(Стр)
  aEl:=Form.Object;
  СтарКод:=aEl.КодОперации;
  Exit 1;
EndFunction


Function OnCreateFromObject()
  //Ввод на основании
  aEl:=Form.Object;
  aEl.ДокОснование:=aEl.FounderObject();
  
  If aEl.ДокОснование.DBName()="Реализация" Then
    If CurDate()-aEl.ДокОснование.DocDate>5 Then
      If (Trim(aEl.ДокОснование.УникальныйИдентификатор)<>"")Or(Trim(aEl.ДокОснование.УникальныйИдентификатор2)<>"")Or(Trim(aEl.ДокОснование.УникальныйИдентификатор3)<>"") Then
        Box("Документ "+aEl.ДокОснование+" запрещен к изменению, так как ему присвоен внешний уникальный номер! Вы должны точно знать, что делаете!",Q_WARNING);
      EndIf;
    EndIf;
    
    If глНайтиПодчиненныйПоВиду(aEl.ДокОснование,"ВозвратОтПокупателя",1)<>0 Then
      If not глПользователь.бухБухгалтер Then
        Box("У этой реализации уже есть подчиненный возврат, у вас недостаточно полномочий, чтобы ввести второй!",Q_STOP);
        Form.Close(0);
        Exit;
      Else
        Box("У этой реализации уже есть подчиненный возврат, ввод нового нежелателен! Правильнее исправить старый возврат.",Q_WARNING);
      EndIf;
    ElseIf (BegOfMonth(aEl.ДокОснование.DocDate)<>BegOfMonth(aEl.DocDate)) Then
      Фл:=0;
      If TypeStr(Param)="LIST" Then
        Фл:=Number(Param.GetByName("ВозвратТары"));
      EndIf;
      If (not глПользователь.бухБухгалтер)And(Фл=0) Then
        Box("Нельзя вводить возврат на основании реализации другого месяца! Вместо возврата, введите, пожалуйста, поступление ТМЦ от данного покупателя! Дата возврата изменена на дату документа-основания!",Q_WARNING);
        aEl.DocDate:=BegOfDay(aEl.ДокОснование.DocDate);
      Else
        Box("Не рекомендуется вводить возврат на основании реализации другого месяца! Вместо возврата, введите, пожалуйста, поступление ТМЦ от данного покупателя!",Q_WARNING);
      EndIf;
    EndIf;
  EndIf;
  
  ФлБезЗаполнения:=0;
  If TypeStr(Param)<>"LIST" Then
    ФлБезЗаполнения:=1;
    if not глЗаполнениеПоДокументуОснованию(aEl,1,0) Then
      Form.Close(0);
      Exit;
    EndIf;
    глПересчитатьСтолбикиЕдиниц(aEl);
    If aEl.ДокОснование.DBName()="АктПоСкладу" Then
      If aEl.ДокОснование.КодОперации=Enum.коАктПоСкладу.Инвентаризация Then
        aTab:=aEl.LineParts("Номенклатура");
        aTab.Lock();
        Try
          ФлПартии:=1-Min(aEl.ДокОснование.Склад.БезПартионногоУчета,1);
          aTab.ClearLines();
          bTab:=Tab.Create();
          aEl.ДокОснование.LineParts("Номенклатура").CopyTo(bTab);
          bTab.Group("Номенклатура,"+?(ФлПартии=0,"","Партия,")+"Цена","Количество,КоличествоФактическое");
          bTab.Select();
          While bTab.Next() Do
            If bTab.КоличествоФактическое<=bTab.Количество Then
              Continue;
            EndIf;
            aTab.NewLine();
            aTab.Количество:=bTab.КоличествоФактическое-bTab.Количество;
            aTab.Номенклатура:=bTab.Номенклатура;
            If ФлПартии Then
              aTab.Партия:=bTab.Партия;
            EndIf;          
            aTab.Цена:=bTab.Цена;
            глПересчитатьСтроку(aEl,aTab,"Код@Количество2@Сумма@СуммаНДС");
          EndDo;
        Finally
          aTab.Unlock();
        EndTry;  
      EndIf;
    Else
      aTab:=aEl.LineParts("Номенклатура");
      aTab.Lock();
      Try
        aTab.Select();
        While aTab.Next() Do
          aTab.Цена:=aTab.Сумма/?(aTab.Количество=0,1,aTab.Количество);
        EndDo;
      Finally
        aTab.Unlock();
      EndTry;  
    EndIf;
    Exit;
  EndIf;
  
  if not глЗаполнениеПоДокументуОснованию(aEl,1,0,0) Then
    Form.Close(0);
    Exit;
  EndIf;
  aEl.Склад:=aEl.ДокОснование.Склад;
  aTab:=aEl.LineParts("Номенклатура");
  aTab.Lock();
  Try
    aTab.Select();
    While aTab.Next() Do
      aTab.Цена:=aTab.Сумма/?(aTab.Количество=0,1,aTab.Количество);
    EndDo;
  Finally
    aTab.Unlock();
  EndTry;  
EndFunction

Function Видимость()
  aEl:=Form.Object;
  флВидимостьПартий:=aEl.Склад.БезПартионногоУчета=0;
  MainTab:=Form.ControlByName("MainTab").Value;
  MainTab.Column("Партия").isVisible:=флВидимостьПартий;
  MainTab.Column("Партия").isReadonly:=1-глПользователь.бухБухгалтер;
EndFunction

Function OnAfterChangeOperationCode()
  aEl:=Form.Object;
  If (aEl.КодОперации=Enum.коВозвратОтПокупателя.ВозвратСторнирование)And(aEl.КодОперации<>СтарКод) Then
    If not глПользователь.бухБухгалтер Then
      Box("Вам запрещено создавать документы такого типа!",Q_STOP);
      aEl.КодОперации:=СтарКод;
    EndIf;
  EndIf;
  Видимость();
EndFunction

Function OnBeforeDocumentSaveOrPublish(флОбработка,byRef флПарам)
  aEl:=Form.Object;
  If (aEl.ДокОснование.Selected()=0)And(not глПользователь.общиеАдминистратор) Then
    If aEl.КодОперации=Enum.коВозвратОтПокупателя.ВозвратТМЦ Then
      If AskQuestion("Возврат разрешается вводить только на основании какого-либо документа! Нарушить правила?",Q_QUESTION+Q_YESNO)<>R_YES Then
        Exit 0;
      EndIf;
      If aEl.Status()<0 Then
        Logs.Write("Ввод возврата без основания (новый документ)",aEl,"НАРУШЕНИЯ");
      EndIf;  
    EndIf;
  EndIf;

  If not глПроверкаКорректностиНоменклатурыВДокументе(aEl) Then
    Exit 0;
  EndIf;
  
  If aEl.ТипПроводки.Selected()<>0 Then
    If Trim(aEl.СубконтоТипаПроводки)="" Then
      If not глРедактироватьСубконтоТипаПроводки(aEl,1) Then
        Exit 0;
      EndIf;
    EndIf;
  EndIf;
  
  If aEl.ДокОснование.Selected()<>0 Then
    If BegOfMonth(aEl.ДокОснование.DocDate)<>BegOfMonth(aEl.DocDate) Then
      If AskQuestion("Вводить возвраты на накладные других месяцев нельзя! Вместо этого, требуется сделать поступление от клиента или изменить дату возврата! "+
          "Вы хотите нарушить правила?",Q_QUESTION+Q_YESNO)<>R_YES Then
        Exit 0;
      EndIf;
      If aEl.Status()<0 Then
        Logs.Write("Ввод возврата документа другого месяца (новый документ)",aEl,"НАРУШЕНИЯ");
      EndIf;  
    EndIf;
  EndIf;
  
  ТРеал:=0;
  If aEl.ДокОснование.DBName()="Реализация" Then
    ТРеал:=Tab.Create();
    aEl.ДокОснование.LineParts("Номенклатура").CopyTo(ТРеал);
  EndIf;
  
  ФлОшибка:=0;
  ФлТовар:=0;
  нСтр:=0;
  aTab:=aEl.LineParts("Номенклатура");
  bTab:=Tab.Create();
  aTab.CopyTo(bTab);
  bTab.AddColumn("Товар");
  bTab.Select();
  While bTab.Next() Do
    нСтр:=нСтр+1;
    bTab.Товар:=0;
    If bTab.Номенклатура.ВидНоменклатуры=Enum.ВидыНоменклатуры.Товар Then
      bTab.Товар:=1;
      If bTab.Количество>0 Then
        ФлТовар:=1;
      EndIf;
    EndIf;
    If bTab.Количество<0 Then
      Message("У номенклатуры "+bTab.Номенклатура+" ("+bTab.Номенклатура.Code+") указано отрицательное количество!","!");
      ФлОшибка:=1;
    EndIf;
    If bTab.Номенклатура.Selected()=0 Then
      Message("В строке "+нСтр+" не выбрана номенклатура!","!");
      ФлОшибка:=1;
    EndIf;
    If (ТРеал=0)And(bTab.Цена=0) Then
      Message("У номенлатуры "+bTab.Номенклатура+" ("+bTab.Номенклатура.Code+") не указана цена!","!");
      If not глПользователь.бухГлавныйБухгалтер Then
        ФлОшибка:=1;
      EndIf;
    EndIf;
  EndDo;  
    
  
  If ТРеал<>0 Then
    bTab.Group("Товар,Номенклатура","Сумма,Количество");
    ТРеал.Group("Номенклатура","Сумма,Количество");
    bTab.Select();
    While bTab.Next() Do
      ФлНулеваяЦена:=0;
      If bTab.Товар=1 Then
        If ТРеал.FindAndGoto(bTab.Номенклатура,,"Номенклатура")=0 Then
          Message("Возврат от реализации "+aEl.ДокОснование+" содержит номенклатуру "+bTab.Номенклатура+" ("+bTab.Номенклатура.Code+"), которой не было в исходной реализации!","!");
          If not глПользователь.бухГлавныйБухгалтер Then
            ФлОшибка:=1;
          EndIf;
        Else
          If ТРеал.Количество<bTab.Количество Then
            Message("Возврат от реализации "+aEl.ДокОснование+" содержит номенклатуру "+bTab.Номенклатура+" ("+bTab.Номенклатура.Code+") с количеством "+bTab.Количество+" большим, чем в исходной реализации ("+ТРеал.Количество+")!","!");
            If not глПользователь.бухГлавныйБухгалтер Then
              ФлОшибка:=1;
            EndIf;
          EndIf;
          If ТРеал.Сумма=0 Then
            ФлНулеваяЦена:=1;
          EndIf;
        EndIf;
      EndIf;
      If (bTab.Сумма=0)And(not ФлНулеваяЦена) Then
        Message("У номенклатуры "+bTab.Номенклатура+" ("+bTab.Номенклатура.Code+") не указана цена!","!");
        If not глПользователь.бухГлавныйБухгалтер Then
          ФлОшибка:=1;
        EndIf;
      EndIf;
    EndDo;
  EndIf;  
  
  If ФлОшибка Then
    Exit 0;
  EndIf;
  
  If aEl.КодОперации=Enum.коВозвратОтПокупателя.ВозвратСторнирование Then
    If _Or(aEl.ДокОснование.Selected()=0,aEl.ДокОснование.DBName()<>"Реализация") Then
      Box("Документ Возврат (сторнирование) должен быть выписан на основании реализации!",Q_STOP);
      Exit 0;
    EndIf;
    If aEl.ДокОснование.Договор<>aEl.Договор Then
      Box("Документ Возврат (сторнирование) должен иметь одинаковый договор с реализацией, на основании которой он был выписан!",Q_STOP);
      Exit 0;
    EndIf;
  EndIf;
  
  If not глПроверитьДокументПриходаНаОтрицательныеОстатки(aEl) Then
    Exit 0;
  EndIf;
  
  Exit 1;
EndFunction
