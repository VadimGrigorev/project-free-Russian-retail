//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var флВидимостьПартий Export;
Var СтарыйСклад Export;
Var флБезПроверкиДубля Export;

Function Видимость()
  aEl:=Form.Object;
  флВидимостьПартий:=aEl.Склад.БезПартионногоУчета=0;
  Form.СуммаБезналичнойПродажи.isInvisible:=aEl.КодОперации<>Enum.коРеализация.РеализацияРозничная;
  Form.тСуммаБезналичнойПродажи.isInvisible:=aEl.КодОперации<>Enum.коРеализация.РеализацияРозничная;
  Form.СуммаБезналичнойПродажи.isDisabled:=not глПользователь.общиеАдминистратор;
  Form.СуммаСертификатов.isInvisible:=aEl.КодОперации<>Enum.коРеализация.РеализацияРозничная;
  Form.тСуммаСертификатов.isInvisible:=aEl.КодОперации<>Enum.коРеализация.РеализацияРозничная;
  Form.СуммаСертификатов.isDisabled:=not глПользователь.общиеАдминистратор;
  MainTab:=Form.ControlByName("MainTab").Value;
  MainTab.Column("Партия").isVisible:=флВидимостьПартий;
  MainTab.Column("Партия").isReadonly:=1-глПользователь.бухБухгалтер;
  Form.оЗакладки.Pages.Page("Маркетинг").IsDisabled:=(not глПользователь.общиеАдминистратор)or(aEl.КодОперации<>Enum.коРеализация.РеализацияРозничная);
EndFunction

Function OnAfterChangeOperationCode()
  Видимость();
EndFunction

Function OnCreateFromObject()
  //Ввод на основании
  aEl:=Form.Object;
  aEl.ДокОснование:=aEl.FounderObject();
  if not глЗаполнениеПоДокументуОснованию(aEl,1,0) Then
    Form.Close(0);
    Exit;
  EndIf;
  
  If aEl.ДокОснование.DBName()="АктПоСкладу" Then
    If aEl.ДокОснование.КодОперации=Enum.коАктПоСкладу.Инвентаризация Then
      aTab:=aEl.LineParts("Номенклатура");
      aTab.Lock();
      Try
        aTab.ClearLines();
        ФлПартии:=aEl.ДокОснование.Склад.БезПартионногоУчета=0;
        Т:=Tab.Create();
        bTab:=aEl.ДокОснование.LineParts("Номенклатура");
        bTab.CopyTo(Т);
        Т.Group("Номенклатура,"+?(ФлПартии=0,"","Партия,")+"Цена","Количество,КоличествоФактическое");
        Т.Select();
        While Т.Next() Do
          If Т.КоличествоФактическое>=Т.Количество Then
            Continue;
          EndIf;
          aTab.NewLine();
          aTab.Количество:=Т.Количество-Т.КоличествоФактическое;
          aTab.Номенклатура:=Т.Номенклатура;
          If ФлПартии Then
            aTab.Партия:=Т.Партия;
          EndIf;          
          aTab.Цена:=Т.Цена;
          глПересчитатьСтроку(aEl,aTab,"Код@Количество2@Сумма@СуммаНДС");
        EndDo;
      Finally  
        aTab.Unlock();
      EndTry;  
    EndIf;
  EndIf;  
EndFunction

Function ЗапретПересчета(Ред=0)
  aEl:=Form.Object;
  If (Trim(aEl.УникальныйИдентификатор)<>"")Or(Trim(aEl.УникальныйИдентификатор2)<>"")Or(Trim(aEl.УникальныйИдентификатор3)<>"") Then
    Box("В документе с внешним уникальным номером запрещено менять содержимое строк!",Q_STOP);
    If not глПользователь.общиеАдминистратор Then
      Exit 1;
    EndIf;
  EndIf;  
  Exit 0;
EndFunction

Function OnBeforeDocumentSaveOrPublish(флОбработка,byRef флПарам)
  aEl:=Form.Object;
  ФлИзменилсяДокумент:=aEl.Selected()=2;
  
  If not глПроверкаКорректностиНоменклатурыВДокументе(aEl) Then
    Exit 0;
  EndIf;
  
  If aEl.Договор.Selected()=0 Then
    Box("Необходимо выбрать контрагента и договор, прежде чем записывать или обрабатывать документ!",Q_STOP);
    Exit 0;
  EndIf;
  
  If aEl.ТипПроводки.Selected()<>0 Then
    If Trim(aEl.СубконтоТипаПроводки)="" Then
      If not глРедактироватьСубконтоТипаПроводки(aEl,1) Then
        Exit 0;
      EndIf;
    EndIf;
  EndIf;
  
  aTab:=aEl.LineParts("Номенклатура");
  If aEl.КодОперации=Enum.коРеализация.РеализацияРозничная Then
    Сумма:=Max(0,aTab.Sum("Сумма")-aEl.СуммаСертификатов);
    дОплаты:=глНайтиПодчиненныйПоВиду(aEl,"ПКО",-1);
    aEl.СуммаБезналичнойПродажи:=?(IsEmpty(дОплаты),Сумма,Max(0,Сумма-дОплаты.СуммаВзаиморасчетов));
  Else
    aEl.СуммаБезналичнойПродажи:=0;
    aEl.СуммаСертификатов:=0;
  EndIf;
  
  Фл:=1;
  If aEl.КодОперации<>Enum.коРеализация.ВнутреннееПеремещение Then
    aTab.Select();
    While aTab.Next() Do
      If aTab.Цена=0 Then
        Стр:="У номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") не указана цена!";
        If not глПользователь.бухГлавныйБухгалтер Then
          Message(Стр,"!");
          Фл:=0;
        Else  
          Message(Стр,"I");
        EndIf;
      EndIf;
      If aTab.Количество<0 Then
        Message("У номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") указано отрицательное количество!","!");
        Фл:=0;
      EndIf;
      If aTab.Номенклатура.Selected()=0 Then
        Message("В строке "+aTab.CurLine+" не выбрана номенклатура!","!");
        Фл:=0;
      EndIf;
    EndDo;
  EndIf;
  
  If Фл=0 Then
    Exit 0;
  EndIf;
  
  If (флОбработка)And(ФлИзменилсяДокумент) Then
    аВзв:=глНайтиПодчиненныйПоВиду(aEl,"ВозвратОтПокупателя",-1);
    If аВзв<>0 Then
      If аВзв.КодОперации=Enum.коВозвратОтПокупателя.ВозвратСторнирование Then
        If аВзв.Договор<>aEl.Договор Then
          Box("У данного документа есть подчиненный обработанный возврат сторнирование "+аВзв+", договор которого отличается от выбранного в документе. Чтобы изменить договор в этой связке документов, "+
              "необходимо сначала отменить обработку указанного возврата!",Q_STOP);
          Exit 0;
        EndIf;
      EndIf;
      Message("Внимание! У данного документа есть подчитенный обработанный возврат! Проверьте, возможно, изменения, сделанные вами в этом документе, также нужно провести в возврате!","!");
    EndIf;
  EndIf;  

  Exit 1;
EndFunction

Function OnUnknownAction(Тип)
  aEl:=Form.Object;
  If Тип="Загрузка штрихкодов и марок из текстового файла..." Then
    If _Or(aEl.Status()<0,Form.IsChanged()=1) Then
      Box("Документ не записан!",Q_STOP);
      Exit;
    EndIf;
    Box("Файл загрузки должен иметь текстовый формат и в каждой строке содержать два значения -- штрихкод EAN (или код номенклатуры с ведущими нулями) и код марки. "+
      "Разделителем служит либо знак табуляции, либо точка с запятой. При загрузке в документ будут добавлены позиции в количестве, совпадающем с количеством марок (строк).",Q_INFORMATION);
    Файл:="File.txt";
    If not OpenFileDialog(Файл,"Выберите файл для загрузки (Штрихкод _TAB Код марки):","Файлы txt (*.txt)|*.txt",0) Then
      exit;
    EndIf;
    Т:=Text.Create(1);
    Т.Load(Файл,0);
    Симв:=_TAB;
    If _And(Т.Size()>0,Pos(_TAB,Т.GetLine(1))=0) Then
      Симв:=";";
    EndIf;
    
    ТМаркиДокумента:=глМаркиЗагрузитьДокумент(aEl,0,1);
    aTab:=aEl.LineParts("Номенклатура");
    MainTab:=Form.MainTab.Value;
    MainTab.Lock();
    Try
      For i:=1 To Т.Size() Do
        Form.StatusText(""+i+" из "+Т.Size());
        Стр:=Т.GetLine(i);
        стрШк:=TearStr(Стр,Симв);
        зН:=Nothing();
        зПар:=Ref.тмцПартииТМЦ;
        If Length(стрШк)=12 Then
          зН:=Ref.тмцНоменклатура;
          If not зН.Find("Code",стрШк) Then
            Message("Номенклатура с кодом "+стрШк+" не найдена, строка будет пропущена!","!");
            Continue;
          EndIf;
        Else
          зШк:=Ref.тмцШтрихкоды;
          зШк.Select("Name,@Status",стрШк,0);
          зН3:=Nothing();
          While зШк.Next() Do
            зН2:=зШк.Parent();
            If _And(зН2.Status()=0,зН2.флПартионныйУчет,_Or(зН2.флПодлежитПрослеживаемости,зН2.флАлкогольнаяПродукция)) Then
              зН:=зН2;
              Break;
            ElseIf зН2.Status()=0 Then
              зН3:=Coalesce(зН3,зН2);
            EndIf;
          EndDo;
          зН:=Coalesce(зН,зН3);
          If IsEmpty(зН) Then
            Message("Номенклатура со штрихкодом "+стрШк+" не найдена, строка будет пропущена!","!");
            Continue;
          EndIf;
        EndIf;
        стрМр:=TearStr(Стр,Симв);
        If стрМр<>"" Then
          зМр:=Ref.тмцМаркировкаПозиций;
          If зМр.Find("КодМарки,<флСостояние",стрМр,2) Then
            зПар:=зМр.Parent();
            зН:=зПар.Parent();
          Else
            //Ищем партию
            зПар:=Ref.тмцПартииТМЦ;
            зПар.UseOrder("Code-");
            зПар.Find("~(@Status=0)And(@Parent=зН)");
          EndIf;
          If IsEmpty(зПар) Then
            Message("Для номенклатуры "+зН+" не найдена ни одна партия, строка будет пропущена!","!");
            Continue;
          EndIf;
        EndIf;
        aTab.CurLine:=0;
        If aTab.LocateAndGoto("Номенклатура,Партия",зН,зПар)=0 Then
          aTab.AddLine("Номенклатура,Партия,СтавкаНДС,Количество,Цена",зН,зПар,зН.СтавкаНДС,1,0);
          глПересчитатьСтроку(aEl,aTab,"Код@Цена@Количество2@Сумма@СуммаНДС");
        Else
          aTab.Количество:=aTab.Количество+1;
          глПересчитатьСтроку(aEl,aTab,"Количество2@Сумма@СуммаНДС");
        EndIf;
        If стрМр<>"" Then
          ТМаркиДокумента.AddLine("Партия,Марка",зПар,стрМр);
        EndIf;
      EndDo;
      If aEl.Status()<2 Then
        aEl.Save();
      ElseIf Not глОбработать(aEl,1) Then
        Message("Невозможно обработать документ!","!");
        Exit;
      EndIf;
      If not глМаркиЗарегистрироватьДокумент(aEl,ТМаркиДокумента,4,,1) Then
        Box("Невозможно добавить списваемые марки в документ!",Q_STOP);
      EndIf;
    Finally
      MainTab.UnLock();
    EndTry;
    Form.MainTab.InvokeEvent("OnInitLine","IndexFrom,IndexTo",1,MainTab.Size());
  EndIf;
EndFunction
