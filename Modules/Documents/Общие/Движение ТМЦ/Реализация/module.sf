//Модуль загружается до загрузки любой формы и остается в памяти до закрытия всех связанных с ним (либо с его потомками) форм.
//Переменные, объявленные с постфиксом export, будут доступны в любой форме или в модулях и формах потомках.
//Модуль может содержать общие функции, используемые формами, или специальные предопределенные функции, вызываемые системой при наступлении разнообразных событий.
//Предопределенные функции имеют свой набор переменных. Дальнейшее описание ищите в документации.
Var флВидимостьПартий Export;
Var СтарыйСклад Export;
Var флБезПроверкиДубля Export;

Function Видимость()
  aEl:=Form.Object;
  флВидимостьПартий:=aEl.Склад.БезПартионногоУчета=0;
  MainTab:=Form.ControlByName("MainTab").Value;
  MainTab.Column("Партия").isVisible:=флВидимостьПартий;
  MainTab.Column("Партия").isReadonly:=1-глПользователь.бухБухгалтер;
EndFunction

Function OnAfterChangeOperationCode()
  Видимость();
EndFunction

Function OnCreateFromObject()
  //Ввод на основании
  aEl:=Form.Object;
  aEl.ДокОснование:=aEl.FounderObject();
  if not глЗаполнениеПоДокументуОснованию(aEl,1,0) Then
    Form.Close(0);
    Exit;
  EndIf;
  
  If aEl.ДокОснование.DBName()="АктПоСкладу" Then
    If aEl.ДокОснование.КодОперации=Enum.коАктПоСкладу.Инвентаризация Then
      aTab:=aEl.LineParts("Номенклатура");
      aTab.Lock();
      Try
        aTab.ClearLines();
        ФлПартии:=aEl.ДокОснование.Склад.БезПартионногоУчета=0;
        Т:=Tab.Create();
        bTab:=aEl.ДокОснование.LineParts("Номенклатура");
        bTab.CopyTo(Т);
        Т.Group("Номенклатура,"+?(ФлПартии=0,"","Партия,")+"Цена","Количество,КоличествоФактическое");
        Т.Select();
        While Т.Next() Do
          If Т.КоличествоФактическое>=Т.Количество Then
            Continue;
          EndIf;
          aTab.NewLine();
          aTab.Количество:=Т.Количество-Т.КоличествоФактическое;
          aTab.Номенклатура:=Т.Номенклатура;
          If ФлПартии Then
            aTab.Партия:=Т.Партия;
          EndIf;          
          aTab.Цена:=Т.Цена;
          глПересчитатьСтроку(aEl,aTab,"Код@Количество2@Сумма@СуммаНДС");
        EndDo;
      Finally  
        aTab.Unlock();
      EndTry;  
    EndIf;
  EndIf;  
EndFunction

Function ЗапретПересчета(Ред=0)
  aEl:=Form.Object;
  If (Trim(aEl.УникальныйИдентификатор)<>"")Or(Trim(aEl.УникальныйИдентификатор2)<>"")Or(Trim(aEl.УникальныйИдентификатор3)<>"") Then
    Box("В документе с внешним уникальным номером запрещено менять содержимое строк!",Q_STOP);
    If not глПользователь.общиеАдминистратор Then
      Exit 1;
    EndIf;
  EndIf;  
  Exit 0;
EndFunction

Function OnBeforeDocumentSaveOrPublish(флОбработка,byRef флПарам)
  aEl:=Form.Object;
  ФлИзменилсяДокумент:=aEl.Selected()=2;
  
  If not глПроверкаКорректностиНоменклатурыВДокументе(aEl) Then
    Exit 0;
  EndIf;
  
  If aEl.Договор.Selected()=0 Then
    Box("Необходимо выбрать контрагента и договор, прежде чем записывать или обрабатывать документ!",Q_STOP);
    Exit 0;
  EndIf;
  
  If aEl.ТипПроводки.Selected()<>0 Then
    If Trim(aEl.СубконтоТипаПроводки)="" Then
      If not глРедактироватьСубконтоТипаПроводки(aEl,1) Then
        Exit 0;
      EndIf;
    EndIf;
  EndIf;
  
  aTab:=aEl.LineParts("Номенклатура");
  Фл:=1;
  If aEl.КодОперации<>Enum.коРеализация.ВнутреннееПеремещение Then
    aTab.Select();
    While aTab.Next() Do
      If aTab.Цена=0 Then
        Стр:="У номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") не указана цена!";
        If not глПользователь.бухГлавныйБухгалтер Then
          Message(Стр,"!");
          Фл:=0;
        Else  
          Message(Стр,"I");
        EndIf;
      EndIf;
      If aTab.Количество<0 Then
        Message("У номенклатуры "+aTab.Номенклатура+" ("+aTab.Номенклатура.Code+") указано отрицательное количество!","!");
        Фл:=0;
      EndIf;
      If aTab.Номенклатура.Selected()=0 Then
        Message("В строке "+aTab.CurLine+" не выбрана номенклатура!","!");
        Фл:=0;
      EndIf;
    EndDo;
  EndIf;
  
  If Фл=0 Then
    Exit 0;
  EndIf;
  
  If (флОбработка)And(ФлИзменилсяДокумент) Then
    аВзв:=глНайтиПодчиненныйПоВиду(aEl,"ВозвратОтПокупателя",-1);
    If аВзв<>0 Then
      If аВзв.КодОперации=Enum.коВозвратОтПокупателя.ВозвратСторнирование Then
        If аВзв.Договор<>aEl.Договор Then
          Box("У данного документа есть подчиненный обработанный возврат сторнирование "+аВзв+", договор которого отличается от выбранного в документе. Чтобы изменить договор в этой связке документов, "+
              "необходимо сначала отменить обработку указанного возврата!",Q_STOP);
          Exit 0;
        EndIf;
      EndIf;
      Message("Внимание! У данного документа есть подчитенный обработанный возврат! Проверьте, возможно, изменения, сделанные вами в этом документе, также нужно провести в возврате!","!");
    EndIf;
  EndIf;  

  Exit 1;
EndFunction
